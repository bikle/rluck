
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 30 22:09:13 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:09:13 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
22:09:13 SQL> 22:09:13 SQL> @aud_score1day.sql  2010-12-30 21:45:00
22:09:13 SQL> --
22:09:13 SQL> -- aud_score1day.sql
22:09:13 SQL> --
22:09:13 SQL> 
22:09:13 SQL> CREATE OR REPLACE VIEW sme AS
22:09:13   2  SELECT
22:09:13   3  'aud'||m.ydate prdate
22:09:13   4  ,NULL gatt
22:09:13   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:09:13   6  ,eur_g00
22:09:13   7  ,eur_g01
22:09:13   8  ,eur_g02
22:09:13   9  ,eur_g03
22:09:13  10  ,eur_g04
22:09:13  11  ,eur_g05
22:09:13  12  ,eur_g06
22:09:13  13  ,eur_g07
22:09:13  14  ,eur_g08
22:09:13  15  ,eur_g09
22:09:13  16  ,eur_g10
22:09:13  17  ,eur_g11
22:09:13  18  ,eur_g12
22:09:13  19  ,eur_g13
22:09:13  20  ,eur_g14
22:09:13  21  ,eur_g15
22:09:13  22  ,eur_g16
22:09:13  23  ,eur_g17
22:09:13  24  ,eur_g18
22:09:13  25  ,eur_g19
22:09:13  26  ,eur_g20
22:09:13  27  ,eur_g21
22:09:13  28  ,eur_g22
22:09:13  29  ,eur_g23
22:09:13  30  ,eur_g24
22:09:13  31  ,eur_g25
22:09:13  32  ,eur_g26
22:09:13  33  ,eur_g27
22:09:13  34  ,eur_g28
22:09:13  35  ,eur_g29
22:09:13  36  ,eur_g30
22:09:13  37  ,eur_g31
22:09:13  38  ,eur_g32
22:09:13  39  ,eur_g33
22:09:13  40  ,eur_g34
22:09:13  41  ,eur_g35
22:09:13  42  ,eur_g36
22:09:13  43  ,eur_g37
22:09:13  44  ,eur_g38
22:09:13  45  ,eur_g39
22:09:13  46  ,eur_g40
22:09:13  47  ,eur_g41
22:09:13  48  ,aud_g00
22:09:13  49  ,aud_g01
22:09:13  50  ,aud_g02
22:09:13  51  ,aud_g03
22:09:13  52  ,aud_g04
22:09:13  53  ,aud_g05
22:09:13  54  ,aud_g06
22:09:13  55  ,aud_g07
22:09:13  56  ,aud_g08
22:09:13  57  ,aud_g09
22:09:13  58  ,aud_g10
22:09:13  59  ,aud_g11
22:09:13  60  ,aud_g12
22:09:13  61  ,aud_g13
22:09:13  62  ,aud_g14
22:09:13  63  ,aud_g15
22:09:13  64  ,aud_g16
22:09:13  65  ,aud_g17
22:09:13  66  ,aud_g18
22:09:13  67  ,aud_g19
22:09:13  68  ,aud_g20
22:09:13  69  ,aud_g21
22:09:13  70  ,aud_g22
22:09:13  71  ,aud_g23
22:09:13  72  ,aud_g24
22:09:13  73  ,aud_g25
22:09:13  74  ,aud_g26
22:09:13  75  ,aud_g27
22:09:13  76  ,aud_g28
22:09:13  77  ,aud_g29
22:09:13  78  ,aud_g30
22:09:13  79  ,aud_g31
22:09:13  80  ,aud_g32
22:09:13  81  ,aud_g33
22:09:13  82  ,aud_g34
22:09:13  83  ,aud_g35
22:09:13  84  ,aud_g36
22:09:13  85  ,aud_g37
22:09:13  86  ,aud_g38
22:09:13  87  ,aud_g39
22:09:13  88  ,aud_g40
22:09:13  89  ,aud_g41
22:09:13  90  ,gbp_g00
22:09:13  91  ,gbp_g01
22:09:13  92  ,gbp_g02
22:09:13  93  ,gbp_g03
22:09:13  94  ,gbp_g04
22:09:13  95  ,gbp_g05
22:09:13  96  ,gbp_g06
22:09:13  97  ,gbp_g07
22:09:13  98  ,gbp_g08
22:09:13  99  ,gbp_g09
22:09:13 100  ,gbp_g10
22:09:13 101  ,gbp_g11
22:09:13 102  ,gbp_g12
22:09:13 103  ,gbp_g13
22:09:13 104  ,gbp_g14
22:09:13 105  ,gbp_g15
22:09:13 106  ,gbp_g16
22:09:13 107  ,gbp_g17
22:09:13 108  ,gbp_g18
22:09:13 109  ,gbp_g19
22:09:13 110  ,gbp_g20
22:09:13 111  ,gbp_g21
22:09:13 112  ,gbp_g22
22:09:13 113  ,gbp_g23
22:09:13 114  ,gbp_g24
22:09:13 115  ,gbp_g25
22:09:13 116  ,gbp_g26
22:09:13 117  ,gbp_g27
22:09:13 118  ,gbp_g28
22:09:13 119  ,gbp_g29
22:09:13 120  ,gbp_g30
22:09:13 121  ,gbp_g31
22:09:13 122  ,gbp_g32
22:09:13 123  ,gbp_g33
22:09:13 124  ,gbp_g34
22:09:13 125  ,gbp_g35
22:09:13 126  ,gbp_g36
22:09:13 127  ,gbp_g37
22:09:13 128  ,gbp_g38
22:09:13 129  ,gbp_g39
22:09:13 130  ,gbp_g40
22:09:13 131  ,gbp_g41
22:09:13 132  ,jpy_g00
22:09:13 133  ,jpy_g01
22:09:13 134  ,jpy_g02
22:09:13 135  ,jpy_g03
22:09:13 136  ,jpy_g04
22:09:13 137  ,jpy_g05
22:09:13 138  ,jpy_g06
22:09:13 139  ,jpy_g07
22:09:13 140  ,jpy_g08
22:09:13 141  ,jpy_g09
22:09:13 142  ,jpy_g10
22:09:13 143  ,jpy_g11
22:09:13 144  ,jpy_g12
22:09:13 145  ,jpy_g13
22:09:13 146  ,jpy_g14
22:09:13 147  ,jpy_g15
22:09:13 148  ,jpy_g16
22:09:13 149  ,jpy_g17
22:09:13 150  ,jpy_g18
22:09:13 151  ,jpy_g19
22:09:13 152  ,jpy_g20
22:09:13 153  ,jpy_g21
22:09:13 154  ,jpy_g22
22:09:13 155  ,jpy_g23
22:09:13 156  ,jpy_g24
22:09:13 157  ,jpy_g25
22:09:13 158  ,jpy_g26
22:09:13 159  ,jpy_g27
22:09:13 160  ,jpy_g28
22:09:13 161  ,jpy_g29
22:09:13 162  ,jpy_g30
22:09:13 163  ,jpy_g31
22:09:13 164  ,jpy_g32
22:09:13 165  ,jpy_g33
22:09:13 166  ,jpy_g34
22:09:13 167  ,jpy_g35
22:09:13 168  ,jpy_g36
22:09:13 169  ,jpy_g37
22:09:13 170  ,jpy_g38
22:09:13 171  ,jpy_g39
22:09:13 172  ,jpy_g40
22:09:13 173  ,jpy_g41
22:09:13 174  ,cad_g00
22:09:13 175  ,cad_g01
22:09:13 176  ,cad_g02
22:09:13 177  ,cad_g03
22:09:13 178  ,cad_g04
22:09:13 179  ,cad_g05
22:09:13 180  ,cad_g06
22:09:13 181  ,cad_g07
22:09:13 182  ,cad_g08
22:09:13 183  ,cad_g09
22:09:13 184  ,cad_g10
22:09:13 185  ,cad_g11
22:09:13 186  ,cad_g12
22:09:13 187  ,cad_g13
22:09:13 188  ,cad_g14
22:09:13 189  ,cad_g15
22:09:13 190  ,cad_g16
22:09:13 191  ,cad_g17
22:09:13 192  ,cad_g18
22:09:13 193  ,cad_g19
22:09:13 194  ,cad_g20
22:09:13 195  ,cad_g21
22:09:13 196  ,cad_g22
22:09:13 197  ,cad_g23
22:09:13 198  ,cad_g24
22:09:13 199  ,cad_g25
22:09:13 200  ,cad_g26
22:09:13 201  ,cad_g27
22:09:13 202  ,cad_g28
22:09:13 203  ,cad_g29
22:09:13 204  ,cad_g30
22:09:13 205  ,cad_g31
22:09:13 206  ,cad_g32
22:09:13 207  ,cad_g33
22:09:13 208  ,cad_g34
22:09:13 209  ,cad_g35
22:09:13 210  ,cad_g36
22:09:13 211  ,cad_g37
22:09:13 212  ,cad_g38
22:09:13 213  ,cad_g39
22:09:13 214  ,cad_g40
22:09:13 215  ,cad_g41
22:09:13 216  ,chf_g00
22:09:13 217  ,chf_g01
22:09:13 218  ,chf_g02
22:09:13 219  ,chf_g03
22:09:13 220  ,chf_g04
22:09:13 221  ,chf_g05
22:09:13 222  ,chf_g06
22:09:13 223  ,chf_g07
22:09:13 224  ,chf_g08
22:09:13 225  ,chf_g09
22:09:13 226  ,chf_g10
22:09:13 227  ,chf_g11
22:09:13 228  ,chf_g12
22:09:13 229  ,chf_g13
22:09:13 230  ,chf_g14
22:09:13 231  ,chf_g15
22:09:13 232  ,chf_g16
22:09:13 233  ,chf_g17
22:09:13 234  ,chf_g18
22:09:13 235  ,chf_g19
22:09:13 236  ,chf_g20
22:09:13 237  ,chf_g21
22:09:13 238  ,chf_g22
22:09:13 239  ,chf_g23
22:09:13 240  ,chf_g24
22:09:13 241  ,chf_g25
22:09:13 242  ,chf_g26
22:09:13 243  ,chf_g27
22:09:13 244  ,chf_g28
22:09:13 245  ,chf_g29
22:09:13 246  ,chf_g30
22:09:13 247  ,chf_g31
22:09:13 248  ,chf_g32
22:09:13 249  ,chf_g33
22:09:13 250  ,chf_g34
22:09:13 251  ,chf_g35
22:09:13 252  ,chf_g36
22:09:13 253  ,chf_g37
22:09:13 254  ,chf_g38
22:09:13 255  ,chf_g39
22:09:13 256  ,chf_g40
22:09:13 257  ,chf_g41
22:09:13 258  FROM aud_ms6 m
22:09:13 259  WHERE m.ydate = '&1'||' '||'&2'
22:09:13 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'21:45:00'

View created.

Elapsed: 00:00:00.14
22:09:13 SQL> 
22:09:13 SQL> -- rpt
22:09:13 SQL> -- We should see just 1 row:
22:09:13 SQL> 
22:09:13 SQL> SELECT COUNT(prdate) FROM sme
22:09:13   2  
22:09:13 SQL> -- Build the model:
22:09:13 SQL> CREATE OR REPLACE VIEW bme AS
22:09:13   2  SELECT
22:09:13   3  'aud'||m.ydate prdate
22:09:13   4  ,gatt
22:09:13   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:09:13   6  ,eur_g00
22:09:13   7  ,eur_g01
22:09:13   8  ,eur_g02
22:09:13   9  ,eur_g03
22:09:13  10  ,eur_g04
22:09:13  11  ,eur_g05
22:09:13  12  ,eur_g06
22:09:13  13  ,eur_g07
22:09:13  14  ,eur_g08
22:09:13  15  ,eur_g09
22:09:13  16  ,eur_g10
22:09:13  17  ,eur_g11
22:09:13  18  ,eur_g12
22:09:13  19  ,eur_g13
22:09:13  20  ,eur_g14
22:09:13  21  ,eur_g15
22:09:13  22  ,eur_g16
22:09:13  23  ,eur_g17
22:09:13  24  ,eur_g18
22:09:13  25  ,eur_g19
22:09:13  26  ,eur_g20
22:09:13  27  ,eur_g21
22:09:13  28  ,eur_g22
22:09:13  29  ,eur_g23
22:09:13  30  ,eur_g24
22:09:13  31  ,eur_g25
22:09:13  32  ,eur_g26
22:09:13  33  ,eur_g27
22:09:13  34  ,eur_g28
22:09:13  35  ,eur_g29
22:09:13  36  ,eur_g30
22:09:13  37  ,eur_g31
22:09:13  38  ,eur_g32
22:09:13  39  ,eur_g33
22:09:13  40  ,eur_g34
22:09:13  41  ,eur_g35
22:09:13  42  ,eur_g36
22:09:13  43  ,eur_g37
22:09:13  44  ,eur_g38
22:09:13  45  ,eur_g39
22:09:13  46  ,eur_g40
22:09:13  47  ,eur_g41
22:09:13  48  ,aud_g00
22:09:13  49  ,aud_g01
22:09:13  50  ,aud_g02
22:09:13  51  ,aud_g03
22:09:13  52  ,aud_g04
22:09:13  53  ,aud_g05
22:09:13  54  ,aud_g06
22:09:13  55  ,aud_g07
22:09:13  56  ,aud_g08
22:09:13  57  ,aud_g09
22:09:13  58  ,aud_g10
22:09:13  59  ,aud_g11
22:09:13  60  ,aud_g12
22:09:13  61  ,aud_g13
22:09:13  62  ,aud_g14
22:09:13  63  ,aud_g15
22:09:13  64  ,aud_g16
22:09:13  65  ,aud_g17
22:09:13  66  ,aud_g18
22:09:13  67  ,aud_g19
22:09:13  68  ,aud_g20
22:09:13  69  ,aud_g21
22:09:13  70  ,aud_g22
22:09:13  71  ,aud_g23
22:09:13  72  ,aud_g24
22:09:13  73  ,aud_g25
22:09:13  74  ,aud_g26
22:09:13  75  ,aud_g27
22:09:13  76  ,aud_g28
22:09:13  77  ,aud_g29
22:09:13  78  ,aud_g30
22:09:13  79  ,aud_g31
22:09:13  80  ,aud_g32
22:09:13  81  ,aud_g33
22:09:13  82  ,aud_g34
22:09:13  83  ,aud_g35
22:09:13  84  ,aud_g36
22:09:13  85  ,aud_g37
22:09:13  86  ,aud_g38
22:09:13  87  ,aud_g39
22:09:13  88  ,aud_g40
22:09:13  89  ,aud_g41
22:09:13  90  ,gbp_g00
22:09:13  91  ,gbp_g01
22:09:13  92  ,gbp_g02
22:09:13  93  ,gbp_g03
22:09:13  94  ,gbp_g04
22:09:13  95  ,gbp_g05
22:09:13  96  ,gbp_g06
22:09:13  97  ,gbp_g07
22:09:13  98  ,gbp_g08
22:09:13  99  ,gbp_g09
22:09:13 100  ,gbp_g10
22:09:13 101  ,gbp_g11
22:09:13 102  ,gbp_g12
22:09:13 103  ,gbp_g13
22:09:13 104  ,gbp_g14
22:09:13 105  ,gbp_g15
22:09:13 106  ,gbp_g16
22:09:13 107  ,gbp_g17
22:09:13 108  ,gbp_g18
22:09:13 109  ,gbp_g19
22:09:13 110  ,gbp_g20
22:09:13 111  ,gbp_g21
22:09:13 112  ,gbp_g22
22:09:13 113  ,gbp_g23
22:09:13 114  ,gbp_g24
22:09:13 115  ,gbp_g25
22:09:13 116  ,gbp_g26
22:09:13 117  ,gbp_g27
22:09:13 118  ,gbp_g28
22:09:13 119  ,gbp_g29
22:09:13 120  ,gbp_g30
22:09:13 121  ,gbp_g31
22:09:13 122  ,gbp_g32
22:09:13 123  ,gbp_g33
22:09:13 124  ,gbp_g34
22:09:13 125  ,gbp_g35
22:09:13 126  ,gbp_g36
22:09:13 127  ,gbp_g37
22:09:13 128  ,gbp_g38
22:09:13 129  ,gbp_g39
22:09:13 130  ,gbp_g40
22:09:13 131  ,gbp_g41
22:09:13 132  ,jpy_g00
22:09:13 133  ,jpy_g01
22:09:13 134  ,jpy_g02
22:09:13 135  ,jpy_g03
22:09:13 136  ,jpy_g04
22:09:13 137  ,jpy_g05
22:09:13 138  ,jpy_g06
22:09:13 139  ,jpy_g07
22:09:13 140  ,jpy_g08
22:09:13 141  ,jpy_g09
22:09:13 142  ,jpy_g10
22:09:13 143  ,jpy_g11
22:09:13 144  ,jpy_g12
22:09:13 145  ,jpy_g13
22:09:13 146  ,jpy_g14
22:09:13 147  ,jpy_g15
22:09:13 148  ,jpy_g16
22:09:13 149  ,jpy_g17
22:09:13 150  ,jpy_g18
22:09:13 151  ,jpy_g19
22:09:13 152  ,jpy_g20
22:09:13 153  ,jpy_g21
22:09:13 154  ,jpy_g22
22:09:13 155  ,jpy_g23
22:09:13 156  ,jpy_g24
22:09:13 157  ,jpy_g25
22:09:13 158  ,jpy_g26
22:09:13 159  ,jpy_g27
22:09:13 160  ,jpy_g28
22:09:13 161  ,jpy_g29
22:09:13 162  ,jpy_g30
22:09:13 163  ,jpy_g31
22:09:13 164  ,jpy_g32
22:09:13 165  ,jpy_g33
22:09:13 166  ,jpy_g34
22:09:13 167  ,jpy_g35
22:09:13 168  ,jpy_g36
22:09:13 169  ,jpy_g37
22:09:13 170  ,jpy_g38
22:09:13 171  ,jpy_g39
22:09:13 172  ,jpy_g40
22:09:13 173  ,jpy_g41
22:09:13 174  ,cad_g00
22:09:13 175  ,cad_g01
22:09:13 176  ,cad_g02
22:09:13 177  ,cad_g03
22:09:13 178  ,cad_g04
22:09:13 179  ,cad_g05
22:09:13 180  ,cad_g06
22:09:13 181  ,cad_g07
22:09:13 182  ,cad_g08
22:09:13 183  ,cad_g09
22:09:13 184  ,cad_g10
22:09:13 185  ,cad_g11
22:09:13 186  ,cad_g12
22:09:13 187  ,cad_g13
22:09:13 188  ,cad_g14
22:09:13 189  ,cad_g15
22:09:13 190  ,cad_g16
22:09:13 191  ,cad_g17
22:09:13 192  ,cad_g18
22:09:13 193  ,cad_g19
22:09:13 194  ,cad_g20
22:09:13 195  ,cad_g21
22:09:13 196  ,cad_g22
22:09:13 197  ,cad_g23
22:09:13 198  ,cad_g24
22:09:13 199  ,cad_g25
22:09:13 200  ,cad_g26
22:09:13 201  ,cad_g27
22:09:13 202  ,cad_g28
22:09:13 203  ,cad_g29
22:09:13 204  ,cad_g30
22:09:13 205  ,cad_g31
22:09:13 206  ,cad_g32
22:09:13 207  ,cad_g33
22:09:13 208  ,cad_g34
22:09:13 209  ,cad_g35
22:09:13 210  ,cad_g36
22:09:13 211  ,cad_g37
22:09:13 212  ,cad_g38
22:09:13 213  ,cad_g39
22:09:13 214  ,cad_g40
22:09:13 215  ,cad_g41
22:09:13 216  ,chf_g00
22:09:13 217  ,chf_g01
22:09:13 218  ,chf_g02
22:09:13 219  ,chf_g03
22:09:13 220  ,chf_g04
22:09:13 221  ,chf_g05
22:09:13 222  ,chf_g06
22:09:13 223  ,chf_g07
22:09:13 224  ,chf_g08
22:09:13 225  ,chf_g09
22:09:13 226  ,chf_g10
22:09:13 227  ,chf_g11
22:09:13 228  ,chf_g12
22:09:13 229  ,chf_g13
22:09:13 230  ,chf_g14
22:09:13 231  ,chf_g15
22:09:13 232  ,chf_g16
22:09:13 233  ,chf_g17
22:09:13 234  ,chf_g18
22:09:13 235  ,chf_g19
22:09:13 236  ,chf_g20
22:09:13 237  ,chf_g21
22:09:13 238  ,chf_g22
22:09:13 239  ,chf_g23
22:09:13 240  ,chf_g24
22:09:13 241  ,chf_g25
22:09:13 242  ,chf_g26
22:09:13 243  ,chf_g27
22:09:13 244  ,chf_g28
22:09:13 245  ,chf_g29
22:09:13 246  ,chf_g30
22:09:13 247  ,chf_g31
22:09:13 248  ,chf_g32
22:09:13 249  ,chf_g33
22:09:13 250  ,chf_g34
22:09:13 251  ,chf_g35
22:09:13 252  ,chf_g36
22:09:13 253  ,chf_g37
22:09:13 254  ,chf_g38
22:09:13 255  ,chf_g39
22:09:13 256  ,chf_g40
22:09:13 257  ,chf_g41
22:09:13 258  FROM aud_ms6 m
22:09:13 259  WHERE gatt IN('nup','up')
22:09:13 260  AND 1+m.ydate < '&1'||' '||'&2'
22:09:13 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'21:45:00'

View created.

Elapsed: 00:00:00.15
22:09:13 SQL> 
22:09:13 SQL> -- rpt
22:09:13 SQL> 
22:09:13 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
22:09:13   2  
22:09:13 SQL> SELECT MAX(prdate) FROM bme
22:09:13   2  
22:09:13 SQL> -- Now build model from bme and score sme
22:09:13 SQL> @score1.sql
22:09:13 SQL> -- score1.sql
22:09:13 SQL> 
22:09:13 SQL> -- Does the 1st SVM score
22:09:13 SQL> 
22:09:13 SQL> -- Fill up svmc_apply_prep
22:09:13 SQL> @score.sql
22:09:13 SQL> --
22:09:13 SQL> -- score.sql
22:09:13 SQL> --
22:09:13 SQL> 
22:09:13 SQL> -- usage: score.sql
22:09:13 SQL> 
22:09:13 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:09:13 SQL> 
22:09:13 SQL> DEFINE target	= 'gatt'
22:09:13 SQL> DEFINE model_name = 'forex14'
22:09:13 SQL> DEFINE bldtable	= 'bme'
22:09:13 SQL> DEFINE scoretable = 'sme'
22:09:13 SQL> DEFINE case_id	= 'prdate'
22:09:13 SQL> 
22:09:13 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:09:13 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:09:13 SQL> 
22:09:13 SQL> -- Builds an SVM model using pl/sql.
22:09:13 SQL> 
22:09:13 SQL> -----------------------------------------------------------------------
22:09:13 SQL> --			    BUILD THE MODEL
22:09:13 SQL> -----------------------------------------------------------------------
22:09:13 SQL> 
22:09:13 SQL> -- Cleanup old build data preparation objects for repeat runs
22:09:13 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:09:13 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:09:13 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
22:09:13 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
22:09:13 SQL> 
22:09:13 SQL> 
22:09:13 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:09:13 SQL> --
22:09:13 SQL> -- DROP	TABLE svmc_settings ;
22:09:13 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:09:13 SQL> -- DELETE svmc_settings;
22:09:13 SQL> 
22:09:13 SQL> -- The default classification algorithm is Naive Bayes. So override
22:09:13 SQL> -- this choice to SVM using a settings table.
22:09:13 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:09:13 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:09:13 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:09:13 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:09:13 SQL> -- models.
22:09:13 SQL> --
22:09:13 SQL> 
22:09:13 SQL> -- Do this once and then comment it out.
22:09:13 SQL> -- That makes script go faster.
22:09:13 SQL> -- BEGIN
22:09:13 SQL> -- -- Populate settings table
22:09:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:09:13 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:09:13 SQL> --
22:09:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:09:13 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:09:13 SQL> --
22:09:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:09:13 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:09:13 SQL> --   COMMIT;
22:09:13 SQL> -- END;
22:09:13 SQL> -- /
22:09:13 SQL> 
22:09:13 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:09:13 SQL> 
22:09:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:09:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:09:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:09:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:09:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:09:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:09:13 SQL> 
22:09:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:09:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:09:14 SQL> 
22:09:14 SQL> --------------------------------
22:09:14 SQL> -- PREPARE BUILD (TRAINING) DATA
22:09:14 SQL> --
22:09:14 SQL> 
22:09:14 SQL> -- 1. Missing Value treatment for all Predictors and
22:09:14 SQL> -- 2. Outlier Treatment and
22:09:14 SQL> -- 3. Normalization are performed below.
22:09:14 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:09:14 SQL> --    normalized here.
22:09:14 SQL> 
22:09:14 SQL> BEGIN
22:09:14   2  	-- Perform missing value treatment for all predictors
22:09:14   3  	-- create miss tables
22:09:14   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:09:14   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:09:14   6  
22:09:14   7  	-- populate miss tables
22:09:14   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:09:14   9  	  miss_table_name => 'svmc_miss_num',
22:09:14  10  	  data_table_name => '&bldtable',
22:09:14  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:09:14  12  
22:09:14  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:09:14  14  	  miss_table_name => 'svmc_miss_cat',
22:09:14  15  	  data_table_name => '&bldtable',
22:09:14  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:09:14  17  
22:09:14  18  	-- xform input data to replace missing values
22:09:14  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:09:14  20  	  miss_table_name => 'svmc_miss_num',
22:09:14  21  	  data_table_name => '&bldtable',
22:09:14  22  	  xform_view_name => 'xformed_build_miss_num');
22:09:14  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:09:14  24  	  miss_table_name => 'svmc_miss_cat',
22:09:14  25  	  data_table_name => '&bldtable',
22:09:14  26  	  xform_view_name => 'xformed_build_miss_cat');
22:09:14  27  
22:09:14  28  	-- Perform outlier treatment.
22:09:14  29  	-- create clip table
22:09:14  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:09:14  31  
22:09:14  32  	-- populate clip table
22:09:14  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:09:14  34  	  clip_table_name => 'svmc_clip',
22:09:14  35  	  data_table_name => '&bldtable',
22:09:14  36  	  tail_frac	  => 0.025,
22:09:14  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:09:14  38  
22:09:14  39  	-- xform input data to winsorized data
22:09:14  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:09:14  41  	  clip_table_name => 'svmc_clip',
22:09:14  42  	  data_table_name => '&bldtable',
22:09:14  43  	  xform_view_name => 'svmc_winsor');
22:09:14  44  
22:09:14  45  	-- create normalization table
22:09:14  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:09:14  47  
22:09:14  48  	-- populate normalization table based on winsorized data
22:09:14  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:09:14  50  	  norm_table_name => 'svmc_norm',
22:09:14  51  	  data_table_name => 'svmc_winsor',
22:09:14  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:09:14  53  
22:09:14  54  	-- normalize the original data
22:09:14  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:09:14  56  	  norm_table_name => 'svmc_norm',
22:09:14  57  	  data_table_name => '&bldtable',
22:09:14  58  	  xform_view_name => 'svmc_build_prep');
22:09:14  59  END;
22:09:14  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.38
22:09:32 SQL> 
22:09:32 SQL> ---------------------
22:09:32 SQL> -- CREATE A NEW MODEL
22:09:32 SQL> --
22:09:32 SQL> -- Cleanup old model with the same name for repeat runs
22:09:32 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:09:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:32   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.69
22:09:33 SQL> 
22:09:33 SQL> -- Build a new SVM Model
22:09:33 SQL> BEGIN
22:09:33   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:09:33   3  	  model_name	      => '&model_name',
22:09:33   4  	  mining_function     => dbms_data_mining.classification,
22:09:33   5  	  data_table_name     => 'svmc_build_prep',
22:09:33   6  	  case_id_column_name => '&case_id',
22:09:33   7  	  target_column_name  => '&target',
22:09:33   8  	  settings_table_name => 'svmc_settings');
22:09:33   9  END;
22:09:33  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.76
22:10:00 SQL> 
22:10:00 SQL> -----------------------------------------------------------------------
22:10:00 SQL> --			       APPLY/score THE MODEL
22:10:00 SQL> -----------------------------------------------------------------------
22:10:00 SQL> 
22:10:00 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:10:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:10:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:10:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:10:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:10:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:10:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
22:10:01 SQL> -----------------------
22:10:01 SQL> -- PREPARE SCORING DATA
22:10:01 SQL> --
22:10:01 SQL> -- If the data for model creation has been prepared, then the data
22:10:01 SQL> -- to be scored using the model must be prepared in the same manner
22:10:01 SQL> -- in order to obtain meaningful results.
22:10:01 SQL> --
22:10:01 SQL> -- 1. Missing Value treatment for all Predictors and
22:10:01 SQL> -- 2. Normalization
22:10:01 SQL> -- No outlier treatment will be performed during test and apply. The
22:10:01 SQL> -- normalization step is sufficient, since the normalization parameters
22:10:01 SQL> -- already capture the effects of outlier treatment done with build data.
22:10:01 SQL> --
22:10:01 SQL> BEGIN
22:10:01   2  	-- Xform Test data to replace missing values
22:10:01   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:10:01   4  	  miss_table_name => 'svmc_miss_num',
22:10:01   5  	  data_table_name => '&scoretable',
22:10:01   6  	  xform_view_name => 'xformed_apply_miss_num');
22:10:01   7  
22:10:01   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:10:01   9  	  miss_table_name => 'svmc_miss_cat',
22:10:01  10  	  data_table_name => '&scoretable',
22:10:01  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:10:01  12  
22:10:01  13  	-- Normalize the data to be scored
22:10:01  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:10:01  15  	  norm_table_name => 'svmc_norm',
22:10:01  16  	  data_table_name => '&scoretable',
22:10:01  17  	  xform_view_name => 'svmc_apply_prep');
22:10:01  18  END;
22:10:01  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
22:10:02 SQL> 
22:10:02 SQL> -- Use same model_name used in score.sql
22:10:02 SQL> DEFINE model_name = 'forex14'
22:10:02 SQL> 
22:10:02 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
22:10:02 SQL> 
22:10:02 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
22:10:02 SQL> 
22:10:02 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
22:10:02   2  SELECT
22:10:02   3  prdate
22:10:02   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:10:02   5  ,sysdate
22:10:02   6  ,SUBSTR(prdate,1,3)pair
22:10:02   7  ,SUBSTR(prdate,4,19)ydate
22:10:02   8  FROM svmc_apply_prep
22:10:02   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
22:10:02 SQL> @aud_score1day.sql  2010-12-30 21:50:00
22:10:02 SQL> --
22:10:02 SQL> -- aud_score1day.sql
22:10:02 SQL> --
22:10:02 SQL> 
22:10:02 SQL> CREATE OR REPLACE VIEW sme AS
22:10:02   2  SELECT
22:10:02   3  'aud'||m.ydate prdate
22:10:02   4  ,NULL gatt
22:10:02   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:10:02   6  ,eur_g00
22:10:02   7  ,eur_g01
22:10:02   8  ,eur_g02
22:10:02   9  ,eur_g03
22:10:02  10  ,eur_g04
22:10:02  11  ,eur_g05
22:10:02  12  ,eur_g06
22:10:02  13  ,eur_g07
22:10:02  14  ,eur_g08
22:10:02  15  ,eur_g09
22:10:02  16  ,eur_g10
22:10:02  17  ,eur_g11
22:10:02  18  ,eur_g12
22:10:02  19  ,eur_g13
22:10:02  20  ,eur_g14
22:10:02  21  ,eur_g15
22:10:02  22  ,eur_g16
22:10:02  23  ,eur_g17
22:10:02  24  ,eur_g18
22:10:02  25  ,eur_g19
22:10:02  26  ,eur_g20
22:10:02  27  ,eur_g21
22:10:02  28  ,eur_g22
22:10:02  29  ,eur_g23
22:10:02  30  ,eur_g24
22:10:02  31  ,eur_g25
22:10:02  32  ,eur_g26
22:10:02  33  ,eur_g27
22:10:02  34  ,eur_g28
22:10:02  35  ,eur_g29
22:10:02  36  ,eur_g30
22:10:02  37  ,eur_g31
22:10:02  38  ,eur_g32
22:10:02  39  ,eur_g33
22:10:02  40  ,eur_g34
22:10:02  41  ,eur_g35
22:10:02  42  ,eur_g36
22:10:02  43  ,eur_g37
22:10:02  44  ,eur_g38
22:10:02  45  ,eur_g39
22:10:02  46  ,eur_g40
22:10:02  47  ,eur_g41
22:10:02  48  ,aud_g00
22:10:02  49  ,aud_g01
22:10:02  50  ,aud_g02
22:10:02  51  ,aud_g03
22:10:02  52  ,aud_g04
22:10:02  53  ,aud_g05
22:10:02  54  ,aud_g06
22:10:02  55  ,aud_g07
22:10:02  56  ,aud_g08
22:10:02  57  ,aud_g09
22:10:02  58  ,aud_g10
22:10:02  59  ,aud_g11
22:10:02  60  ,aud_g12
22:10:02  61  ,aud_g13
22:10:02  62  ,aud_g14
22:10:02  63  ,aud_g15
22:10:02  64  ,aud_g16
22:10:02  65  ,aud_g17
22:10:02  66  ,aud_g18
22:10:02  67  ,aud_g19
22:10:02  68  ,aud_g20
22:10:02  69  ,aud_g21
22:10:02  70  ,aud_g22
22:10:02  71  ,aud_g23
22:10:02  72  ,aud_g24
22:10:02  73  ,aud_g25
22:10:02  74  ,aud_g26
22:10:02  75  ,aud_g27
22:10:02  76  ,aud_g28
22:10:02  77  ,aud_g29
22:10:02  78  ,aud_g30
22:10:02  79  ,aud_g31
22:10:02  80  ,aud_g32
22:10:02  81  ,aud_g33
22:10:02  82  ,aud_g34
22:10:02  83  ,aud_g35
22:10:02  84  ,aud_g36
22:10:02  85  ,aud_g37
22:10:02  86  ,aud_g38
22:10:02  87  ,aud_g39
22:10:02  88  ,aud_g40
22:10:02  89  ,aud_g41
22:10:02  90  ,gbp_g00
22:10:02  91  ,gbp_g01
22:10:02  92  ,gbp_g02
22:10:02  93  ,gbp_g03
22:10:02  94  ,gbp_g04
22:10:02  95  ,gbp_g05
22:10:02  96  ,gbp_g06
22:10:02  97  ,gbp_g07
22:10:02  98  ,gbp_g08
22:10:02  99  ,gbp_g09
22:10:02 100  ,gbp_g10
22:10:02 101  ,gbp_g11
22:10:02 102  ,gbp_g12
22:10:02 103  ,gbp_g13
22:10:02 104  ,gbp_g14
22:10:02 105  ,gbp_g15
22:10:02 106  ,gbp_g16
22:10:02 107  ,gbp_g17
22:10:02 108  ,gbp_g18
22:10:02 109  ,gbp_g19
22:10:02 110  ,gbp_g20
22:10:02 111  ,gbp_g21
22:10:02 112  ,gbp_g22
22:10:02 113  ,gbp_g23
22:10:02 114  ,gbp_g24
22:10:02 115  ,gbp_g25
22:10:02 116  ,gbp_g26
22:10:02 117  ,gbp_g27
22:10:02 118  ,gbp_g28
22:10:02 119  ,gbp_g29
22:10:02 120  ,gbp_g30
22:10:02 121  ,gbp_g31
22:10:02 122  ,gbp_g32
22:10:02 123  ,gbp_g33
22:10:02 124  ,gbp_g34
22:10:02 125  ,gbp_g35
22:10:02 126  ,gbp_g36
22:10:02 127  ,gbp_g37
22:10:02 128  ,gbp_g38
22:10:02 129  ,gbp_g39
22:10:02 130  ,gbp_g40
22:10:02 131  ,gbp_g41
22:10:02 132  ,jpy_g00
22:10:02 133  ,jpy_g01
22:10:02 134  ,jpy_g02
22:10:02 135  ,jpy_g03
22:10:02 136  ,jpy_g04
22:10:02 137  ,jpy_g05
22:10:02 138  ,jpy_g06
22:10:02 139  ,jpy_g07
22:10:02 140  ,jpy_g08
22:10:02 141  ,jpy_g09
22:10:02 142  ,jpy_g10
22:10:02 143  ,jpy_g11
22:10:02 144  ,jpy_g12
22:10:02 145  ,jpy_g13
22:10:02 146  ,jpy_g14
22:10:02 147  ,jpy_g15
22:10:02 148  ,jpy_g16
22:10:02 149  ,jpy_g17
22:10:02 150  ,jpy_g18
22:10:02 151  ,jpy_g19
22:10:02 152  ,jpy_g20
22:10:02 153  ,jpy_g21
22:10:02 154  ,jpy_g22
22:10:02 155  ,jpy_g23
22:10:02 156  ,jpy_g24
22:10:02 157  ,jpy_g25
22:10:02 158  ,jpy_g26
22:10:02 159  ,jpy_g27
22:10:02 160  ,jpy_g28
22:10:02 161  ,jpy_g29
22:10:02 162  ,jpy_g30
22:10:02 163  ,jpy_g31
22:10:02 164  ,jpy_g32
22:10:02 165  ,jpy_g33
22:10:02 166  ,jpy_g34
22:10:02 167  ,jpy_g35
22:10:02 168  ,jpy_g36
22:10:02 169  ,jpy_g37
22:10:02 170  ,jpy_g38
22:10:02 171  ,jpy_g39
22:10:02 172  ,jpy_g40
22:10:02 173  ,jpy_g41
22:10:02 174  ,cad_g00
22:10:02 175  ,cad_g01
22:10:02 176  ,cad_g02
22:10:02 177  ,cad_g03
22:10:02 178  ,cad_g04
22:10:02 179  ,cad_g05
22:10:02 180  ,cad_g06
22:10:02 181  ,cad_g07
22:10:02 182  ,cad_g08
22:10:02 183  ,cad_g09
22:10:02 184  ,cad_g10
22:10:02 185  ,cad_g11
22:10:02 186  ,cad_g12
22:10:02 187  ,cad_g13
22:10:02 188  ,cad_g14
22:10:02 189  ,cad_g15
22:10:02 190  ,cad_g16
22:10:02 191  ,cad_g17
22:10:02 192  ,cad_g18
22:10:02 193  ,cad_g19
22:10:02 194  ,cad_g20
22:10:02 195  ,cad_g21
22:10:02 196  ,cad_g22
22:10:02 197  ,cad_g23
22:10:02 198  ,cad_g24
22:10:02 199  ,cad_g25
22:10:02 200  ,cad_g26
22:10:02 201  ,cad_g27
22:10:02 202  ,cad_g28
22:10:02 203  ,cad_g29
22:10:02 204  ,cad_g30
22:10:02 205  ,cad_g31
22:10:02 206  ,cad_g32
22:10:02 207  ,cad_g33
22:10:02 208  ,cad_g34
22:10:02 209  ,cad_g35
22:10:02 210  ,cad_g36
22:10:02 211  ,cad_g37
22:10:02 212  ,cad_g38
22:10:02 213  ,cad_g39
22:10:02 214  ,cad_g40
22:10:02 215  ,cad_g41
22:10:02 216  ,chf_g00
22:10:02 217  ,chf_g01
22:10:02 218  ,chf_g02
22:10:02 219  ,chf_g03
22:10:02 220  ,chf_g04
22:10:02 221  ,chf_g05
22:10:02 222  ,chf_g06
22:10:02 223  ,chf_g07
22:10:02 224  ,chf_g08
22:10:02 225  ,chf_g09
22:10:02 226  ,chf_g10
22:10:02 227  ,chf_g11
22:10:02 228  ,chf_g12
22:10:02 229  ,chf_g13
22:10:02 230  ,chf_g14
22:10:02 231  ,chf_g15
22:10:02 232  ,chf_g16
22:10:02 233  ,chf_g17
22:10:02 234  ,chf_g18
22:10:02 235  ,chf_g19
22:10:02 236  ,chf_g20
22:10:02 237  ,chf_g21
22:10:02 238  ,chf_g22
22:10:02 239  ,chf_g23
22:10:02 240  ,chf_g24
22:10:02 241  ,chf_g25
22:10:02 242  ,chf_g26
22:10:02 243  ,chf_g27
22:10:02 244  ,chf_g28
22:10:02 245  ,chf_g29
22:10:02 246  ,chf_g30
22:10:02 247  ,chf_g31
22:10:02 248  ,chf_g32
22:10:02 249  ,chf_g33
22:10:02 250  ,chf_g34
22:10:02 251  ,chf_g35
22:10:02 252  ,chf_g36
22:10:02 253  ,chf_g37
22:10:02 254  ,chf_g38
22:10:02 255  ,chf_g39
22:10:02 256  ,chf_g40
22:10:02 257  ,chf_g41
22:10:02 258  FROM aud_ms6 m
22:10:02 259  WHERE m.ydate = '&1'||' '||'&2'
22:10:02 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'21:50:00'

View created.

Elapsed: 00:00:00.14
22:10:02 SQL> 
22:10:02 SQL> -- rpt
22:10:02 SQL> -- We should see just 1 row:
22:10:02 SQL> 
22:10:02 SQL> SELECT COUNT(prdate) FROM sme
22:10:02   2  
22:10:02 SQL> -- Build the model:
22:10:02 SQL> CREATE OR REPLACE VIEW bme AS
22:10:02   2  SELECT
22:10:02   3  'aud'||m.ydate prdate
22:10:02   4  ,gatt
22:10:02   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:10:02   6  ,eur_g00
22:10:02   7  ,eur_g01
22:10:02   8  ,eur_g02
22:10:02   9  ,eur_g03
22:10:02  10  ,eur_g04
22:10:02  11  ,eur_g05
22:10:02  12  ,eur_g06
22:10:02  13  ,eur_g07
22:10:02  14  ,eur_g08
22:10:02  15  ,eur_g09
22:10:02  16  ,eur_g10
22:10:02  17  ,eur_g11
22:10:02  18  ,eur_g12
22:10:02  19  ,eur_g13
22:10:02  20  ,eur_g14
22:10:02  21  ,eur_g15
22:10:02  22  ,eur_g16
22:10:02  23  ,eur_g17
22:10:02  24  ,eur_g18
22:10:02  25  ,eur_g19
22:10:02  26  ,eur_g20
22:10:02  27  ,eur_g21
22:10:02  28  ,eur_g22
22:10:02  29  ,eur_g23
22:10:02  30  ,eur_g24
22:10:02  31  ,eur_g25
22:10:02  32  ,eur_g26
22:10:02  33  ,eur_g27
22:10:02  34  ,eur_g28
22:10:02  35  ,eur_g29
22:10:02  36  ,eur_g30
22:10:02  37  ,eur_g31
22:10:02  38  ,eur_g32
22:10:02  39  ,eur_g33
22:10:02  40  ,eur_g34
22:10:02  41  ,eur_g35
22:10:02  42  ,eur_g36
22:10:02  43  ,eur_g37
22:10:02  44  ,eur_g38
22:10:02  45  ,eur_g39
22:10:02  46  ,eur_g40
22:10:02  47  ,eur_g41
22:10:02  48  ,aud_g00
22:10:02  49  ,aud_g01
22:10:02  50  ,aud_g02
22:10:02  51  ,aud_g03
22:10:02  52  ,aud_g04
22:10:02  53  ,aud_g05
22:10:02  54  ,aud_g06
22:10:02  55  ,aud_g07
22:10:02  56  ,aud_g08
22:10:02  57  ,aud_g09
22:10:02  58  ,aud_g10
22:10:02  59  ,aud_g11
22:10:02  60  ,aud_g12
22:10:02  61  ,aud_g13
22:10:02  62  ,aud_g14
22:10:02  63  ,aud_g15
22:10:02  64  ,aud_g16
22:10:02  65  ,aud_g17
22:10:02  66  ,aud_g18
22:10:02  67  ,aud_g19
22:10:02  68  ,aud_g20
22:10:02  69  ,aud_g21
22:10:02  70  ,aud_g22
22:10:02  71  ,aud_g23
22:10:02  72  ,aud_g24
22:10:02  73  ,aud_g25
22:10:02  74  ,aud_g26
22:10:02  75  ,aud_g27
22:10:02  76  ,aud_g28
22:10:02  77  ,aud_g29
22:10:02  78  ,aud_g30
22:10:02  79  ,aud_g31
22:10:02  80  ,aud_g32
22:10:02  81  ,aud_g33
22:10:02  82  ,aud_g34
22:10:02  83  ,aud_g35
22:10:02  84  ,aud_g36
22:10:02  85  ,aud_g37
22:10:02  86  ,aud_g38
22:10:02  87  ,aud_g39
22:10:02  88  ,aud_g40
22:10:02  89  ,aud_g41
22:10:02  90  ,gbp_g00
22:10:02  91  ,gbp_g01
22:10:02  92  ,gbp_g02
22:10:02  93  ,gbp_g03
22:10:02  94  ,gbp_g04
22:10:02  95  ,gbp_g05
22:10:02  96  ,gbp_g06
22:10:02  97  ,gbp_g07
22:10:02  98  ,gbp_g08
22:10:02  99  ,gbp_g09
22:10:02 100  ,gbp_g10
22:10:02 101  ,gbp_g11
22:10:02 102  ,gbp_g12
22:10:02 103  ,gbp_g13
22:10:02 104  ,gbp_g14
22:10:02 105  ,gbp_g15
22:10:02 106  ,gbp_g16
22:10:02 107  ,gbp_g17
22:10:02 108  ,gbp_g18
22:10:02 109  ,gbp_g19
22:10:02 110  ,gbp_g20
22:10:02 111  ,gbp_g21
22:10:02 112  ,gbp_g22
22:10:02 113  ,gbp_g23
22:10:02 114  ,gbp_g24
22:10:02 115  ,gbp_g25
22:10:02 116  ,gbp_g26
22:10:02 117  ,gbp_g27
22:10:02 118  ,gbp_g28
22:10:02 119  ,gbp_g29
22:10:02 120  ,gbp_g30
22:10:02 121  ,gbp_g31
22:10:02 122  ,gbp_g32
22:10:02 123  ,gbp_g33
22:10:02 124  ,gbp_g34
22:10:02 125  ,gbp_g35
22:10:02 126  ,gbp_g36
22:10:02 127  ,gbp_g37
22:10:02 128  ,gbp_g38
22:10:02 129  ,gbp_g39
22:10:02 130  ,gbp_g40
22:10:02 131  ,gbp_g41
22:10:02 132  ,jpy_g00
22:10:02 133  ,jpy_g01
22:10:02 134  ,jpy_g02
22:10:02 135  ,jpy_g03
22:10:02 136  ,jpy_g04
22:10:02 137  ,jpy_g05
22:10:02 138  ,jpy_g06
22:10:02 139  ,jpy_g07
22:10:02 140  ,jpy_g08
22:10:02 141  ,jpy_g09
22:10:02 142  ,jpy_g10
22:10:02 143  ,jpy_g11
22:10:02 144  ,jpy_g12
22:10:02 145  ,jpy_g13
22:10:02 146  ,jpy_g14
22:10:02 147  ,jpy_g15
22:10:02 148  ,jpy_g16
22:10:02 149  ,jpy_g17
22:10:02 150  ,jpy_g18
22:10:02 151  ,jpy_g19
22:10:02 152  ,jpy_g20
22:10:02 153  ,jpy_g21
22:10:02 154  ,jpy_g22
22:10:02 155  ,jpy_g23
22:10:02 156  ,jpy_g24
22:10:02 157  ,jpy_g25
22:10:02 158  ,jpy_g26
22:10:02 159  ,jpy_g27
22:10:02 160  ,jpy_g28
22:10:02 161  ,jpy_g29
22:10:02 162  ,jpy_g30
22:10:02 163  ,jpy_g31
22:10:02 164  ,jpy_g32
22:10:02 165  ,jpy_g33
22:10:02 166  ,jpy_g34
22:10:02 167  ,jpy_g35
22:10:02 168  ,jpy_g36
22:10:02 169  ,jpy_g37
22:10:02 170  ,jpy_g38
22:10:02 171  ,jpy_g39
22:10:02 172  ,jpy_g40
22:10:02 173  ,jpy_g41
22:10:02 174  ,cad_g00
22:10:02 175  ,cad_g01
22:10:02 176  ,cad_g02
22:10:02 177  ,cad_g03
22:10:02 178  ,cad_g04
22:10:02 179  ,cad_g05
22:10:02 180  ,cad_g06
22:10:02 181  ,cad_g07
22:10:02 182  ,cad_g08
22:10:02 183  ,cad_g09
22:10:02 184  ,cad_g10
22:10:02 185  ,cad_g11
22:10:02 186  ,cad_g12
22:10:02 187  ,cad_g13
22:10:02 188  ,cad_g14
22:10:02 189  ,cad_g15
22:10:02 190  ,cad_g16
22:10:02 191  ,cad_g17
22:10:02 192  ,cad_g18
22:10:02 193  ,cad_g19
22:10:02 194  ,cad_g20
22:10:02 195  ,cad_g21
22:10:02 196  ,cad_g22
22:10:02 197  ,cad_g23
22:10:02 198  ,cad_g24
22:10:02 199  ,cad_g25
22:10:02 200  ,cad_g26
22:10:02 201  ,cad_g27
22:10:02 202  ,cad_g28
22:10:02 203  ,cad_g29
22:10:02 204  ,cad_g30
22:10:02 205  ,cad_g31
22:10:02 206  ,cad_g32
22:10:02 207  ,cad_g33
22:10:02 208  ,cad_g34
22:10:02 209  ,cad_g35
22:10:02 210  ,cad_g36
22:10:02 211  ,cad_g37
22:10:02 212  ,cad_g38
22:10:02 213  ,cad_g39
22:10:02 214  ,cad_g40
22:10:02 215  ,cad_g41
22:10:02 216  ,chf_g00
22:10:02 217  ,chf_g01
22:10:02 218  ,chf_g02
22:10:02 219  ,chf_g03
22:10:02 220  ,chf_g04
22:10:02 221  ,chf_g05
22:10:02 222  ,chf_g06
22:10:02 223  ,chf_g07
22:10:02 224  ,chf_g08
22:10:02 225  ,chf_g09
22:10:02 226  ,chf_g10
22:10:02 227  ,chf_g11
22:10:02 228  ,chf_g12
22:10:02 229  ,chf_g13
22:10:02 230  ,chf_g14
22:10:02 231  ,chf_g15
22:10:02 232  ,chf_g16
22:10:02 233  ,chf_g17
22:10:02 234  ,chf_g18
22:10:02 235  ,chf_g19
22:10:02 236  ,chf_g20
22:10:02 237  ,chf_g21
22:10:02 238  ,chf_g22
22:10:02 239  ,chf_g23
22:10:02 240  ,chf_g24
22:10:02 241  ,chf_g25
22:10:02 242  ,chf_g26
22:10:02 243  ,chf_g27
22:10:02 244  ,chf_g28
22:10:02 245  ,chf_g29
22:10:02 246  ,chf_g30
22:10:02 247  ,chf_g31
22:10:02 248  ,chf_g32
22:10:02 249  ,chf_g33
22:10:02 250  ,chf_g34
22:10:02 251  ,chf_g35
22:10:02 252  ,chf_g36
22:10:02 253  ,chf_g37
22:10:02 254  ,chf_g38
22:10:02 255  ,chf_g39
22:10:02 256  ,chf_g40
22:10:02 257  ,chf_g41
22:10:02 258  FROM aud_ms6 m
22:10:02 259  WHERE gatt IN('nup','up')
22:10:02 260  AND 1+m.ydate < '&1'||' '||'&2'
22:10:02 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'21:50:00'

View created.

Elapsed: 00:00:00.13
22:10:02 SQL> 
22:10:02 SQL> -- rpt
22:10:02 SQL> 
22:10:02 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
22:10:02   2  
22:10:02 SQL> SELECT MAX(prdate) FROM bme
22:10:02   2  
22:10:02 SQL> -- Now build model from bme and score sme
22:10:02 SQL> @score1.sql
22:10:02 SQL> -- score1.sql
22:10:02 SQL> 
22:10:02 SQL> -- Does the 1st SVM score
22:10:02 SQL> 
22:10:02 SQL> -- Fill up svmc_apply_prep
22:10:02 SQL> @score.sql
22:10:02 SQL> --
22:10:02 SQL> -- score.sql
22:10:02 SQL> --
22:10:02 SQL> 
22:10:02 SQL> -- usage: score.sql
22:10:02 SQL> 
22:10:02 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:10:02 SQL> 
22:10:02 SQL> DEFINE target	= 'gatt'
22:10:02 SQL> DEFINE model_name = 'forex14'
22:10:02 SQL> DEFINE bldtable	= 'bme'
22:10:02 SQL> DEFINE scoretable = 'sme'
22:10:02 SQL> DEFINE case_id	= 'prdate'
22:10:02 SQL> 
22:10:02 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:10:02 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:10:02 SQL> 
22:10:02 SQL> -- Builds an SVM model using pl/sql.
22:10:02 SQL> 
22:10:02 SQL> -----------------------------------------------------------------------
22:10:02 SQL> --			    BUILD THE MODEL
22:10:02 SQL> -----------------------------------------------------------------------
22:10:02 SQL> 
22:10:02 SQL> -- Cleanup old build data preparation objects for repeat runs
22:10:02 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:10:02 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:10:02 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
22:10:02 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
22:10:02 SQL> 
22:10:02 SQL> 
22:10:02 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:10:02 SQL> --
22:10:02 SQL> -- DROP	TABLE svmc_settings ;
22:10:02 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:10:02 SQL> -- DELETE svmc_settings;
22:10:02 SQL> 
22:10:02 SQL> -- The default classification algorithm is Naive Bayes. So override
22:10:02 SQL> -- this choice to SVM using a settings table.
22:10:02 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:10:02 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:10:02 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:10:02 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:10:02 SQL> -- models.
22:10:02 SQL> --
22:10:02 SQL> 
22:10:02 SQL> -- Do this once and then comment it out.
22:10:02 SQL> -- That makes script go faster.
22:10:02 SQL> -- BEGIN
22:10:02 SQL> -- -- Populate settings table
22:10:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:10:02 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:10:02 SQL> --
22:10:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:10:02 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:10:02 SQL> --
22:10:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:10:02 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:10:02 SQL> --   COMMIT;
22:10:02 SQL> -- END;
22:10:02 SQL> -- /
22:10:02 SQL> 
22:10:02 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:10:02 SQL> 
22:10:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:10:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:10:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:10:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:10:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:10:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:10:02 SQL> 
22:10:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:10:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:10:02 SQL> 
22:10:02 SQL> --------------------------------
22:10:02 SQL> -- PREPARE BUILD (TRAINING) DATA
22:10:02 SQL> --
22:10:02 SQL> 
22:10:02 SQL> -- 1. Missing Value treatment for all Predictors and
22:10:02 SQL> -- 2. Outlier Treatment and
22:10:02 SQL> -- 3. Normalization are performed below.
22:10:02 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:10:02 SQL> --    normalized here.
22:10:02 SQL> 
22:10:02 SQL> BEGIN
22:10:02   2  	-- Perform missing value treatment for all predictors
22:10:02   3  	-- create miss tables
22:10:02   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:10:02   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:10:02   6  
22:10:02   7  	-- populate miss tables
22:10:02   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:10:02   9  	  miss_table_name => 'svmc_miss_num',
22:10:02  10  	  data_table_name => '&bldtable',
22:10:02  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:10:02  12  
22:10:02  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:10:02  14  	  miss_table_name => 'svmc_miss_cat',
22:10:02  15  	  data_table_name => '&bldtable',
22:10:02  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:10:02  17  
22:10:02  18  	-- xform input data to replace missing values
22:10:02  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:10:02  20  	  miss_table_name => 'svmc_miss_num',
22:10:02  21  	  data_table_name => '&bldtable',
22:10:02  22  	  xform_view_name => 'xformed_build_miss_num');
22:10:02  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:10:02  24  	  miss_table_name => 'svmc_miss_cat',
22:10:02  25  	  data_table_name => '&bldtable',
22:10:02  26  	  xform_view_name => 'xformed_build_miss_cat');
22:10:02  27  
22:10:02  28  	-- Perform outlier treatment.
22:10:02  29  	-- create clip table
22:10:02  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:10:02  31  
22:10:02  32  	-- populate clip table
22:10:02  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:10:02  34  	  clip_table_name => 'svmc_clip',
22:10:02  35  	  data_table_name => '&bldtable',
22:10:02  36  	  tail_frac	  => 0.025,
22:10:02  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:10:02  38  
22:10:02  39  	-- xform input data to winsorized data
22:10:02  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:10:02  41  	  clip_table_name => 'svmc_clip',
22:10:02  42  	  data_table_name => '&bldtable',
22:10:02  43  	  xform_view_name => 'svmc_winsor');
22:10:02  44  
22:10:02  45  	-- create normalization table
22:10:02  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:10:02  47  
22:10:02  48  	-- populate normalization table based on winsorized data
22:10:02  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:10:02  50  	  norm_table_name => 'svmc_norm',
22:10:02  51  	  data_table_name => 'svmc_winsor',
22:10:02  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:10:02  53  
22:10:02  54  	-- normalize the original data
22:10:02  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:10:02  56  	  norm_table_name => 'svmc_norm',
22:10:02  57  	  data_table_name => '&bldtable',
22:10:02  58  	  xform_view_name => 'svmc_build_prep');
22:10:02  59  END;
22:10:02  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.06
22:10:21 SQL> 
22:10:21 SQL> ---------------------
22:10:21 SQL> -- CREATE A NEW MODEL
22:10:21 SQL> --
22:10:21 SQL> -- Cleanup old model with the same name for repeat runs
22:10:21 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:10:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:21   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.97
22:10:22 SQL> 
22:10:22 SQL> -- Build a new SVM Model
22:10:22 SQL> BEGIN
22:10:22   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:10:22   3  	  model_name	      => '&model_name',
22:10:22   4  	  mining_function     => dbms_data_mining.classification,
22:10:22   5  	  data_table_name     => 'svmc_build_prep',
22:10:22   6  	  case_id_column_name => '&case_id',
22:10:22   7  	  target_column_name  => '&target',
22:10:22   8  	  settings_table_name => 'svmc_settings');
22:10:22   9  END;
22:10:22  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.87
22:10:48 SQL> 
22:10:48 SQL> -----------------------------------------------------------------------
22:10:48 SQL> --			       APPLY/score THE MODEL
22:10:48 SQL> -----------------------------------------------------------------------
22:10:48 SQL> 
22:10:48 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:10:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:10:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:10:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:10:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:10:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:10:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:10:49 SQL> -----------------------
22:10:49 SQL> -- PREPARE SCORING DATA
22:10:49 SQL> --
22:10:49 SQL> -- If the data for model creation has been prepared, then the data
22:10:49 SQL> -- to be scored using the model must be prepared in the same manner
22:10:49 SQL> -- in order to obtain meaningful results.
22:10:49 SQL> --
22:10:49 SQL> -- 1. Missing Value treatment for all Predictors and
22:10:49 SQL> -- 2. Normalization
22:10:49 SQL> -- No outlier treatment will be performed during test and apply. The
22:10:49 SQL> -- normalization step is sufficient, since the normalization parameters
22:10:49 SQL> -- already capture the effects of outlier treatment done with build data.
22:10:49 SQL> --
22:10:49 SQL> BEGIN
22:10:49   2  	-- Xform Test data to replace missing values
22:10:49   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:10:49   4  	  miss_table_name => 'svmc_miss_num',
22:10:49   5  	  data_table_name => '&scoretable',
22:10:49   6  	  xform_view_name => 'xformed_apply_miss_num');
22:10:49   7  
22:10:49   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:10:49   9  	  miss_table_name => 'svmc_miss_cat',
22:10:49  10  	  data_table_name => '&scoretable',
22:10:49  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:10:49  12  
22:10:49  13  	-- Normalize the data to be scored
22:10:49  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:10:49  15  	  norm_table_name => 'svmc_norm',
22:10:49  16  	  data_table_name => '&scoretable',
22:10:49  17  	  xform_view_name => 'svmc_apply_prep');
22:10:49  18  END;
22:10:49  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.25
22:10:50 SQL> 
22:10:50 SQL> -- Use same model_name used in score.sql
22:10:50 SQL> DEFINE model_name = 'forex14'
22:10:50 SQL> 
22:10:50 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
22:10:50 SQL> 
22:10:50 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
22:10:50 SQL> 
22:10:50 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
22:10:50   2  SELECT
22:10:50   3  prdate
22:10:50   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:10:50   5  ,sysdate
22:10:50   6  ,SUBSTR(prdate,1,3)pair
22:10:50   7  ,SUBSTR(prdate,4,19)ydate
22:10:50   8  FROM svmc_apply_prep
22:10:50   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
22:10:50 SQL> @aud_score1day.sql  2010-12-30 21:55:00
22:10:50 SQL> --
22:10:50 SQL> -- aud_score1day.sql
22:10:50 SQL> --
22:10:50 SQL> 
22:10:50 SQL> CREATE OR REPLACE VIEW sme AS
22:10:50   2  SELECT
22:10:50   3  'aud'||m.ydate prdate
22:10:50   4  ,NULL gatt
22:10:50   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:10:50   6  ,eur_g00
22:10:50   7  ,eur_g01
22:10:50   8  ,eur_g02
22:10:50   9  ,eur_g03
22:10:50  10  ,eur_g04
22:10:50  11  ,eur_g05
22:10:50  12  ,eur_g06
22:10:50  13  ,eur_g07
22:10:50  14  ,eur_g08
22:10:50  15  ,eur_g09
22:10:50  16  ,eur_g10
22:10:50  17  ,eur_g11
22:10:50  18  ,eur_g12
22:10:50  19  ,eur_g13
22:10:50  20  ,eur_g14
22:10:50  21  ,eur_g15
22:10:50  22  ,eur_g16
22:10:50  23  ,eur_g17
22:10:50  24  ,eur_g18
22:10:50  25  ,eur_g19
22:10:50  26  ,eur_g20
22:10:50  27  ,eur_g21
22:10:50  28  ,eur_g22
22:10:50  29  ,eur_g23
22:10:50  30  ,eur_g24
22:10:50  31  ,eur_g25
22:10:50  32  ,eur_g26
22:10:50  33  ,eur_g27
22:10:50  34  ,eur_g28
22:10:50  35  ,eur_g29
22:10:50  36  ,eur_g30
22:10:50  37  ,eur_g31
22:10:50  38  ,eur_g32
22:10:50  39  ,eur_g33
22:10:50  40  ,eur_g34
22:10:50  41  ,eur_g35
22:10:50  42  ,eur_g36
22:10:50  43  ,eur_g37
22:10:50  44  ,eur_g38
22:10:50  45  ,eur_g39
22:10:50  46  ,eur_g40
22:10:50  47  ,eur_g41
22:10:50  48  ,aud_g00
22:10:50  49  ,aud_g01
22:10:50  50  ,aud_g02
22:10:50  51  ,aud_g03
22:10:50  52  ,aud_g04
22:10:50  53  ,aud_g05
22:10:50  54  ,aud_g06
22:10:50  55  ,aud_g07
22:10:50  56  ,aud_g08
22:10:50  57  ,aud_g09
22:10:50  58  ,aud_g10
22:10:50  59  ,aud_g11
22:10:50  60  ,aud_g12
22:10:50  61  ,aud_g13
22:10:50  62  ,aud_g14
22:10:50  63  ,aud_g15
22:10:50  64  ,aud_g16
22:10:50  65  ,aud_g17
22:10:50  66  ,aud_g18
22:10:50  67  ,aud_g19
22:10:50  68  ,aud_g20
22:10:50  69  ,aud_g21
22:10:50  70  ,aud_g22
22:10:50  71  ,aud_g23
22:10:50  72  ,aud_g24
22:10:50  73  ,aud_g25
22:10:50  74  ,aud_g26
22:10:50  75  ,aud_g27
22:10:50  76  ,aud_g28
22:10:50  77  ,aud_g29
22:10:50  78  ,aud_g30
22:10:50  79  ,aud_g31
22:10:50  80  ,aud_g32
22:10:50  81  ,aud_g33
22:10:50  82  ,aud_g34
22:10:50  83  ,aud_g35
22:10:50  84  ,aud_g36
22:10:50  85  ,aud_g37
22:10:50  86  ,aud_g38
22:10:50  87  ,aud_g39
22:10:50  88  ,aud_g40
22:10:50  89  ,aud_g41
22:10:50  90  ,gbp_g00
22:10:50  91  ,gbp_g01
22:10:50  92  ,gbp_g02
22:10:50  93  ,gbp_g03
22:10:50  94  ,gbp_g04
22:10:50  95  ,gbp_g05
22:10:50  96  ,gbp_g06
22:10:50  97  ,gbp_g07
22:10:50  98  ,gbp_g08
22:10:50  99  ,gbp_g09
22:10:50 100  ,gbp_g10
22:10:50 101  ,gbp_g11
22:10:50 102  ,gbp_g12
22:10:50 103  ,gbp_g13
22:10:50 104  ,gbp_g14
22:10:50 105  ,gbp_g15
22:10:50 106  ,gbp_g16
22:10:50 107  ,gbp_g17
22:10:50 108  ,gbp_g18
22:10:50 109  ,gbp_g19
22:10:50 110  ,gbp_g20
22:10:50 111  ,gbp_g21
22:10:50 112  ,gbp_g22
22:10:50 113  ,gbp_g23
22:10:50 114  ,gbp_g24
22:10:50 115  ,gbp_g25
22:10:50 116  ,gbp_g26
22:10:50 117  ,gbp_g27
22:10:50 118  ,gbp_g28
22:10:50 119  ,gbp_g29
22:10:50 120  ,gbp_g30
22:10:50 121  ,gbp_g31
22:10:50 122  ,gbp_g32
22:10:50 123  ,gbp_g33
22:10:50 124  ,gbp_g34
22:10:50 125  ,gbp_g35
22:10:50 126  ,gbp_g36
22:10:50 127  ,gbp_g37
22:10:50 128  ,gbp_g38
22:10:50 129  ,gbp_g39
22:10:50 130  ,gbp_g40
22:10:50 131  ,gbp_g41
22:10:50 132  ,jpy_g00
22:10:50 133  ,jpy_g01
22:10:50 134  ,jpy_g02
22:10:50 135  ,jpy_g03
22:10:50 136  ,jpy_g04
22:10:50 137  ,jpy_g05
22:10:50 138  ,jpy_g06
22:10:50 139  ,jpy_g07
22:10:50 140  ,jpy_g08
22:10:50 141  ,jpy_g09
22:10:50 142  ,jpy_g10
22:10:50 143  ,jpy_g11
22:10:50 144  ,jpy_g12
22:10:50 145  ,jpy_g13
22:10:50 146  ,jpy_g14
22:10:50 147  ,jpy_g15
22:10:50 148  ,jpy_g16
22:10:50 149  ,jpy_g17
22:10:50 150  ,jpy_g18
22:10:50 151  ,jpy_g19
22:10:50 152  ,jpy_g20
22:10:50 153  ,jpy_g21
22:10:50 154  ,jpy_g22
22:10:50 155  ,jpy_g23
22:10:50 156  ,jpy_g24
22:10:50 157  ,jpy_g25
22:10:50 158  ,jpy_g26
22:10:50 159  ,jpy_g27
22:10:50 160  ,jpy_g28
22:10:50 161  ,jpy_g29
22:10:50 162  ,jpy_g30
22:10:50 163  ,jpy_g31
22:10:50 164  ,jpy_g32
22:10:50 165  ,jpy_g33
22:10:50 166  ,jpy_g34
22:10:50 167  ,jpy_g35
22:10:50 168  ,jpy_g36
22:10:50 169  ,jpy_g37
22:10:50 170  ,jpy_g38
22:10:50 171  ,jpy_g39
22:10:50 172  ,jpy_g40
22:10:50 173  ,jpy_g41
22:10:50 174  ,cad_g00
22:10:50 175  ,cad_g01
22:10:50 176  ,cad_g02
22:10:50 177  ,cad_g03
22:10:50 178  ,cad_g04
22:10:50 179  ,cad_g05
22:10:50 180  ,cad_g06
22:10:50 181  ,cad_g07
22:10:50 182  ,cad_g08
22:10:50 183  ,cad_g09
22:10:50 184  ,cad_g10
22:10:50 185  ,cad_g11
22:10:50 186  ,cad_g12
22:10:50 187  ,cad_g13
22:10:50 188  ,cad_g14
22:10:50 189  ,cad_g15
22:10:50 190  ,cad_g16
22:10:50 191  ,cad_g17
22:10:50 192  ,cad_g18
22:10:50 193  ,cad_g19
22:10:50 194  ,cad_g20
22:10:50 195  ,cad_g21
22:10:50 196  ,cad_g22
22:10:50 197  ,cad_g23
22:10:50 198  ,cad_g24
22:10:50 199  ,cad_g25
22:10:50 200  ,cad_g26
22:10:50 201  ,cad_g27
22:10:50 202  ,cad_g28
22:10:50 203  ,cad_g29
22:10:50 204  ,cad_g30
22:10:50 205  ,cad_g31
22:10:50 206  ,cad_g32
22:10:50 207  ,cad_g33
22:10:50 208  ,cad_g34
22:10:50 209  ,cad_g35
22:10:50 210  ,cad_g36
22:10:50 211  ,cad_g37
22:10:50 212  ,cad_g38
22:10:50 213  ,cad_g39
22:10:50 214  ,cad_g40
22:10:50 215  ,cad_g41
22:10:50 216  ,chf_g00
22:10:50 217  ,chf_g01
22:10:50 218  ,chf_g02
22:10:50 219  ,chf_g03
22:10:50 220  ,chf_g04
22:10:50 221  ,chf_g05
22:10:50 222  ,chf_g06
22:10:50 223  ,chf_g07
22:10:50 224  ,chf_g08
22:10:50 225  ,chf_g09
22:10:50 226  ,chf_g10
22:10:50 227  ,chf_g11
22:10:50 228  ,chf_g12
22:10:50 229  ,chf_g13
22:10:50 230  ,chf_g14
22:10:50 231  ,chf_g15
22:10:50 232  ,chf_g16
22:10:50 233  ,chf_g17
22:10:50 234  ,chf_g18
22:10:50 235  ,chf_g19
22:10:50 236  ,chf_g20
22:10:50 237  ,chf_g21
22:10:50 238  ,chf_g22
22:10:50 239  ,chf_g23
22:10:50 240  ,chf_g24
22:10:50 241  ,chf_g25
22:10:50 242  ,chf_g26
22:10:50 243  ,chf_g27
22:10:50 244  ,chf_g28
22:10:50 245  ,chf_g29
22:10:50 246  ,chf_g30
22:10:50 247  ,chf_g31
22:10:50 248  ,chf_g32
22:10:50 249  ,chf_g33
22:10:50 250  ,chf_g34
22:10:50 251  ,chf_g35
22:10:50 252  ,chf_g36
22:10:50 253  ,chf_g37
22:10:50 254  ,chf_g38
22:10:50 255  ,chf_g39
22:10:50 256  ,chf_g40
22:10:50 257  ,chf_g41
22:10:50 258  FROM aud_ms6 m
22:10:50 259  WHERE m.ydate = '&1'||' '||'&2'
22:10:50 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'21:55:00'

View created.

Elapsed: 00:00:00.12
22:10:50 SQL> 
22:10:50 SQL> -- rpt
22:10:50 SQL> -- We should see just 1 row:
22:10:50 SQL> 
22:10:50 SQL> SELECT COUNT(prdate) FROM sme
22:10:50   2  
22:10:50 SQL> -- Build the model:
22:10:50 SQL> CREATE OR REPLACE VIEW bme AS
22:10:50   2  SELECT
22:10:50   3  'aud'||m.ydate prdate
22:10:50   4  ,gatt
22:10:50   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:10:50   6  ,eur_g00
22:10:50   7  ,eur_g01
22:10:50   8  ,eur_g02
22:10:50   9  ,eur_g03
22:10:50  10  ,eur_g04
22:10:50  11  ,eur_g05
22:10:50  12  ,eur_g06
22:10:50  13  ,eur_g07
22:10:50  14  ,eur_g08
22:10:50  15  ,eur_g09
22:10:50  16  ,eur_g10
22:10:50  17  ,eur_g11
22:10:50  18  ,eur_g12
22:10:50  19  ,eur_g13
22:10:50  20  ,eur_g14
22:10:50  21  ,eur_g15
22:10:50  22  ,eur_g16
22:10:50  23  ,eur_g17
22:10:50  24  ,eur_g18
22:10:50  25  ,eur_g19
22:10:50  26  ,eur_g20
22:10:50  27  ,eur_g21
22:10:50  28  ,eur_g22
22:10:50  29  ,eur_g23
22:10:50  30  ,eur_g24
22:10:50  31  ,eur_g25
22:10:50  32  ,eur_g26
22:10:50  33  ,eur_g27
22:10:50  34  ,eur_g28
22:10:50  35  ,eur_g29
22:10:50  36  ,eur_g30
22:10:50  37  ,eur_g31
22:10:50  38  ,eur_g32
22:10:50  39  ,eur_g33
22:10:50  40  ,eur_g34
22:10:50  41  ,eur_g35
22:10:50  42  ,eur_g36
22:10:50  43  ,eur_g37
22:10:50  44  ,eur_g38
22:10:50  45  ,eur_g39
22:10:50  46  ,eur_g40
22:10:50  47  ,eur_g41
22:10:50  48  ,aud_g00
22:10:50  49  ,aud_g01
22:10:50  50  ,aud_g02
22:10:50  51  ,aud_g03
22:10:50  52  ,aud_g04
22:10:50  53  ,aud_g05
22:10:50  54  ,aud_g06
22:10:50  55  ,aud_g07
22:10:50  56  ,aud_g08
22:10:50  57  ,aud_g09
22:10:50  58  ,aud_g10
22:10:50  59  ,aud_g11
22:10:50  60  ,aud_g12
22:10:50  61  ,aud_g13
22:10:50  62  ,aud_g14
22:10:50  63  ,aud_g15
22:10:50  64  ,aud_g16
22:10:50  65  ,aud_g17
22:10:50  66  ,aud_g18
22:10:50  67  ,aud_g19
22:10:50  68  ,aud_g20
22:10:50  69  ,aud_g21
22:10:50  70  ,aud_g22
22:10:50  71  ,aud_g23
22:10:50  72  ,aud_g24
22:10:50  73  ,aud_g25
22:10:50  74  ,aud_g26
22:10:50  75  ,aud_g27
22:10:50  76  ,aud_g28
22:10:50  77  ,aud_g29
22:10:50  78  ,aud_g30
22:10:50  79  ,aud_g31
22:10:50  80  ,aud_g32
22:10:50  81  ,aud_g33
22:10:50  82  ,aud_g34
22:10:50  83  ,aud_g35
22:10:50  84  ,aud_g36
22:10:50  85  ,aud_g37
22:10:50  86  ,aud_g38
22:10:50  87  ,aud_g39
22:10:50  88  ,aud_g40
22:10:50  89  ,aud_g41
22:10:50  90  ,gbp_g00
22:10:50  91  ,gbp_g01
22:10:50  92  ,gbp_g02
22:10:50  93  ,gbp_g03
22:10:50  94  ,gbp_g04
22:10:50  95  ,gbp_g05
22:10:50  96  ,gbp_g06
22:10:50  97  ,gbp_g07
22:10:50  98  ,gbp_g08
22:10:50  99  ,gbp_g09
22:10:50 100  ,gbp_g10
22:10:50 101  ,gbp_g11
22:10:50 102  ,gbp_g12
22:10:50 103  ,gbp_g13
22:10:50 104  ,gbp_g14
22:10:50 105  ,gbp_g15
22:10:50 106  ,gbp_g16
22:10:50 107  ,gbp_g17
22:10:50 108  ,gbp_g18
22:10:50 109  ,gbp_g19
22:10:50 110  ,gbp_g20
22:10:50 111  ,gbp_g21
22:10:50 112  ,gbp_g22
22:10:50 113  ,gbp_g23
22:10:50 114  ,gbp_g24
22:10:50 115  ,gbp_g25
22:10:50 116  ,gbp_g26
22:10:50 117  ,gbp_g27
22:10:50 118  ,gbp_g28
22:10:50 119  ,gbp_g29
22:10:50 120  ,gbp_g30
22:10:50 121  ,gbp_g31
22:10:50 122  ,gbp_g32
22:10:50 123  ,gbp_g33
22:10:50 124  ,gbp_g34
22:10:50 125  ,gbp_g35
22:10:50 126  ,gbp_g36
22:10:50 127  ,gbp_g37
22:10:50 128  ,gbp_g38
22:10:50 129  ,gbp_g39
22:10:50 130  ,gbp_g40
22:10:50 131  ,gbp_g41
22:10:50 132  ,jpy_g00
22:10:50 133  ,jpy_g01
22:10:50 134  ,jpy_g02
22:10:50 135  ,jpy_g03
22:10:50 136  ,jpy_g04
22:10:50 137  ,jpy_g05
22:10:50 138  ,jpy_g06
22:10:50 139  ,jpy_g07
22:10:50 140  ,jpy_g08
22:10:50 141  ,jpy_g09
22:10:50 142  ,jpy_g10
22:10:50 143  ,jpy_g11
22:10:50 144  ,jpy_g12
22:10:50 145  ,jpy_g13
22:10:50 146  ,jpy_g14
22:10:50 147  ,jpy_g15
22:10:50 148  ,jpy_g16
22:10:50 149  ,jpy_g17
22:10:50 150  ,jpy_g18
22:10:50 151  ,jpy_g19
22:10:50 152  ,jpy_g20
22:10:50 153  ,jpy_g21
22:10:50 154  ,jpy_g22
22:10:50 155  ,jpy_g23
22:10:50 156  ,jpy_g24
22:10:50 157  ,jpy_g25
22:10:50 158  ,jpy_g26
22:10:50 159  ,jpy_g27
22:10:50 160  ,jpy_g28
22:10:50 161  ,jpy_g29
22:10:50 162  ,jpy_g30
22:10:50 163  ,jpy_g31
22:10:50 164  ,jpy_g32
22:10:50 165  ,jpy_g33
22:10:50 166  ,jpy_g34
22:10:50 167  ,jpy_g35
22:10:50 168  ,jpy_g36
22:10:50 169  ,jpy_g37
22:10:50 170  ,jpy_g38
22:10:50 171  ,jpy_g39
22:10:50 172  ,jpy_g40
22:10:50 173  ,jpy_g41
22:10:50 174  ,cad_g00
22:10:50 175  ,cad_g01
22:10:50 176  ,cad_g02
22:10:50 177  ,cad_g03
22:10:50 178  ,cad_g04
22:10:50 179  ,cad_g05
22:10:50 180  ,cad_g06
22:10:50 181  ,cad_g07
22:10:50 182  ,cad_g08
22:10:50 183  ,cad_g09
22:10:50 184  ,cad_g10
22:10:50 185  ,cad_g11
22:10:50 186  ,cad_g12
22:10:50 187  ,cad_g13
22:10:50 188  ,cad_g14
22:10:50 189  ,cad_g15
22:10:50 190  ,cad_g16
22:10:50 191  ,cad_g17
22:10:50 192  ,cad_g18
22:10:50 193  ,cad_g19
22:10:50 194  ,cad_g20
22:10:50 195  ,cad_g21
22:10:50 196  ,cad_g22
22:10:50 197  ,cad_g23
22:10:50 198  ,cad_g24
22:10:50 199  ,cad_g25
22:10:50 200  ,cad_g26
22:10:50 201  ,cad_g27
22:10:50 202  ,cad_g28
22:10:50 203  ,cad_g29
22:10:50 204  ,cad_g30
22:10:50 205  ,cad_g31
22:10:50 206  ,cad_g32
22:10:50 207  ,cad_g33
22:10:50 208  ,cad_g34
22:10:50 209  ,cad_g35
22:10:50 210  ,cad_g36
22:10:50 211  ,cad_g37
22:10:50 212  ,cad_g38
22:10:50 213  ,cad_g39
22:10:50 214  ,cad_g40
22:10:50 215  ,cad_g41
22:10:50 216  ,chf_g00
22:10:50 217  ,chf_g01
22:10:50 218  ,chf_g02
22:10:50 219  ,chf_g03
22:10:50 220  ,chf_g04
22:10:50 221  ,chf_g05
22:10:50 222  ,chf_g06
22:10:50 223  ,chf_g07
22:10:50 224  ,chf_g08
22:10:50 225  ,chf_g09
22:10:50 226  ,chf_g10
22:10:50 227  ,chf_g11
22:10:50 228  ,chf_g12
22:10:50 229  ,chf_g13
22:10:50 230  ,chf_g14
22:10:50 231  ,chf_g15
22:10:50 232  ,chf_g16
22:10:50 233  ,chf_g17
22:10:50 234  ,chf_g18
22:10:50 235  ,chf_g19
22:10:50 236  ,chf_g20
22:10:50 237  ,chf_g21
22:10:50 238  ,chf_g22
22:10:50 239  ,chf_g23
22:10:50 240  ,chf_g24
22:10:50 241  ,chf_g25
22:10:50 242  ,chf_g26
22:10:50 243  ,chf_g27
22:10:50 244  ,chf_g28
22:10:50 245  ,chf_g29
22:10:50 246  ,chf_g30
22:10:50 247  ,chf_g31
22:10:50 248  ,chf_g32
22:10:50 249  ,chf_g33
22:10:50 250  ,chf_g34
22:10:50 251  ,chf_g35
22:10:50 252  ,chf_g36
22:10:50 253  ,chf_g37
22:10:50 254  ,chf_g38
22:10:50 255  ,chf_g39
22:10:50 256  ,chf_g40
22:10:50 257  ,chf_g41
22:10:50 258  FROM aud_ms6 m
22:10:50 259  WHERE gatt IN('nup','up')
22:10:50 260  AND 1+m.ydate < '&1'||' '||'&2'
22:10:50 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'21:55:00'

View created.

Elapsed: 00:00:00.12
22:10:50 SQL> 
22:10:50 SQL> -- rpt
22:10:50 SQL> 
22:10:50 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
22:10:50   2  
22:10:50 SQL> SELECT MAX(prdate) FROM bme
22:10:50   2  
22:10:50 SQL> -- Now build model from bme and score sme
22:10:50 SQL> @score1.sql
22:10:50 SQL> -- score1.sql
22:10:50 SQL> 
22:10:50 SQL> -- Does the 1st SVM score
22:10:50 SQL> 
22:10:50 SQL> -- Fill up svmc_apply_prep
22:10:50 SQL> @score.sql
22:10:50 SQL> --
22:10:50 SQL> -- score.sql
22:10:50 SQL> --
22:10:50 SQL> 
22:10:50 SQL> -- usage: score.sql
22:10:50 SQL> 
22:10:50 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:10:50 SQL> 
22:10:50 SQL> DEFINE target	= 'gatt'
22:10:50 SQL> DEFINE model_name = 'forex14'
22:10:50 SQL> DEFINE bldtable	= 'bme'
22:10:50 SQL> DEFINE scoretable = 'sme'
22:10:50 SQL> DEFINE case_id	= 'prdate'
22:10:50 SQL> 
22:10:50 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:10:50 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:10:50 SQL> 
22:10:50 SQL> -- Builds an SVM model using pl/sql.
22:10:50 SQL> 
22:10:50 SQL> -----------------------------------------------------------------------
22:10:50 SQL> --			    BUILD THE MODEL
22:10:50 SQL> -----------------------------------------------------------------------
22:10:50 SQL> 
22:10:50 SQL> -- Cleanup old build data preparation objects for repeat runs
22:10:50 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:10:50 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:10:50 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
22:10:50 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
22:10:50 SQL> 
22:10:50 SQL> 
22:10:50 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:10:50 SQL> --
22:10:50 SQL> -- DROP	TABLE svmc_settings ;
22:10:50 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:10:50 SQL> -- DELETE svmc_settings;
22:10:50 SQL> 
22:10:50 SQL> -- The default classification algorithm is Naive Bayes. So override
22:10:50 SQL> -- this choice to SVM using a settings table.
22:10:50 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:10:50 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:10:50 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:10:50 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:10:50 SQL> -- models.
22:10:50 SQL> --
22:10:50 SQL> 
22:10:50 SQL> -- Do this once and then comment it out.
22:10:50 SQL> -- That makes script go faster.
22:10:50 SQL> -- BEGIN
22:10:50 SQL> -- -- Populate settings table
22:10:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:10:50 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:10:50 SQL> --
22:10:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:10:50 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:10:50 SQL> --
22:10:50 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:10:50 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:10:50 SQL> --   COMMIT;
22:10:50 SQL> -- END;
22:10:50 SQL> -- /
22:10:50 SQL> 
22:10:50 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:10:50 SQL> 
22:10:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:10:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
22:10:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:10:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:10:50 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:10:50   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:50   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:10:51 SQL> 
22:10:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:10:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:10:51 SQL> 
22:10:51 SQL> --------------------------------
22:10:51 SQL> -- PREPARE BUILD (TRAINING) DATA
22:10:51 SQL> --
22:10:51 SQL> 
22:10:51 SQL> -- 1. Missing Value treatment for all Predictors and
22:10:51 SQL> -- 2. Outlier Treatment and
22:10:51 SQL> -- 3. Normalization are performed below.
22:10:51 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:10:51 SQL> --    normalized here.
22:10:51 SQL> 
22:10:51 SQL> BEGIN
22:10:51   2  	-- Perform missing value treatment for all predictors
22:10:51   3  	-- create miss tables
22:10:51   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:10:51   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:10:51   6  
22:10:51   7  	-- populate miss tables
22:10:51   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:10:51   9  	  miss_table_name => 'svmc_miss_num',
22:10:51  10  	  data_table_name => '&bldtable',
22:10:51  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:10:51  12  
22:10:51  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:10:51  14  	  miss_table_name => 'svmc_miss_cat',
22:10:51  15  	  data_table_name => '&bldtable',
22:10:51  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:10:51  17  
22:10:51  18  	-- xform input data to replace missing values
22:10:51  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:10:51  20  	  miss_table_name => 'svmc_miss_num',
22:10:51  21  	  data_table_name => '&bldtable',
22:10:51  22  	  xform_view_name => 'xformed_build_miss_num');
22:10:51  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:10:51  24  	  miss_table_name => 'svmc_miss_cat',
22:10:51  25  	  data_table_name => '&bldtable',
22:10:51  26  	  xform_view_name => 'xformed_build_miss_cat');
22:10:51  27  
22:10:51  28  	-- Perform outlier treatment.
22:10:51  29  	-- create clip table
22:10:51  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:10:51  31  
22:10:51  32  	-- populate clip table
22:10:51  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:10:51  34  	  clip_table_name => 'svmc_clip',
22:10:51  35  	  data_table_name => '&bldtable',
22:10:51  36  	  tail_frac	  => 0.025,
22:10:51  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:10:51  38  
22:10:51  39  	-- xform input data to winsorized data
22:10:51  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:10:51  41  	  clip_table_name => 'svmc_clip',
22:10:51  42  	  data_table_name => '&bldtable',
22:10:51  43  	  xform_view_name => 'svmc_winsor');
22:10:51  44  
22:10:51  45  	-- create normalization table
22:10:51  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:10:51  47  
22:10:51  48  	-- populate normalization table based on winsorized data
22:10:51  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:10:51  50  	  norm_table_name => 'svmc_norm',
22:10:51  51  	  data_table_name => 'svmc_winsor',
22:10:51  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:10:51  53  
22:10:51  54  	-- normalize the original data
22:10:51  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:10:51  56  	  norm_table_name => 'svmc_norm',
22:10:51  57  	  data_table_name => '&bldtable',
22:10:51  58  	  xform_view_name => 'svmc_build_prep');
22:10:51  59  END;
22:10:51  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.27
22:11:09 SQL> 
22:11:09 SQL> ---------------------
22:11:09 SQL> -- CREATE A NEW MODEL
22:11:09 SQL> --
22:11:09 SQL> -- Cleanup old model with the same name for repeat runs
22:11:09 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:11:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:11:09   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.87
22:11:10 SQL> 
22:11:10 SQL> -- Build a new SVM Model
22:11:10 SQL> BEGIN
22:11:10   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:11:10   3  	  model_name	      => '&model_name',
22:11:10   4  	  mining_function     => dbms_data_mining.classification,
22:11:10   5  	  data_table_name     => 'svmc_build_prep',
22:11:10   6  	  case_id_column_name => '&case_id',
22:11:10   7  	  target_column_name  => '&target',
22:11:10   8  	  settings_table_name => 'svmc_settings');
22:11:10   9  END;
22:11:10  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.22
22:11:37 SQL> 
22:11:37 SQL> -----------------------------------------------------------------------
22:11:37 SQL> --			       APPLY/score THE MODEL
22:11:37 SQL> -----------------------------------------------------------------------
22:11:37 SQL> 
22:11:37 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:11:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:11:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:11:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:11:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:11:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:11:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:11:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:11:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:11:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:11:37 SQL> -----------------------
22:11:37 SQL> -- PREPARE SCORING DATA
22:11:37 SQL> --
22:11:37 SQL> -- If the data for model creation has been prepared, then the data
22:11:37 SQL> -- to be scored using the model must be prepared in the same manner
22:11:37 SQL> -- in order to obtain meaningful results.
22:11:37 SQL> --
22:11:37 SQL> -- 1. Missing Value treatment for all Predictors and
22:11:37 SQL> -- 2. Normalization
22:11:37 SQL> -- No outlier treatment will be performed during test and apply. The
22:11:37 SQL> -- normalization step is sufficient, since the normalization parameters
22:11:37 SQL> -- already capture the effects of outlier treatment done with build data.
22:11:37 SQL> --
22:11:37 SQL> BEGIN
22:11:37   2  	-- Xform Test data to replace missing values
22:11:37   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:11:37   4  	  miss_table_name => 'svmc_miss_num',
22:11:37   5  	  data_table_name => '&scoretable',
22:11:37   6  	  xform_view_name => 'xformed_apply_miss_num');
22:11:37   7  
22:11:37   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:11:37   9  	  miss_table_name => 'svmc_miss_cat',
22:11:37  10  	  data_table_name => '&scoretable',
22:11:37  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:11:37  12  
22:11:37  13  	-- Normalize the data to be scored
22:11:37  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:11:37  15  	  norm_table_name => 'svmc_norm',
22:11:37  16  	  data_table_name => '&scoretable',
22:11:37  17  	  xform_view_name => 'svmc_apply_prep');
22:11:37  18  END;
22:11:37  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
22:11:38 SQL> 
22:11:38 SQL> -- Use same model_name used in score.sql
22:11:38 SQL> DEFINE model_name = 'forex14'
22:11:38 SQL> 
22:11:38 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
22:11:38 SQL> 
22:11:38 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:11:38 SQL> 
22:11:38 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
22:11:38   2  SELECT
22:11:38   3  prdate
22:11:38   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:11:38   5  ,sysdate
22:11:38   6  ,SUBSTR(prdate,1,3)pair
22:11:38   7  ,SUBSTR(prdate,4,19)ydate
22:11:38   8  FROM svmc_apply_prep
22:11:38   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:11:39 SQL> @aud_score1day_gattn.sql	2010-12-30 21:45:00
22:11:39 SQL> --
22:11:39 SQL> -- aud_score1day_gattn.sql
22:11:39 SQL> --
22:11:39 SQL> 
22:11:39 SQL> CREATE OR REPLACE VIEW sme AS
22:11:39   2  SELECT
22:11:39   3  'aud'||m.ydate prdate
22:11:39   4  ,NULL gattn
22:11:39   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:11:39   6  ,eur_g00
22:11:39   7  ,eur_g01
22:11:39   8  ,eur_g02
22:11:39   9  ,eur_g03
22:11:39  10  ,eur_g04
22:11:39  11  ,eur_g05
22:11:39  12  ,eur_g06
22:11:39  13  ,eur_g07
22:11:39  14  ,eur_g08
22:11:39  15  ,eur_g09
22:11:39  16  ,eur_g10
22:11:39  17  ,eur_g11
22:11:39  18  ,eur_g12
22:11:39  19  ,eur_g13
22:11:39  20  ,eur_g14
22:11:39  21  ,eur_g15
22:11:39  22  ,eur_g16
22:11:39  23  ,eur_g17
22:11:39  24  ,eur_g18
22:11:39  25  ,eur_g19
22:11:39  26  ,eur_g20
22:11:39  27  ,eur_g21
22:11:39  28  ,eur_g22
22:11:39  29  ,eur_g23
22:11:39  30  ,eur_g24
22:11:39  31  ,eur_g25
22:11:39  32  ,eur_g26
22:11:39  33  ,eur_g27
22:11:39  34  ,eur_g28
22:11:39  35  ,eur_g29
22:11:39  36  ,eur_g30
22:11:39  37  ,eur_g31
22:11:39  38  ,eur_g32
22:11:39  39  ,eur_g33
22:11:39  40  ,eur_g34
22:11:39  41  ,eur_g35
22:11:39  42  ,eur_g36
22:11:39  43  ,eur_g37
22:11:39  44  ,eur_g38
22:11:39  45  ,eur_g39
22:11:39  46  ,eur_g40
22:11:39  47  ,eur_g41
22:11:39  48  ,aud_g00
22:11:39  49  ,aud_g01
22:11:39  50  ,aud_g02
22:11:39  51  ,aud_g03
22:11:39  52  ,aud_g04
22:11:39  53  ,aud_g05
22:11:39  54  ,aud_g06
22:11:39  55  ,aud_g07
22:11:39  56  ,aud_g08
22:11:39  57  ,aud_g09
22:11:39  58  ,aud_g10
22:11:39  59  ,aud_g11
22:11:39  60  ,aud_g12
22:11:39  61  ,aud_g13
22:11:39  62  ,aud_g14
22:11:39  63  ,aud_g15
22:11:39  64  ,aud_g16
22:11:39  65  ,aud_g17
22:11:39  66  ,aud_g18
22:11:39  67  ,aud_g19
22:11:39  68  ,aud_g20
22:11:39  69  ,aud_g21
22:11:39  70  ,aud_g22
22:11:39  71  ,aud_g23
22:11:39  72  ,aud_g24
22:11:39  73  ,aud_g25
22:11:39  74  ,aud_g26
22:11:39  75  ,aud_g27
22:11:39  76  ,aud_g28
22:11:39  77  ,aud_g29
22:11:39  78  ,aud_g30
22:11:39  79  ,aud_g31
22:11:39  80  ,aud_g32
22:11:39  81  ,aud_g33
22:11:39  82  ,aud_g34
22:11:39  83  ,aud_g35
22:11:39  84  ,aud_g36
22:11:39  85  ,aud_g37
22:11:39  86  ,aud_g38
22:11:39  87  ,aud_g39
22:11:39  88  ,aud_g40
22:11:39  89  ,aud_g41
22:11:39  90  ,gbp_g00
22:11:39  91  ,gbp_g01
22:11:39  92  ,gbp_g02
22:11:39  93  ,gbp_g03
22:11:39  94  ,gbp_g04
22:11:39  95  ,gbp_g05
22:11:39  96  ,gbp_g06
22:11:39  97  ,gbp_g07
22:11:39  98  ,gbp_g08
22:11:39  99  ,gbp_g09
22:11:39 100  ,gbp_g10
22:11:39 101  ,gbp_g11
22:11:39 102  ,gbp_g12
22:11:39 103  ,gbp_g13
22:11:39 104  ,gbp_g14
22:11:39 105  ,gbp_g15
22:11:39 106  ,gbp_g16
22:11:39 107  ,gbp_g17
22:11:39 108  ,gbp_g18
22:11:39 109  ,gbp_g19
22:11:39 110  ,gbp_g20
22:11:39 111  ,gbp_g21
22:11:39 112  ,gbp_g22
22:11:39 113  ,gbp_g23
22:11:39 114  ,gbp_g24
22:11:39 115  ,gbp_g25
22:11:39 116  ,gbp_g26
22:11:39 117  ,gbp_g27
22:11:39 118  ,gbp_g28
22:11:39 119  ,gbp_g29
22:11:39 120  ,gbp_g30
22:11:39 121  ,gbp_g31
22:11:39 122  ,gbp_g32
22:11:39 123  ,gbp_g33
22:11:39 124  ,gbp_g34
22:11:39 125  ,gbp_g35
22:11:39 126  ,gbp_g36
22:11:39 127  ,gbp_g37
22:11:39 128  ,gbp_g38
22:11:39 129  ,gbp_g39
22:11:39 130  ,gbp_g40
22:11:39 131  ,gbp_g41
22:11:39 132  ,jpy_g00
22:11:39 133  ,jpy_g01
22:11:39 134  ,jpy_g02
22:11:39 135  ,jpy_g03
22:11:39 136  ,jpy_g04
22:11:39 137  ,jpy_g05
22:11:39 138  ,jpy_g06
22:11:39 139  ,jpy_g07
22:11:39 140  ,jpy_g08
22:11:39 141  ,jpy_g09
22:11:39 142  ,jpy_g10
22:11:39 143  ,jpy_g11
22:11:39 144  ,jpy_g12
22:11:39 145  ,jpy_g13
22:11:39 146  ,jpy_g14
22:11:39 147  ,jpy_g15
22:11:39 148  ,jpy_g16
22:11:39 149  ,jpy_g17
22:11:39 150  ,jpy_g18
22:11:39 151  ,jpy_g19
22:11:39 152  ,jpy_g20
22:11:39 153  ,jpy_g21
22:11:39 154  ,jpy_g22
22:11:39 155  ,jpy_g23
22:11:39 156  ,jpy_g24
22:11:39 157  ,jpy_g25
22:11:39 158  ,jpy_g26
22:11:39 159  ,jpy_g27
22:11:39 160  ,jpy_g28
22:11:39 161  ,jpy_g29
22:11:39 162  ,jpy_g30
22:11:39 163  ,jpy_g31
22:11:39 164  ,jpy_g32
22:11:39 165  ,jpy_g33
22:11:39 166  ,jpy_g34
22:11:39 167  ,jpy_g35
22:11:39 168  ,jpy_g36
22:11:39 169  ,jpy_g37
22:11:39 170  ,jpy_g38
22:11:39 171  ,jpy_g39
22:11:39 172  ,jpy_g40
22:11:39 173  ,jpy_g41
22:11:39 174  ,cad_g00
22:11:39 175  ,cad_g01
22:11:39 176  ,cad_g02
22:11:39 177  ,cad_g03
22:11:39 178  ,cad_g04
22:11:39 179  ,cad_g05
22:11:39 180  ,cad_g06
22:11:39 181  ,cad_g07
22:11:39 182  ,cad_g08
22:11:39 183  ,cad_g09
22:11:39 184  ,cad_g10
22:11:39 185  ,cad_g11
22:11:39 186  ,cad_g12
22:11:39 187  ,cad_g13
22:11:39 188  ,cad_g14
22:11:39 189  ,cad_g15
22:11:39 190  ,cad_g16
22:11:39 191  ,cad_g17
22:11:39 192  ,cad_g18
22:11:39 193  ,cad_g19
22:11:39 194  ,cad_g20
22:11:39 195  ,cad_g21
22:11:39 196  ,cad_g22
22:11:39 197  ,cad_g23
22:11:39 198  ,cad_g24
22:11:39 199  ,cad_g25
22:11:39 200  ,cad_g26
22:11:39 201  ,cad_g27
22:11:39 202  ,cad_g28
22:11:39 203  ,cad_g29
22:11:39 204  ,cad_g30
22:11:39 205  ,cad_g31
22:11:39 206  ,cad_g32
22:11:39 207  ,cad_g33
22:11:39 208  ,cad_g34
22:11:39 209  ,cad_g35
22:11:39 210  ,cad_g36
22:11:39 211  ,cad_g37
22:11:39 212  ,cad_g38
22:11:39 213  ,cad_g39
22:11:39 214  ,cad_g40
22:11:39 215  ,cad_g41
22:11:39 216  ,chf_g00
22:11:39 217  ,chf_g01
22:11:39 218  ,chf_g02
22:11:39 219  ,chf_g03
22:11:39 220  ,chf_g04
22:11:39 221  ,chf_g05
22:11:39 222  ,chf_g06
22:11:39 223  ,chf_g07
22:11:39 224  ,chf_g08
22:11:39 225  ,chf_g09
22:11:39 226  ,chf_g10
22:11:39 227  ,chf_g11
22:11:39 228  ,chf_g12
22:11:39 229  ,chf_g13
22:11:39 230  ,chf_g14
22:11:39 231  ,chf_g15
22:11:39 232  ,chf_g16
22:11:39 233  ,chf_g17
22:11:39 234  ,chf_g18
22:11:39 235  ,chf_g19
22:11:39 236  ,chf_g20
22:11:39 237  ,chf_g21
22:11:39 238  ,chf_g22
22:11:39 239  ,chf_g23
22:11:39 240  ,chf_g24
22:11:39 241  ,chf_g25
22:11:39 242  ,chf_g26
22:11:39 243  ,chf_g27
22:11:39 244  ,chf_g28
22:11:39 245  ,chf_g29
22:11:39 246  ,chf_g30
22:11:39 247  ,chf_g31
22:11:39 248  ,chf_g32
22:11:39 249  ,chf_g33
22:11:39 250  ,chf_g34
22:11:39 251  ,chf_g35
22:11:39 252  ,chf_g36
22:11:39 253  ,chf_g37
22:11:39 254  ,chf_g38
22:11:39 255  ,chf_g39
22:11:39 256  ,chf_g40
22:11:39 257  ,chf_g41
22:11:39 258  FROM aud_ms6 m
22:11:39 259  WHERE m.ydate = '&1'||' '||'&2'
22:11:39 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'21:45:00'

View created.

Elapsed: 00:00:00.15
22:11:39 SQL> 
22:11:39 SQL> -- rpt
22:11:39 SQL> -- We should see just 1 row:
22:11:39 SQL> 
22:11:39 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
22:11:39 SQL> 
22:11:39 SQL> -- Build the model:
22:11:39 SQL> CREATE OR REPLACE VIEW bme AS
22:11:39   2  SELECT
22:11:39   3  'aud'||m.ydate prdate
22:11:39   4  ,gattn
22:11:39   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:11:39   6  ,eur_g00
22:11:39   7  ,eur_g01
22:11:39   8  ,eur_g02
22:11:39   9  ,eur_g03
22:11:39  10  ,eur_g04
22:11:39  11  ,eur_g05
22:11:39  12  ,eur_g06
22:11:39  13  ,eur_g07
22:11:39  14  ,eur_g08
22:11:39  15  ,eur_g09
22:11:39  16  ,eur_g10
22:11:39  17  ,eur_g11
22:11:39  18  ,eur_g12
22:11:39  19  ,eur_g13
22:11:39  20  ,eur_g14
22:11:39  21  ,eur_g15
22:11:39  22  ,eur_g16
22:11:39  23  ,eur_g17
22:11:39  24  ,eur_g18
22:11:39  25  ,eur_g19
22:11:39  26  ,eur_g20
22:11:39  27  ,eur_g21
22:11:39  28  ,eur_g22
22:11:39  29  ,eur_g23
22:11:39  30  ,eur_g24
22:11:39  31  ,eur_g25
22:11:39  32  ,eur_g26
22:11:39  33  ,eur_g27
22:11:39  34  ,eur_g28
22:11:39  35  ,eur_g29
22:11:39  36  ,eur_g30
22:11:39  37  ,eur_g31
22:11:39  38  ,eur_g32
22:11:39  39  ,eur_g33
22:11:39  40  ,eur_g34
22:11:39  41  ,eur_g35
22:11:39  42  ,eur_g36
22:11:39  43  ,eur_g37
22:11:39  44  ,eur_g38
22:11:39  45  ,eur_g39
22:11:39  46  ,eur_g40
22:11:39  47  ,eur_g41
22:11:39  48  ,aud_g00
22:11:39  49  ,aud_g01
22:11:39  50  ,aud_g02
22:11:39  51  ,aud_g03
22:11:39  52  ,aud_g04
22:11:39  53  ,aud_g05
22:11:39  54  ,aud_g06
22:11:39  55  ,aud_g07
22:11:39  56  ,aud_g08
22:11:39  57  ,aud_g09
22:11:39  58  ,aud_g10
22:11:39  59  ,aud_g11
22:11:39  60  ,aud_g12
22:11:39  61  ,aud_g13
22:11:39  62  ,aud_g14
22:11:39  63  ,aud_g15
22:11:39  64  ,aud_g16
22:11:39  65  ,aud_g17
22:11:39  66  ,aud_g18
22:11:39  67  ,aud_g19
22:11:39  68  ,aud_g20
22:11:39  69  ,aud_g21
22:11:39  70  ,aud_g22
22:11:39  71  ,aud_g23
22:11:39  72  ,aud_g24
22:11:39  73  ,aud_g25
22:11:39  74  ,aud_g26
22:11:39  75  ,aud_g27
22:11:39  76  ,aud_g28
22:11:39  77  ,aud_g29
22:11:39  78  ,aud_g30
22:11:39  79  ,aud_g31
22:11:39  80  ,aud_g32
22:11:39  81  ,aud_g33
22:11:39  82  ,aud_g34
22:11:39  83  ,aud_g35
22:11:39  84  ,aud_g36
22:11:39  85  ,aud_g37
22:11:39  86  ,aud_g38
22:11:39  87  ,aud_g39
22:11:39  88  ,aud_g40
22:11:39  89  ,aud_g41
22:11:39  90  ,gbp_g00
22:11:39  91  ,gbp_g01
22:11:39  92  ,gbp_g02
22:11:39  93  ,gbp_g03
22:11:39  94  ,gbp_g04
22:11:39  95  ,gbp_g05
22:11:39  96  ,gbp_g06
22:11:39  97  ,gbp_g07
22:11:39  98  ,gbp_g08
22:11:39  99  ,gbp_g09
22:11:39 100  ,gbp_g10
22:11:39 101  ,gbp_g11
22:11:39 102  ,gbp_g12
22:11:39 103  ,gbp_g13
22:11:39 104  ,gbp_g14
22:11:39 105  ,gbp_g15
22:11:39 106  ,gbp_g16
22:11:39 107  ,gbp_g17
22:11:39 108  ,gbp_g18
22:11:39 109  ,gbp_g19
22:11:39 110  ,gbp_g20
22:11:39 111  ,gbp_g21
22:11:39 112  ,gbp_g22
22:11:39 113  ,gbp_g23
22:11:39 114  ,gbp_g24
22:11:39 115  ,gbp_g25
22:11:39 116  ,gbp_g26
22:11:39 117  ,gbp_g27
22:11:39 118  ,gbp_g28
22:11:39 119  ,gbp_g29
22:11:39 120  ,gbp_g30
22:11:39 121  ,gbp_g31
22:11:39 122  ,gbp_g32
22:11:39 123  ,gbp_g33
22:11:39 124  ,gbp_g34
22:11:39 125  ,gbp_g35
22:11:39 126  ,gbp_g36
22:11:39 127  ,gbp_g37
22:11:39 128  ,gbp_g38
22:11:39 129  ,gbp_g39
22:11:39 130  ,gbp_g40
22:11:39 131  ,gbp_g41
22:11:39 132  ,jpy_g00
22:11:39 133  ,jpy_g01
22:11:39 134  ,jpy_g02
22:11:39 135  ,jpy_g03
22:11:39 136  ,jpy_g04
22:11:39 137  ,jpy_g05
22:11:39 138  ,jpy_g06
22:11:39 139  ,jpy_g07
22:11:39 140  ,jpy_g08
22:11:39 141  ,jpy_g09
22:11:39 142  ,jpy_g10
22:11:39 143  ,jpy_g11
22:11:39 144  ,jpy_g12
22:11:39 145  ,jpy_g13
22:11:39 146  ,jpy_g14
22:11:39 147  ,jpy_g15
22:11:39 148  ,jpy_g16
22:11:39 149  ,jpy_g17
22:11:39 150  ,jpy_g18
22:11:39 151  ,jpy_g19
22:11:39 152  ,jpy_g20
22:11:39 153  ,jpy_g21
22:11:39 154  ,jpy_g22
22:11:39 155  ,jpy_g23
22:11:39 156  ,jpy_g24
22:11:39 157  ,jpy_g25
22:11:39 158  ,jpy_g26
22:11:39 159  ,jpy_g27
22:11:39 160  ,jpy_g28
22:11:39 161  ,jpy_g29
22:11:39 162  ,jpy_g30
22:11:39 163  ,jpy_g31
22:11:39 164  ,jpy_g32
22:11:39 165  ,jpy_g33
22:11:39 166  ,jpy_g34
22:11:39 167  ,jpy_g35
22:11:39 168  ,jpy_g36
22:11:39 169  ,jpy_g37
22:11:39 170  ,jpy_g38
22:11:39 171  ,jpy_g39
22:11:39 172  ,jpy_g40
22:11:39 173  ,jpy_g41
22:11:39 174  ,cad_g00
22:11:39 175  ,cad_g01
22:11:39 176  ,cad_g02
22:11:39 177  ,cad_g03
22:11:39 178  ,cad_g04
22:11:39 179  ,cad_g05
22:11:39 180  ,cad_g06
22:11:39 181  ,cad_g07
22:11:39 182  ,cad_g08
22:11:39 183  ,cad_g09
22:11:39 184  ,cad_g10
22:11:39 185  ,cad_g11
22:11:39 186  ,cad_g12
22:11:39 187  ,cad_g13
22:11:39 188  ,cad_g14
22:11:39 189  ,cad_g15
22:11:39 190  ,cad_g16
22:11:39 191  ,cad_g17
22:11:39 192  ,cad_g18
22:11:39 193  ,cad_g19
22:11:39 194  ,cad_g20
22:11:39 195  ,cad_g21
22:11:39 196  ,cad_g22
22:11:39 197  ,cad_g23
22:11:39 198  ,cad_g24
22:11:39 199  ,cad_g25
22:11:39 200  ,cad_g26
22:11:39 201  ,cad_g27
22:11:39 202  ,cad_g28
22:11:39 203  ,cad_g29
22:11:39 204  ,cad_g30
22:11:39 205  ,cad_g31
22:11:39 206  ,cad_g32
22:11:39 207  ,cad_g33
22:11:39 208  ,cad_g34
22:11:39 209  ,cad_g35
22:11:39 210  ,cad_g36
22:11:39 211  ,cad_g37
22:11:39 212  ,cad_g38
22:11:39 213  ,cad_g39
22:11:39 214  ,cad_g40
22:11:39 215  ,cad_g41
22:11:39 216  ,chf_g00
22:11:39 217  ,chf_g01
22:11:39 218  ,chf_g02
22:11:39 219  ,chf_g03
22:11:39 220  ,chf_g04
22:11:39 221  ,chf_g05
22:11:39 222  ,chf_g06
22:11:39 223  ,chf_g07
22:11:39 224  ,chf_g08
22:11:39 225  ,chf_g09
22:11:39 226  ,chf_g10
22:11:39 227  ,chf_g11
22:11:39 228  ,chf_g12
22:11:39 229  ,chf_g13
22:11:39 230  ,chf_g14
22:11:39 231  ,chf_g15
22:11:39 232  ,chf_g16
22:11:39 233  ,chf_g17
22:11:39 234  ,chf_g18
22:11:39 235  ,chf_g19
22:11:39 236  ,chf_g20
22:11:39 237  ,chf_g21
22:11:39 238  ,chf_g22
22:11:39 239  ,chf_g23
22:11:39 240  ,chf_g24
22:11:39 241  ,chf_g25
22:11:39 242  ,chf_g26
22:11:39 243  ,chf_g27
22:11:39 244  ,chf_g28
22:11:39 245  ,chf_g29
22:11:39 246  ,chf_g30
22:11:39 247  ,chf_g31
22:11:39 248  ,chf_g32
22:11:39 249  ,chf_g33
22:11:39 250  ,chf_g34
22:11:39 251  ,chf_g35
22:11:39 252  ,chf_g36
22:11:39 253  ,chf_g37
22:11:39 254  ,chf_g38
22:11:39 255  ,chf_g39
22:11:39 256  ,chf_g40
22:11:39 257  ,chf_g41
22:11:39 258  FROM aud_ms6 m
22:11:39 259  WHERE gattn IN('nup','up')
22:11:39 260  AND 1+m.ydate < '&1'||' '||'&2'
22:11:39 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'21:45:00'

View created.

Elapsed: 00:00:00.15
22:11:39 SQL> 
22:11:39 SQL> -- rpt
22:11:39 SQL> 
22:11:39 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13157
up	     6384

Elapsed: 00:00:00.04
22:11:39 SQL> 
22:11:39 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 21:40:00

Elapsed: 00:00:00.04
22:11:39 SQL> 
22:11:39 SQL> -- Now build model from bme and score sme
22:11:39 SQL> @score1gattn.sql
22:11:39 SQL> -- score1gattn.sql
22:11:39 SQL> 
22:11:39 SQL> -- Does the 1st SVM score
22:11:39 SQL> 
22:11:39 SQL> -- Fill up svmc_apply_prep
22:11:39 SQL> @score_gattn.sql
22:11:39 SQL> --
22:11:39 SQL> -- score_gattn.sql
22:11:39 SQL> --
22:11:39 SQL> 
22:11:39 SQL> -- usage: score_gattn.sql
22:11:39 SQL> 
22:11:39 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:11:39 SQL> 
22:11:39 SQL> DEFINE target	= 'gattn'
22:11:39 SQL> DEFINE model_name = 'forex14'
22:11:39 SQL> DEFINE bldtable	= 'bme'
22:11:39 SQL> DEFINE scoretable = 'sme'
22:11:39 SQL> DEFINE case_id	= 'prdate'
22:11:39 SQL> 
22:11:39 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:11:39 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:11:39 SQL> 
22:11:39 SQL> -- Builds an SVM model using pl/sql.
22:11:39 SQL> 
22:11:39 SQL> -----------------------------------------------------------------------
22:11:39 SQL> --			    BUILD THE MODEL
22:11:39 SQL> -----------------------------------------------------------------------
22:11:39 SQL> 
22:11:39 SQL> -- Cleanup old build data preparation objects for repeat runs
22:11:39 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:11:39 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:11:39 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
22:11:39 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
22:11:39 SQL> 
22:11:39 SQL> 
22:11:39 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:11:39 SQL> --
22:11:39 SQL> -- DROP	TABLE svmc_settings ;
22:11:39 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:11:39 SQL> -- DELETE svmc_settings;
22:11:39 SQL> 
22:11:39 SQL> -- The default classification algorithm is Naive Bayes. So override
22:11:39 SQL> -- this choice to SVM using a settings table.
22:11:39 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:11:39 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:11:39 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:11:39 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:11:39 SQL> -- models.
22:11:39 SQL> --
22:11:39 SQL> 
22:11:39 SQL> -- Do this once and then comment it out.
22:11:39 SQL> -- That makes script go faster.
22:11:39 SQL> -- BEGIN
22:11:39 SQL> -- -- Populate settings table
22:11:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:11:39 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:11:39 SQL> --
22:11:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:11:39 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:11:39 SQL> --
22:11:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:11:39 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:11:39 SQL> --   COMMIT;
22:11:39 SQL> -- END;
22:11:39 SQL> -- /
22:11:39 SQL> 
22:11:39 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:11:39 SQL> 
22:11:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:11:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:11:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:11:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:11:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:11:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:11:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:11:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:11:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:11:39 SQL> 
22:11:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:11:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:11:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:11:39 SQL> 
22:11:39 SQL> --------------------------------
22:11:39 SQL> -- PREPARE BUILD (TRAINING) DATA
22:11:39 SQL> --
22:11:39 SQL> 
22:11:39 SQL> -- 1. Missing Value treatment for all Predictors and
22:11:39 SQL> -- 2. Outlier Treatment and
22:11:39 SQL> -- 3. Normalization are performed below.
22:11:39 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:11:39 SQL> --    normalized here.
22:11:39 SQL> 
22:11:39 SQL> BEGIN
22:11:39   2  	-- Perform missing value treatment for all predictors
22:11:39   3  	-- create miss tables
22:11:39   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:11:39   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:11:39   6  
22:11:39   7  	-- populate miss tables
22:11:39   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:11:39   9  	  miss_table_name => 'svmc_miss_num',
22:11:39  10  	  data_table_name => '&bldtable',
22:11:39  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:11:39  12  
22:11:39  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:11:39  14  	  miss_table_name => 'svmc_miss_cat',
22:11:39  15  	  data_table_name => '&bldtable',
22:11:39  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:11:39  17  
22:11:39  18  	-- xform input data to replace missing values
22:11:39  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:11:39  20  	  miss_table_name => 'svmc_miss_num',
22:11:39  21  	  data_table_name => '&bldtable',
22:11:39  22  	  xform_view_name => 'xformed_build_miss_num');
22:11:39  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:11:39  24  	  miss_table_name => 'svmc_miss_cat',
22:11:39  25  	  data_table_name => '&bldtable',
22:11:39  26  	  xform_view_name => 'xformed_build_miss_cat');
22:11:39  27  
22:11:39  28  	-- Perform outlier treatment.
22:11:39  29  	-- create clip table
22:11:39  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:11:39  31  
22:11:39  32  	-- populate clip table
22:11:39  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:11:39  34  	  clip_table_name => 'svmc_clip',
22:11:39  35  	  data_table_name => '&bldtable',
22:11:39  36  	  tail_frac	  => 0.025,
22:11:39  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:11:39  38  
22:11:39  39  	-- xform input data to winsorized data
22:11:39  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:11:39  41  	  clip_table_name => 'svmc_clip',
22:11:39  42  	  data_table_name => '&bldtable',
22:11:39  43  	  xform_view_name => 'svmc_winsor');
22:11:39  44  
22:11:39  45  	-- create normalization table
22:11:39  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:11:39  47  
22:11:39  48  	-- populate normalization table based on winsorized data
22:11:39  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:11:39  50  	  norm_table_name => 'svmc_norm',
22:11:39  51  	  data_table_name => 'svmc_winsor',
22:11:39  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:11:39  53  
22:11:39  54  	-- normalize the original data
22:11:39  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:11:39  56  	  norm_table_name => 'svmc_norm',
22:11:39  57  	  data_table_name => '&bldtable',
22:11:39  58  	  xform_view_name => 'svmc_build_prep');
22:11:39  59  END;
22:11:39  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.86
22:11:58 SQL> 
22:11:58 SQL> ---------------------
22:11:58 SQL> -- CREATE A NEW MODEL
22:11:58 SQL> --
22:11:58 SQL> -- Cleanup old model with the same name for repeat runs
22:11:58 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:11:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:11:58   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.89
22:11:59 SQL> 
22:11:59 SQL> -- Build a new SVM Model
22:11:59 SQL> BEGIN
22:11:59   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:11:59   3  	  model_name	      => '&model_name',
22:11:59   4  	  mining_function     => dbms_data_mining.classification,
22:11:59   5  	  data_table_name     => 'svmc_build_prep',
22:11:59   6  	  case_id_column_name => '&case_id',
22:11:59   7  	  target_column_name  => '&target',
22:11:59   8  	  settings_table_name => 'svmc_settings');
22:11:59   9  END;
22:11:59  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.71
22:12:26 SQL> 
22:12:26 SQL> -----------------------------------------------------------------------
22:12:26 SQL> --			       APPLY/score THE MODEL
22:12:26 SQL> -----------------------------------------------------------------------
22:12:26 SQL> 
22:12:26 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:12:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:12:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:12:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:12:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:12:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:12:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:12:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:12:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:12:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:12:26 SQL> -----------------------
22:12:26 SQL> -- PREPARE SCORING DATA
22:12:26 SQL> --
22:12:26 SQL> -- If the data for model creation has been prepared, then the data
22:12:26 SQL> -- to be scored using the model must be prepared in the same manner
22:12:26 SQL> -- in order to obtain meaningful results.
22:12:26 SQL> --
22:12:26 SQL> -- 1. Missing Value treatment for all Predictors and
22:12:26 SQL> -- 2. Normalization
22:12:26 SQL> -- No outlier treatment will be performed during test and apply. The
22:12:26 SQL> -- normalization step is sufficient, since the normalization parameters
22:12:26 SQL> -- already capture the effects of outlier treatment done with build data.
22:12:26 SQL> --
22:12:26 SQL> BEGIN
22:12:26   2  	-- Xform Test data to replace missing values
22:12:26   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:12:26   4  	  miss_table_name => 'svmc_miss_num',
22:12:26   5  	  data_table_name => '&scoretable',
22:12:26   6  	  xform_view_name => 'xformed_apply_miss_num');
22:12:26   7  
22:12:26   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:12:26   9  	  miss_table_name => 'svmc_miss_cat',
22:12:26  10  	  data_table_name => '&scoretable',
22:12:26  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:12:26  12  
22:12:26  13  	-- Normalize the data to be scored
22:12:26  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:12:26  15  	  norm_table_name => 'svmc_norm',
22:12:26  16  	  data_table_name => '&scoretable',
22:12:26  17  	  xform_view_name => 'svmc_apply_prep');
22:12:26  18  END;
22:12:26  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
22:12:27 SQL> 
22:12:27 SQL> -- Use same model_name used in score_gattn.sql
22:12:27 SQL> DEFINE model_name = 'forex14'
22:12:27 SQL> 
22:12:27 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:12:27 SQL> 
22:12:27 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
22:12:27   2  SELECT
22:12:27   3  prdate
22:12:27   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:12:27   5  ,sysdate
22:12:27   6  ,SUBSTR(prdate,1,3)pair
22:12:27   7  ,SUBSTR(prdate,4,19)ydate
22:12:27   8  FROM svmc_apply_prep
22:12:27   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:12:27 SQL> @aud_score1day_gattn.sql	2010-12-30 21:50:00
22:12:27 SQL> --
22:12:27 SQL> -- aud_score1day_gattn.sql
22:12:27 SQL> --
22:12:27 SQL> 
22:12:27 SQL> CREATE OR REPLACE VIEW sme AS
22:12:27   2  SELECT
22:12:27   3  'aud'||m.ydate prdate
22:12:27   4  ,NULL gattn
22:12:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:12:27   6  ,eur_g00
22:12:27   7  ,eur_g01
22:12:27   8  ,eur_g02
22:12:27   9  ,eur_g03
22:12:27  10  ,eur_g04
22:12:27  11  ,eur_g05
22:12:27  12  ,eur_g06
22:12:27  13  ,eur_g07
22:12:27  14  ,eur_g08
22:12:27  15  ,eur_g09
22:12:27  16  ,eur_g10
22:12:27  17  ,eur_g11
22:12:27  18  ,eur_g12
22:12:27  19  ,eur_g13
22:12:27  20  ,eur_g14
22:12:27  21  ,eur_g15
22:12:27  22  ,eur_g16
22:12:27  23  ,eur_g17
22:12:27  24  ,eur_g18
22:12:27  25  ,eur_g19
22:12:27  26  ,eur_g20
22:12:27  27  ,eur_g21
22:12:27  28  ,eur_g22
22:12:27  29  ,eur_g23
22:12:27  30  ,eur_g24
22:12:27  31  ,eur_g25
22:12:27  32  ,eur_g26
22:12:27  33  ,eur_g27
22:12:27  34  ,eur_g28
22:12:27  35  ,eur_g29
22:12:27  36  ,eur_g30
22:12:27  37  ,eur_g31
22:12:27  38  ,eur_g32
22:12:27  39  ,eur_g33
22:12:27  40  ,eur_g34
22:12:27  41  ,eur_g35
22:12:27  42  ,eur_g36
22:12:27  43  ,eur_g37
22:12:27  44  ,eur_g38
22:12:27  45  ,eur_g39
22:12:27  46  ,eur_g40
22:12:27  47  ,eur_g41
22:12:27  48  ,aud_g00
22:12:27  49  ,aud_g01
22:12:27  50  ,aud_g02
22:12:27  51  ,aud_g03
22:12:27  52  ,aud_g04
22:12:27  53  ,aud_g05
22:12:27  54  ,aud_g06
22:12:27  55  ,aud_g07
22:12:27  56  ,aud_g08
22:12:27  57  ,aud_g09
22:12:27  58  ,aud_g10
22:12:27  59  ,aud_g11
22:12:27  60  ,aud_g12
22:12:27  61  ,aud_g13
22:12:27  62  ,aud_g14
22:12:27  63  ,aud_g15
22:12:27  64  ,aud_g16
22:12:27  65  ,aud_g17
22:12:27  66  ,aud_g18
22:12:27  67  ,aud_g19
22:12:27  68  ,aud_g20
22:12:27  69  ,aud_g21
22:12:27  70  ,aud_g22
22:12:27  71  ,aud_g23
22:12:27  72  ,aud_g24
22:12:27  73  ,aud_g25
22:12:27  74  ,aud_g26
22:12:27  75  ,aud_g27
22:12:27  76  ,aud_g28
22:12:27  77  ,aud_g29
22:12:27  78  ,aud_g30
22:12:27  79  ,aud_g31
22:12:27  80  ,aud_g32
22:12:27  81  ,aud_g33
22:12:27  82  ,aud_g34
22:12:27  83  ,aud_g35
22:12:27  84  ,aud_g36
22:12:27  85  ,aud_g37
22:12:27  86  ,aud_g38
22:12:27  87  ,aud_g39
22:12:27  88  ,aud_g40
22:12:27  89  ,aud_g41
22:12:27  90  ,gbp_g00
22:12:27  91  ,gbp_g01
22:12:27  92  ,gbp_g02
22:12:27  93  ,gbp_g03
22:12:27  94  ,gbp_g04
22:12:27  95  ,gbp_g05
22:12:27  96  ,gbp_g06
22:12:27  97  ,gbp_g07
22:12:27  98  ,gbp_g08
22:12:27  99  ,gbp_g09
22:12:27 100  ,gbp_g10
22:12:27 101  ,gbp_g11
22:12:27 102  ,gbp_g12
22:12:27 103  ,gbp_g13
22:12:27 104  ,gbp_g14
22:12:27 105  ,gbp_g15
22:12:27 106  ,gbp_g16
22:12:27 107  ,gbp_g17
22:12:27 108  ,gbp_g18
22:12:27 109  ,gbp_g19
22:12:27 110  ,gbp_g20
22:12:27 111  ,gbp_g21
22:12:27 112  ,gbp_g22
22:12:27 113  ,gbp_g23
22:12:27 114  ,gbp_g24
22:12:27 115  ,gbp_g25
22:12:27 116  ,gbp_g26
22:12:27 117  ,gbp_g27
22:12:27 118  ,gbp_g28
22:12:27 119  ,gbp_g29
22:12:27 120  ,gbp_g30
22:12:27 121  ,gbp_g31
22:12:27 122  ,gbp_g32
22:12:27 123  ,gbp_g33
22:12:27 124  ,gbp_g34
22:12:27 125  ,gbp_g35
22:12:27 126  ,gbp_g36
22:12:27 127  ,gbp_g37
22:12:27 128  ,gbp_g38
22:12:27 129  ,gbp_g39
22:12:27 130  ,gbp_g40
22:12:27 131  ,gbp_g41
22:12:27 132  ,jpy_g00
22:12:27 133  ,jpy_g01
22:12:27 134  ,jpy_g02
22:12:27 135  ,jpy_g03
22:12:27 136  ,jpy_g04
22:12:27 137  ,jpy_g05
22:12:27 138  ,jpy_g06
22:12:27 139  ,jpy_g07
22:12:27 140  ,jpy_g08
22:12:27 141  ,jpy_g09
22:12:27 142  ,jpy_g10
22:12:27 143  ,jpy_g11
22:12:27 144  ,jpy_g12
22:12:27 145  ,jpy_g13
22:12:27 146  ,jpy_g14
22:12:27 147  ,jpy_g15
22:12:27 148  ,jpy_g16
22:12:27 149  ,jpy_g17
22:12:27 150  ,jpy_g18
22:12:27 151  ,jpy_g19
22:12:27 152  ,jpy_g20
22:12:27 153  ,jpy_g21
22:12:27 154  ,jpy_g22
22:12:27 155  ,jpy_g23
22:12:27 156  ,jpy_g24
22:12:27 157  ,jpy_g25
22:12:27 158  ,jpy_g26
22:12:27 159  ,jpy_g27
22:12:27 160  ,jpy_g28
22:12:27 161  ,jpy_g29
22:12:27 162  ,jpy_g30
22:12:27 163  ,jpy_g31
22:12:27 164  ,jpy_g32
22:12:27 165  ,jpy_g33
22:12:27 166  ,jpy_g34
22:12:27 167  ,jpy_g35
22:12:27 168  ,jpy_g36
22:12:27 169  ,jpy_g37
22:12:27 170  ,jpy_g38
22:12:27 171  ,jpy_g39
22:12:27 172  ,jpy_g40
22:12:27 173  ,jpy_g41
22:12:27 174  ,cad_g00
22:12:27 175  ,cad_g01
22:12:27 176  ,cad_g02
22:12:27 177  ,cad_g03
22:12:27 178  ,cad_g04
22:12:27 179  ,cad_g05
22:12:27 180  ,cad_g06
22:12:27 181  ,cad_g07
22:12:27 182  ,cad_g08
22:12:27 183  ,cad_g09
22:12:27 184  ,cad_g10
22:12:27 185  ,cad_g11
22:12:27 186  ,cad_g12
22:12:27 187  ,cad_g13
22:12:27 188  ,cad_g14
22:12:27 189  ,cad_g15
22:12:27 190  ,cad_g16
22:12:27 191  ,cad_g17
22:12:27 192  ,cad_g18
22:12:27 193  ,cad_g19
22:12:27 194  ,cad_g20
22:12:27 195  ,cad_g21
22:12:27 196  ,cad_g22
22:12:27 197  ,cad_g23
22:12:27 198  ,cad_g24
22:12:27 199  ,cad_g25
22:12:27 200  ,cad_g26
22:12:27 201  ,cad_g27
22:12:27 202  ,cad_g28
22:12:27 203  ,cad_g29
22:12:27 204  ,cad_g30
22:12:27 205  ,cad_g31
22:12:27 206  ,cad_g32
22:12:27 207  ,cad_g33
22:12:27 208  ,cad_g34
22:12:27 209  ,cad_g35
22:12:27 210  ,cad_g36
22:12:27 211  ,cad_g37
22:12:27 212  ,cad_g38
22:12:27 213  ,cad_g39
22:12:27 214  ,cad_g40
22:12:27 215  ,cad_g41
22:12:27 216  ,chf_g00
22:12:27 217  ,chf_g01
22:12:27 218  ,chf_g02
22:12:27 219  ,chf_g03
22:12:27 220  ,chf_g04
22:12:27 221  ,chf_g05
22:12:27 222  ,chf_g06
22:12:27 223  ,chf_g07
22:12:27 224  ,chf_g08
22:12:27 225  ,chf_g09
22:12:27 226  ,chf_g10
22:12:27 227  ,chf_g11
22:12:27 228  ,chf_g12
22:12:27 229  ,chf_g13
22:12:27 230  ,chf_g14
22:12:27 231  ,chf_g15
22:12:27 232  ,chf_g16
22:12:27 233  ,chf_g17
22:12:27 234  ,chf_g18
22:12:27 235  ,chf_g19
22:12:27 236  ,chf_g20
22:12:27 237  ,chf_g21
22:12:27 238  ,chf_g22
22:12:27 239  ,chf_g23
22:12:27 240  ,chf_g24
22:12:27 241  ,chf_g25
22:12:27 242  ,chf_g26
22:12:27 243  ,chf_g27
22:12:27 244  ,chf_g28
22:12:27 245  ,chf_g29
22:12:27 246  ,chf_g30
22:12:27 247  ,chf_g31
22:12:27 248  ,chf_g32
22:12:27 249  ,chf_g33
22:12:27 250  ,chf_g34
22:12:27 251  ,chf_g35
22:12:27 252  ,chf_g36
22:12:27 253  ,chf_g37
22:12:27 254  ,chf_g38
22:12:27 255  ,chf_g39
22:12:27 256  ,chf_g40
22:12:27 257  ,chf_g41
22:12:27 258  FROM aud_ms6 m
22:12:27 259  WHERE m.ydate = '&1'||' '||'&2'
22:12:27 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'21:50:00'

View created.

Elapsed: 00:00:00.13
22:12:27 SQL> 
22:12:27 SQL> -- rpt
22:12:27 SQL> -- We should see just 1 row:
22:12:27 SQL> 
22:12:27 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
22:12:27 SQL> 
22:12:27 SQL> -- Build the model:
22:12:27 SQL> CREATE OR REPLACE VIEW bme AS
22:12:27   2  SELECT
22:12:27   3  'aud'||m.ydate prdate
22:12:27   4  ,gattn
22:12:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:12:27   6  ,eur_g00
22:12:27   7  ,eur_g01
22:12:27   8  ,eur_g02
22:12:27   9  ,eur_g03
22:12:27  10  ,eur_g04
22:12:27  11  ,eur_g05
22:12:27  12  ,eur_g06
22:12:27  13  ,eur_g07
22:12:27  14  ,eur_g08
22:12:27  15  ,eur_g09
22:12:27  16  ,eur_g10
22:12:27  17  ,eur_g11
22:12:27  18  ,eur_g12
22:12:27  19  ,eur_g13
22:12:27  20  ,eur_g14
22:12:27  21  ,eur_g15
22:12:27  22  ,eur_g16
22:12:27  23  ,eur_g17
22:12:27  24  ,eur_g18
22:12:27  25  ,eur_g19
22:12:27  26  ,eur_g20
22:12:27  27  ,eur_g21
22:12:27  28  ,eur_g22
22:12:27  29  ,eur_g23
22:12:27  30  ,eur_g24
22:12:27  31  ,eur_g25
22:12:27  32  ,eur_g26
22:12:27  33  ,eur_g27
22:12:27  34  ,eur_g28
22:12:27  35  ,eur_g29
22:12:27  36  ,eur_g30
22:12:27  37  ,eur_g31
22:12:27  38  ,eur_g32
22:12:27  39  ,eur_g33
22:12:27  40  ,eur_g34
22:12:27  41  ,eur_g35
22:12:27  42  ,eur_g36
22:12:27  43  ,eur_g37
22:12:27  44  ,eur_g38
22:12:27  45  ,eur_g39
22:12:27  46  ,eur_g40
22:12:27  47  ,eur_g41
22:12:27  48  ,aud_g00
22:12:27  49  ,aud_g01
22:12:27  50  ,aud_g02
22:12:27  51  ,aud_g03
22:12:27  52  ,aud_g04
22:12:27  53  ,aud_g05
22:12:27  54  ,aud_g06
22:12:27  55  ,aud_g07
22:12:27  56  ,aud_g08
22:12:27  57  ,aud_g09
22:12:27  58  ,aud_g10
22:12:27  59  ,aud_g11
22:12:27  60  ,aud_g12
22:12:27  61  ,aud_g13
22:12:27  62  ,aud_g14
22:12:27  63  ,aud_g15
22:12:27  64  ,aud_g16
22:12:27  65  ,aud_g17
22:12:27  66  ,aud_g18
22:12:27  67  ,aud_g19
22:12:27  68  ,aud_g20
22:12:27  69  ,aud_g21
22:12:27  70  ,aud_g22
22:12:27  71  ,aud_g23
22:12:27  72  ,aud_g24
22:12:27  73  ,aud_g25
22:12:27  74  ,aud_g26
22:12:27  75  ,aud_g27
22:12:27  76  ,aud_g28
22:12:27  77  ,aud_g29
22:12:27  78  ,aud_g30
22:12:27  79  ,aud_g31
22:12:27  80  ,aud_g32
22:12:27  81  ,aud_g33
22:12:27  82  ,aud_g34
22:12:27  83  ,aud_g35
22:12:27  84  ,aud_g36
22:12:27  85  ,aud_g37
22:12:27  86  ,aud_g38
22:12:27  87  ,aud_g39
22:12:27  88  ,aud_g40
22:12:27  89  ,aud_g41
22:12:27  90  ,gbp_g00
22:12:27  91  ,gbp_g01
22:12:27  92  ,gbp_g02
22:12:27  93  ,gbp_g03
22:12:27  94  ,gbp_g04
22:12:27  95  ,gbp_g05
22:12:27  96  ,gbp_g06
22:12:27  97  ,gbp_g07
22:12:27  98  ,gbp_g08
22:12:27  99  ,gbp_g09
22:12:27 100  ,gbp_g10
22:12:27 101  ,gbp_g11
22:12:27 102  ,gbp_g12
22:12:27 103  ,gbp_g13
22:12:27 104  ,gbp_g14
22:12:27 105  ,gbp_g15
22:12:27 106  ,gbp_g16
22:12:27 107  ,gbp_g17
22:12:27 108  ,gbp_g18
22:12:27 109  ,gbp_g19
22:12:27 110  ,gbp_g20
22:12:27 111  ,gbp_g21
22:12:27 112  ,gbp_g22
22:12:27 113  ,gbp_g23
22:12:27 114  ,gbp_g24
22:12:27 115  ,gbp_g25
22:12:27 116  ,gbp_g26
22:12:27 117  ,gbp_g27
22:12:27 118  ,gbp_g28
22:12:27 119  ,gbp_g29
22:12:27 120  ,gbp_g30
22:12:27 121  ,gbp_g31
22:12:27 122  ,gbp_g32
22:12:27 123  ,gbp_g33
22:12:27 124  ,gbp_g34
22:12:27 125  ,gbp_g35
22:12:27 126  ,gbp_g36
22:12:27 127  ,gbp_g37
22:12:27 128  ,gbp_g38
22:12:27 129  ,gbp_g39
22:12:27 130  ,gbp_g40
22:12:27 131  ,gbp_g41
22:12:27 132  ,jpy_g00
22:12:27 133  ,jpy_g01
22:12:27 134  ,jpy_g02
22:12:27 135  ,jpy_g03
22:12:27 136  ,jpy_g04
22:12:27 137  ,jpy_g05
22:12:27 138  ,jpy_g06
22:12:27 139  ,jpy_g07
22:12:27 140  ,jpy_g08
22:12:27 141  ,jpy_g09
22:12:27 142  ,jpy_g10
22:12:27 143  ,jpy_g11
22:12:27 144  ,jpy_g12
22:12:27 145  ,jpy_g13
22:12:27 146  ,jpy_g14
22:12:27 147  ,jpy_g15
22:12:27 148  ,jpy_g16
22:12:27 149  ,jpy_g17
22:12:27 150  ,jpy_g18
22:12:27 151  ,jpy_g19
22:12:27 152  ,jpy_g20
22:12:27 153  ,jpy_g21
22:12:27 154  ,jpy_g22
22:12:27 155  ,jpy_g23
22:12:27 156  ,jpy_g24
22:12:27 157  ,jpy_g25
22:12:27 158  ,jpy_g26
22:12:27 159  ,jpy_g27
22:12:27 160  ,jpy_g28
22:12:27 161  ,jpy_g29
22:12:27 162  ,jpy_g30
22:12:27 163  ,jpy_g31
22:12:27 164  ,jpy_g32
22:12:27 165  ,jpy_g33
22:12:27 166  ,jpy_g34
22:12:27 167  ,jpy_g35
22:12:27 168  ,jpy_g36
22:12:27 169  ,jpy_g37
22:12:27 170  ,jpy_g38
22:12:27 171  ,jpy_g39
22:12:27 172  ,jpy_g40
22:12:27 173  ,jpy_g41
22:12:27 174  ,cad_g00
22:12:27 175  ,cad_g01
22:12:27 176  ,cad_g02
22:12:27 177  ,cad_g03
22:12:27 178  ,cad_g04
22:12:27 179  ,cad_g05
22:12:27 180  ,cad_g06
22:12:27 181  ,cad_g07
22:12:27 182  ,cad_g08
22:12:27 183  ,cad_g09
22:12:27 184  ,cad_g10
22:12:27 185  ,cad_g11
22:12:27 186  ,cad_g12
22:12:27 187  ,cad_g13
22:12:27 188  ,cad_g14
22:12:27 189  ,cad_g15
22:12:27 190  ,cad_g16
22:12:27 191  ,cad_g17
22:12:27 192  ,cad_g18
22:12:27 193  ,cad_g19
22:12:27 194  ,cad_g20
22:12:27 195  ,cad_g21
22:12:27 196  ,cad_g22
22:12:27 197  ,cad_g23
22:12:27 198  ,cad_g24
22:12:27 199  ,cad_g25
22:12:27 200  ,cad_g26
22:12:27 201  ,cad_g27
22:12:27 202  ,cad_g28
22:12:27 203  ,cad_g29
22:12:27 204  ,cad_g30
22:12:27 205  ,cad_g31
22:12:27 206  ,cad_g32
22:12:27 207  ,cad_g33
22:12:27 208  ,cad_g34
22:12:27 209  ,cad_g35
22:12:27 210  ,cad_g36
22:12:27 211  ,cad_g37
22:12:27 212  ,cad_g38
22:12:27 213  ,cad_g39
22:12:27 214  ,cad_g40
22:12:27 215  ,cad_g41
22:12:27 216  ,chf_g00
22:12:27 217  ,chf_g01
22:12:27 218  ,chf_g02
22:12:27 219  ,chf_g03
22:12:27 220  ,chf_g04
22:12:27 221  ,chf_g05
22:12:27 222  ,chf_g06
22:12:27 223  ,chf_g07
22:12:27 224  ,chf_g08
22:12:27 225  ,chf_g09
22:12:27 226  ,chf_g10
22:12:27 227  ,chf_g11
22:12:27 228  ,chf_g12
22:12:27 229  ,chf_g13
22:12:27 230  ,chf_g14
22:12:27 231  ,chf_g15
22:12:27 232  ,chf_g16
22:12:27 233  ,chf_g17
22:12:27 234  ,chf_g18
22:12:27 235  ,chf_g19
22:12:27 236  ,chf_g20
22:12:27 237  ,chf_g21
22:12:27 238  ,chf_g22
22:12:27 239  ,chf_g23
22:12:27 240  ,chf_g24
22:12:27 241  ,chf_g25
22:12:27 242  ,chf_g26
22:12:27 243  ,chf_g27
22:12:27 244  ,chf_g28
22:12:27 245  ,chf_g29
22:12:27 246  ,chf_g30
22:12:27 247  ,chf_g31
22:12:27 248  ,chf_g32
22:12:27 249  ,chf_g33
22:12:27 250  ,chf_g34
22:12:27 251  ,chf_g35
22:12:27 252  ,chf_g36
22:12:27 253  ,chf_g37
22:12:27 254  ,chf_g38
22:12:27 255  ,chf_g39
22:12:27 256  ,chf_g40
22:12:27 257  ,chf_g41
22:12:27 258  FROM aud_ms6 m
22:12:27 259  WHERE gattn IN('nup','up')
22:12:27 260  AND 1+m.ydate < '&1'||' '||'&2'
22:12:27 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'21:50:00'

View created.

Elapsed: 00:00:00.13
22:12:28 SQL> 
22:12:28 SQL> -- rpt
22:12:28 SQL> 
22:12:28 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13158
up	     6384

Elapsed: 00:00:00.04
22:12:28 SQL> 
22:12:28 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 21:45:00

Elapsed: 00:00:00.04
22:12:28 SQL> 
22:12:28 SQL> -- Now build model from bme and score sme
22:12:28 SQL> @score1gattn.sql
22:12:28 SQL> -- score1gattn.sql
22:12:28 SQL> 
22:12:28 SQL> -- Does the 1st SVM score
22:12:28 SQL> 
22:12:28 SQL> -- Fill up svmc_apply_prep
22:12:28 SQL> @score_gattn.sql
22:12:28 SQL> --
22:12:28 SQL> -- score_gattn.sql
22:12:28 SQL> --
22:12:28 SQL> 
22:12:28 SQL> -- usage: score_gattn.sql
22:12:28 SQL> 
22:12:28 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:12:28 SQL> 
22:12:28 SQL> DEFINE target	= 'gattn'
22:12:28 SQL> DEFINE model_name = 'forex14'
22:12:28 SQL> DEFINE bldtable	= 'bme'
22:12:28 SQL> DEFINE scoretable = 'sme'
22:12:28 SQL> DEFINE case_id	= 'prdate'
22:12:28 SQL> 
22:12:28 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:12:28 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:12:28 SQL> 
22:12:28 SQL> -- Builds an SVM model using pl/sql.
22:12:28 SQL> 
22:12:28 SQL> -----------------------------------------------------------------------
22:12:28 SQL> --			    BUILD THE MODEL
22:12:28 SQL> -----------------------------------------------------------------------
22:12:28 SQL> 
22:12:28 SQL> -- Cleanup old build data preparation objects for repeat runs
22:12:28 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
22:12:28 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:12:28 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
22:12:28 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
22:12:28 SQL> 
22:12:28 SQL> 
22:12:28 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:12:28 SQL> --
22:12:28 SQL> -- DROP	TABLE svmc_settings ;
22:12:28 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:12:28 SQL> -- DELETE svmc_settings;
22:12:28 SQL> 
22:12:28 SQL> -- The default classification algorithm is Naive Bayes. So override
22:12:28 SQL> -- this choice to SVM using a settings table.
22:12:28 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:12:28 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:12:28 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:12:28 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:12:28 SQL> -- models.
22:12:28 SQL> --
22:12:28 SQL> 
22:12:28 SQL> -- Do this once and then comment it out.
22:12:28 SQL> -- That makes script go faster.
22:12:28 SQL> -- BEGIN
22:12:28 SQL> -- -- Populate settings table
22:12:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:12:28 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:12:28 SQL> --
22:12:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:12:28 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:12:28 SQL> --
22:12:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:12:28 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:12:28 SQL> --   COMMIT;
22:12:28 SQL> -- END;
22:12:28 SQL> -- /
22:12:28 SQL> 
22:12:28 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:12:28 SQL> 
22:12:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:12:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:12:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
22:12:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:12:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:12:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:12:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:12:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:12:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:12:28 SQL> 
22:12:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:12:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:12:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:12:28 SQL> 
22:12:28 SQL> --------------------------------
22:12:28 SQL> -- PREPARE BUILD (TRAINING) DATA
22:12:28 SQL> --
22:12:28 SQL> 
22:12:28 SQL> -- 1. Missing Value treatment for all Predictors and
22:12:28 SQL> -- 2. Outlier Treatment and
22:12:28 SQL> -- 3. Normalization are performed below.
22:12:28 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:12:28 SQL> --    normalized here.
22:12:28 SQL> 
22:12:28 SQL> BEGIN
22:12:28   2  	-- Perform missing value treatment for all predictors
22:12:28   3  	-- create miss tables
22:12:28   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:12:28   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:12:28   6  
22:12:28   7  	-- populate miss tables
22:12:28   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:12:28   9  	  miss_table_name => 'svmc_miss_num',
22:12:28  10  	  data_table_name => '&bldtable',
22:12:28  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:12:28  12  
22:12:28  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:12:28  14  	  miss_table_name => 'svmc_miss_cat',
22:12:28  15  	  data_table_name => '&bldtable',
22:12:28  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:12:28  17  
22:12:28  18  	-- xform input data to replace missing values
22:12:28  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:12:28  20  	  miss_table_name => 'svmc_miss_num',
22:12:28  21  	  data_table_name => '&bldtable',
22:12:28  22  	  xform_view_name => 'xformed_build_miss_num');
22:12:28  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:12:28  24  	  miss_table_name => 'svmc_miss_cat',
22:12:28  25  	  data_table_name => '&bldtable',
22:12:28  26  	  xform_view_name => 'xformed_build_miss_cat');
22:12:28  27  
22:12:28  28  	-- Perform outlier treatment.
22:12:28  29  	-- create clip table
22:12:28  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:12:28  31  
22:12:28  32  	-- populate clip table
22:12:28  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:12:28  34  	  clip_table_name => 'svmc_clip',
22:12:28  35  	  data_table_name => '&bldtable',
22:12:28  36  	  tail_frac	  => 0.025,
22:12:28  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:12:28  38  
22:12:28  39  	-- xform input data to winsorized data
22:12:28  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:12:28  41  	  clip_table_name => 'svmc_clip',
22:12:28  42  	  data_table_name => '&bldtable',
22:12:28  43  	  xform_view_name => 'svmc_winsor');
22:12:28  44  
22:12:28  45  	-- create normalization table
22:12:28  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:12:28  47  
22:12:28  48  	-- populate normalization table based on winsorized data
22:12:28  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:12:28  50  	  norm_table_name => 'svmc_norm',
22:12:28  51  	  data_table_name => 'svmc_winsor',
22:12:28  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:12:28  53  
22:12:28  54  	-- normalize the original data
22:12:28  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:12:28  56  	  norm_table_name => 'svmc_norm',
22:12:28  57  	  data_table_name => '&bldtable',
22:12:28  58  	  xform_view_name => 'svmc_build_prep');
22:12:28  59  END;
22:12:28  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.58
22:12:46 SQL> 
22:12:46 SQL> ---------------------
22:12:46 SQL> -- CREATE A NEW MODEL
22:12:46 SQL> --
22:12:46 SQL> -- Cleanup old model with the same name for repeat runs
22:12:46 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:12:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:12:46   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.89
22:12:47 SQL> 
22:12:47 SQL> -- Build a new SVM Model
22:12:47 SQL> BEGIN
22:12:47   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:12:47   3  	  model_name	      => '&model_name',
22:12:47   4  	  mining_function     => dbms_data_mining.classification,
22:12:47   5  	  data_table_name     => 'svmc_build_prep',
22:12:47   6  	  case_id_column_name => '&case_id',
22:12:47   7  	  target_column_name  => '&target',
22:12:47   8  	  settings_table_name => 'svmc_settings');
22:12:47   9  END;
22:12:47  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.50
22:13:15 SQL> 
22:13:15 SQL> -----------------------------------------------------------------------
22:13:15 SQL> --			       APPLY/score THE MODEL
22:13:15 SQL> -----------------------------------------------------------------------
22:13:15 SQL> 
22:13:15 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:13:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:13:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:13:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:13:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:13:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:13:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:13:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:13:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:13:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:13:15 SQL> -----------------------
22:13:15 SQL> -- PREPARE SCORING DATA
22:13:15 SQL> --
22:13:15 SQL> -- If the data for model creation has been prepared, then the data
22:13:15 SQL> -- to be scored using the model must be prepared in the same manner
22:13:15 SQL> -- in order to obtain meaningful results.
22:13:15 SQL> --
22:13:15 SQL> -- 1. Missing Value treatment for all Predictors and
22:13:15 SQL> -- 2. Normalization
22:13:15 SQL> -- No outlier treatment will be performed during test and apply. The
22:13:15 SQL> -- normalization step is sufficient, since the normalization parameters
22:13:15 SQL> -- already capture the effects of outlier treatment done with build data.
22:13:15 SQL> --
22:13:15 SQL> BEGIN
22:13:15   2  	-- Xform Test data to replace missing values
22:13:15   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:13:15   4  	  miss_table_name => 'svmc_miss_num',
22:13:15   5  	  data_table_name => '&scoretable',
22:13:15   6  	  xform_view_name => 'xformed_apply_miss_num');
22:13:15   7  
22:13:15   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:13:15   9  	  miss_table_name => 'svmc_miss_cat',
22:13:15  10  	  data_table_name => '&scoretable',
22:13:15  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:13:15  12  
22:13:15  13  	-- Normalize the data to be scored
22:13:15  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:13:15  15  	  norm_table_name => 'svmc_norm',
22:13:15  16  	  data_table_name => '&scoretable',
22:13:15  17  	  xform_view_name => 'svmc_apply_prep');
22:13:15  18  END;
22:13:15  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
22:13:16 SQL> 
22:13:16 SQL> -- Use same model_name used in score_gattn.sql
22:13:16 SQL> DEFINE model_name = 'forex14'
22:13:16 SQL> 
22:13:16 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:13:16 SQL> 
22:13:16 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
22:13:16   2  SELECT
22:13:16   3  prdate
22:13:16   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:13:16   5  ,sysdate
22:13:16   6  ,SUBSTR(prdate,1,3)pair
22:13:16   7  ,SUBSTR(prdate,4,19)ydate
22:13:16   8  FROM svmc_apply_prep
22:13:16   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
22:13:16 SQL> @aud_score1day_gattn.sql	2010-12-30 21:55:00
22:13:16 SQL> --
22:13:16 SQL> -- aud_score1day_gattn.sql
22:13:16 SQL> --
22:13:16 SQL> 
22:13:16 SQL> CREATE OR REPLACE VIEW sme AS
22:13:16   2  SELECT
22:13:16   3  'aud'||m.ydate prdate
22:13:16   4  ,NULL gattn
22:13:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:13:16   6  ,eur_g00
22:13:16   7  ,eur_g01
22:13:16   8  ,eur_g02
22:13:16   9  ,eur_g03
22:13:16  10  ,eur_g04
22:13:16  11  ,eur_g05
22:13:16  12  ,eur_g06
22:13:16  13  ,eur_g07
22:13:16  14  ,eur_g08
22:13:16  15  ,eur_g09
22:13:16  16  ,eur_g10
22:13:16  17  ,eur_g11
22:13:16  18  ,eur_g12
22:13:16  19  ,eur_g13
22:13:16  20  ,eur_g14
22:13:16  21  ,eur_g15
22:13:16  22  ,eur_g16
22:13:16  23  ,eur_g17
22:13:16  24  ,eur_g18
22:13:16  25  ,eur_g19
22:13:16  26  ,eur_g20
22:13:16  27  ,eur_g21
22:13:16  28  ,eur_g22
22:13:16  29  ,eur_g23
22:13:16  30  ,eur_g24
22:13:16  31  ,eur_g25
22:13:16  32  ,eur_g26
22:13:16  33  ,eur_g27
22:13:16  34  ,eur_g28
22:13:16  35  ,eur_g29
22:13:16  36  ,eur_g30
22:13:16  37  ,eur_g31
22:13:16  38  ,eur_g32
22:13:16  39  ,eur_g33
22:13:16  40  ,eur_g34
22:13:16  41  ,eur_g35
22:13:16  42  ,eur_g36
22:13:16  43  ,eur_g37
22:13:16  44  ,eur_g38
22:13:16  45  ,eur_g39
22:13:16  46  ,eur_g40
22:13:16  47  ,eur_g41
22:13:16  48  ,aud_g00
22:13:16  49  ,aud_g01
22:13:16  50  ,aud_g02
22:13:16  51  ,aud_g03
22:13:16  52  ,aud_g04
22:13:16  53  ,aud_g05
22:13:16  54  ,aud_g06
22:13:16  55  ,aud_g07
22:13:16  56  ,aud_g08
22:13:16  57  ,aud_g09
22:13:16  58  ,aud_g10
22:13:16  59  ,aud_g11
22:13:16  60  ,aud_g12
22:13:16  61  ,aud_g13
22:13:16  62  ,aud_g14
22:13:16  63  ,aud_g15
22:13:16  64  ,aud_g16
22:13:16  65  ,aud_g17
22:13:16  66  ,aud_g18
22:13:16  67  ,aud_g19
22:13:16  68  ,aud_g20
22:13:16  69  ,aud_g21
22:13:16  70  ,aud_g22
22:13:16  71  ,aud_g23
22:13:16  72  ,aud_g24
22:13:16  73  ,aud_g25
22:13:16  74  ,aud_g26
22:13:16  75  ,aud_g27
22:13:16  76  ,aud_g28
22:13:16  77  ,aud_g29
22:13:16  78  ,aud_g30
22:13:16  79  ,aud_g31
22:13:16  80  ,aud_g32
22:13:16  81  ,aud_g33
22:13:16  82  ,aud_g34
22:13:16  83  ,aud_g35
22:13:16  84  ,aud_g36
22:13:16  85  ,aud_g37
22:13:16  86  ,aud_g38
22:13:16  87  ,aud_g39
22:13:16  88  ,aud_g40
22:13:16  89  ,aud_g41
22:13:16  90  ,gbp_g00
22:13:16  91  ,gbp_g01
22:13:16  92  ,gbp_g02
22:13:16  93  ,gbp_g03
22:13:16  94  ,gbp_g04
22:13:16  95  ,gbp_g05
22:13:16  96  ,gbp_g06
22:13:16  97  ,gbp_g07
22:13:16  98  ,gbp_g08
22:13:16  99  ,gbp_g09
22:13:16 100  ,gbp_g10
22:13:16 101  ,gbp_g11
22:13:16 102  ,gbp_g12
22:13:16 103  ,gbp_g13
22:13:16 104  ,gbp_g14
22:13:16 105  ,gbp_g15
22:13:16 106  ,gbp_g16
22:13:16 107  ,gbp_g17
22:13:16 108  ,gbp_g18
22:13:16 109  ,gbp_g19
22:13:16 110  ,gbp_g20
22:13:16 111  ,gbp_g21
22:13:16 112  ,gbp_g22
22:13:16 113  ,gbp_g23
22:13:16 114  ,gbp_g24
22:13:16 115  ,gbp_g25
22:13:16 116  ,gbp_g26
22:13:16 117  ,gbp_g27
22:13:16 118  ,gbp_g28
22:13:16 119  ,gbp_g29
22:13:16 120  ,gbp_g30
22:13:16 121  ,gbp_g31
22:13:16 122  ,gbp_g32
22:13:16 123  ,gbp_g33
22:13:16 124  ,gbp_g34
22:13:16 125  ,gbp_g35
22:13:16 126  ,gbp_g36
22:13:16 127  ,gbp_g37
22:13:16 128  ,gbp_g38
22:13:16 129  ,gbp_g39
22:13:16 130  ,gbp_g40
22:13:16 131  ,gbp_g41
22:13:16 132  ,jpy_g00
22:13:16 133  ,jpy_g01
22:13:16 134  ,jpy_g02
22:13:16 135  ,jpy_g03
22:13:16 136  ,jpy_g04
22:13:16 137  ,jpy_g05
22:13:16 138  ,jpy_g06
22:13:16 139  ,jpy_g07
22:13:16 140  ,jpy_g08
22:13:16 141  ,jpy_g09
22:13:16 142  ,jpy_g10
22:13:16 143  ,jpy_g11
22:13:16 144  ,jpy_g12
22:13:16 145  ,jpy_g13
22:13:16 146  ,jpy_g14
22:13:16 147  ,jpy_g15
22:13:16 148  ,jpy_g16
22:13:16 149  ,jpy_g17
22:13:16 150  ,jpy_g18
22:13:16 151  ,jpy_g19
22:13:16 152  ,jpy_g20
22:13:16 153  ,jpy_g21
22:13:16 154  ,jpy_g22
22:13:16 155  ,jpy_g23
22:13:16 156  ,jpy_g24
22:13:16 157  ,jpy_g25
22:13:16 158  ,jpy_g26
22:13:16 159  ,jpy_g27
22:13:16 160  ,jpy_g28
22:13:16 161  ,jpy_g29
22:13:16 162  ,jpy_g30
22:13:16 163  ,jpy_g31
22:13:16 164  ,jpy_g32
22:13:16 165  ,jpy_g33
22:13:16 166  ,jpy_g34
22:13:16 167  ,jpy_g35
22:13:16 168  ,jpy_g36
22:13:16 169  ,jpy_g37
22:13:16 170  ,jpy_g38
22:13:16 171  ,jpy_g39
22:13:16 172  ,jpy_g40
22:13:16 173  ,jpy_g41
22:13:16 174  ,cad_g00
22:13:16 175  ,cad_g01
22:13:16 176  ,cad_g02
22:13:16 177  ,cad_g03
22:13:16 178  ,cad_g04
22:13:16 179  ,cad_g05
22:13:16 180  ,cad_g06
22:13:16 181  ,cad_g07
22:13:16 182  ,cad_g08
22:13:16 183  ,cad_g09
22:13:16 184  ,cad_g10
22:13:16 185  ,cad_g11
22:13:16 186  ,cad_g12
22:13:16 187  ,cad_g13
22:13:16 188  ,cad_g14
22:13:16 189  ,cad_g15
22:13:16 190  ,cad_g16
22:13:16 191  ,cad_g17
22:13:16 192  ,cad_g18
22:13:16 193  ,cad_g19
22:13:16 194  ,cad_g20
22:13:16 195  ,cad_g21
22:13:16 196  ,cad_g22
22:13:16 197  ,cad_g23
22:13:16 198  ,cad_g24
22:13:16 199  ,cad_g25
22:13:16 200  ,cad_g26
22:13:16 201  ,cad_g27
22:13:16 202  ,cad_g28
22:13:16 203  ,cad_g29
22:13:16 204  ,cad_g30
22:13:16 205  ,cad_g31
22:13:16 206  ,cad_g32
22:13:16 207  ,cad_g33
22:13:16 208  ,cad_g34
22:13:16 209  ,cad_g35
22:13:16 210  ,cad_g36
22:13:16 211  ,cad_g37
22:13:16 212  ,cad_g38
22:13:16 213  ,cad_g39
22:13:16 214  ,cad_g40
22:13:16 215  ,cad_g41
22:13:16 216  ,chf_g00
22:13:16 217  ,chf_g01
22:13:16 218  ,chf_g02
22:13:16 219  ,chf_g03
22:13:16 220  ,chf_g04
22:13:16 221  ,chf_g05
22:13:16 222  ,chf_g06
22:13:16 223  ,chf_g07
22:13:16 224  ,chf_g08
22:13:16 225  ,chf_g09
22:13:16 226  ,chf_g10
22:13:16 227  ,chf_g11
22:13:16 228  ,chf_g12
22:13:16 229  ,chf_g13
22:13:16 230  ,chf_g14
22:13:16 231  ,chf_g15
22:13:16 232  ,chf_g16
22:13:16 233  ,chf_g17
22:13:16 234  ,chf_g18
22:13:16 235  ,chf_g19
22:13:16 236  ,chf_g20
22:13:16 237  ,chf_g21
22:13:16 238  ,chf_g22
22:13:16 239  ,chf_g23
22:13:16 240  ,chf_g24
22:13:16 241  ,chf_g25
22:13:16 242  ,chf_g26
22:13:16 243  ,chf_g27
22:13:16 244  ,chf_g28
22:13:16 245  ,chf_g29
22:13:16 246  ,chf_g30
22:13:16 247  ,chf_g31
22:13:16 248  ,chf_g32
22:13:16 249  ,chf_g33
22:13:16 250  ,chf_g34
22:13:16 251  ,chf_g35
22:13:16 252  ,chf_g36
22:13:16 253  ,chf_g37
22:13:16 254  ,chf_g38
22:13:16 255  ,chf_g39
22:13:16 256  ,chf_g40
22:13:16 257  ,chf_g41
22:13:16 258  FROM aud_ms6 m
22:13:16 259  WHERE m.ydate = '&1'||' '||'&2'
22:13:16 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'21:55:00'

View created.

Elapsed: 00:00:00.13
22:13:17 SQL> 
22:13:17 SQL> -- rpt
22:13:17 SQL> -- We should see just 1 row:
22:13:17 SQL> 
22:13:17 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
22:13:17 SQL> 
22:13:17 SQL> -- Build the model:
22:13:17 SQL> CREATE OR REPLACE VIEW bme AS
22:13:17   2  SELECT
22:13:17   3  'aud'||m.ydate prdate
22:13:17   4  ,gattn
22:13:17   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:13:17   6  ,eur_g00
22:13:17   7  ,eur_g01
22:13:17   8  ,eur_g02
22:13:17   9  ,eur_g03
22:13:17  10  ,eur_g04
22:13:17  11  ,eur_g05
22:13:17  12  ,eur_g06
22:13:17  13  ,eur_g07
22:13:17  14  ,eur_g08
22:13:17  15  ,eur_g09
22:13:17  16  ,eur_g10
22:13:17  17  ,eur_g11
22:13:17  18  ,eur_g12
22:13:17  19  ,eur_g13
22:13:17  20  ,eur_g14
22:13:17  21  ,eur_g15
22:13:17  22  ,eur_g16
22:13:17  23  ,eur_g17
22:13:17  24  ,eur_g18
22:13:17  25  ,eur_g19
22:13:17  26  ,eur_g20
22:13:17  27  ,eur_g21
22:13:17  28  ,eur_g22
22:13:17  29  ,eur_g23
22:13:17  30  ,eur_g24
22:13:17  31  ,eur_g25
22:13:17  32  ,eur_g26
22:13:17  33  ,eur_g27
22:13:17  34  ,eur_g28
22:13:17  35  ,eur_g29
22:13:17  36  ,eur_g30
22:13:17  37  ,eur_g31
22:13:17  38  ,eur_g32
22:13:17  39  ,eur_g33
22:13:17  40  ,eur_g34
22:13:17  41  ,eur_g35
22:13:17  42  ,eur_g36
22:13:17  43  ,eur_g37
22:13:17  44  ,eur_g38
22:13:17  45  ,eur_g39
22:13:17  46  ,eur_g40
22:13:17  47  ,eur_g41
22:13:17  48  ,aud_g00
22:13:17  49  ,aud_g01
22:13:17  50  ,aud_g02
22:13:17  51  ,aud_g03
22:13:17  52  ,aud_g04
22:13:17  53  ,aud_g05
22:13:17  54  ,aud_g06
22:13:17  55  ,aud_g07
22:13:17  56  ,aud_g08
22:13:17  57  ,aud_g09
22:13:17  58  ,aud_g10
22:13:17  59  ,aud_g11
22:13:17  60  ,aud_g12
22:13:17  61  ,aud_g13
22:13:17  62  ,aud_g14
22:13:17  63  ,aud_g15
22:13:17  64  ,aud_g16
22:13:17  65  ,aud_g17
22:13:17  66  ,aud_g18
22:13:17  67  ,aud_g19
22:13:17  68  ,aud_g20
22:13:17  69  ,aud_g21
22:13:17  70  ,aud_g22
22:13:17  71  ,aud_g23
22:13:17  72  ,aud_g24
22:13:17  73  ,aud_g25
22:13:17  74  ,aud_g26
22:13:17  75  ,aud_g27
22:13:17  76  ,aud_g28
22:13:17  77  ,aud_g29
22:13:17  78  ,aud_g30
22:13:17  79  ,aud_g31
22:13:17  80  ,aud_g32
22:13:17  81  ,aud_g33
22:13:17  82  ,aud_g34
22:13:17  83  ,aud_g35
22:13:17  84  ,aud_g36
22:13:17  85  ,aud_g37
22:13:17  86  ,aud_g38
22:13:17  87  ,aud_g39
22:13:17  88  ,aud_g40
22:13:17  89  ,aud_g41
22:13:17  90  ,gbp_g00
22:13:17  91  ,gbp_g01
22:13:17  92  ,gbp_g02
22:13:17  93  ,gbp_g03
22:13:17  94  ,gbp_g04
22:13:17  95  ,gbp_g05
22:13:17  96  ,gbp_g06
22:13:17  97  ,gbp_g07
22:13:17  98  ,gbp_g08
22:13:17  99  ,gbp_g09
22:13:17 100  ,gbp_g10
22:13:17 101  ,gbp_g11
22:13:17 102  ,gbp_g12
22:13:17 103  ,gbp_g13
22:13:17 104  ,gbp_g14
22:13:17 105  ,gbp_g15
22:13:17 106  ,gbp_g16
22:13:17 107  ,gbp_g17
22:13:17 108  ,gbp_g18
22:13:17 109  ,gbp_g19
22:13:17 110  ,gbp_g20
22:13:17 111  ,gbp_g21
22:13:17 112  ,gbp_g22
22:13:17 113  ,gbp_g23
22:13:17 114  ,gbp_g24
22:13:17 115  ,gbp_g25
22:13:17 116  ,gbp_g26
22:13:17 117  ,gbp_g27
22:13:17 118  ,gbp_g28
22:13:17 119  ,gbp_g29
22:13:17 120  ,gbp_g30
22:13:17 121  ,gbp_g31
22:13:17 122  ,gbp_g32
22:13:17 123  ,gbp_g33
22:13:17 124  ,gbp_g34
22:13:17 125  ,gbp_g35
22:13:17 126  ,gbp_g36
22:13:17 127  ,gbp_g37
22:13:17 128  ,gbp_g38
22:13:17 129  ,gbp_g39
22:13:17 130  ,gbp_g40
22:13:17 131  ,gbp_g41
22:13:17 132  ,jpy_g00
22:13:17 133  ,jpy_g01
22:13:17 134  ,jpy_g02
22:13:17 135  ,jpy_g03
22:13:17 136  ,jpy_g04
22:13:17 137  ,jpy_g05
22:13:17 138  ,jpy_g06
22:13:17 139  ,jpy_g07
22:13:17 140  ,jpy_g08
22:13:17 141  ,jpy_g09
22:13:17 142  ,jpy_g10
22:13:17 143  ,jpy_g11
22:13:17 144  ,jpy_g12
22:13:17 145  ,jpy_g13
22:13:17 146  ,jpy_g14
22:13:17 147  ,jpy_g15
22:13:17 148  ,jpy_g16
22:13:17 149  ,jpy_g17
22:13:17 150  ,jpy_g18
22:13:17 151  ,jpy_g19
22:13:17 152  ,jpy_g20
22:13:17 153  ,jpy_g21
22:13:17 154  ,jpy_g22
22:13:17 155  ,jpy_g23
22:13:17 156  ,jpy_g24
22:13:17 157  ,jpy_g25
22:13:17 158  ,jpy_g26
22:13:17 159  ,jpy_g27
22:13:17 160  ,jpy_g28
22:13:17 161  ,jpy_g29
22:13:17 162  ,jpy_g30
22:13:17 163  ,jpy_g31
22:13:17 164  ,jpy_g32
22:13:17 165  ,jpy_g33
22:13:17 166  ,jpy_g34
22:13:17 167  ,jpy_g35
22:13:17 168  ,jpy_g36
22:13:17 169  ,jpy_g37
22:13:17 170  ,jpy_g38
22:13:17 171  ,jpy_g39
22:13:17 172  ,jpy_g40
22:13:17 173  ,jpy_g41
22:13:17 174  ,cad_g00
22:13:17 175  ,cad_g01
22:13:17 176  ,cad_g02
22:13:17 177  ,cad_g03
22:13:17 178  ,cad_g04
22:13:17 179  ,cad_g05
22:13:17 180  ,cad_g06
22:13:17 181  ,cad_g07
22:13:17 182  ,cad_g08
22:13:17 183  ,cad_g09
22:13:17 184  ,cad_g10
22:13:17 185  ,cad_g11
22:13:17 186  ,cad_g12
22:13:17 187  ,cad_g13
22:13:17 188  ,cad_g14
22:13:17 189  ,cad_g15
22:13:17 190  ,cad_g16
22:13:17 191  ,cad_g17
22:13:17 192  ,cad_g18
22:13:17 193  ,cad_g19
22:13:17 194  ,cad_g20
22:13:17 195  ,cad_g21
22:13:17 196  ,cad_g22
22:13:17 197  ,cad_g23
22:13:17 198  ,cad_g24
22:13:17 199  ,cad_g25
22:13:17 200  ,cad_g26
22:13:17 201  ,cad_g27
22:13:17 202  ,cad_g28
22:13:17 203  ,cad_g29
22:13:17 204  ,cad_g30
22:13:17 205  ,cad_g31
22:13:17 206  ,cad_g32
22:13:17 207  ,cad_g33
22:13:17 208  ,cad_g34
22:13:17 209  ,cad_g35
22:13:17 210  ,cad_g36
22:13:17 211  ,cad_g37
22:13:17 212  ,cad_g38
22:13:17 213  ,cad_g39
22:13:17 214  ,cad_g40
22:13:17 215  ,cad_g41
22:13:17 216  ,chf_g00
22:13:17 217  ,chf_g01
22:13:17 218  ,chf_g02
22:13:17 219  ,chf_g03
22:13:17 220  ,chf_g04
22:13:17 221  ,chf_g05
22:13:17 222  ,chf_g06
22:13:17 223  ,chf_g07
22:13:17 224  ,chf_g08
22:13:17 225  ,chf_g09
22:13:17 226  ,chf_g10
22:13:17 227  ,chf_g11
22:13:17 228  ,chf_g12
22:13:17 229  ,chf_g13
22:13:17 230  ,chf_g14
22:13:17 231  ,chf_g15
22:13:17 232  ,chf_g16
22:13:17 233  ,chf_g17
22:13:17 234  ,chf_g18
22:13:17 235  ,chf_g19
22:13:17 236  ,chf_g20
22:13:17 237  ,chf_g21
22:13:17 238  ,chf_g22
22:13:17 239  ,chf_g23
22:13:17 240  ,chf_g24
22:13:17 241  ,chf_g25
22:13:17 242  ,chf_g26
22:13:17 243  ,chf_g27
22:13:17 244  ,chf_g28
22:13:17 245  ,chf_g29
22:13:17 246  ,chf_g30
22:13:17 247  ,chf_g31
22:13:17 248  ,chf_g32
22:13:17 249  ,chf_g33
22:13:17 250  ,chf_g34
22:13:17 251  ,chf_g35
22:13:17 252  ,chf_g36
22:13:17 253  ,chf_g37
22:13:17 254  ,chf_g38
22:13:17 255  ,chf_g39
22:13:17 256  ,chf_g40
22:13:17 257  ,chf_g41
22:13:17 258  FROM aud_ms6 m
22:13:17 259  WHERE gattn IN('nup','up')
22:13:17 260  AND 1+m.ydate < '&1'||' '||'&2'
22:13:17 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'21:55:00'

View created.

Elapsed: 00:00:00.13
22:13:17 SQL> 
22:13:17 SQL> -- rpt
22:13:17 SQL> 
22:13:17 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13159
up	     6384

Elapsed: 00:00:00.04
22:13:17 SQL> 
22:13:17 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 21:50:00

Elapsed: 00:00:00.04
22:13:17 SQL> 
22:13:17 SQL> -- Now build model from bme and score sme
22:13:17 SQL> @score1gattn.sql
22:13:17 SQL> -- score1gattn.sql
22:13:17 SQL> 
22:13:17 SQL> -- Does the 1st SVM score
22:13:17 SQL> 
22:13:17 SQL> -- Fill up svmc_apply_prep
22:13:17 SQL> @score_gattn.sql
22:13:17 SQL> --
22:13:17 SQL> -- score_gattn.sql
22:13:17 SQL> --
22:13:17 SQL> 
22:13:17 SQL> -- usage: score_gattn.sql
22:13:17 SQL> 
22:13:17 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:13:17 SQL> 
22:13:17 SQL> DEFINE target	= 'gattn'
22:13:17 SQL> DEFINE model_name = 'forex14'
22:13:17 SQL> DEFINE bldtable	= 'bme'
22:13:17 SQL> DEFINE scoretable = 'sme'
22:13:17 SQL> DEFINE case_id	= 'prdate'
22:13:17 SQL> 
22:13:17 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:13:17 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:13:17 SQL> 
22:13:17 SQL> -- Builds an SVM model using pl/sql.
22:13:17 SQL> 
22:13:17 SQL> -----------------------------------------------------------------------
22:13:17 SQL> --			    BUILD THE MODEL
22:13:17 SQL> -----------------------------------------------------------------------
22:13:17 SQL> 
22:13:17 SQL> -- Cleanup old build data preparation objects for repeat runs
22:13:17 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
22:13:17 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:13:17 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
22:13:17 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
22:13:17 SQL> 
22:13:17 SQL> 
22:13:17 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:13:17 SQL> --
22:13:17 SQL> -- DROP	TABLE svmc_settings ;
22:13:17 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:13:17 SQL> -- DELETE svmc_settings;
22:13:17 SQL> 
22:13:17 SQL> -- The default classification algorithm is Naive Bayes. So override
22:13:17 SQL> -- this choice to SVM using a settings table.
22:13:17 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:13:17 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:13:17 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:13:17 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:13:17 SQL> -- models.
22:13:17 SQL> --
22:13:17 SQL> 
22:13:17 SQL> -- Do this once and then comment it out.
22:13:17 SQL> -- That makes script go faster.
22:13:17 SQL> -- BEGIN
22:13:17 SQL> -- -- Populate settings table
22:13:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:13:17 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:13:17 SQL> --
22:13:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:13:17 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:13:17 SQL> --
22:13:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:13:17 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:13:17 SQL> --   COMMIT;
22:13:17 SQL> -- END;
22:13:17 SQL> -- /
22:13:17 SQL> 
22:13:17 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
22:13:17 SQL> 
22:13:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:13:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:13:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:13:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:13:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:13:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:13:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:13:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:13:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:13:17 SQL> 
22:13:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:13:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:13:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:13:17 SQL> 
22:13:17 SQL> --------------------------------
22:13:17 SQL> -- PREPARE BUILD (TRAINING) DATA
22:13:17 SQL> --
22:13:17 SQL> 
22:13:17 SQL> -- 1. Missing Value treatment for all Predictors and
22:13:17 SQL> -- 2. Outlier Treatment and
22:13:17 SQL> -- 3. Normalization are performed below.
22:13:17 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:13:17 SQL> --    normalized here.
22:13:17 SQL> 
22:13:17 SQL> BEGIN
22:13:17   2  	-- Perform missing value treatment for all predictors
22:13:17   3  	-- create miss tables
22:13:17   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:13:17   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:13:17   6  
22:13:17   7  	-- populate miss tables
22:13:17   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:13:17   9  	  miss_table_name => 'svmc_miss_num',
22:13:17  10  	  data_table_name => '&bldtable',
22:13:17  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:13:17  12  
22:13:17  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:13:17  14  	  miss_table_name => 'svmc_miss_cat',
22:13:17  15  	  data_table_name => '&bldtable',
22:13:17  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:13:17  17  
22:13:17  18  	-- xform input data to replace missing values
22:13:17  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:13:17  20  	  miss_table_name => 'svmc_miss_num',
22:13:17  21  	  data_table_name => '&bldtable',
22:13:17  22  	  xform_view_name => 'xformed_build_miss_num');
22:13:17  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:13:17  24  	  miss_table_name => 'svmc_miss_cat',
22:13:17  25  	  data_table_name => '&bldtable',
22:13:17  26  	  xform_view_name => 'xformed_build_miss_cat');
22:13:17  27  
22:13:17  28  	-- Perform outlier treatment.
22:13:17  29  	-- create clip table
22:13:17  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:13:17  31  
22:13:17  32  	-- populate clip table
22:13:17  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:13:17  34  	  clip_table_name => 'svmc_clip',
22:13:17  35  	  data_table_name => '&bldtable',
22:13:17  36  	  tail_frac	  => 0.025,
22:13:17  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:13:17  38  
22:13:17  39  	-- xform input data to winsorized data
22:13:17  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:13:17  41  	  clip_table_name => 'svmc_clip',
22:13:17  42  	  data_table_name => '&bldtable',
22:13:17  43  	  xform_view_name => 'svmc_winsor');
22:13:17  44  
22:13:17  45  	-- create normalization table
22:13:17  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:13:17  47  
22:13:17  48  	-- populate normalization table based on winsorized data
22:13:17  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:13:17  50  	  norm_table_name => 'svmc_norm',
22:13:17  51  	  data_table_name => 'svmc_winsor',
22:13:17  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:13:17  53  
22:13:17  54  	-- normalize the original data
22:13:17  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:13:17  56  	  norm_table_name => 'svmc_norm',
22:13:17  57  	  data_table_name => '&bldtable',
22:13:17  58  	  xform_view_name => 'svmc_build_prep');
22:13:17  59  END;
22:13:17  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.11
22:13:35 SQL> 
22:13:35 SQL> ---------------------
22:13:35 SQL> -- CREATE A NEW MODEL
22:13:35 SQL> --
22:13:35 SQL> -- Cleanup old model with the same name for repeat runs
22:13:35 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:13:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:13:35   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.84
22:13:36 SQL> 
22:13:36 SQL> -- Build a new SVM Model
22:13:36 SQL> BEGIN
22:13:36   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:13:36   3  	  model_name	      => '&model_name',
22:13:36   4  	  mining_function     => dbms_data_mining.classification,
22:13:36   5  	  data_table_name     => 'svmc_build_prep',
22:13:36   6  	  case_id_column_name => '&case_id',
22:13:36   7  	  target_column_name  => '&target',
22:13:36   8  	  settings_table_name => 'svmc_settings');
22:13:36   9  END;
22:13:36  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.64
22:14:04 SQL> 
22:14:04 SQL> -----------------------------------------------------------------------
22:14:04 SQL> --			       APPLY/score THE MODEL
22:14:04 SQL> -----------------------------------------------------------------------
22:14:04 SQL> 
22:14:04 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:14:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:14:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:14:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
22:14:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:14:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:14:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:14:04 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:14:04   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:14:04   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:14:04 SQL> -----------------------
22:14:04 SQL> -- PREPARE SCORING DATA
22:14:04 SQL> --
22:14:04 SQL> -- If the data for model creation has been prepared, then the data
22:14:04 SQL> -- to be scored using the model must be prepared in the same manner
22:14:04 SQL> -- in order to obtain meaningful results.
22:14:04 SQL> --
22:14:04 SQL> -- 1. Missing Value treatment for all Predictors and
22:14:04 SQL> -- 2. Normalization
22:14:04 SQL> -- No outlier treatment will be performed during test and apply. The
22:14:04 SQL> -- normalization step is sufficient, since the normalization parameters
22:14:04 SQL> -- already capture the effects of outlier treatment done with build data.
22:14:04 SQL> --
22:14:04 SQL> BEGIN
22:14:04   2  	-- Xform Test data to replace missing values
22:14:04   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:14:04   4  	  miss_table_name => 'svmc_miss_num',
22:14:04   5  	  data_table_name => '&scoretable',
22:14:04   6  	  xform_view_name => 'xformed_apply_miss_num');
22:14:04   7  
22:14:04   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:14:04   9  	  miss_table_name => 'svmc_miss_cat',
22:14:04  10  	  data_table_name => '&scoretable',
22:14:04  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:14:04  12  
22:14:04  13  	-- Normalize the data to be scored
22:14:04  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:14:04  15  	  norm_table_name => 'svmc_norm',
22:14:04  16  	  data_table_name => '&scoretable',
22:14:04  17  	  xform_view_name => 'svmc_apply_prep');
22:14:04  18  END;
22:14:04  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
22:14:05 SQL> 
22:14:05 SQL> -- Use same model_name used in score_gattn.sql
22:14:05 SQL> DEFINE model_name = 'forex14'
22:14:05 SQL> 
22:14:05 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:14:05 SQL> 
22:14:05 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
22:14:05   2  SELECT
22:14:05   3  prdate
22:14:05   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:14:05   5  ,sysdate
22:14:05   6  ,SUBSTR(prdate,1,3)pair
22:14:05   7  ,SUBSTR(prdate,4,19)ydate
22:14:05   8  FROM svmc_apply_prep
22:14:05   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:14:05 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
