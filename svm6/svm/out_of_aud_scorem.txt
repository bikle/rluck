
SQL*Plus: Release 11.2.0.1.0 Production on Wed Jan 5 14:23:04 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

14:23:04 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
14:23:04 SQL> 14:23:04 SQL> @aud_score1day.sql  2011-01-05 14:00:00
14:23:04 SQL> --
14:23:04 SQL> -- aud_score1day.sql
14:23:04 SQL> --
14:23:04 SQL> 
14:23:04 SQL> CREATE OR REPLACE VIEW sme AS
14:23:04   2  SELECT
14:23:04   3  'aud'||m.ydate prdate
14:23:04   4  ,NULL gatt
14:23:04   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:23:04   6  ,eur_g00
14:23:04   7  ,eur_g01
14:23:04   8  ,eur_g02
14:23:04   9  ,eur_g03
14:23:04  10  ,eur_g04
14:23:04  11  ,eur_g05
14:23:04  12  ,eur_g06
14:23:04  13  ,eur_g07
14:23:04  14  ,eur_g08
14:23:04  15  ,eur_g09
14:23:04  16  ,eur_g10
14:23:04  17  ,eur_g11
14:23:04  18  ,eur_g12
14:23:04  19  ,eur_g13
14:23:04  20  ,eur_g14
14:23:04  21  ,eur_g15
14:23:04  22  ,eur_g16
14:23:04  23  ,eur_g17
14:23:04  24  ,eur_g18
14:23:04  25  ,eur_g19
14:23:04  26  ,eur_g20
14:23:04  27  ,eur_g21
14:23:04  28  ,eur_g22
14:23:04  29  ,eur_g23
14:23:04  30  ,eur_g24
14:23:04  31  ,eur_g25
14:23:04  32  ,eur_g26
14:23:04  33  ,eur_g27
14:23:04  34  ,eur_g28
14:23:04  35  ,eur_g29
14:23:04  36  ,eur_g30
14:23:04  37  ,eur_g31
14:23:04  38  ,eur_g32
14:23:04  39  ,eur_g33
14:23:04  40  ,eur_g34
14:23:04  41  ,eur_g35
14:23:04  42  ,eur_g36
14:23:04  43  ,eur_g37
14:23:04  44  ,eur_g38
14:23:04  45  ,eur_g39
14:23:04  46  ,eur_g40
14:23:04  47  ,eur_g41
14:23:04  48  ,aud_g00
14:23:04  49  ,aud_g01
14:23:04  50  ,aud_g02
14:23:04  51  ,aud_g03
14:23:04  52  ,aud_g04
14:23:04  53  ,aud_g05
14:23:04  54  ,aud_g06
14:23:04  55  ,aud_g07
14:23:04  56  ,aud_g08
14:23:04  57  ,aud_g09
14:23:04  58  ,aud_g10
14:23:04  59  ,aud_g11
14:23:04  60  ,aud_g12
14:23:04  61  ,aud_g13
14:23:04  62  ,aud_g14
14:23:04  63  ,aud_g15
14:23:04  64  ,aud_g16
14:23:04  65  ,aud_g17
14:23:04  66  ,aud_g18
14:23:04  67  ,aud_g19
14:23:04  68  ,aud_g20
14:23:04  69  ,aud_g21
14:23:04  70  ,aud_g22
14:23:04  71  ,aud_g23
14:23:04  72  ,aud_g24
14:23:04  73  ,aud_g25
14:23:04  74  ,aud_g26
14:23:04  75  ,aud_g27
14:23:04  76  ,aud_g28
14:23:04  77  ,aud_g29
14:23:04  78  ,aud_g30
14:23:04  79  ,aud_g31
14:23:04  80  ,aud_g32
14:23:04  81  ,aud_g33
14:23:04  82  ,aud_g34
14:23:04  83  ,aud_g35
14:23:04  84  ,aud_g36
14:23:04  85  ,aud_g37
14:23:04  86  ,aud_g38
14:23:04  87  ,aud_g39
14:23:04  88  ,aud_g40
14:23:04  89  ,aud_g41
14:23:04  90  ,gbp_g00
14:23:04  91  ,gbp_g01
14:23:04  92  ,gbp_g02
14:23:04  93  ,gbp_g03
14:23:04  94  ,gbp_g04
14:23:04  95  ,gbp_g05
14:23:04  96  ,gbp_g06
14:23:04  97  ,gbp_g07
14:23:04  98  ,gbp_g08
14:23:04  99  ,gbp_g09
14:23:04 100  ,gbp_g10
14:23:04 101  ,gbp_g11
14:23:04 102  ,gbp_g12
14:23:04 103  ,gbp_g13
14:23:04 104  ,gbp_g14
14:23:04 105  ,gbp_g15
14:23:04 106  ,gbp_g16
14:23:04 107  ,gbp_g17
14:23:04 108  ,gbp_g18
14:23:04 109  ,gbp_g19
14:23:04 110  ,gbp_g20
14:23:04 111  ,gbp_g21
14:23:04 112  ,gbp_g22
14:23:04 113  ,gbp_g23
14:23:04 114  ,gbp_g24
14:23:04 115  ,gbp_g25
14:23:04 116  ,gbp_g26
14:23:04 117  ,gbp_g27
14:23:04 118  ,gbp_g28
14:23:04 119  ,gbp_g29
14:23:04 120  ,gbp_g30
14:23:04 121  ,gbp_g31
14:23:04 122  ,gbp_g32
14:23:04 123  ,gbp_g33
14:23:04 124  ,gbp_g34
14:23:04 125  ,gbp_g35
14:23:04 126  ,gbp_g36
14:23:04 127  ,gbp_g37
14:23:04 128  ,gbp_g38
14:23:04 129  ,gbp_g39
14:23:04 130  ,gbp_g40
14:23:04 131  ,gbp_g41
14:23:04 132  ,jpy_g00
14:23:04 133  ,jpy_g01
14:23:04 134  ,jpy_g02
14:23:04 135  ,jpy_g03
14:23:04 136  ,jpy_g04
14:23:04 137  ,jpy_g05
14:23:04 138  ,jpy_g06
14:23:04 139  ,jpy_g07
14:23:04 140  ,jpy_g08
14:23:04 141  ,jpy_g09
14:23:04 142  ,jpy_g10
14:23:04 143  ,jpy_g11
14:23:04 144  ,jpy_g12
14:23:04 145  ,jpy_g13
14:23:04 146  ,jpy_g14
14:23:04 147  ,jpy_g15
14:23:04 148  ,jpy_g16
14:23:04 149  ,jpy_g17
14:23:04 150  ,jpy_g18
14:23:04 151  ,jpy_g19
14:23:04 152  ,jpy_g20
14:23:04 153  ,jpy_g21
14:23:04 154  ,jpy_g22
14:23:04 155  ,jpy_g23
14:23:04 156  ,jpy_g24
14:23:04 157  ,jpy_g25
14:23:04 158  ,jpy_g26
14:23:04 159  ,jpy_g27
14:23:04 160  ,jpy_g28
14:23:04 161  ,jpy_g29
14:23:04 162  ,jpy_g30
14:23:04 163  ,jpy_g31
14:23:04 164  ,jpy_g32
14:23:04 165  ,jpy_g33
14:23:04 166  ,jpy_g34
14:23:04 167  ,jpy_g35
14:23:04 168  ,jpy_g36
14:23:04 169  ,jpy_g37
14:23:04 170  ,jpy_g38
14:23:04 171  ,jpy_g39
14:23:04 172  ,jpy_g40
14:23:04 173  ,jpy_g41
14:23:04 174  ,cad_g00
14:23:04 175  ,cad_g01
14:23:04 176  ,cad_g02
14:23:04 177  ,cad_g03
14:23:04 178  ,cad_g04
14:23:04 179  ,cad_g05
14:23:04 180  ,cad_g06
14:23:04 181  ,cad_g07
14:23:04 182  ,cad_g08
14:23:04 183  ,cad_g09
14:23:04 184  ,cad_g10
14:23:04 185  ,cad_g11
14:23:04 186  ,cad_g12
14:23:04 187  ,cad_g13
14:23:04 188  ,cad_g14
14:23:04 189  ,cad_g15
14:23:04 190  ,cad_g16
14:23:04 191  ,cad_g17
14:23:04 192  ,cad_g18
14:23:04 193  ,cad_g19
14:23:04 194  ,cad_g20
14:23:04 195  ,cad_g21
14:23:04 196  ,cad_g22
14:23:04 197  ,cad_g23
14:23:04 198  ,cad_g24
14:23:04 199  ,cad_g25
14:23:04 200  ,cad_g26
14:23:04 201  ,cad_g27
14:23:04 202  ,cad_g28
14:23:04 203  ,cad_g29
14:23:04 204  ,cad_g30
14:23:04 205  ,cad_g31
14:23:04 206  ,cad_g32
14:23:04 207  ,cad_g33
14:23:04 208  ,cad_g34
14:23:04 209  ,cad_g35
14:23:04 210  ,cad_g36
14:23:04 211  ,cad_g37
14:23:04 212  ,cad_g38
14:23:04 213  ,cad_g39
14:23:04 214  ,cad_g40
14:23:04 215  ,cad_g41
14:23:04 216  ,chf_g00
14:23:04 217  ,chf_g01
14:23:04 218  ,chf_g02
14:23:04 219  ,chf_g03
14:23:04 220  ,chf_g04
14:23:04 221  ,chf_g05
14:23:04 222  ,chf_g06
14:23:04 223  ,chf_g07
14:23:04 224  ,chf_g08
14:23:04 225  ,chf_g09
14:23:04 226  ,chf_g10
14:23:04 227  ,chf_g11
14:23:04 228  ,chf_g12
14:23:04 229  ,chf_g13
14:23:04 230  ,chf_g14
14:23:04 231  ,chf_g15
14:23:04 232  ,chf_g16
14:23:04 233  ,chf_g17
14:23:04 234  ,chf_g18
14:23:04 235  ,chf_g19
14:23:04 236  ,chf_g20
14:23:04 237  ,chf_g21
14:23:04 238  ,chf_g22
14:23:04 239  ,chf_g23
14:23:04 240  ,chf_g24
14:23:04 241  ,chf_g25
14:23:04 242  ,chf_g26
14:23:04 243  ,chf_g27
14:23:04 244  ,chf_g28
14:23:04 245  ,chf_g29
14:23:04 246  ,chf_g30
14:23:04 247  ,chf_g31
14:23:04 248  ,chf_g32
14:23:04 249  ,chf_g33
14:23:04 250  ,chf_g34
14:23:04 251  ,chf_g35
14:23:04 252  ,chf_g36
14:23:04 253  ,chf_g37
14:23:04 254  ,chf_g38
14:23:04 255  ,chf_g39
14:23:04 256  ,chf_g40
14:23:04 257  ,chf_g41
14:23:04 258  FROM aud_ms6 m
14:23:04 259  WHERE m.ydate = '&1'||' '||'&2'
14:23:04 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'14:00:00'

View created.

Elapsed: 00:00:00.13
14:23:04 SQL> 
14:23:04 SQL> -- rpt
14:23:04 SQL> -- We should see just 1 row:
14:23:04 SQL> 
14:23:04 SQL> SELECT COUNT(prdate) FROM sme
14:23:04   2  
14:23:04 SQL> -- Build the model:
14:23:04 SQL> CREATE OR REPLACE VIEW bme AS
14:23:04   2  SELECT
14:23:04   3  'aud'||m.ydate prdate
14:23:04   4  ,gatt
14:23:04   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:23:04   6  ,eur_g00
14:23:04   7  ,eur_g01
14:23:04   8  ,eur_g02
14:23:04   9  ,eur_g03
14:23:04  10  ,eur_g04
14:23:04  11  ,eur_g05
14:23:04  12  ,eur_g06
14:23:04  13  ,eur_g07
14:23:04  14  ,eur_g08
14:23:04  15  ,eur_g09
14:23:04  16  ,eur_g10
14:23:04  17  ,eur_g11
14:23:04  18  ,eur_g12
14:23:04  19  ,eur_g13
14:23:04  20  ,eur_g14
14:23:04  21  ,eur_g15
14:23:04  22  ,eur_g16
14:23:04  23  ,eur_g17
14:23:04  24  ,eur_g18
14:23:04  25  ,eur_g19
14:23:04  26  ,eur_g20
14:23:04  27  ,eur_g21
14:23:04  28  ,eur_g22
14:23:04  29  ,eur_g23
14:23:04  30  ,eur_g24
14:23:04  31  ,eur_g25
14:23:04  32  ,eur_g26
14:23:04  33  ,eur_g27
14:23:04  34  ,eur_g28
14:23:04  35  ,eur_g29
14:23:04  36  ,eur_g30
14:23:04  37  ,eur_g31
14:23:04  38  ,eur_g32
14:23:04  39  ,eur_g33
14:23:04  40  ,eur_g34
14:23:04  41  ,eur_g35
14:23:04  42  ,eur_g36
14:23:04  43  ,eur_g37
14:23:04  44  ,eur_g38
14:23:04  45  ,eur_g39
14:23:04  46  ,eur_g40
14:23:04  47  ,eur_g41
14:23:04  48  ,aud_g00
14:23:04  49  ,aud_g01
14:23:04  50  ,aud_g02
14:23:04  51  ,aud_g03
14:23:04  52  ,aud_g04
14:23:04  53  ,aud_g05
14:23:04  54  ,aud_g06
14:23:04  55  ,aud_g07
14:23:04  56  ,aud_g08
14:23:04  57  ,aud_g09
14:23:04  58  ,aud_g10
14:23:04  59  ,aud_g11
14:23:04  60  ,aud_g12
14:23:04  61  ,aud_g13
14:23:04  62  ,aud_g14
14:23:04  63  ,aud_g15
14:23:04  64  ,aud_g16
14:23:04  65  ,aud_g17
14:23:04  66  ,aud_g18
14:23:04  67  ,aud_g19
14:23:04  68  ,aud_g20
14:23:04  69  ,aud_g21
14:23:04  70  ,aud_g22
14:23:04  71  ,aud_g23
14:23:04  72  ,aud_g24
14:23:04  73  ,aud_g25
14:23:04  74  ,aud_g26
14:23:04  75  ,aud_g27
14:23:04  76  ,aud_g28
14:23:04  77  ,aud_g29
14:23:04  78  ,aud_g30
14:23:04  79  ,aud_g31
14:23:04  80  ,aud_g32
14:23:04  81  ,aud_g33
14:23:04  82  ,aud_g34
14:23:04  83  ,aud_g35
14:23:04  84  ,aud_g36
14:23:04  85  ,aud_g37
14:23:04  86  ,aud_g38
14:23:04  87  ,aud_g39
14:23:04  88  ,aud_g40
14:23:04  89  ,aud_g41
14:23:04  90  ,gbp_g00
14:23:04  91  ,gbp_g01
14:23:04  92  ,gbp_g02
14:23:04  93  ,gbp_g03
14:23:04  94  ,gbp_g04
14:23:04  95  ,gbp_g05
14:23:04  96  ,gbp_g06
14:23:04  97  ,gbp_g07
14:23:04  98  ,gbp_g08
14:23:04  99  ,gbp_g09
14:23:04 100  ,gbp_g10
14:23:04 101  ,gbp_g11
14:23:04 102  ,gbp_g12
14:23:04 103  ,gbp_g13
14:23:04 104  ,gbp_g14
14:23:04 105  ,gbp_g15
14:23:04 106  ,gbp_g16
14:23:04 107  ,gbp_g17
14:23:04 108  ,gbp_g18
14:23:04 109  ,gbp_g19
14:23:04 110  ,gbp_g20
14:23:04 111  ,gbp_g21
14:23:04 112  ,gbp_g22
14:23:04 113  ,gbp_g23
14:23:04 114  ,gbp_g24
14:23:04 115  ,gbp_g25
14:23:04 116  ,gbp_g26
14:23:04 117  ,gbp_g27
14:23:04 118  ,gbp_g28
14:23:04 119  ,gbp_g29
14:23:04 120  ,gbp_g30
14:23:04 121  ,gbp_g31
14:23:04 122  ,gbp_g32
14:23:04 123  ,gbp_g33
14:23:04 124  ,gbp_g34
14:23:04 125  ,gbp_g35
14:23:04 126  ,gbp_g36
14:23:04 127  ,gbp_g37
14:23:04 128  ,gbp_g38
14:23:04 129  ,gbp_g39
14:23:04 130  ,gbp_g40
14:23:04 131  ,gbp_g41
14:23:04 132  ,jpy_g00
14:23:04 133  ,jpy_g01
14:23:04 134  ,jpy_g02
14:23:04 135  ,jpy_g03
14:23:04 136  ,jpy_g04
14:23:04 137  ,jpy_g05
14:23:04 138  ,jpy_g06
14:23:04 139  ,jpy_g07
14:23:04 140  ,jpy_g08
14:23:04 141  ,jpy_g09
14:23:04 142  ,jpy_g10
14:23:04 143  ,jpy_g11
14:23:04 144  ,jpy_g12
14:23:04 145  ,jpy_g13
14:23:04 146  ,jpy_g14
14:23:04 147  ,jpy_g15
14:23:04 148  ,jpy_g16
14:23:04 149  ,jpy_g17
14:23:04 150  ,jpy_g18
14:23:04 151  ,jpy_g19
14:23:04 152  ,jpy_g20
14:23:04 153  ,jpy_g21
14:23:04 154  ,jpy_g22
14:23:04 155  ,jpy_g23
14:23:04 156  ,jpy_g24
14:23:04 157  ,jpy_g25
14:23:04 158  ,jpy_g26
14:23:04 159  ,jpy_g27
14:23:04 160  ,jpy_g28
14:23:04 161  ,jpy_g29
14:23:04 162  ,jpy_g30
14:23:04 163  ,jpy_g31
14:23:04 164  ,jpy_g32
14:23:04 165  ,jpy_g33
14:23:04 166  ,jpy_g34
14:23:04 167  ,jpy_g35
14:23:04 168  ,jpy_g36
14:23:04 169  ,jpy_g37
14:23:04 170  ,jpy_g38
14:23:04 171  ,jpy_g39
14:23:04 172  ,jpy_g40
14:23:04 173  ,jpy_g41
14:23:04 174  ,cad_g00
14:23:04 175  ,cad_g01
14:23:04 176  ,cad_g02
14:23:04 177  ,cad_g03
14:23:04 178  ,cad_g04
14:23:04 179  ,cad_g05
14:23:04 180  ,cad_g06
14:23:04 181  ,cad_g07
14:23:04 182  ,cad_g08
14:23:04 183  ,cad_g09
14:23:04 184  ,cad_g10
14:23:04 185  ,cad_g11
14:23:04 186  ,cad_g12
14:23:04 187  ,cad_g13
14:23:04 188  ,cad_g14
14:23:04 189  ,cad_g15
14:23:04 190  ,cad_g16
14:23:04 191  ,cad_g17
14:23:04 192  ,cad_g18
14:23:04 193  ,cad_g19
14:23:04 194  ,cad_g20
14:23:04 195  ,cad_g21
14:23:04 196  ,cad_g22
14:23:04 197  ,cad_g23
14:23:04 198  ,cad_g24
14:23:04 199  ,cad_g25
14:23:04 200  ,cad_g26
14:23:04 201  ,cad_g27
14:23:04 202  ,cad_g28
14:23:04 203  ,cad_g29
14:23:04 204  ,cad_g30
14:23:04 205  ,cad_g31
14:23:04 206  ,cad_g32
14:23:04 207  ,cad_g33
14:23:04 208  ,cad_g34
14:23:04 209  ,cad_g35
14:23:04 210  ,cad_g36
14:23:04 211  ,cad_g37
14:23:04 212  ,cad_g38
14:23:04 213  ,cad_g39
14:23:04 214  ,cad_g40
14:23:04 215  ,cad_g41
14:23:04 216  ,chf_g00
14:23:04 217  ,chf_g01
14:23:04 218  ,chf_g02
14:23:04 219  ,chf_g03
14:23:04 220  ,chf_g04
14:23:04 221  ,chf_g05
14:23:04 222  ,chf_g06
14:23:04 223  ,chf_g07
14:23:04 224  ,chf_g08
14:23:04 225  ,chf_g09
14:23:04 226  ,chf_g10
14:23:04 227  ,chf_g11
14:23:04 228  ,chf_g12
14:23:04 229  ,chf_g13
14:23:04 230  ,chf_g14
14:23:04 231  ,chf_g15
14:23:04 232  ,chf_g16
14:23:04 233  ,chf_g17
14:23:04 234  ,chf_g18
14:23:04 235  ,chf_g19
14:23:04 236  ,chf_g20
14:23:04 237  ,chf_g21
14:23:04 238  ,chf_g22
14:23:04 239  ,chf_g23
14:23:04 240  ,chf_g24
14:23:04 241  ,chf_g25
14:23:04 242  ,chf_g26
14:23:04 243  ,chf_g27
14:23:04 244  ,chf_g28
14:23:04 245  ,chf_g29
14:23:04 246  ,chf_g30
14:23:04 247  ,chf_g31
14:23:04 248  ,chf_g32
14:23:04 249  ,chf_g33
14:23:04 250  ,chf_g34
14:23:04 251  ,chf_g35
14:23:04 252  ,chf_g36
14:23:04 253  ,chf_g37
14:23:04 254  ,chf_g38
14:23:04 255  ,chf_g39
14:23:04 256  ,chf_g40
14:23:04 257  ,chf_g41
14:23:04 258  FROM aud_ms6 m
14:23:04 259  WHERE gatt IN('nup','up')
14:23:04 260  AND 1+m.ydate < '&1'||' '||'&2'
14:23:04 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'14:00:00'

View created.

Elapsed: 00:00:00.13
14:23:05 SQL> 
14:23:05 SQL> -- rpt
14:23:05 SQL> 
14:23:05 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
14:23:05   2  
14:23:05 SQL> SELECT MAX(prdate) FROM bme
14:23:05   2  
14:23:05 SQL> -- Now build model from bme and score sme
14:23:05 SQL> @score1.sql
14:23:05 SQL> -- score1.sql
14:23:05 SQL> 
14:23:05 SQL> -- Does the 1st SVM score
14:23:05 SQL> 
14:23:05 SQL> -- Fill up svmc_apply_prep
14:23:05 SQL> @score.sql
14:23:05 SQL> --
14:23:05 SQL> -- score.sql
14:23:05 SQL> --
14:23:05 SQL> 
14:23:05 SQL> -- usage: score.sql
14:23:05 SQL> 
14:23:05 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
14:23:05 SQL> 
14:23:05 SQL> DEFINE target	= 'gatt'
14:23:05 SQL> DEFINE model_name = 'forex15'
14:23:05 SQL> DEFINE bldtable	= 'bme'
14:23:05 SQL> DEFINE scoretable = 'sme'
14:23:05 SQL> DEFINE case_id	= 'prdate'
14:23:05 SQL> 
14:23:05 SQL> -- Define a variable to help me exclude some columns from some data mining calls
14:23:05 SQL> DEFINE exclude1 = "'&target','&case_id'"
14:23:05 SQL> 
14:23:05 SQL> -- Builds an SVM model using pl/sql.
14:23:05 SQL> 
14:23:05 SQL> -----------------------------------------------------------------------
14:23:05 SQL> --			    BUILD THE MODEL
14:23:05 SQL> -----------------------------------------------------------------------
14:23:05 SQL> 
14:23:05 SQL> -- Cleanup old build data preparation objects for repeat runs
14:23:05 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
14:23:05 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
14:23:05 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
14:23:05 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
14:23:05 SQL> 
14:23:05 SQL> 
14:23:05 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
14:23:05 SQL> --
14:23:05 SQL> -- DROP	TABLE svmc_settings ;
14:23:05 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
14:23:05 SQL> -- DELETE svmc_settings;
14:23:05 SQL> 
14:23:05 SQL> -- The default classification algorithm is Naive Bayes. So override
14:23:05 SQL> -- this choice to SVM using a settings table.
14:23:05 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
14:23:05 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
14:23:05 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
14:23:05 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
14:23:05 SQL> -- models.
14:23:05 SQL> --
14:23:05 SQL> 
14:23:05 SQL> -- Do this once and then comment it out.
14:23:05 SQL> -- That makes script go faster.
14:23:05 SQL> -- BEGIN
14:23:05 SQL> -- -- Populate settings table
14:23:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:23:05 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
14:23:05 SQL> --
14:23:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:23:05 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
14:23:05 SQL> --
14:23:05 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:23:05 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
14:23:05 SQL> --   COMMIT;
14:23:05 SQL> -- END;
14:23:05 SQL> -- /
14:23:05 SQL> 
14:23:05 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
14:23:05 SQL> 
14:23:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
14:23:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:23:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:23:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
14:23:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:23:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:23:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
14:23:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:23:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:23:05 SQL> 
14:23:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
14:23:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:23:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:23:05 SQL> 
14:23:05 SQL> --------------------------------
14:23:05 SQL> -- PREPARE BUILD (TRAINING) DATA
14:23:05 SQL> --
14:23:05 SQL> 
14:23:05 SQL> -- 1. Missing Value treatment for all Predictors and
14:23:05 SQL> -- 2. Outlier Treatment and
14:23:05 SQL> -- 3. Normalization are performed below.
14:23:05 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
14:23:05 SQL> --    normalized here.
14:23:05 SQL> 
14:23:05 SQL> BEGIN
14:23:05   2  	-- Perform missing value treatment for all predictors
14:23:05   3  	-- create miss tables
14:23:05   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
14:23:05   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
14:23:05   6  
14:23:05   7  	-- populate miss tables
14:23:05   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
14:23:05   9  	  miss_table_name => 'svmc_miss_num',
14:23:05  10  	  data_table_name => '&bldtable',
14:23:05  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:23:05  12  
14:23:05  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
14:23:05  14  	  miss_table_name => 'svmc_miss_cat',
14:23:05  15  	  data_table_name => '&bldtable',
14:23:05  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:23:05  17  
14:23:05  18  	-- xform input data to replace missing values
14:23:05  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:23:05  20  	  miss_table_name => 'svmc_miss_num',
14:23:05  21  	  data_table_name => '&bldtable',
14:23:05  22  	  xform_view_name => 'xformed_build_miss_num');
14:23:05  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:23:05  24  	  miss_table_name => 'svmc_miss_cat',
14:23:05  25  	  data_table_name => '&bldtable',
14:23:05  26  	  xform_view_name => 'xformed_build_miss_cat');
14:23:05  27  
14:23:05  28  	-- Perform outlier treatment.
14:23:05  29  	-- create clip table
14:23:05  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
14:23:05  31  
14:23:05  32  	-- populate clip table
14:23:05  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
14:23:05  34  	  clip_table_name => 'svmc_clip',
14:23:05  35  	  data_table_name => '&bldtable',
14:23:05  36  	  tail_frac	  => 0.025,
14:23:05  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:23:05  38  
14:23:05  39  	-- xform input data to winsorized data
14:23:05  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
14:23:05  41  	  clip_table_name => 'svmc_clip',
14:23:05  42  	  data_table_name => '&bldtable',
14:23:05  43  	  xform_view_name => 'svmc_winsor');
14:23:05  44  
14:23:05  45  	-- create normalization table
14:23:05  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
14:23:05  47  
14:23:05  48  	-- populate normalization table based on winsorized data
14:23:05  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
14:23:05  50  	  norm_table_name => 'svmc_norm',
14:23:05  51  	  data_table_name => 'svmc_winsor',
14:23:05  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:23:05  53  
14:23:05  54  	-- normalize the original data
14:23:05  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:23:05  56  	  norm_table_name => 'svmc_norm',
14:23:05  57  	  data_table_name => '&bldtable',
14:23:05  58  	  xform_view_name => 'svmc_build_prep');
14:23:05  59  END;
14:23:05  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.79
14:23:24 SQL> 
14:23:24 SQL> ---------------------
14:23:24 SQL> -- CREATE A NEW MODEL
14:23:24 SQL> --
14:23:24 SQL> -- Cleanup old model with the same name for repeat runs
14:23:24 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
14:23:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:23:24   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.55
14:23:24 SQL> 
14:23:24 SQL> -- Build a new SVM Model
14:23:24 SQL> BEGIN
14:23:24   2  	DBMS_DATA_MINING.CREATE_MODEL(
14:23:24   3  	  model_name	      => '&model_name',
14:23:24   4  	  mining_function     => dbms_data_mining.classification,
14:23:24   5  	  data_table_name     => 'svmc_build_prep',
14:23:24   6  	  case_id_column_name => '&case_id',
14:23:24   7  	  target_column_name  => '&target',
14:23:24   8  	  settings_table_name => 'svmc_settings');
14:23:24   9  END;
14:23:24  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.77
14:23:51 SQL> 
14:23:51 SQL> -----------------------------------------------------------------------
14:23:51 SQL> --			       APPLY/score THE MODEL
14:23:51 SQL> -----------------------------------------------------------------------
14:23:51 SQL> 
14:23:51 SQL> -- Cleanup old scoring data preparation objects for repeat runs
14:23:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
14:23:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:23:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
14:23:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
14:23:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:23:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:23:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
14:23:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:23:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:23:51 SQL> -----------------------
14:23:51 SQL> -- PREPARE SCORING DATA
14:23:51 SQL> --
14:23:51 SQL> -- If the data for model creation has been prepared, then the data
14:23:51 SQL> -- to be scored using the model must be prepared in the same manner
14:23:51 SQL> -- in order to obtain meaningful results.
14:23:51 SQL> --
14:23:51 SQL> -- 1. Missing Value treatment for all Predictors and
14:23:51 SQL> -- 2. Normalization
14:23:51 SQL> -- No outlier treatment will be performed during test and apply. The
14:23:51 SQL> -- normalization step is sufficient, since the normalization parameters
14:23:51 SQL> -- already capture the effects of outlier treatment done with build data.
14:23:51 SQL> --
14:23:51 SQL> BEGIN
14:23:51   2  	-- Xform Test data to replace missing values
14:23:51   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:23:51   4  	  miss_table_name => 'svmc_miss_num',
14:23:51   5  	  data_table_name => '&scoretable',
14:23:51   6  	  xform_view_name => 'xformed_apply_miss_num');
14:23:51   7  
14:23:51   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:23:51   9  	  miss_table_name => 'svmc_miss_cat',
14:23:51  10  	  data_table_name => '&scoretable',
14:23:51  11  	  xform_view_name => 'xformed_apply_miss_cat');
14:23:51  12  
14:23:51  13  	-- Normalize the data to be scored
14:23:51  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:23:51  15  	  norm_table_name => 'svmc_norm',
14:23:51  16  	  data_table_name => '&scoretable',
14:23:51  17  	  xform_view_name => 'svmc_apply_prep');
14:23:51  18  END;
14:23:51  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.33
14:23:52 SQL> 
14:23:52 SQL> -- Use same model_name used in score.sql
14:23:52 SQL> DEFINE model_name = 'forex15'
14:23:52 SQL> 
14:23:52 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
14:23:52 SQL> 
14:23:52 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
14:23:52 SQL> 
14:23:52 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
14:23:52   2  SELECT
14:23:52   3  prdate
14:23:52   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
14:23:52   5  ,sysdate
14:23:52   6  ,SUBSTR(prdate,1,3)pair
14:23:52   7  ,SUBSTR(prdate,4,19)ydate
14:23:52   8  FROM svmc_apply_prep
14:23:52   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
14:23:53 SQL> @aud_score1day.sql  2011-01-05 14:05:00
14:23:53 SQL> --
14:23:53 SQL> -- aud_score1day.sql
14:23:53 SQL> --
14:23:53 SQL> 
14:23:53 SQL> CREATE OR REPLACE VIEW sme AS
14:23:53   2  SELECT
14:23:53   3  'aud'||m.ydate prdate
14:23:53   4  ,NULL gatt
14:23:53   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:23:53   6  ,eur_g00
14:23:53   7  ,eur_g01
14:23:53   8  ,eur_g02
14:23:53   9  ,eur_g03
14:23:53  10  ,eur_g04
14:23:53  11  ,eur_g05
14:23:53  12  ,eur_g06
14:23:53  13  ,eur_g07
14:23:53  14  ,eur_g08
14:23:53  15  ,eur_g09
14:23:53  16  ,eur_g10
14:23:53  17  ,eur_g11
14:23:53  18  ,eur_g12
14:23:53  19  ,eur_g13
14:23:53  20  ,eur_g14
14:23:53  21  ,eur_g15
14:23:53  22  ,eur_g16
14:23:53  23  ,eur_g17
14:23:53  24  ,eur_g18
14:23:53  25  ,eur_g19
14:23:53  26  ,eur_g20
14:23:53  27  ,eur_g21
14:23:53  28  ,eur_g22
14:23:53  29  ,eur_g23
14:23:53  30  ,eur_g24
14:23:53  31  ,eur_g25
14:23:53  32  ,eur_g26
14:23:53  33  ,eur_g27
14:23:53  34  ,eur_g28
14:23:53  35  ,eur_g29
14:23:53  36  ,eur_g30
14:23:53  37  ,eur_g31
14:23:53  38  ,eur_g32
14:23:53  39  ,eur_g33
14:23:53  40  ,eur_g34
14:23:53  41  ,eur_g35
14:23:53  42  ,eur_g36
14:23:53  43  ,eur_g37
14:23:53  44  ,eur_g38
14:23:53  45  ,eur_g39
14:23:53  46  ,eur_g40
14:23:53  47  ,eur_g41
14:23:53  48  ,aud_g00
14:23:53  49  ,aud_g01
14:23:53  50  ,aud_g02
14:23:53  51  ,aud_g03
14:23:53  52  ,aud_g04
14:23:53  53  ,aud_g05
14:23:53  54  ,aud_g06
14:23:53  55  ,aud_g07
14:23:53  56  ,aud_g08
14:23:53  57  ,aud_g09
14:23:53  58  ,aud_g10
14:23:53  59  ,aud_g11
14:23:53  60  ,aud_g12
14:23:53  61  ,aud_g13
14:23:53  62  ,aud_g14
14:23:53  63  ,aud_g15
14:23:53  64  ,aud_g16
14:23:53  65  ,aud_g17
14:23:53  66  ,aud_g18
14:23:53  67  ,aud_g19
14:23:53  68  ,aud_g20
14:23:53  69  ,aud_g21
14:23:53  70  ,aud_g22
14:23:53  71  ,aud_g23
14:23:53  72  ,aud_g24
14:23:53  73  ,aud_g25
14:23:53  74  ,aud_g26
14:23:53  75  ,aud_g27
14:23:53  76  ,aud_g28
14:23:53  77  ,aud_g29
14:23:53  78  ,aud_g30
14:23:53  79  ,aud_g31
14:23:53  80  ,aud_g32
14:23:53  81  ,aud_g33
14:23:53  82  ,aud_g34
14:23:53  83  ,aud_g35
14:23:53  84  ,aud_g36
14:23:53  85  ,aud_g37
14:23:53  86  ,aud_g38
14:23:53  87  ,aud_g39
14:23:53  88  ,aud_g40
14:23:53  89  ,aud_g41
14:23:53  90  ,gbp_g00
14:23:53  91  ,gbp_g01
14:23:53  92  ,gbp_g02
14:23:53  93  ,gbp_g03
14:23:53  94  ,gbp_g04
14:23:53  95  ,gbp_g05
14:23:53  96  ,gbp_g06
14:23:53  97  ,gbp_g07
14:23:53  98  ,gbp_g08
14:23:53  99  ,gbp_g09
14:23:53 100  ,gbp_g10
14:23:53 101  ,gbp_g11
14:23:53 102  ,gbp_g12
14:23:53 103  ,gbp_g13
14:23:53 104  ,gbp_g14
14:23:53 105  ,gbp_g15
14:23:53 106  ,gbp_g16
14:23:53 107  ,gbp_g17
14:23:53 108  ,gbp_g18
14:23:53 109  ,gbp_g19
14:23:53 110  ,gbp_g20
14:23:53 111  ,gbp_g21
14:23:53 112  ,gbp_g22
14:23:53 113  ,gbp_g23
14:23:53 114  ,gbp_g24
14:23:53 115  ,gbp_g25
14:23:53 116  ,gbp_g26
14:23:53 117  ,gbp_g27
14:23:53 118  ,gbp_g28
14:23:53 119  ,gbp_g29
14:23:53 120  ,gbp_g30
14:23:53 121  ,gbp_g31
14:23:53 122  ,gbp_g32
14:23:53 123  ,gbp_g33
14:23:53 124  ,gbp_g34
14:23:53 125  ,gbp_g35
14:23:53 126  ,gbp_g36
14:23:53 127  ,gbp_g37
14:23:53 128  ,gbp_g38
14:23:53 129  ,gbp_g39
14:23:53 130  ,gbp_g40
14:23:53 131  ,gbp_g41
14:23:53 132  ,jpy_g00
14:23:53 133  ,jpy_g01
14:23:53 134  ,jpy_g02
14:23:53 135  ,jpy_g03
14:23:53 136  ,jpy_g04
14:23:53 137  ,jpy_g05
14:23:53 138  ,jpy_g06
14:23:53 139  ,jpy_g07
14:23:53 140  ,jpy_g08
14:23:53 141  ,jpy_g09
14:23:53 142  ,jpy_g10
14:23:53 143  ,jpy_g11
14:23:53 144  ,jpy_g12
14:23:53 145  ,jpy_g13
14:23:53 146  ,jpy_g14
14:23:53 147  ,jpy_g15
14:23:53 148  ,jpy_g16
14:23:53 149  ,jpy_g17
14:23:53 150  ,jpy_g18
14:23:53 151  ,jpy_g19
14:23:53 152  ,jpy_g20
14:23:53 153  ,jpy_g21
14:23:53 154  ,jpy_g22
14:23:53 155  ,jpy_g23
14:23:53 156  ,jpy_g24
14:23:53 157  ,jpy_g25
14:23:53 158  ,jpy_g26
14:23:53 159  ,jpy_g27
14:23:53 160  ,jpy_g28
14:23:53 161  ,jpy_g29
14:23:53 162  ,jpy_g30
14:23:53 163  ,jpy_g31
14:23:53 164  ,jpy_g32
14:23:53 165  ,jpy_g33
14:23:53 166  ,jpy_g34
14:23:53 167  ,jpy_g35
14:23:53 168  ,jpy_g36
14:23:53 169  ,jpy_g37
14:23:53 170  ,jpy_g38
14:23:53 171  ,jpy_g39
14:23:53 172  ,jpy_g40
14:23:53 173  ,jpy_g41
14:23:53 174  ,cad_g00
14:23:53 175  ,cad_g01
14:23:53 176  ,cad_g02
14:23:53 177  ,cad_g03
14:23:53 178  ,cad_g04
14:23:53 179  ,cad_g05
14:23:53 180  ,cad_g06
14:23:53 181  ,cad_g07
14:23:53 182  ,cad_g08
14:23:53 183  ,cad_g09
14:23:53 184  ,cad_g10
14:23:53 185  ,cad_g11
14:23:53 186  ,cad_g12
14:23:53 187  ,cad_g13
14:23:53 188  ,cad_g14
14:23:53 189  ,cad_g15
14:23:53 190  ,cad_g16
14:23:53 191  ,cad_g17
14:23:53 192  ,cad_g18
14:23:53 193  ,cad_g19
14:23:53 194  ,cad_g20
14:23:53 195  ,cad_g21
14:23:53 196  ,cad_g22
14:23:53 197  ,cad_g23
14:23:53 198  ,cad_g24
14:23:53 199  ,cad_g25
14:23:53 200  ,cad_g26
14:23:53 201  ,cad_g27
14:23:53 202  ,cad_g28
14:23:53 203  ,cad_g29
14:23:53 204  ,cad_g30
14:23:53 205  ,cad_g31
14:23:53 206  ,cad_g32
14:23:53 207  ,cad_g33
14:23:53 208  ,cad_g34
14:23:53 209  ,cad_g35
14:23:53 210  ,cad_g36
14:23:53 211  ,cad_g37
14:23:53 212  ,cad_g38
14:23:53 213  ,cad_g39
14:23:53 214  ,cad_g40
14:23:53 215  ,cad_g41
14:23:53 216  ,chf_g00
14:23:53 217  ,chf_g01
14:23:53 218  ,chf_g02
14:23:53 219  ,chf_g03
14:23:53 220  ,chf_g04
14:23:53 221  ,chf_g05
14:23:53 222  ,chf_g06
14:23:53 223  ,chf_g07
14:23:53 224  ,chf_g08
14:23:53 225  ,chf_g09
14:23:53 226  ,chf_g10
14:23:53 227  ,chf_g11
14:23:53 228  ,chf_g12
14:23:53 229  ,chf_g13
14:23:53 230  ,chf_g14
14:23:53 231  ,chf_g15
14:23:53 232  ,chf_g16
14:23:53 233  ,chf_g17
14:23:53 234  ,chf_g18
14:23:53 235  ,chf_g19
14:23:53 236  ,chf_g20
14:23:53 237  ,chf_g21
14:23:53 238  ,chf_g22
14:23:53 239  ,chf_g23
14:23:53 240  ,chf_g24
14:23:53 241  ,chf_g25
14:23:53 242  ,chf_g26
14:23:53 243  ,chf_g27
14:23:53 244  ,chf_g28
14:23:53 245  ,chf_g29
14:23:53 246  ,chf_g30
14:23:53 247  ,chf_g31
14:23:53 248  ,chf_g32
14:23:53 249  ,chf_g33
14:23:53 250  ,chf_g34
14:23:53 251  ,chf_g35
14:23:53 252  ,chf_g36
14:23:53 253  ,chf_g37
14:23:53 254  ,chf_g38
14:23:53 255  ,chf_g39
14:23:53 256  ,chf_g40
14:23:53 257  ,chf_g41
14:23:53 258  FROM aud_ms6 m
14:23:53 259  WHERE m.ydate = '&1'||' '||'&2'
14:23:53 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'14:05:00'

View created.

Elapsed: 00:00:00.13
14:23:53 SQL> 
14:23:53 SQL> -- rpt
14:23:53 SQL> -- We should see just 1 row:
14:23:53 SQL> 
14:23:53 SQL> SELECT COUNT(prdate) FROM sme
14:23:53   2  
14:23:53 SQL> -- Build the model:
14:23:53 SQL> CREATE OR REPLACE VIEW bme AS
14:23:53   2  SELECT
14:23:53   3  'aud'||m.ydate prdate
14:23:53   4  ,gatt
14:23:53   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:23:53   6  ,eur_g00
14:23:53   7  ,eur_g01
14:23:53   8  ,eur_g02
14:23:53   9  ,eur_g03
14:23:53  10  ,eur_g04
14:23:53  11  ,eur_g05
14:23:53  12  ,eur_g06
14:23:53  13  ,eur_g07
14:23:53  14  ,eur_g08
14:23:53  15  ,eur_g09
14:23:53  16  ,eur_g10
14:23:53  17  ,eur_g11
14:23:53  18  ,eur_g12
14:23:53  19  ,eur_g13
14:23:53  20  ,eur_g14
14:23:53  21  ,eur_g15
14:23:53  22  ,eur_g16
14:23:53  23  ,eur_g17
14:23:53  24  ,eur_g18
14:23:53  25  ,eur_g19
14:23:53  26  ,eur_g20
14:23:53  27  ,eur_g21
14:23:53  28  ,eur_g22
14:23:53  29  ,eur_g23
14:23:53  30  ,eur_g24
14:23:53  31  ,eur_g25
14:23:53  32  ,eur_g26
14:23:53  33  ,eur_g27
14:23:53  34  ,eur_g28
14:23:53  35  ,eur_g29
14:23:53  36  ,eur_g30
14:23:53  37  ,eur_g31
14:23:53  38  ,eur_g32
14:23:53  39  ,eur_g33
14:23:53  40  ,eur_g34
14:23:53  41  ,eur_g35
14:23:53  42  ,eur_g36
14:23:53  43  ,eur_g37
14:23:53  44  ,eur_g38
14:23:53  45  ,eur_g39
14:23:53  46  ,eur_g40
14:23:53  47  ,eur_g41
14:23:53  48  ,aud_g00
14:23:53  49  ,aud_g01
14:23:53  50  ,aud_g02
14:23:53  51  ,aud_g03
14:23:53  52  ,aud_g04
14:23:53  53  ,aud_g05
14:23:53  54  ,aud_g06
14:23:53  55  ,aud_g07
14:23:53  56  ,aud_g08
14:23:53  57  ,aud_g09
14:23:53  58  ,aud_g10
14:23:53  59  ,aud_g11
14:23:53  60  ,aud_g12
14:23:53  61  ,aud_g13
14:23:53  62  ,aud_g14
14:23:53  63  ,aud_g15
14:23:53  64  ,aud_g16
14:23:53  65  ,aud_g17
14:23:53  66  ,aud_g18
14:23:53  67  ,aud_g19
14:23:53  68  ,aud_g20
14:23:53  69  ,aud_g21
14:23:53  70  ,aud_g22
14:23:53  71  ,aud_g23
14:23:53  72  ,aud_g24
14:23:53  73  ,aud_g25
14:23:53  74  ,aud_g26
14:23:53  75  ,aud_g27
14:23:53  76  ,aud_g28
14:23:53  77  ,aud_g29
14:23:53  78  ,aud_g30
14:23:53  79  ,aud_g31
14:23:53  80  ,aud_g32
14:23:53  81  ,aud_g33
14:23:53  82  ,aud_g34
14:23:53  83  ,aud_g35
14:23:53  84  ,aud_g36
14:23:53  85  ,aud_g37
14:23:53  86  ,aud_g38
14:23:53  87  ,aud_g39
14:23:53  88  ,aud_g40
14:23:53  89  ,aud_g41
14:23:53  90  ,gbp_g00
14:23:53  91  ,gbp_g01
14:23:53  92  ,gbp_g02
14:23:53  93  ,gbp_g03
14:23:53  94  ,gbp_g04
14:23:53  95  ,gbp_g05
14:23:53  96  ,gbp_g06
14:23:53  97  ,gbp_g07
14:23:53  98  ,gbp_g08
14:23:53  99  ,gbp_g09
14:23:53 100  ,gbp_g10
14:23:53 101  ,gbp_g11
14:23:53 102  ,gbp_g12
14:23:53 103  ,gbp_g13
14:23:53 104  ,gbp_g14
14:23:53 105  ,gbp_g15
14:23:53 106  ,gbp_g16
14:23:53 107  ,gbp_g17
14:23:53 108  ,gbp_g18
14:23:53 109  ,gbp_g19
14:23:53 110  ,gbp_g20
14:23:53 111  ,gbp_g21
14:23:53 112  ,gbp_g22
14:23:53 113  ,gbp_g23
14:23:53 114  ,gbp_g24
14:23:53 115  ,gbp_g25
14:23:53 116  ,gbp_g26
14:23:53 117  ,gbp_g27
14:23:53 118  ,gbp_g28
14:23:53 119  ,gbp_g29
14:23:53 120  ,gbp_g30
14:23:53 121  ,gbp_g31
14:23:53 122  ,gbp_g32
14:23:53 123  ,gbp_g33
14:23:53 124  ,gbp_g34
14:23:53 125  ,gbp_g35
14:23:53 126  ,gbp_g36
14:23:53 127  ,gbp_g37
14:23:53 128  ,gbp_g38
14:23:53 129  ,gbp_g39
14:23:53 130  ,gbp_g40
14:23:53 131  ,gbp_g41
14:23:53 132  ,jpy_g00
14:23:53 133  ,jpy_g01
14:23:53 134  ,jpy_g02
14:23:53 135  ,jpy_g03
14:23:53 136  ,jpy_g04
14:23:53 137  ,jpy_g05
14:23:53 138  ,jpy_g06
14:23:53 139  ,jpy_g07
14:23:53 140  ,jpy_g08
14:23:53 141  ,jpy_g09
14:23:53 142  ,jpy_g10
14:23:53 143  ,jpy_g11
14:23:53 144  ,jpy_g12
14:23:53 145  ,jpy_g13
14:23:53 146  ,jpy_g14
14:23:53 147  ,jpy_g15
14:23:53 148  ,jpy_g16
14:23:53 149  ,jpy_g17
14:23:53 150  ,jpy_g18
14:23:53 151  ,jpy_g19
14:23:53 152  ,jpy_g20
14:23:53 153  ,jpy_g21
14:23:53 154  ,jpy_g22
14:23:53 155  ,jpy_g23
14:23:53 156  ,jpy_g24
14:23:53 157  ,jpy_g25
14:23:53 158  ,jpy_g26
14:23:53 159  ,jpy_g27
14:23:53 160  ,jpy_g28
14:23:53 161  ,jpy_g29
14:23:53 162  ,jpy_g30
14:23:53 163  ,jpy_g31
14:23:53 164  ,jpy_g32
14:23:53 165  ,jpy_g33
14:23:53 166  ,jpy_g34
14:23:53 167  ,jpy_g35
14:23:53 168  ,jpy_g36
14:23:53 169  ,jpy_g37
14:23:53 170  ,jpy_g38
14:23:53 171  ,jpy_g39
14:23:53 172  ,jpy_g40
14:23:53 173  ,jpy_g41
14:23:53 174  ,cad_g00
14:23:53 175  ,cad_g01
14:23:53 176  ,cad_g02
14:23:53 177  ,cad_g03
14:23:53 178  ,cad_g04
14:23:53 179  ,cad_g05
14:23:53 180  ,cad_g06
14:23:53 181  ,cad_g07
14:23:53 182  ,cad_g08
14:23:53 183  ,cad_g09
14:23:53 184  ,cad_g10
14:23:53 185  ,cad_g11
14:23:53 186  ,cad_g12
14:23:53 187  ,cad_g13
14:23:53 188  ,cad_g14
14:23:53 189  ,cad_g15
14:23:53 190  ,cad_g16
14:23:53 191  ,cad_g17
14:23:53 192  ,cad_g18
14:23:53 193  ,cad_g19
14:23:53 194  ,cad_g20
14:23:53 195  ,cad_g21
14:23:53 196  ,cad_g22
14:23:53 197  ,cad_g23
14:23:53 198  ,cad_g24
14:23:53 199  ,cad_g25
14:23:53 200  ,cad_g26
14:23:53 201  ,cad_g27
14:23:53 202  ,cad_g28
14:23:53 203  ,cad_g29
14:23:53 204  ,cad_g30
14:23:53 205  ,cad_g31
14:23:53 206  ,cad_g32
14:23:53 207  ,cad_g33
14:23:53 208  ,cad_g34
14:23:53 209  ,cad_g35
14:23:53 210  ,cad_g36
14:23:53 211  ,cad_g37
14:23:53 212  ,cad_g38
14:23:53 213  ,cad_g39
14:23:53 214  ,cad_g40
14:23:53 215  ,cad_g41
14:23:53 216  ,chf_g00
14:23:53 217  ,chf_g01
14:23:53 218  ,chf_g02
14:23:53 219  ,chf_g03
14:23:53 220  ,chf_g04
14:23:53 221  ,chf_g05
14:23:53 222  ,chf_g06
14:23:53 223  ,chf_g07
14:23:53 224  ,chf_g08
14:23:53 225  ,chf_g09
14:23:53 226  ,chf_g10
14:23:53 227  ,chf_g11
14:23:53 228  ,chf_g12
14:23:53 229  ,chf_g13
14:23:53 230  ,chf_g14
14:23:53 231  ,chf_g15
14:23:53 232  ,chf_g16
14:23:53 233  ,chf_g17
14:23:53 234  ,chf_g18
14:23:53 235  ,chf_g19
14:23:53 236  ,chf_g20
14:23:53 237  ,chf_g21
14:23:53 238  ,chf_g22
14:23:53 239  ,chf_g23
14:23:53 240  ,chf_g24
14:23:53 241  ,chf_g25
14:23:53 242  ,chf_g26
14:23:53 243  ,chf_g27
14:23:53 244  ,chf_g28
14:23:53 245  ,chf_g29
14:23:53 246  ,chf_g30
14:23:53 247  ,chf_g31
14:23:53 248  ,chf_g32
14:23:53 249  ,chf_g33
14:23:53 250  ,chf_g34
14:23:53 251  ,chf_g35
14:23:53 252  ,chf_g36
14:23:53 253  ,chf_g37
14:23:53 254  ,chf_g38
14:23:53 255  ,chf_g39
14:23:53 256  ,chf_g40
14:23:53 257  ,chf_g41
14:23:53 258  FROM aud_ms6 m
14:23:53 259  WHERE gatt IN('nup','up')
14:23:53 260  AND 1+m.ydate < '&1'||' '||'&2'
14:23:53 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'14:05:00'

View created.

Elapsed: 00:00:00.12
14:23:53 SQL> 
14:23:53 SQL> -- rpt
14:23:53 SQL> 
14:23:53 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
14:23:53   2  
14:23:53 SQL> SELECT MAX(prdate) FROM bme
14:23:53   2  
14:23:53 SQL> -- Now build model from bme and score sme
14:23:53 SQL> @score1.sql
14:23:53 SQL> -- score1.sql
14:23:53 SQL> 
14:23:53 SQL> -- Does the 1st SVM score
14:23:53 SQL> 
14:23:53 SQL> -- Fill up svmc_apply_prep
14:23:53 SQL> @score.sql
14:23:53 SQL> --
14:23:53 SQL> -- score.sql
14:23:53 SQL> --
14:23:53 SQL> 
14:23:53 SQL> -- usage: score.sql
14:23:53 SQL> 
14:23:53 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
14:23:53 SQL> 
14:23:53 SQL> DEFINE target	= 'gatt'
14:23:53 SQL> DEFINE model_name = 'forex15'
14:23:53 SQL> DEFINE bldtable	= 'bme'
14:23:53 SQL> DEFINE scoretable = 'sme'
14:23:53 SQL> DEFINE case_id	= 'prdate'
14:23:53 SQL> 
14:23:53 SQL> -- Define a variable to help me exclude some columns from some data mining calls
14:23:53 SQL> DEFINE exclude1 = "'&target','&case_id'"
14:23:53 SQL> 
14:23:53 SQL> -- Builds an SVM model using pl/sql.
14:23:53 SQL> 
14:23:53 SQL> -----------------------------------------------------------------------
14:23:53 SQL> --			    BUILD THE MODEL
14:23:53 SQL> -----------------------------------------------------------------------
14:23:53 SQL> 
14:23:53 SQL> -- Cleanup old build data preparation objects for repeat runs
14:23:53 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
14:23:53 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
14:23:53 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
14:23:53 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
14:23:53 SQL> 
14:23:53 SQL> 
14:23:53 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
14:23:53 SQL> --
14:23:53 SQL> -- DROP	TABLE svmc_settings ;
14:23:53 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
14:23:53 SQL> -- DELETE svmc_settings;
14:23:53 SQL> 
14:23:53 SQL> -- The default classification algorithm is Naive Bayes. So override
14:23:53 SQL> -- this choice to SVM using a settings table.
14:23:53 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
14:23:53 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
14:23:53 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
14:23:53 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
14:23:53 SQL> -- models.
14:23:53 SQL> --
14:23:53 SQL> 
14:23:53 SQL> -- Do this once and then comment it out.
14:23:53 SQL> -- That makes script go faster.
14:23:53 SQL> -- BEGIN
14:23:53 SQL> -- -- Populate settings table
14:23:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:23:53 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
14:23:53 SQL> --
14:23:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:23:53 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
14:23:53 SQL> --
14:23:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:23:53 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
14:23:53 SQL> --   COMMIT;
14:23:53 SQL> -- END;
14:23:53 SQL> -- /
14:23:53 SQL> 
14:23:53 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
14:23:53 SQL> 
14:23:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
14:23:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:23:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:23:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
14:23:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:23:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:23:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
14:23:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:23:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:23:53 SQL> 
14:23:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
14:23:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:23:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:23:53 SQL> 
14:23:53 SQL> --------------------------------
14:23:53 SQL> -- PREPARE BUILD (TRAINING) DATA
14:23:53 SQL> --
14:23:53 SQL> 
14:23:53 SQL> -- 1. Missing Value treatment for all Predictors and
14:23:53 SQL> -- 2. Outlier Treatment and
14:23:53 SQL> -- 3. Normalization are performed below.
14:23:53 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
14:23:53 SQL> --    normalized here.
14:23:53 SQL> 
14:23:53 SQL> BEGIN
14:23:53   2  	-- Perform missing value treatment for all predictors
14:23:53   3  	-- create miss tables
14:23:53   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
14:23:53   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
14:23:53   6  
14:23:53   7  	-- populate miss tables
14:23:53   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
14:23:53   9  	  miss_table_name => 'svmc_miss_num',
14:23:53  10  	  data_table_name => '&bldtable',
14:23:53  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:23:53  12  
14:23:53  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
14:23:53  14  	  miss_table_name => 'svmc_miss_cat',
14:23:53  15  	  data_table_name => '&bldtable',
14:23:53  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:23:53  17  
14:23:53  18  	-- xform input data to replace missing values
14:23:53  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:23:53  20  	  miss_table_name => 'svmc_miss_num',
14:23:53  21  	  data_table_name => '&bldtable',
14:23:53  22  	  xform_view_name => 'xformed_build_miss_num');
14:23:53  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:23:53  24  	  miss_table_name => 'svmc_miss_cat',
14:23:53  25  	  data_table_name => '&bldtable',
14:23:53  26  	  xform_view_name => 'xformed_build_miss_cat');
14:23:53  27  
14:23:53  28  	-- Perform outlier treatment.
14:23:53  29  	-- create clip table
14:23:53  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
14:23:53  31  
14:23:53  32  	-- populate clip table
14:23:53  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
14:23:53  34  	  clip_table_name => 'svmc_clip',
14:23:53  35  	  data_table_name => '&bldtable',
14:23:53  36  	  tail_frac	  => 0.025,
14:23:53  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:23:53  38  
14:23:53  39  	-- xform input data to winsorized data
14:23:53  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
14:23:53  41  	  clip_table_name => 'svmc_clip',
14:23:53  42  	  data_table_name => '&bldtable',
14:23:53  43  	  xform_view_name => 'svmc_winsor');
14:23:53  44  
14:23:53  45  	-- create normalization table
14:23:53  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
14:23:53  47  
14:23:53  48  	-- populate normalization table based on winsorized data
14:23:53  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
14:23:53  50  	  norm_table_name => 'svmc_norm',
14:23:53  51  	  data_table_name => 'svmc_winsor',
14:23:53  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:23:53  53  
14:23:53  54  	-- normalize the original data
14:23:53  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:23:53  56  	  norm_table_name => 'svmc_norm',
14:23:53  57  	  data_table_name => '&bldtable',
14:23:53  58  	  xform_view_name => 'svmc_build_prep');
14:23:53  59  END;
14:23:53  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.29
14:24:11 SQL> 
14:24:11 SQL> ---------------------
14:24:11 SQL> -- CREATE A NEW MODEL
14:24:11 SQL> --
14:24:11 SQL> -- Cleanup old model with the same name for repeat runs
14:24:11 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
14:24:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:24:11   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.07
14:24:13 SQL> 
14:24:13 SQL> -- Build a new SVM Model
14:24:13 SQL> BEGIN
14:24:13   2  	DBMS_DATA_MINING.CREATE_MODEL(
14:24:13   3  	  model_name	      => '&model_name',
14:24:13   4  	  mining_function     => dbms_data_mining.classification,
14:24:13   5  	  data_table_name     => 'svmc_build_prep',
14:24:13   6  	  case_id_column_name => '&case_id',
14:24:13   7  	  target_column_name  => '&target',
14:24:13   8  	  settings_table_name => 'svmc_settings');
14:24:13   9  END;
14:24:13  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.74
14:24:39 SQL> 
14:24:39 SQL> -----------------------------------------------------------------------
14:24:39 SQL> --			       APPLY/score THE MODEL
14:24:39 SQL> -----------------------------------------------------------------------
14:24:39 SQL> 
14:24:39 SQL> -- Cleanup old scoring data preparation objects for repeat runs
14:24:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
14:24:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:24:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:24:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
14:24:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:24:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:24:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
14:24:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:24:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:24:39 SQL> -----------------------
14:24:39 SQL> -- PREPARE SCORING DATA
14:24:39 SQL> --
14:24:39 SQL> -- If the data for model creation has been prepared, then the data
14:24:39 SQL> -- to be scored using the model must be prepared in the same manner
14:24:39 SQL> -- in order to obtain meaningful results.
14:24:39 SQL> --
14:24:39 SQL> -- 1. Missing Value treatment for all Predictors and
14:24:39 SQL> -- 2. Normalization
14:24:39 SQL> -- No outlier treatment will be performed during test and apply. The
14:24:39 SQL> -- normalization step is sufficient, since the normalization parameters
14:24:39 SQL> -- already capture the effects of outlier treatment done with build data.
14:24:39 SQL> --
14:24:39 SQL> BEGIN
14:24:39   2  	-- Xform Test data to replace missing values
14:24:39   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:24:39   4  	  miss_table_name => 'svmc_miss_num',
14:24:39   5  	  data_table_name => '&scoretable',
14:24:39   6  	  xform_view_name => 'xformed_apply_miss_num');
14:24:39   7  
14:24:39   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:24:39   9  	  miss_table_name => 'svmc_miss_cat',
14:24:39  10  	  data_table_name => '&scoretable',
14:24:39  11  	  xform_view_name => 'xformed_apply_miss_cat');
14:24:39  12  
14:24:39  13  	-- Normalize the data to be scored
14:24:39  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:24:39  15  	  norm_table_name => 'svmc_norm',
14:24:39  16  	  data_table_name => '&scoretable',
14:24:39  17  	  xform_view_name => 'svmc_apply_prep');
14:24:39  18  END;
14:24:39  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
14:24:41 SQL> 
14:24:41 SQL> -- Use same model_name used in score.sql
14:24:41 SQL> DEFINE model_name = 'forex15'
14:24:41 SQL> 
14:24:41 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
14:24:41 SQL> 
14:24:41 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
14:24:41 SQL> 
14:24:41 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
14:24:41   2  SELECT
14:24:41   3  prdate
14:24:41   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
14:24:41   5  ,sysdate
14:24:41   6  ,SUBSTR(prdate,1,3)pair
14:24:41   7  ,SUBSTR(prdate,4,19)ydate
14:24:41   8  FROM svmc_apply_prep
14:24:41   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
14:24:41 SQL> @aud_score1day.sql  2011-01-05 14:10:00
14:24:41 SQL> --
14:24:41 SQL> -- aud_score1day.sql
14:24:41 SQL> --
14:24:41 SQL> 
14:24:41 SQL> CREATE OR REPLACE VIEW sme AS
14:24:41   2  SELECT
14:24:41   3  'aud'||m.ydate prdate
14:24:41   4  ,NULL gatt
14:24:41   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:24:41   6  ,eur_g00
14:24:41   7  ,eur_g01
14:24:41   8  ,eur_g02
14:24:41   9  ,eur_g03
14:24:41  10  ,eur_g04
14:24:41  11  ,eur_g05
14:24:41  12  ,eur_g06
14:24:41  13  ,eur_g07
14:24:41  14  ,eur_g08
14:24:41  15  ,eur_g09
14:24:41  16  ,eur_g10
14:24:41  17  ,eur_g11
14:24:41  18  ,eur_g12
14:24:41  19  ,eur_g13
14:24:41  20  ,eur_g14
14:24:41  21  ,eur_g15
14:24:41  22  ,eur_g16
14:24:41  23  ,eur_g17
14:24:41  24  ,eur_g18
14:24:41  25  ,eur_g19
14:24:41  26  ,eur_g20
14:24:41  27  ,eur_g21
14:24:41  28  ,eur_g22
14:24:41  29  ,eur_g23
14:24:41  30  ,eur_g24
14:24:41  31  ,eur_g25
14:24:41  32  ,eur_g26
14:24:41  33  ,eur_g27
14:24:41  34  ,eur_g28
14:24:41  35  ,eur_g29
14:24:41  36  ,eur_g30
14:24:41  37  ,eur_g31
14:24:41  38  ,eur_g32
14:24:41  39  ,eur_g33
14:24:41  40  ,eur_g34
14:24:41  41  ,eur_g35
14:24:41  42  ,eur_g36
14:24:41  43  ,eur_g37
14:24:41  44  ,eur_g38
14:24:41  45  ,eur_g39
14:24:41  46  ,eur_g40
14:24:41  47  ,eur_g41
14:24:41  48  ,aud_g00
14:24:41  49  ,aud_g01
14:24:41  50  ,aud_g02
14:24:41  51  ,aud_g03
14:24:41  52  ,aud_g04
14:24:41  53  ,aud_g05
14:24:41  54  ,aud_g06
14:24:41  55  ,aud_g07
14:24:41  56  ,aud_g08
14:24:41  57  ,aud_g09
14:24:41  58  ,aud_g10
14:24:41  59  ,aud_g11
14:24:41  60  ,aud_g12
14:24:41  61  ,aud_g13
14:24:41  62  ,aud_g14
14:24:41  63  ,aud_g15
14:24:41  64  ,aud_g16
14:24:41  65  ,aud_g17
14:24:41  66  ,aud_g18
14:24:41  67  ,aud_g19
14:24:41  68  ,aud_g20
14:24:41  69  ,aud_g21
14:24:41  70  ,aud_g22
14:24:41  71  ,aud_g23
14:24:41  72  ,aud_g24
14:24:41  73  ,aud_g25
14:24:41  74  ,aud_g26
14:24:41  75  ,aud_g27
14:24:41  76  ,aud_g28
14:24:41  77  ,aud_g29
14:24:41  78  ,aud_g30
14:24:41  79  ,aud_g31
14:24:41  80  ,aud_g32
14:24:41  81  ,aud_g33
14:24:41  82  ,aud_g34
14:24:41  83  ,aud_g35
14:24:41  84  ,aud_g36
14:24:41  85  ,aud_g37
14:24:41  86  ,aud_g38
14:24:41  87  ,aud_g39
14:24:41  88  ,aud_g40
14:24:41  89  ,aud_g41
14:24:41  90  ,gbp_g00
14:24:41  91  ,gbp_g01
14:24:41  92  ,gbp_g02
14:24:41  93  ,gbp_g03
14:24:41  94  ,gbp_g04
14:24:41  95  ,gbp_g05
14:24:41  96  ,gbp_g06
14:24:41  97  ,gbp_g07
14:24:41  98  ,gbp_g08
14:24:41  99  ,gbp_g09
14:24:41 100  ,gbp_g10
14:24:41 101  ,gbp_g11
14:24:41 102  ,gbp_g12
14:24:41 103  ,gbp_g13
14:24:41 104  ,gbp_g14
14:24:41 105  ,gbp_g15
14:24:41 106  ,gbp_g16
14:24:41 107  ,gbp_g17
14:24:41 108  ,gbp_g18
14:24:41 109  ,gbp_g19
14:24:41 110  ,gbp_g20
14:24:41 111  ,gbp_g21
14:24:41 112  ,gbp_g22
14:24:41 113  ,gbp_g23
14:24:41 114  ,gbp_g24
14:24:41 115  ,gbp_g25
14:24:41 116  ,gbp_g26
14:24:41 117  ,gbp_g27
14:24:41 118  ,gbp_g28
14:24:41 119  ,gbp_g29
14:24:41 120  ,gbp_g30
14:24:41 121  ,gbp_g31
14:24:41 122  ,gbp_g32
14:24:41 123  ,gbp_g33
14:24:41 124  ,gbp_g34
14:24:41 125  ,gbp_g35
14:24:41 126  ,gbp_g36
14:24:41 127  ,gbp_g37
14:24:41 128  ,gbp_g38
14:24:41 129  ,gbp_g39
14:24:41 130  ,gbp_g40
14:24:41 131  ,gbp_g41
14:24:41 132  ,jpy_g00
14:24:41 133  ,jpy_g01
14:24:41 134  ,jpy_g02
14:24:41 135  ,jpy_g03
14:24:41 136  ,jpy_g04
14:24:41 137  ,jpy_g05
14:24:41 138  ,jpy_g06
14:24:41 139  ,jpy_g07
14:24:41 140  ,jpy_g08
14:24:41 141  ,jpy_g09
14:24:41 142  ,jpy_g10
14:24:41 143  ,jpy_g11
14:24:41 144  ,jpy_g12
14:24:41 145  ,jpy_g13
14:24:41 146  ,jpy_g14
14:24:41 147  ,jpy_g15
14:24:41 148  ,jpy_g16
14:24:41 149  ,jpy_g17
14:24:41 150  ,jpy_g18
14:24:41 151  ,jpy_g19
14:24:41 152  ,jpy_g20
14:24:41 153  ,jpy_g21
14:24:41 154  ,jpy_g22
14:24:41 155  ,jpy_g23
14:24:41 156  ,jpy_g24
14:24:41 157  ,jpy_g25
14:24:41 158  ,jpy_g26
14:24:41 159  ,jpy_g27
14:24:41 160  ,jpy_g28
14:24:41 161  ,jpy_g29
14:24:41 162  ,jpy_g30
14:24:41 163  ,jpy_g31
14:24:41 164  ,jpy_g32
14:24:41 165  ,jpy_g33
14:24:41 166  ,jpy_g34
14:24:41 167  ,jpy_g35
14:24:41 168  ,jpy_g36
14:24:41 169  ,jpy_g37
14:24:41 170  ,jpy_g38
14:24:41 171  ,jpy_g39
14:24:41 172  ,jpy_g40
14:24:41 173  ,jpy_g41
14:24:41 174  ,cad_g00
14:24:41 175  ,cad_g01
14:24:41 176  ,cad_g02
14:24:41 177  ,cad_g03
14:24:41 178  ,cad_g04
14:24:41 179  ,cad_g05
14:24:41 180  ,cad_g06
14:24:41 181  ,cad_g07
14:24:41 182  ,cad_g08
14:24:41 183  ,cad_g09
14:24:41 184  ,cad_g10
14:24:41 185  ,cad_g11
14:24:41 186  ,cad_g12
14:24:41 187  ,cad_g13
14:24:41 188  ,cad_g14
14:24:41 189  ,cad_g15
14:24:41 190  ,cad_g16
14:24:41 191  ,cad_g17
14:24:41 192  ,cad_g18
14:24:41 193  ,cad_g19
14:24:41 194  ,cad_g20
14:24:41 195  ,cad_g21
14:24:41 196  ,cad_g22
14:24:41 197  ,cad_g23
14:24:41 198  ,cad_g24
14:24:41 199  ,cad_g25
14:24:41 200  ,cad_g26
14:24:41 201  ,cad_g27
14:24:41 202  ,cad_g28
14:24:41 203  ,cad_g29
14:24:41 204  ,cad_g30
14:24:41 205  ,cad_g31
14:24:41 206  ,cad_g32
14:24:41 207  ,cad_g33
14:24:41 208  ,cad_g34
14:24:41 209  ,cad_g35
14:24:41 210  ,cad_g36
14:24:41 211  ,cad_g37
14:24:41 212  ,cad_g38
14:24:41 213  ,cad_g39
14:24:41 214  ,cad_g40
14:24:41 215  ,cad_g41
14:24:41 216  ,chf_g00
14:24:41 217  ,chf_g01
14:24:41 218  ,chf_g02
14:24:41 219  ,chf_g03
14:24:41 220  ,chf_g04
14:24:41 221  ,chf_g05
14:24:41 222  ,chf_g06
14:24:41 223  ,chf_g07
14:24:41 224  ,chf_g08
14:24:41 225  ,chf_g09
14:24:41 226  ,chf_g10
14:24:41 227  ,chf_g11
14:24:41 228  ,chf_g12
14:24:41 229  ,chf_g13
14:24:41 230  ,chf_g14
14:24:41 231  ,chf_g15
14:24:41 232  ,chf_g16
14:24:41 233  ,chf_g17
14:24:41 234  ,chf_g18
14:24:41 235  ,chf_g19
14:24:41 236  ,chf_g20
14:24:41 237  ,chf_g21
14:24:41 238  ,chf_g22
14:24:41 239  ,chf_g23
14:24:41 240  ,chf_g24
14:24:41 241  ,chf_g25
14:24:41 242  ,chf_g26
14:24:41 243  ,chf_g27
14:24:41 244  ,chf_g28
14:24:41 245  ,chf_g29
14:24:41 246  ,chf_g30
14:24:41 247  ,chf_g31
14:24:41 248  ,chf_g32
14:24:41 249  ,chf_g33
14:24:41 250  ,chf_g34
14:24:41 251  ,chf_g35
14:24:41 252  ,chf_g36
14:24:41 253  ,chf_g37
14:24:41 254  ,chf_g38
14:24:41 255  ,chf_g39
14:24:41 256  ,chf_g40
14:24:41 257  ,chf_g41
14:24:41 258  FROM aud_ms6 m
14:24:41 259  WHERE m.ydate = '&1'||' '||'&2'
14:24:41 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'14:10:00'

View created.

Elapsed: 00:00:00.13
14:24:41 SQL> 
14:24:41 SQL> -- rpt
14:24:41 SQL> -- We should see just 1 row:
14:24:41 SQL> 
14:24:41 SQL> SELECT COUNT(prdate) FROM sme
14:24:41   2  
14:24:41 SQL> -- Build the model:
14:24:41 SQL> CREATE OR REPLACE VIEW bme AS
14:24:41   2  SELECT
14:24:41   3  'aud'||m.ydate prdate
14:24:41   4  ,gatt
14:24:41   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:24:41   6  ,eur_g00
14:24:41   7  ,eur_g01
14:24:41   8  ,eur_g02
14:24:41   9  ,eur_g03
14:24:41  10  ,eur_g04
14:24:41  11  ,eur_g05
14:24:41  12  ,eur_g06
14:24:41  13  ,eur_g07
14:24:41  14  ,eur_g08
14:24:41  15  ,eur_g09
14:24:41  16  ,eur_g10
14:24:41  17  ,eur_g11
14:24:41  18  ,eur_g12
14:24:41  19  ,eur_g13
14:24:41  20  ,eur_g14
14:24:41  21  ,eur_g15
14:24:41  22  ,eur_g16
14:24:41  23  ,eur_g17
14:24:41  24  ,eur_g18
14:24:41  25  ,eur_g19
14:24:41  26  ,eur_g20
14:24:41  27  ,eur_g21
14:24:41  28  ,eur_g22
14:24:41  29  ,eur_g23
14:24:41  30  ,eur_g24
14:24:41  31  ,eur_g25
14:24:41  32  ,eur_g26
14:24:41  33  ,eur_g27
14:24:41  34  ,eur_g28
14:24:41  35  ,eur_g29
14:24:41  36  ,eur_g30
14:24:41  37  ,eur_g31
14:24:41  38  ,eur_g32
14:24:41  39  ,eur_g33
14:24:41  40  ,eur_g34
14:24:41  41  ,eur_g35
14:24:41  42  ,eur_g36
14:24:41  43  ,eur_g37
14:24:41  44  ,eur_g38
14:24:41  45  ,eur_g39
14:24:41  46  ,eur_g40
14:24:41  47  ,eur_g41
14:24:41  48  ,aud_g00
14:24:41  49  ,aud_g01
14:24:41  50  ,aud_g02
14:24:41  51  ,aud_g03
14:24:41  52  ,aud_g04
14:24:41  53  ,aud_g05
14:24:41  54  ,aud_g06
14:24:41  55  ,aud_g07
14:24:41  56  ,aud_g08
14:24:41  57  ,aud_g09
14:24:41  58  ,aud_g10
14:24:41  59  ,aud_g11
14:24:41  60  ,aud_g12
14:24:41  61  ,aud_g13
14:24:41  62  ,aud_g14
14:24:41  63  ,aud_g15
14:24:41  64  ,aud_g16
14:24:41  65  ,aud_g17
14:24:41  66  ,aud_g18
14:24:41  67  ,aud_g19
14:24:41  68  ,aud_g20
14:24:41  69  ,aud_g21
14:24:41  70  ,aud_g22
14:24:41  71  ,aud_g23
14:24:41  72  ,aud_g24
14:24:41  73  ,aud_g25
14:24:41  74  ,aud_g26
14:24:41  75  ,aud_g27
14:24:41  76  ,aud_g28
14:24:41  77  ,aud_g29
14:24:41  78  ,aud_g30
14:24:41  79  ,aud_g31
14:24:41  80  ,aud_g32
14:24:41  81  ,aud_g33
14:24:41  82  ,aud_g34
14:24:41  83  ,aud_g35
14:24:41  84  ,aud_g36
14:24:41  85  ,aud_g37
14:24:41  86  ,aud_g38
14:24:41  87  ,aud_g39
14:24:41  88  ,aud_g40
14:24:41  89  ,aud_g41
14:24:41  90  ,gbp_g00
14:24:41  91  ,gbp_g01
14:24:41  92  ,gbp_g02
14:24:41  93  ,gbp_g03
14:24:41  94  ,gbp_g04
14:24:41  95  ,gbp_g05
14:24:41  96  ,gbp_g06
14:24:41  97  ,gbp_g07
14:24:41  98  ,gbp_g08
14:24:41  99  ,gbp_g09
14:24:41 100  ,gbp_g10
14:24:41 101  ,gbp_g11
14:24:41 102  ,gbp_g12
14:24:41 103  ,gbp_g13
14:24:41 104  ,gbp_g14
14:24:41 105  ,gbp_g15
14:24:41 106  ,gbp_g16
14:24:41 107  ,gbp_g17
14:24:41 108  ,gbp_g18
14:24:41 109  ,gbp_g19
14:24:41 110  ,gbp_g20
14:24:41 111  ,gbp_g21
14:24:41 112  ,gbp_g22
14:24:41 113  ,gbp_g23
14:24:41 114  ,gbp_g24
14:24:41 115  ,gbp_g25
14:24:41 116  ,gbp_g26
14:24:41 117  ,gbp_g27
14:24:41 118  ,gbp_g28
14:24:41 119  ,gbp_g29
14:24:41 120  ,gbp_g30
14:24:41 121  ,gbp_g31
14:24:41 122  ,gbp_g32
14:24:41 123  ,gbp_g33
14:24:41 124  ,gbp_g34
14:24:41 125  ,gbp_g35
14:24:41 126  ,gbp_g36
14:24:41 127  ,gbp_g37
14:24:41 128  ,gbp_g38
14:24:41 129  ,gbp_g39
14:24:41 130  ,gbp_g40
14:24:41 131  ,gbp_g41
14:24:41 132  ,jpy_g00
14:24:41 133  ,jpy_g01
14:24:41 134  ,jpy_g02
14:24:41 135  ,jpy_g03
14:24:41 136  ,jpy_g04
14:24:41 137  ,jpy_g05
14:24:41 138  ,jpy_g06
14:24:41 139  ,jpy_g07
14:24:41 140  ,jpy_g08
14:24:41 141  ,jpy_g09
14:24:41 142  ,jpy_g10
14:24:41 143  ,jpy_g11
14:24:41 144  ,jpy_g12
14:24:41 145  ,jpy_g13
14:24:41 146  ,jpy_g14
14:24:41 147  ,jpy_g15
14:24:41 148  ,jpy_g16
14:24:41 149  ,jpy_g17
14:24:41 150  ,jpy_g18
14:24:41 151  ,jpy_g19
14:24:41 152  ,jpy_g20
14:24:41 153  ,jpy_g21
14:24:41 154  ,jpy_g22
14:24:41 155  ,jpy_g23
14:24:41 156  ,jpy_g24
14:24:41 157  ,jpy_g25
14:24:41 158  ,jpy_g26
14:24:41 159  ,jpy_g27
14:24:41 160  ,jpy_g28
14:24:41 161  ,jpy_g29
14:24:41 162  ,jpy_g30
14:24:41 163  ,jpy_g31
14:24:41 164  ,jpy_g32
14:24:41 165  ,jpy_g33
14:24:41 166  ,jpy_g34
14:24:41 167  ,jpy_g35
14:24:41 168  ,jpy_g36
14:24:41 169  ,jpy_g37
14:24:41 170  ,jpy_g38
14:24:41 171  ,jpy_g39
14:24:41 172  ,jpy_g40
14:24:41 173  ,jpy_g41
14:24:41 174  ,cad_g00
14:24:41 175  ,cad_g01
14:24:41 176  ,cad_g02
14:24:41 177  ,cad_g03
14:24:41 178  ,cad_g04
14:24:41 179  ,cad_g05
14:24:41 180  ,cad_g06
14:24:41 181  ,cad_g07
14:24:41 182  ,cad_g08
14:24:41 183  ,cad_g09
14:24:41 184  ,cad_g10
14:24:41 185  ,cad_g11
14:24:41 186  ,cad_g12
14:24:41 187  ,cad_g13
14:24:41 188  ,cad_g14
14:24:41 189  ,cad_g15
14:24:41 190  ,cad_g16
14:24:41 191  ,cad_g17
14:24:41 192  ,cad_g18
14:24:41 193  ,cad_g19
14:24:41 194  ,cad_g20
14:24:41 195  ,cad_g21
14:24:41 196  ,cad_g22
14:24:41 197  ,cad_g23
14:24:41 198  ,cad_g24
14:24:41 199  ,cad_g25
14:24:41 200  ,cad_g26
14:24:41 201  ,cad_g27
14:24:41 202  ,cad_g28
14:24:41 203  ,cad_g29
14:24:41 204  ,cad_g30
14:24:41 205  ,cad_g31
14:24:41 206  ,cad_g32
14:24:41 207  ,cad_g33
14:24:41 208  ,cad_g34
14:24:41 209  ,cad_g35
14:24:41 210  ,cad_g36
14:24:41 211  ,cad_g37
14:24:41 212  ,cad_g38
14:24:41 213  ,cad_g39
14:24:41 214  ,cad_g40
14:24:41 215  ,cad_g41
14:24:41 216  ,chf_g00
14:24:41 217  ,chf_g01
14:24:41 218  ,chf_g02
14:24:41 219  ,chf_g03
14:24:41 220  ,chf_g04
14:24:41 221  ,chf_g05
14:24:41 222  ,chf_g06
14:24:41 223  ,chf_g07
14:24:41 224  ,chf_g08
14:24:41 225  ,chf_g09
14:24:41 226  ,chf_g10
14:24:41 227  ,chf_g11
14:24:41 228  ,chf_g12
14:24:41 229  ,chf_g13
14:24:41 230  ,chf_g14
14:24:41 231  ,chf_g15
14:24:41 232  ,chf_g16
14:24:41 233  ,chf_g17
14:24:41 234  ,chf_g18
14:24:41 235  ,chf_g19
14:24:41 236  ,chf_g20
14:24:41 237  ,chf_g21
14:24:41 238  ,chf_g22
14:24:41 239  ,chf_g23
14:24:41 240  ,chf_g24
14:24:41 241  ,chf_g25
14:24:41 242  ,chf_g26
14:24:41 243  ,chf_g27
14:24:41 244  ,chf_g28
14:24:41 245  ,chf_g29
14:24:41 246  ,chf_g30
14:24:41 247  ,chf_g31
14:24:41 248  ,chf_g32
14:24:41 249  ,chf_g33
14:24:41 250  ,chf_g34
14:24:41 251  ,chf_g35
14:24:41 252  ,chf_g36
14:24:41 253  ,chf_g37
14:24:41 254  ,chf_g38
14:24:41 255  ,chf_g39
14:24:41 256  ,chf_g40
14:24:41 257  ,chf_g41
14:24:41 258  FROM aud_ms6 m
14:24:41 259  WHERE gatt IN('nup','up')
14:24:41 260  AND 1+m.ydate < '&1'||' '||'&2'
14:24:41 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'14:10:00'

View created.

Elapsed: 00:00:00.13
14:24:41 SQL> 
14:24:41 SQL> -- rpt
14:24:41 SQL> 
14:24:41 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
14:24:41   2  
14:24:41 SQL> SELECT MAX(prdate) FROM bme
14:24:41   2  
14:24:41 SQL> -- Now build model from bme and score sme
14:24:41 SQL> @score1.sql
14:24:41 SQL> -- score1.sql
14:24:41 SQL> 
14:24:41 SQL> -- Does the 1st SVM score
14:24:41 SQL> 
14:24:41 SQL> -- Fill up svmc_apply_prep
14:24:41 SQL> @score.sql
14:24:41 SQL> --
14:24:41 SQL> -- score.sql
14:24:41 SQL> --
14:24:41 SQL> 
14:24:41 SQL> -- usage: score.sql
14:24:41 SQL> 
14:24:41 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
14:24:41 SQL> 
14:24:41 SQL> DEFINE target	= 'gatt'
14:24:41 SQL> DEFINE model_name = 'forex15'
14:24:41 SQL> DEFINE bldtable	= 'bme'
14:24:41 SQL> DEFINE scoretable = 'sme'
14:24:41 SQL> DEFINE case_id	= 'prdate'
14:24:41 SQL> 
14:24:41 SQL> -- Define a variable to help me exclude some columns from some data mining calls
14:24:41 SQL> DEFINE exclude1 = "'&target','&case_id'"
14:24:41 SQL> 
14:24:41 SQL> -- Builds an SVM model using pl/sql.
14:24:41 SQL> 
14:24:41 SQL> -----------------------------------------------------------------------
14:24:41 SQL> --			    BUILD THE MODEL
14:24:41 SQL> -----------------------------------------------------------------------
14:24:41 SQL> 
14:24:41 SQL> -- Cleanup old build data preparation objects for repeat runs
14:24:41 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
14:24:41 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
14:24:41 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
14:24:41 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
14:24:41 SQL> 
14:24:41 SQL> 
14:24:41 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
14:24:41 SQL> --
14:24:41 SQL> -- DROP	TABLE svmc_settings ;
14:24:41 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
14:24:41 SQL> -- DELETE svmc_settings;
14:24:41 SQL> 
14:24:41 SQL> -- The default classification algorithm is Naive Bayes. So override
14:24:41 SQL> -- this choice to SVM using a settings table.
14:24:41 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
14:24:41 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
14:24:41 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
14:24:41 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
14:24:41 SQL> -- models.
14:24:41 SQL> --
14:24:41 SQL> 
14:24:41 SQL> -- Do this once and then comment it out.
14:24:41 SQL> -- That makes script go faster.
14:24:41 SQL> -- BEGIN
14:24:41 SQL> -- -- Populate settings table
14:24:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:24:41 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
14:24:41 SQL> --
14:24:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:24:41 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
14:24:41 SQL> --
14:24:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:24:41 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
14:24:41 SQL> --   COMMIT;
14:24:41 SQL> -- END;
14:24:41 SQL> -- /
14:24:41 SQL> 
14:24:41 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
14:24:41 SQL> 
14:24:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
14:24:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:24:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
14:24:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
14:24:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:24:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:24:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
14:24:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:24:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:24:41 SQL> 
14:24:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
14:24:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:24:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:24:41 SQL> 
14:24:41 SQL> --------------------------------
14:24:41 SQL> -- PREPARE BUILD (TRAINING) DATA
14:24:41 SQL> --
14:24:41 SQL> 
14:24:41 SQL> -- 1. Missing Value treatment for all Predictors and
14:24:41 SQL> -- 2. Outlier Treatment and
14:24:41 SQL> -- 3. Normalization are performed below.
14:24:41 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
14:24:41 SQL> --    normalized here.
14:24:41 SQL> 
14:24:41 SQL> BEGIN
14:24:41   2  	-- Perform missing value treatment for all predictors
14:24:41   3  	-- create miss tables
14:24:41   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
14:24:41   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
14:24:41   6  
14:24:41   7  	-- populate miss tables
14:24:41   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
14:24:41   9  	  miss_table_name => 'svmc_miss_num',
14:24:41  10  	  data_table_name => '&bldtable',
14:24:41  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:24:41  12  
14:24:41  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
14:24:41  14  	  miss_table_name => 'svmc_miss_cat',
14:24:41  15  	  data_table_name => '&bldtable',
14:24:41  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:24:41  17  
14:24:41  18  	-- xform input data to replace missing values
14:24:41  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:24:41  20  	  miss_table_name => 'svmc_miss_num',
14:24:41  21  	  data_table_name => '&bldtable',
14:24:41  22  	  xform_view_name => 'xformed_build_miss_num');
14:24:41  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:24:41  24  	  miss_table_name => 'svmc_miss_cat',
14:24:41  25  	  data_table_name => '&bldtable',
14:24:41  26  	  xform_view_name => 'xformed_build_miss_cat');
14:24:41  27  
14:24:41  28  	-- Perform outlier treatment.
14:24:41  29  	-- create clip table
14:24:41  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
14:24:41  31  
14:24:41  32  	-- populate clip table
14:24:41  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
14:24:41  34  	  clip_table_name => 'svmc_clip',
14:24:41  35  	  data_table_name => '&bldtable',
14:24:41  36  	  tail_frac	  => 0.025,
14:24:41  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:24:41  38  
14:24:41  39  	-- xform input data to winsorized data
14:24:41  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
14:24:41  41  	  clip_table_name => 'svmc_clip',
14:24:41  42  	  data_table_name => '&bldtable',
14:24:41  43  	  xform_view_name => 'svmc_winsor');
14:24:41  44  
14:24:41  45  	-- create normalization table
14:24:41  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
14:24:41  47  
14:24:41  48  	-- populate normalization table based on winsorized data
14:24:41  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
14:24:41  50  	  norm_table_name => 'svmc_norm',
14:24:41  51  	  data_table_name => 'svmc_winsor',
14:24:41  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:24:41  53  
14:24:41  54  	-- normalize the original data
14:24:41  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:24:41  56  	  norm_table_name => 'svmc_norm',
14:24:41  57  	  data_table_name => '&bldtable',
14:24:41  58  	  xform_view_name => 'svmc_build_prep');
14:24:41  59  END;
14:24:41  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.83
14:25:00 SQL> 
14:25:00 SQL> ---------------------
14:25:00 SQL> -- CREATE A NEW MODEL
14:25:00 SQL> --
14:25:00 SQL> -- Cleanup old model with the same name for repeat runs
14:25:00 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
14:25:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:25:00   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.88
14:25:01 SQL> 
14:25:01 SQL> -- Build a new SVM Model
14:25:01 SQL> BEGIN
14:25:01   2  	DBMS_DATA_MINING.CREATE_MODEL(
14:25:01   3  	  model_name	      => '&model_name',
14:25:01   4  	  mining_function     => dbms_data_mining.classification,
14:25:01   5  	  data_table_name     => 'svmc_build_prep',
14:25:01   6  	  case_id_column_name => '&case_id',
14:25:01   7  	  target_column_name  => '&target',
14:25:01   8  	  settings_table_name => 'svmc_settings');
14:25:01   9  END;
14:25:01  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.57
14:25:28 SQL> 
14:25:28 SQL> -----------------------------------------------------------------------
14:25:28 SQL> --			       APPLY/score THE MODEL
14:25:28 SQL> -----------------------------------------------------------------------
14:25:28 SQL> 
14:25:28 SQL> -- Cleanup old scoring data preparation objects for repeat runs
14:25:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
14:25:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:25:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.04
14:25:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
14:25:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:25:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:25:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
14:25:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:25:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:25:28 SQL> -----------------------
14:25:28 SQL> -- PREPARE SCORING DATA
14:25:28 SQL> --
14:25:28 SQL> -- If the data for model creation has been prepared, then the data
14:25:28 SQL> -- to be scored using the model must be prepared in the same manner
14:25:28 SQL> -- in order to obtain meaningful results.
14:25:28 SQL> --
14:25:28 SQL> -- 1. Missing Value treatment for all Predictors and
14:25:28 SQL> -- 2. Normalization
14:25:28 SQL> -- No outlier treatment will be performed during test and apply. The
14:25:28 SQL> -- normalization step is sufficient, since the normalization parameters
14:25:28 SQL> -- already capture the effects of outlier treatment done with build data.
14:25:28 SQL> --
14:25:28 SQL> BEGIN
14:25:28   2  	-- Xform Test data to replace missing values
14:25:28   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:25:28   4  	  miss_table_name => 'svmc_miss_num',
14:25:28   5  	  data_table_name => '&scoretable',
14:25:28   6  	  xform_view_name => 'xformed_apply_miss_num');
14:25:28   7  
14:25:28   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:25:28   9  	  miss_table_name => 'svmc_miss_cat',
14:25:28  10  	  data_table_name => '&scoretable',
14:25:28  11  	  xform_view_name => 'xformed_apply_miss_cat');
14:25:28  12  
14:25:28  13  	-- Normalize the data to be scored
14:25:28  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:25:28  15  	  norm_table_name => 'svmc_norm',
14:25:28  16  	  data_table_name => '&scoretable',
14:25:28  17  	  xform_view_name => 'svmc_apply_prep');
14:25:28  18  END;
14:25:28  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
14:25:29 SQL> 
14:25:29 SQL> -- Use same model_name used in score.sql
14:25:29 SQL> DEFINE model_name = 'forex15'
14:25:29 SQL> 
14:25:29 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
14:25:29 SQL> 
14:25:29 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
14:25:29 SQL> 
14:25:29 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
14:25:29   2  SELECT
14:25:29   3  prdate
14:25:29   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
14:25:29   5  ,sysdate
14:25:29   6  ,SUBSTR(prdate,1,3)pair
14:25:29   7  ,SUBSTR(prdate,4,19)ydate
14:25:29   8  FROM svmc_apply_prep
14:25:29   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
14:25:29 SQL> @aud_score1day.sql  2011-01-05 14:15:00
14:25:29 SQL> --
14:25:29 SQL> -- aud_score1day.sql
14:25:29 SQL> --
14:25:29 SQL> 
14:25:29 SQL> CREATE OR REPLACE VIEW sme AS
14:25:29   2  SELECT
14:25:29   3  'aud'||m.ydate prdate
14:25:29   4  ,NULL gatt
14:25:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:25:29   6  ,eur_g00
14:25:29   7  ,eur_g01
14:25:29   8  ,eur_g02
14:25:29   9  ,eur_g03
14:25:29  10  ,eur_g04
14:25:29  11  ,eur_g05
14:25:29  12  ,eur_g06
14:25:29  13  ,eur_g07
14:25:29  14  ,eur_g08
14:25:29  15  ,eur_g09
14:25:29  16  ,eur_g10
14:25:29  17  ,eur_g11
14:25:29  18  ,eur_g12
14:25:29  19  ,eur_g13
14:25:29  20  ,eur_g14
14:25:29  21  ,eur_g15
14:25:29  22  ,eur_g16
14:25:29  23  ,eur_g17
14:25:29  24  ,eur_g18
14:25:29  25  ,eur_g19
14:25:29  26  ,eur_g20
14:25:29  27  ,eur_g21
14:25:29  28  ,eur_g22
14:25:29  29  ,eur_g23
14:25:29  30  ,eur_g24
14:25:29  31  ,eur_g25
14:25:29  32  ,eur_g26
14:25:29  33  ,eur_g27
14:25:29  34  ,eur_g28
14:25:29  35  ,eur_g29
14:25:29  36  ,eur_g30
14:25:29  37  ,eur_g31
14:25:29  38  ,eur_g32
14:25:29  39  ,eur_g33
14:25:29  40  ,eur_g34
14:25:29  41  ,eur_g35
14:25:29  42  ,eur_g36
14:25:29  43  ,eur_g37
14:25:29  44  ,eur_g38
14:25:29  45  ,eur_g39
14:25:29  46  ,eur_g40
14:25:29  47  ,eur_g41
14:25:29  48  ,aud_g00
14:25:29  49  ,aud_g01
14:25:29  50  ,aud_g02
14:25:29  51  ,aud_g03
14:25:29  52  ,aud_g04
14:25:29  53  ,aud_g05
14:25:29  54  ,aud_g06
14:25:29  55  ,aud_g07
14:25:29  56  ,aud_g08
14:25:29  57  ,aud_g09
14:25:29  58  ,aud_g10
14:25:29  59  ,aud_g11
14:25:29  60  ,aud_g12
14:25:29  61  ,aud_g13
14:25:29  62  ,aud_g14
14:25:29  63  ,aud_g15
14:25:29  64  ,aud_g16
14:25:29  65  ,aud_g17
14:25:29  66  ,aud_g18
14:25:29  67  ,aud_g19
14:25:29  68  ,aud_g20
14:25:29  69  ,aud_g21
14:25:29  70  ,aud_g22
14:25:29  71  ,aud_g23
14:25:29  72  ,aud_g24
14:25:29  73  ,aud_g25
14:25:29  74  ,aud_g26
14:25:29  75  ,aud_g27
14:25:29  76  ,aud_g28
14:25:29  77  ,aud_g29
14:25:29  78  ,aud_g30
14:25:29  79  ,aud_g31
14:25:29  80  ,aud_g32
14:25:29  81  ,aud_g33
14:25:29  82  ,aud_g34
14:25:29  83  ,aud_g35
14:25:29  84  ,aud_g36
14:25:29  85  ,aud_g37
14:25:29  86  ,aud_g38
14:25:29  87  ,aud_g39
14:25:29  88  ,aud_g40
14:25:29  89  ,aud_g41
14:25:29  90  ,gbp_g00
14:25:29  91  ,gbp_g01
14:25:29  92  ,gbp_g02
14:25:29  93  ,gbp_g03
14:25:29  94  ,gbp_g04
14:25:29  95  ,gbp_g05
14:25:29  96  ,gbp_g06
14:25:29  97  ,gbp_g07
14:25:29  98  ,gbp_g08
14:25:29  99  ,gbp_g09
14:25:29 100  ,gbp_g10
14:25:29 101  ,gbp_g11
14:25:29 102  ,gbp_g12
14:25:29 103  ,gbp_g13
14:25:29 104  ,gbp_g14
14:25:29 105  ,gbp_g15
14:25:29 106  ,gbp_g16
14:25:29 107  ,gbp_g17
14:25:29 108  ,gbp_g18
14:25:29 109  ,gbp_g19
14:25:29 110  ,gbp_g20
14:25:29 111  ,gbp_g21
14:25:29 112  ,gbp_g22
14:25:29 113  ,gbp_g23
14:25:29 114  ,gbp_g24
14:25:29 115  ,gbp_g25
14:25:29 116  ,gbp_g26
14:25:29 117  ,gbp_g27
14:25:29 118  ,gbp_g28
14:25:29 119  ,gbp_g29
14:25:29 120  ,gbp_g30
14:25:29 121  ,gbp_g31
14:25:29 122  ,gbp_g32
14:25:29 123  ,gbp_g33
14:25:29 124  ,gbp_g34
14:25:29 125  ,gbp_g35
14:25:29 126  ,gbp_g36
14:25:29 127  ,gbp_g37
14:25:29 128  ,gbp_g38
14:25:29 129  ,gbp_g39
14:25:29 130  ,gbp_g40
14:25:29 131  ,gbp_g41
14:25:29 132  ,jpy_g00
14:25:29 133  ,jpy_g01
14:25:29 134  ,jpy_g02
14:25:29 135  ,jpy_g03
14:25:29 136  ,jpy_g04
14:25:29 137  ,jpy_g05
14:25:29 138  ,jpy_g06
14:25:29 139  ,jpy_g07
14:25:29 140  ,jpy_g08
14:25:29 141  ,jpy_g09
14:25:29 142  ,jpy_g10
14:25:29 143  ,jpy_g11
14:25:29 144  ,jpy_g12
14:25:29 145  ,jpy_g13
14:25:29 146  ,jpy_g14
14:25:29 147  ,jpy_g15
14:25:29 148  ,jpy_g16
14:25:29 149  ,jpy_g17
14:25:29 150  ,jpy_g18
14:25:29 151  ,jpy_g19
14:25:29 152  ,jpy_g20
14:25:29 153  ,jpy_g21
14:25:29 154  ,jpy_g22
14:25:29 155  ,jpy_g23
14:25:29 156  ,jpy_g24
14:25:29 157  ,jpy_g25
14:25:29 158  ,jpy_g26
14:25:29 159  ,jpy_g27
14:25:29 160  ,jpy_g28
14:25:29 161  ,jpy_g29
14:25:29 162  ,jpy_g30
14:25:29 163  ,jpy_g31
14:25:29 164  ,jpy_g32
14:25:29 165  ,jpy_g33
14:25:29 166  ,jpy_g34
14:25:29 167  ,jpy_g35
14:25:29 168  ,jpy_g36
14:25:29 169  ,jpy_g37
14:25:29 170  ,jpy_g38
14:25:29 171  ,jpy_g39
14:25:29 172  ,jpy_g40
14:25:29 173  ,jpy_g41
14:25:29 174  ,cad_g00
14:25:29 175  ,cad_g01
14:25:29 176  ,cad_g02
14:25:29 177  ,cad_g03
14:25:29 178  ,cad_g04
14:25:29 179  ,cad_g05
14:25:29 180  ,cad_g06
14:25:29 181  ,cad_g07
14:25:29 182  ,cad_g08
14:25:29 183  ,cad_g09
14:25:29 184  ,cad_g10
14:25:29 185  ,cad_g11
14:25:29 186  ,cad_g12
14:25:29 187  ,cad_g13
14:25:29 188  ,cad_g14
14:25:29 189  ,cad_g15
14:25:29 190  ,cad_g16
14:25:29 191  ,cad_g17
14:25:29 192  ,cad_g18
14:25:29 193  ,cad_g19
14:25:29 194  ,cad_g20
14:25:29 195  ,cad_g21
14:25:29 196  ,cad_g22
14:25:29 197  ,cad_g23
14:25:29 198  ,cad_g24
14:25:29 199  ,cad_g25
14:25:29 200  ,cad_g26
14:25:29 201  ,cad_g27
14:25:29 202  ,cad_g28
14:25:29 203  ,cad_g29
14:25:29 204  ,cad_g30
14:25:29 205  ,cad_g31
14:25:29 206  ,cad_g32
14:25:29 207  ,cad_g33
14:25:29 208  ,cad_g34
14:25:29 209  ,cad_g35
14:25:29 210  ,cad_g36
14:25:29 211  ,cad_g37
14:25:29 212  ,cad_g38
14:25:29 213  ,cad_g39
14:25:29 214  ,cad_g40
14:25:29 215  ,cad_g41
14:25:29 216  ,chf_g00
14:25:29 217  ,chf_g01
14:25:29 218  ,chf_g02
14:25:29 219  ,chf_g03
14:25:29 220  ,chf_g04
14:25:29 221  ,chf_g05
14:25:29 222  ,chf_g06
14:25:29 223  ,chf_g07
14:25:29 224  ,chf_g08
14:25:29 225  ,chf_g09
14:25:29 226  ,chf_g10
14:25:29 227  ,chf_g11
14:25:29 228  ,chf_g12
14:25:29 229  ,chf_g13
14:25:29 230  ,chf_g14
14:25:29 231  ,chf_g15
14:25:29 232  ,chf_g16
14:25:29 233  ,chf_g17
14:25:29 234  ,chf_g18
14:25:29 235  ,chf_g19
14:25:29 236  ,chf_g20
14:25:29 237  ,chf_g21
14:25:29 238  ,chf_g22
14:25:29 239  ,chf_g23
14:25:29 240  ,chf_g24
14:25:29 241  ,chf_g25
14:25:29 242  ,chf_g26
14:25:29 243  ,chf_g27
14:25:29 244  ,chf_g28
14:25:29 245  ,chf_g29
14:25:29 246  ,chf_g30
14:25:29 247  ,chf_g31
14:25:29 248  ,chf_g32
14:25:29 249  ,chf_g33
14:25:29 250  ,chf_g34
14:25:29 251  ,chf_g35
14:25:29 252  ,chf_g36
14:25:29 253  ,chf_g37
14:25:29 254  ,chf_g38
14:25:29 255  ,chf_g39
14:25:29 256  ,chf_g40
14:25:29 257  ,chf_g41
14:25:29 258  FROM aud_ms6 m
14:25:29 259  WHERE m.ydate = '&1'||' '||'&2'
14:25:29 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'14:15:00'

View created.

Elapsed: 00:00:00.12
14:25:30 SQL> 
14:25:30 SQL> -- rpt
14:25:30 SQL> -- We should see just 1 row:
14:25:30 SQL> 
14:25:30 SQL> SELECT COUNT(prdate) FROM sme
14:25:30   2  
14:25:30 SQL> -- Build the model:
14:25:30 SQL> CREATE OR REPLACE VIEW bme AS
14:25:30   2  SELECT
14:25:30   3  'aud'||m.ydate prdate
14:25:30   4  ,gatt
14:25:30   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:25:30   6  ,eur_g00
14:25:30   7  ,eur_g01
14:25:30   8  ,eur_g02
14:25:30   9  ,eur_g03
14:25:30  10  ,eur_g04
14:25:30  11  ,eur_g05
14:25:30  12  ,eur_g06
14:25:30  13  ,eur_g07
14:25:30  14  ,eur_g08
14:25:30  15  ,eur_g09
14:25:30  16  ,eur_g10
14:25:30  17  ,eur_g11
14:25:30  18  ,eur_g12
14:25:30  19  ,eur_g13
14:25:30  20  ,eur_g14
14:25:30  21  ,eur_g15
14:25:30  22  ,eur_g16
14:25:30  23  ,eur_g17
14:25:30  24  ,eur_g18
14:25:30  25  ,eur_g19
14:25:30  26  ,eur_g20
14:25:30  27  ,eur_g21
14:25:30  28  ,eur_g22
14:25:30  29  ,eur_g23
14:25:30  30  ,eur_g24
14:25:30  31  ,eur_g25
14:25:30  32  ,eur_g26
14:25:30  33  ,eur_g27
14:25:30  34  ,eur_g28
14:25:30  35  ,eur_g29
14:25:30  36  ,eur_g30
14:25:30  37  ,eur_g31
14:25:30  38  ,eur_g32
14:25:30  39  ,eur_g33
14:25:30  40  ,eur_g34
14:25:30  41  ,eur_g35
14:25:30  42  ,eur_g36
14:25:30  43  ,eur_g37
14:25:30  44  ,eur_g38
14:25:30  45  ,eur_g39
14:25:30  46  ,eur_g40
14:25:30  47  ,eur_g41
14:25:30  48  ,aud_g00
14:25:30  49  ,aud_g01
14:25:30  50  ,aud_g02
14:25:30  51  ,aud_g03
14:25:30  52  ,aud_g04
14:25:30  53  ,aud_g05
14:25:30  54  ,aud_g06
14:25:30  55  ,aud_g07
14:25:30  56  ,aud_g08
14:25:30  57  ,aud_g09
14:25:30  58  ,aud_g10
14:25:30  59  ,aud_g11
14:25:30  60  ,aud_g12
14:25:30  61  ,aud_g13
14:25:30  62  ,aud_g14
14:25:30  63  ,aud_g15
14:25:30  64  ,aud_g16
14:25:30  65  ,aud_g17
14:25:30  66  ,aud_g18
14:25:30  67  ,aud_g19
14:25:30  68  ,aud_g20
14:25:30  69  ,aud_g21
14:25:30  70  ,aud_g22
14:25:30  71  ,aud_g23
14:25:30  72  ,aud_g24
14:25:30  73  ,aud_g25
14:25:30  74  ,aud_g26
14:25:30  75  ,aud_g27
14:25:30  76  ,aud_g28
14:25:30  77  ,aud_g29
14:25:30  78  ,aud_g30
14:25:30  79  ,aud_g31
14:25:30  80  ,aud_g32
14:25:30  81  ,aud_g33
14:25:30  82  ,aud_g34
14:25:30  83  ,aud_g35
14:25:30  84  ,aud_g36
14:25:30  85  ,aud_g37
14:25:30  86  ,aud_g38
14:25:30  87  ,aud_g39
14:25:30  88  ,aud_g40
14:25:30  89  ,aud_g41
14:25:30  90  ,gbp_g00
14:25:30  91  ,gbp_g01
14:25:30  92  ,gbp_g02
14:25:30  93  ,gbp_g03
14:25:30  94  ,gbp_g04
14:25:30  95  ,gbp_g05
14:25:30  96  ,gbp_g06
14:25:30  97  ,gbp_g07
14:25:30  98  ,gbp_g08
14:25:30  99  ,gbp_g09
14:25:30 100  ,gbp_g10
14:25:30 101  ,gbp_g11
14:25:30 102  ,gbp_g12
14:25:30 103  ,gbp_g13
14:25:30 104  ,gbp_g14
14:25:30 105  ,gbp_g15
14:25:30 106  ,gbp_g16
14:25:30 107  ,gbp_g17
14:25:30 108  ,gbp_g18
14:25:30 109  ,gbp_g19
14:25:30 110  ,gbp_g20
14:25:30 111  ,gbp_g21
14:25:30 112  ,gbp_g22
14:25:30 113  ,gbp_g23
14:25:30 114  ,gbp_g24
14:25:30 115  ,gbp_g25
14:25:30 116  ,gbp_g26
14:25:30 117  ,gbp_g27
14:25:30 118  ,gbp_g28
14:25:30 119  ,gbp_g29
14:25:30 120  ,gbp_g30
14:25:30 121  ,gbp_g31
14:25:30 122  ,gbp_g32
14:25:30 123  ,gbp_g33
14:25:30 124  ,gbp_g34
14:25:30 125  ,gbp_g35
14:25:30 126  ,gbp_g36
14:25:30 127  ,gbp_g37
14:25:30 128  ,gbp_g38
14:25:30 129  ,gbp_g39
14:25:30 130  ,gbp_g40
14:25:30 131  ,gbp_g41
14:25:30 132  ,jpy_g00
14:25:30 133  ,jpy_g01
14:25:30 134  ,jpy_g02
14:25:30 135  ,jpy_g03
14:25:30 136  ,jpy_g04
14:25:30 137  ,jpy_g05
14:25:30 138  ,jpy_g06
14:25:30 139  ,jpy_g07
14:25:30 140  ,jpy_g08
14:25:30 141  ,jpy_g09
14:25:30 142  ,jpy_g10
14:25:30 143  ,jpy_g11
14:25:30 144  ,jpy_g12
14:25:30 145  ,jpy_g13
14:25:30 146  ,jpy_g14
14:25:30 147  ,jpy_g15
14:25:30 148  ,jpy_g16
14:25:30 149  ,jpy_g17
14:25:30 150  ,jpy_g18
14:25:30 151  ,jpy_g19
14:25:30 152  ,jpy_g20
14:25:30 153  ,jpy_g21
14:25:30 154  ,jpy_g22
14:25:30 155  ,jpy_g23
14:25:30 156  ,jpy_g24
14:25:30 157  ,jpy_g25
14:25:30 158  ,jpy_g26
14:25:30 159  ,jpy_g27
14:25:30 160  ,jpy_g28
14:25:30 161  ,jpy_g29
14:25:30 162  ,jpy_g30
14:25:30 163  ,jpy_g31
14:25:30 164  ,jpy_g32
14:25:30 165  ,jpy_g33
14:25:30 166  ,jpy_g34
14:25:30 167  ,jpy_g35
14:25:30 168  ,jpy_g36
14:25:30 169  ,jpy_g37
14:25:30 170  ,jpy_g38
14:25:30 171  ,jpy_g39
14:25:30 172  ,jpy_g40
14:25:30 173  ,jpy_g41
14:25:30 174  ,cad_g00
14:25:30 175  ,cad_g01
14:25:30 176  ,cad_g02
14:25:30 177  ,cad_g03
14:25:30 178  ,cad_g04
14:25:30 179  ,cad_g05
14:25:30 180  ,cad_g06
14:25:30 181  ,cad_g07
14:25:30 182  ,cad_g08
14:25:30 183  ,cad_g09
14:25:30 184  ,cad_g10
14:25:30 185  ,cad_g11
14:25:30 186  ,cad_g12
14:25:30 187  ,cad_g13
14:25:30 188  ,cad_g14
14:25:30 189  ,cad_g15
14:25:30 190  ,cad_g16
14:25:30 191  ,cad_g17
14:25:30 192  ,cad_g18
14:25:30 193  ,cad_g19
14:25:30 194  ,cad_g20
14:25:30 195  ,cad_g21
14:25:30 196  ,cad_g22
14:25:30 197  ,cad_g23
14:25:30 198  ,cad_g24
14:25:30 199  ,cad_g25
14:25:30 200  ,cad_g26
14:25:30 201  ,cad_g27
14:25:30 202  ,cad_g28
14:25:30 203  ,cad_g29
14:25:30 204  ,cad_g30
14:25:30 205  ,cad_g31
14:25:30 206  ,cad_g32
14:25:30 207  ,cad_g33
14:25:30 208  ,cad_g34
14:25:30 209  ,cad_g35
14:25:30 210  ,cad_g36
14:25:30 211  ,cad_g37
14:25:30 212  ,cad_g38
14:25:30 213  ,cad_g39
14:25:30 214  ,cad_g40
14:25:30 215  ,cad_g41
14:25:30 216  ,chf_g00
14:25:30 217  ,chf_g01
14:25:30 218  ,chf_g02
14:25:30 219  ,chf_g03
14:25:30 220  ,chf_g04
14:25:30 221  ,chf_g05
14:25:30 222  ,chf_g06
14:25:30 223  ,chf_g07
14:25:30 224  ,chf_g08
14:25:30 225  ,chf_g09
14:25:30 226  ,chf_g10
14:25:30 227  ,chf_g11
14:25:30 228  ,chf_g12
14:25:30 229  ,chf_g13
14:25:30 230  ,chf_g14
14:25:30 231  ,chf_g15
14:25:30 232  ,chf_g16
14:25:30 233  ,chf_g17
14:25:30 234  ,chf_g18
14:25:30 235  ,chf_g19
14:25:30 236  ,chf_g20
14:25:30 237  ,chf_g21
14:25:30 238  ,chf_g22
14:25:30 239  ,chf_g23
14:25:30 240  ,chf_g24
14:25:30 241  ,chf_g25
14:25:30 242  ,chf_g26
14:25:30 243  ,chf_g27
14:25:30 244  ,chf_g28
14:25:30 245  ,chf_g29
14:25:30 246  ,chf_g30
14:25:30 247  ,chf_g31
14:25:30 248  ,chf_g32
14:25:30 249  ,chf_g33
14:25:30 250  ,chf_g34
14:25:30 251  ,chf_g35
14:25:30 252  ,chf_g36
14:25:30 253  ,chf_g37
14:25:30 254  ,chf_g38
14:25:30 255  ,chf_g39
14:25:30 256  ,chf_g40
14:25:30 257  ,chf_g41
14:25:30 258  FROM aud_ms6 m
14:25:30 259  WHERE gatt IN('nup','up')
14:25:30 260  AND 1+m.ydate < '&1'||' '||'&2'
14:25:30 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'14:15:00'

View created.

Elapsed: 00:00:00.13
14:25:30 SQL> 
14:25:30 SQL> -- rpt
14:25:30 SQL> 
14:25:30 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
14:25:30   2  
14:25:30 SQL> SELECT MAX(prdate) FROM bme
14:25:30   2  
14:25:30 SQL> -- Now build model from bme and score sme
14:25:30 SQL> @score1.sql
14:25:30 SQL> -- score1.sql
14:25:30 SQL> 
14:25:30 SQL> -- Does the 1st SVM score
14:25:30 SQL> 
14:25:30 SQL> -- Fill up svmc_apply_prep
14:25:30 SQL> @score.sql
14:25:30 SQL> --
14:25:30 SQL> -- score.sql
14:25:30 SQL> --
14:25:30 SQL> 
14:25:30 SQL> -- usage: score.sql
14:25:30 SQL> 
14:25:30 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
14:25:30 SQL> 
14:25:30 SQL> DEFINE target	= 'gatt'
14:25:30 SQL> DEFINE model_name = 'forex15'
14:25:30 SQL> DEFINE bldtable	= 'bme'
14:25:30 SQL> DEFINE scoretable = 'sme'
14:25:30 SQL> DEFINE case_id	= 'prdate'
14:25:30 SQL> 
14:25:30 SQL> -- Define a variable to help me exclude some columns from some data mining calls
14:25:30 SQL> DEFINE exclude1 = "'&target','&case_id'"
14:25:30 SQL> 
14:25:30 SQL> -- Builds an SVM model using pl/sql.
14:25:30 SQL> 
14:25:30 SQL> -----------------------------------------------------------------------
14:25:30 SQL> --			    BUILD THE MODEL
14:25:30 SQL> -----------------------------------------------------------------------
14:25:30 SQL> 
14:25:30 SQL> -- Cleanup old build data preparation objects for repeat runs
14:25:30 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
14:25:30 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
14:25:30 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
14:25:30 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
14:25:30 SQL> 
14:25:30 SQL> 
14:25:30 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
14:25:30 SQL> --
14:25:30 SQL> -- DROP	TABLE svmc_settings ;
14:25:30 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
14:25:30 SQL> -- DELETE svmc_settings;
14:25:30 SQL> 
14:25:30 SQL> -- The default classification algorithm is Naive Bayes. So override
14:25:30 SQL> -- this choice to SVM using a settings table.
14:25:30 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
14:25:30 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
14:25:30 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
14:25:30 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
14:25:30 SQL> -- models.
14:25:30 SQL> --
14:25:30 SQL> 
14:25:30 SQL> -- Do this once and then comment it out.
14:25:30 SQL> -- That makes script go faster.
14:25:30 SQL> -- BEGIN
14:25:30 SQL> -- -- Populate settings table
14:25:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:25:30 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
14:25:30 SQL> --
14:25:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:25:30 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
14:25:30 SQL> --
14:25:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:25:30 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
14:25:30 SQL> --   COMMIT;
14:25:30 SQL> -- END;
14:25:30 SQL> -- /
14:25:30 SQL> 
14:25:30 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
14:25:30 SQL> 
14:25:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
14:25:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:25:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.26
14:25:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
14:25:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:25:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
14:25:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
14:25:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:25:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:25:30 SQL> 
14:25:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
14:25:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:25:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:25:30 SQL> 
14:25:30 SQL> --------------------------------
14:25:30 SQL> -- PREPARE BUILD (TRAINING) DATA
14:25:30 SQL> --
14:25:30 SQL> 
14:25:30 SQL> -- 1. Missing Value treatment for all Predictors and
14:25:30 SQL> -- 2. Outlier Treatment and
14:25:30 SQL> -- 3. Normalization are performed below.
14:25:30 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
14:25:30 SQL> --    normalized here.
14:25:30 SQL> 
14:25:30 SQL> BEGIN
14:25:30   2  	-- Perform missing value treatment for all predictors
14:25:30   3  	-- create miss tables
14:25:30   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
14:25:30   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
14:25:30   6  
14:25:30   7  	-- populate miss tables
14:25:30   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
14:25:30   9  	  miss_table_name => 'svmc_miss_num',
14:25:30  10  	  data_table_name => '&bldtable',
14:25:30  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:25:30  12  
14:25:30  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
14:25:30  14  	  miss_table_name => 'svmc_miss_cat',
14:25:30  15  	  data_table_name => '&bldtable',
14:25:30  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:25:30  17  
14:25:30  18  	-- xform input data to replace missing values
14:25:30  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:25:30  20  	  miss_table_name => 'svmc_miss_num',
14:25:30  21  	  data_table_name => '&bldtable',
14:25:30  22  	  xform_view_name => 'xformed_build_miss_num');
14:25:30  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:25:30  24  	  miss_table_name => 'svmc_miss_cat',
14:25:30  25  	  data_table_name => '&bldtable',
14:25:30  26  	  xform_view_name => 'xformed_build_miss_cat');
14:25:30  27  
14:25:30  28  	-- Perform outlier treatment.
14:25:30  29  	-- create clip table
14:25:30  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
14:25:30  31  
14:25:30  32  	-- populate clip table
14:25:30  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
14:25:30  34  	  clip_table_name => 'svmc_clip',
14:25:30  35  	  data_table_name => '&bldtable',
14:25:30  36  	  tail_frac	  => 0.025,
14:25:30  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:25:30  38  
14:25:30  39  	-- xform input data to winsorized data
14:25:30  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
14:25:30  41  	  clip_table_name => 'svmc_clip',
14:25:30  42  	  data_table_name => '&bldtable',
14:25:30  43  	  xform_view_name => 'svmc_winsor');
14:25:30  44  
14:25:30  45  	-- create normalization table
14:25:30  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
14:25:30  47  
14:25:30  48  	-- populate normalization table based on winsorized data
14:25:30  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
14:25:30  50  	  norm_table_name => 'svmc_norm',
14:25:30  51  	  data_table_name => 'svmc_winsor',
14:25:30  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:25:30  53  
14:25:30  54  	-- normalize the original data
14:25:30  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:25:30  56  	  norm_table_name => 'svmc_norm',
14:25:30  57  	  data_table_name => '&bldtable',
14:25:30  58  	  xform_view_name => 'svmc_build_prep');
14:25:30  59  END;
14:25:30  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.63
14:25:49 SQL> 
14:25:49 SQL> ---------------------
14:25:49 SQL> -- CREATE A NEW MODEL
14:25:49 SQL> --
14:25:49 SQL> -- Cleanup old model with the same name for repeat runs
14:25:49 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
14:25:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:25:49   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.04
14:25:50 SQL> 
14:25:50 SQL> -- Build a new SVM Model
14:25:50 SQL> BEGIN
14:25:50   2  	DBMS_DATA_MINING.CREATE_MODEL(
14:25:50   3  	  model_name	      => '&model_name',
14:25:50   4  	  mining_function     => dbms_data_mining.classification,
14:25:50   5  	  data_table_name     => 'svmc_build_prep',
14:25:50   6  	  case_id_column_name => '&case_id',
14:25:50   7  	  target_column_name  => '&target',
14:25:50   8  	  settings_table_name => 'svmc_settings');
14:25:50   9  END;
14:25:50  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.05
14:26:17 SQL> 
14:26:17 SQL> -----------------------------------------------------------------------
14:26:17 SQL> --			       APPLY/score THE MODEL
14:26:17 SQL> -----------------------------------------------------------------------
14:26:17 SQL> 
14:26:17 SQL> -- Cleanup old scoring data preparation objects for repeat runs
14:26:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
14:26:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:26:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
14:26:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
14:26:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:26:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:26:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
14:26:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:26:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:26:17 SQL> -----------------------
14:26:17 SQL> -- PREPARE SCORING DATA
14:26:17 SQL> --
14:26:17 SQL> -- If the data for model creation has been prepared, then the data
14:26:17 SQL> -- to be scored using the model must be prepared in the same manner
14:26:17 SQL> -- in order to obtain meaningful results.
14:26:17 SQL> --
14:26:17 SQL> -- 1. Missing Value treatment for all Predictors and
14:26:17 SQL> -- 2. Normalization
14:26:17 SQL> -- No outlier treatment will be performed during test and apply. The
14:26:17 SQL> -- normalization step is sufficient, since the normalization parameters
14:26:17 SQL> -- already capture the effects of outlier treatment done with build data.
14:26:17 SQL> --
14:26:17 SQL> BEGIN
14:26:17   2  	-- Xform Test data to replace missing values
14:26:17   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:26:17   4  	  miss_table_name => 'svmc_miss_num',
14:26:17   5  	  data_table_name => '&scoretable',
14:26:17   6  	  xform_view_name => 'xformed_apply_miss_num');
14:26:17   7  
14:26:17   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:26:17   9  	  miss_table_name => 'svmc_miss_cat',
14:26:17  10  	  data_table_name => '&scoretable',
14:26:17  11  	  xform_view_name => 'xformed_apply_miss_cat');
14:26:17  12  
14:26:17  13  	-- Normalize the data to be scored
14:26:17  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:26:17  15  	  norm_table_name => 'svmc_norm',
14:26:17  16  	  data_table_name => '&scoretable',
14:26:17  17  	  xform_view_name => 'svmc_apply_prep');
14:26:17  18  END;
14:26:17  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.36
14:26:18 SQL> 
14:26:18 SQL> -- Use same model_name used in score.sql
14:26:18 SQL> DEFINE model_name = 'forex15'
14:26:18 SQL> 
14:26:18 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
14:26:18 SQL> 
14:26:18 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
14:26:18 SQL> 
14:26:18 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
14:26:18   2  SELECT
14:26:18   3  prdate
14:26:18   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
14:26:18   5  ,sysdate
14:26:18   6  ,SUBSTR(prdate,1,3)pair
14:26:18   7  ,SUBSTR(prdate,4,19)ydate
14:26:18   8  FROM svmc_apply_prep
14:26:18   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
14:26:19 SQL> @aud_score1day_gattn.sql	2011-01-05 14:00:00
14:26:19 SQL> --
14:26:19 SQL> -- aud_score1day_gattn.sql
14:26:19 SQL> --
14:26:19 SQL> 
14:26:19 SQL> CREATE OR REPLACE VIEW sme AS
14:26:19   2  SELECT
14:26:19   3  'aud'||m.ydate prdate
14:26:19   4  ,NULL gattn
14:26:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:26:19   6  ,eur_g00
14:26:19   7  ,eur_g01
14:26:19   8  ,eur_g02
14:26:19   9  ,eur_g03
14:26:19  10  ,eur_g04
14:26:19  11  ,eur_g05
14:26:19  12  ,eur_g06
14:26:19  13  ,eur_g07
14:26:19  14  ,eur_g08
14:26:19  15  ,eur_g09
14:26:19  16  ,eur_g10
14:26:19  17  ,eur_g11
14:26:19  18  ,eur_g12
14:26:19  19  ,eur_g13
14:26:19  20  ,eur_g14
14:26:19  21  ,eur_g15
14:26:19  22  ,eur_g16
14:26:19  23  ,eur_g17
14:26:19  24  ,eur_g18
14:26:19  25  ,eur_g19
14:26:19  26  ,eur_g20
14:26:19  27  ,eur_g21
14:26:19  28  ,eur_g22
14:26:19  29  ,eur_g23
14:26:19  30  ,eur_g24
14:26:19  31  ,eur_g25
14:26:19  32  ,eur_g26
14:26:19  33  ,eur_g27
14:26:19  34  ,eur_g28
14:26:19  35  ,eur_g29
14:26:19  36  ,eur_g30
14:26:19  37  ,eur_g31
14:26:19  38  ,eur_g32
14:26:19  39  ,eur_g33
14:26:19  40  ,eur_g34
14:26:19  41  ,eur_g35
14:26:19  42  ,eur_g36
14:26:19  43  ,eur_g37
14:26:19  44  ,eur_g38
14:26:19  45  ,eur_g39
14:26:19  46  ,eur_g40
14:26:19  47  ,eur_g41
14:26:19  48  ,aud_g00
14:26:19  49  ,aud_g01
14:26:19  50  ,aud_g02
14:26:19  51  ,aud_g03
14:26:19  52  ,aud_g04
14:26:19  53  ,aud_g05
14:26:19  54  ,aud_g06
14:26:19  55  ,aud_g07
14:26:19  56  ,aud_g08
14:26:19  57  ,aud_g09
14:26:19  58  ,aud_g10
14:26:19  59  ,aud_g11
14:26:19  60  ,aud_g12
14:26:19  61  ,aud_g13
14:26:19  62  ,aud_g14
14:26:19  63  ,aud_g15
14:26:19  64  ,aud_g16
14:26:19  65  ,aud_g17
14:26:19  66  ,aud_g18
14:26:19  67  ,aud_g19
14:26:19  68  ,aud_g20
14:26:19  69  ,aud_g21
14:26:19  70  ,aud_g22
14:26:19  71  ,aud_g23
14:26:19  72  ,aud_g24
14:26:19  73  ,aud_g25
14:26:19  74  ,aud_g26
14:26:19  75  ,aud_g27
14:26:19  76  ,aud_g28
14:26:19  77  ,aud_g29
14:26:19  78  ,aud_g30
14:26:19  79  ,aud_g31
14:26:19  80  ,aud_g32
14:26:19  81  ,aud_g33
14:26:19  82  ,aud_g34
14:26:19  83  ,aud_g35
14:26:19  84  ,aud_g36
14:26:19  85  ,aud_g37
14:26:19  86  ,aud_g38
14:26:19  87  ,aud_g39
14:26:19  88  ,aud_g40
14:26:19  89  ,aud_g41
14:26:19  90  ,gbp_g00
14:26:19  91  ,gbp_g01
14:26:19  92  ,gbp_g02
14:26:19  93  ,gbp_g03
14:26:19  94  ,gbp_g04
14:26:19  95  ,gbp_g05
14:26:19  96  ,gbp_g06
14:26:19  97  ,gbp_g07
14:26:19  98  ,gbp_g08
14:26:19  99  ,gbp_g09
14:26:19 100  ,gbp_g10
14:26:19 101  ,gbp_g11
14:26:19 102  ,gbp_g12
14:26:19 103  ,gbp_g13
14:26:19 104  ,gbp_g14
14:26:19 105  ,gbp_g15
14:26:19 106  ,gbp_g16
14:26:19 107  ,gbp_g17
14:26:19 108  ,gbp_g18
14:26:19 109  ,gbp_g19
14:26:19 110  ,gbp_g20
14:26:19 111  ,gbp_g21
14:26:19 112  ,gbp_g22
14:26:19 113  ,gbp_g23
14:26:19 114  ,gbp_g24
14:26:19 115  ,gbp_g25
14:26:19 116  ,gbp_g26
14:26:19 117  ,gbp_g27
14:26:19 118  ,gbp_g28
14:26:19 119  ,gbp_g29
14:26:19 120  ,gbp_g30
14:26:19 121  ,gbp_g31
14:26:19 122  ,gbp_g32
14:26:19 123  ,gbp_g33
14:26:19 124  ,gbp_g34
14:26:19 125  ,gbp_g35
14:26:19 126  ,gbp_g36
14:26:19 127  ,gbp_g37
14:26:19 128  ,gbp_g38
14:26:19 129  ,gbp_g39
14:26:19 130  ,gbp_g40
14:26:19 131  ,gbp_g41
14:26:19 132  ,jpy_g00
14:26:19 133  ,jpy_g01
14:26:19 134  ,jpy_g02
14:26:19 135  ,jpy_g03
14:26:19 136  ,jpy_g04
14:26:19 137  ,jpy_g05
14:26:19 138  ,jpy_g06
14:26:19 139  ,jpy_g07
14:26:19 140  ,jpy_g08
14:26:19 141  ,jpy_g09
14:26:19 142  ,jpy_g10
14:26:19 143  ,jpy_g11
14:26:19 144  ,jpy_g12
14:26:19 145  ,jpy_g13
14:26:19 146  ,jpy_g14
14:26:19 147  ,jpy_g15
14:26:19 148  ,jpy_g16
14:26:19 149  ,jpy_g17
14:26:19 150  ,jpy_g18
14:26:19 151  ,jpy_g19
14:26:19 152  ,jpy_g20
14:26:19 153  ,jpy_g21
14:26:19 154  ,jpy_g22
14:26:19 155  ,jpy_g23
14:26:19 156  ,jpy_g24
14:26:19 157  ,jpy_g25
14:26:19 158  ,jpy_g26
14:26:19 159  ,jpy_g27
14:26:19 160  ,jpy_g28
14:26:19 161  ,jpy_g29
14:26:19 162  ,jpy_g30
14:26:19 163  ,jpy_g31
14:26:19 164  ,jpy_g32
14:26:19 165  ,jpy_g33
14:26:19 166  ,jpy_g34
14:26:19 167  ,jpy_g35
14:26:19 168  ,jpy_g36
14:26:19 169  ,jpy_g37
14:26:19 170  ,jpy_g38
14:26:19 171  ,jpy_g39
14:26:19 172  ,jpy_g40
14:26:19 173  ,jpy_g41
14:26:19 174  ,cad_g00
14:26:19 175  ,cad_g01
14:26:19 176  ,cad_g02
14:26:19 177  ,cad_g03
14:26:19 178  ,cad_g04
14:26:19 179  ,cad_g05
14:26:19 180  ,cad_g06
14:26:19 181  ,cad_g07
14:26:19 182  ,cad_g08
14:26:19 183  ,cad_g09
14:26:19 184  ,cad_g10
14:26:19 185  ,cad_g11
14:26:19 186  ,cad_g12
14:26:19 187  ,cad_g13
14:26:19 188  ,cad_g14
14:26:19 189  ,cad_g15
14:26:19 190  ,cad_g16
14:26:19 191  ,cad_g17
14:26:19 192  ,cad_g18
14:26:19 193  ,cad_g19
14:26:19 194  ,cad_g20
14:26:19 195  ,cad_g21
14:26:19 196  ,cad_g22
14:26:19 197  ,cad_g23
14:26:19 198  ,cad_g24
14:26:19 199  ,cad_g25
14:26:19 200  ,cad_g26
14:26:19 201  ,cad_g27
14:26:19 202  ,cad_g28
14:26:19 203  ,cad_g29
14:26:19 204  ,cad_g30
14:26:19 205  ,cad_g31
14:26:19 206  ,cad_g32
14:26:19 207  ,cad_g33
14:26:19 208  ,cad_g34
14:26:19 209  ,cad_g35
14:26:19 210  ,cad_g36
14:26:19 211  ,cad_g37
14:26:19 212  ,cad_g38
14:26:19 213  ,cad_g39
14:26:19 214  ,cad_g40
14:26:19 215  ,cad_g41
14:26:19 216  ,chf_g00
14:26:19 217  ,chf_g01
14:26:19 218  ,chf_g02
14:26:19 219  ,chf_g03
14:26:19 220  ,chf_g04
14:26:19 221  ,chf_g05
14:26:19 222  ,chf_g06
14:26:19 223  ,chf_g07
14:26:19 224  ,chf_g08
14:26:19 225  ,chf_g09
14:26:19 226  ,chf_g10
14:26:19 227  ,chf_g11
14:26:19 228  ,chf_g12
14:26:19 229  ,chf_g13
14:26:19 230  ,chf_g14
14:26:19 231  ,chf_g15
14:26:19 232  ,chf_g16
14:26:19 233  ,chf_g17
14:26:19 234  ,chf_g18
14:26:19 235  ,chf_g19
14:26:19 236  ,chf_g20
14:26:19 237  ,chf_g21
14:26:19 238  ,chf_g22
14:26:19 239  ,chf_g23
14:26:19 240  ,chf_g24
14:26:19 241  ,chf_g25
14:26:19 242  ,chf_g26
14:26:19 243  ,chf_g27
14:26:19 244  ,chf_g28
14:26:19 245  ,chf_g29
14:26:19 246  ,chf_g30
14:26:19 247  ,chf_g31
14:26:19 248  ,chf_g32
14:26:19 249  ,chf_g33
14:26:19 250  ,chf_g34
14:26:19 251  ,chf_g35
14:26:19 252  ,chf_g36
14:26:19 253  ,chf_g37
14:26:19 254  ,chf_g38
14:26:19 255  ,chf_g39
14:26:19 256  ,chf_g40
14:26:19 257  ,chf_g41
14:26:19 258  FROM aud_ms6 m
14:26:19 259  WHERE m.ydate = '&1'||' '||'&2'
14:26:19 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'14:00:00'

View created.

Elapsed: 00:00:00.13
14:26:19 SQL> 
14:26:19 SQL> -- rpt
14:26:19 SQL> -- We should see just 1 row:
14:26:19 SQL> 
14:26:19 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
14:26:19 SQL> 
14:26:19 SQL> -- Build the model:
14:26:19 SQL> CREATE OR REPLACE VIEW bme AS
14:26:19   2  SELECT
14:26:19   3  'aud'||m.ydate prdate
14:26:19   4  ,gattn
14:26:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:26:19   6  ,eur_g00
14:26:19   7  ,eur_g01
14:26:19   8  ,eur_g02
14:26:19   9  ,eur_g03
14:26:19  10  ,eur_g04
14:26:19  11  ,eur_g05
14:26:19  12  ,eur_g06
14:26:19  13  ,eur_g07
14:26:19  14  ,eur_g08
14:26:19  15  ,eur_g09
14:26:19  16  ,eur_g10
14:26:19  17  ,eur_g11
14:26:19  18  ,eur_g12
14:26:19  19  ,eur_g13
14:26:19  20  ,eur_g14
14:26:19  21  ,eur_g15
14:26:19  22  ,eur_g16
14:26:19  23  ,eur_g17
14:26:19  24  ,eur_g18
14:26:19  25  ,eur_g19
14:26:19  26  ,eur_g20
14:26:19  27  ,eur_g21
14:26:19  28  ,eur_g22
14:26:19  29  ,eur_g23
14:26:19  30  ,eur_g24
14:26:19  31  ,eur_g25
14:26:19  32  ,eur_g26
14:26:19  33  ,eur_g27
14:26:19  34  ,eur_g28
14:26:19  35  ,eur_g29
14:26:19  36  ,eur_g30
14:26:19  37  ,eur_g31
14:26:19  38  ,eur_g32
14:26:19  39  ,eur_g33
14:26:19  40  ,eur_g34
14:26:19  41  ,eur_g35
14:26:19  42  ,eur_g36
14:26:19  43  ,eur_g37
14:26:19  44  ,eur_g38
14:26:19  45  ,eur_g39
14:26:19  46  ,eur_g40
14:26:19  47  ,eur_g41
14:26:19  48  ,aud_g00
14:26:19  49  ,aud_g01
14:26:19  50  ,aud_g02
14:26:19  51  ,aud_g03
14:26:19  52  ,aud_g04
14:26:19  53  ,aud_g05
14:26:19  54  ,aud_g06
14:26:19  55  ,aud_g07
14:26:19  56  ,aud_g08
14:26:19  57  ,aud_g09
14:26:19  58  ,aud_g10
14:26:19  59  ,aud_g11
14:26:19  60  ,aud_g12
14:26:19  61  ,aud_g13
14:26:19  62  ,aud_g14
14:26:19  63  ,aud_g15
14:26:19  64  ,aud_g16
14:26:19  65  ,aud_g17
14:26:19  66  ,aud_g18
14:26:19  67  ,aud_g19
14:26:19  68  ,aud_g20
14:26:19  69  ,aud_g21
14:26:19  70  ,aud_g22
14:26:19  71  ,aud_g23
14:26:19  72  ,aud_g24
14:26:19  73  ,aud_g25
14:26:19  74  ,aud_g26
14:26:19  75  ,aud_g27
14:26:19  76  ,aud_g28
14:26:19  77  ,aud_g29
14:26:19  78  ,aud_g30
14:26:19  79  ,aud_g31
14:26:19  80  ,aud_g32
14:26:19  81  ,aud_g33
14:26:19  82  ,aud_g34
14:26:19  83  ,aud_g35
14:26:19  84  ,aud_g36
14:26:19  85  ,aud_g37
14:26:19  86  ,aud_g38
14:26:19  87  ,aud_g39
14:26:19  88  ,aud_g40
14:26:19  89  ,aud_g41
14:26:19  90  ,gbp_g00
14:26:19  91  ,gbp_g01
14:26:19  92  ,gbp_g02
14:26:19  93  ,gbp_g03
14:26:19  94  ,gbp_g04
14:26:19  95  ,gbp_g05
14:26:19  96  ,gbp_g06
14:26:19  97  ,gbp_g07
14:26:19  98  ,gbp_g08
14:26:19  99  ,gbp_g09
14:26:19 100  ,gbp_g10
14:26:19 101  ,gbp_g11
14:26:19 102  ,gbp_g12
14:26:19 103  ,gbp_g13
14:26:19 104  ,gbp_g14
14:26:19 105  ,gbp_g15
14:26:19 106  ,gbp_g16
14:26:19 107  ,gbp_g17
14:26:19 108  ,gbp_g18
14:26:19 109  ,gbp_g19
14:26:19 110  ,gbp_g20
14:26:19 111  ,gbp_g21
14:26:19 112  ,gbp_g22
14:26:19 113  ,gbp_g23
14:26:19 114  ,gbp_g24
14:26:19 115  ,gbp_g25
14:26:19 116  ,gbp_g26
14:26:19 117  ,gbp_g27
14:26:19 118  ,gbp_g28
14:26:19 119  ,gbp_g29
14:26:19 120  ,gbp_g30
14:26:19 121  ,gbp_g31
14:26:19 122  ,gbp_g32
14:26:19 123  ,gbp_g33
14:26:19 124  ,gbp_g34
14:26:19 125  ,gbp_g35
14:26:19 126  ,gbp_g36
14:26:19 127  ,gbp_g37
14:26:19 128  ,gbp_g38
14:26:19 129  ,gbp_g39
14:26:19 130  ,gbp_g40
14:26:19 131  ,gbp_g41
14:26:19 132  ,jpy_g00
14:26:19 133  ,jpy_g01
14:26:19 134  ,jpy_g02
14:26:19 135  ,jpy_g03
14:26:19 136  ,jpy_g04
14:26:19 137  ,jpy_g05
14:26:19 138  ,jpy_g06
14:26:19 139  ,jpy_g07
14:26:19 140  ,jpy_g08
14:26:19 141  ,jpy_g09
14:26:19 142  ,jpy_g10
14:26:19 143  ,jpy_g11
14:26:19 144  ,jpy_g12
14:26:19 145  ,jpy_g13
14:26:19 146  ,jpy_g14
14:26:19 147  ,jpy_g15
14:26:19 148  ,jpy_g16
14:26:19 149  ,jpy_g17
14:26:19 150  ,jpy_g18
14:26:19 151  ,jpy_g19
14:26:19 152  ,jpy_g20
14:26:19 153  ,jpy_g21
14:26:19 154  ,jpy_g22
14:26:19 155  ,jpy_g23
14:26:19 156  ,jpy_g24
14:26:19 157  ,jpy_g25
14:26:19 158  ,jpy_g26
14:26:19 159  ,jpy_g27
14:26:19 160  ,jpy_g28
14:26:19 161  ,jpy_g29
14:26:19 162  ,jpy_g30
14:26:19 163  ,jpy_g31
14:26:19 164  ,jpy_g32
14:26:19 165  ,jpy_g33
14:26:19 166  ,jpy_g34
14:26:19 167  ,jpy_g35
14:26:19 168  ,jpy_g36
14:26:19 169  ,jpy_g37
14:26:19 170  ,jpy_g38
14:26:19 171  ,jpy_g39
14:26:19 172  ,jpy_g40
14:26:19 173  ,jpy_g41
14:26:19 174  ,cad_g00
14:26:19 175  ,cad_g01
14:26:19 176  ,cad_g02
14:26:19 177  ,cad_g03
14:26:19 178  ,cad_g04
14:26:19 179  ,cad_g05
14:26:19 180  ,cad_g06
14:26:19 181  ,cad_g07
14:26:19 182  ,cad_g08
14:26:19 183  ,cad_g09
14:26:19 184  ,cad_g10
14:26:19 185  ,cad_g11
14:26:19 186  ,cad_g12
14:26:19 187  ,cad_g13
14:26:19 188  ,cad_g14
14:26:19 189  ,cad_g15
14:26:19 190  ,cad_g16
14:26:19 191  ,cad_g17
14:26:19 192  ,cad_g18
14:26:19 193  ,cad_g19
14:26:19 194  ,cad_g20
14:26:19 195  ,cad_g21
14:26:19 196  ,cad_g22
14:26:19 197  ,cad_g23
14:26:19 198  ,cad_g24
14:26:19 199  ,cad_g25
14:26:19 200  ,cad_g26
14:26:19 201  ,cad_g27
14:26:19 202  ,cad_g28
14:26:19 203  ,cad_g29
14:26:19 204  ,cad_g30
14:26:19 205  ,cad_g31
14:26:19 206  ,cad_g32
14:26:19 207  ,cad_g33
14:26:19 208  ,cad_g34
14:26:19 209  ,cad_g35
14:26:19 210  ,cad_g36
14:26:19 211  ,cad_g37
14:26:19 212  ,cad_g38
14:26:19 213  ,cad_g39
14:26:19 214  ,cad_g40
14:26:19 215  ,cad_g41
14:26:19 216  ,chf_g00
14:26:19 217  ,chf_g01
14:26:19 218  ,chf_g02
14:26:19 219  ,chf_g03
14:26:19 220  ,chf_g04
14:26:19 221  ,chf_g05
14:26:19 222  ,chf_g06
14:26:19 223  ,chf_g07
14:26:19 224  ,chf_g08
14:26:19 225  ,chf_g09
14:26:19 226  ,chf_g10
14:26:19 227  ,chf_g11
14:26:19 228  ,chf_g12
14:26:19 229  ,chf_g13
14:26:19 230  ,chf_g14
14:26:19 231  ,chf_g15
14:26:19 232  ,chf_g16
14:26:19 233  ,chf_g17
14:26:19 234  ,chf_g18
14:26:19 235  ,chf_g19
14:26:19 236  ,chf_g20
14:26:19 237  ,chf_g21
14:26:19 238  ,chf_g22
14:26:19 239  ,chf_g23
14:26:19 240  ,chf_g24
14:26:19 241  ,chf_g25
14:26:19 242  ,chf_g26
14:26:19 243  ,chf_g27
14:26:19 244  ,chf_g28
14:26:19 245  ,chf_g29
14:26:19 246  ,chf_g30
14:26:19 247  ,chf_g31
14:26:19 248  ,chf_g32
14:26:19 249  ,chf_g33
14:26:19 250  ,chf_g34
14:26:19 251  ,chf_g35
14:26:19 252  ,chf_g36
14:26:19 253  ,chf_g37
14:26:19 254  ,chf_g38
14:26:19 255  ,chf_g39
14:26:19 256  ,chf_g40
14:26:19 257  ,chf_g41
14:26:19 258  FROM aud_ms6 m
14:26:19 259  WHERE gattn IN('nup','up')
14:26:19 260  AND 1+m.ydate < '&1'||' '||'&2'
14:26:19 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'14:00:00'

View created.

Elapsed: 00:00:00.21
14:26:19 SQL> 
14:26:19 SQL> -- rpt
14:26:19 SQL> 
14:26:19 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12704
up	     6444

Elapsed: 00:00:00.05
14:26:19 SQL> 
14:26:19 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-04 13:55:00

Elapsed: 00:00:00.04
14:26:19 SQL> 
14:26:19 SQL> -- Now build model from bme and score sme
14:26:19 SQL> @score1gattn.sql
14:26:19 SQL> -- score1gattn.sql
14:26:19 SQL> 
14:26:19 SQL> -- Does the 1st SVM score
14:26:19 SQL> 
14:26:19 SQL> -- Fill up svmc_apply_prep
14:26:19 SQL> @score_gattn.sql
14:26:19 SQL> --
14:26:19 SQL> -- score_gattn.sql
14:26:19 SQL> --
14:26:19 SQL> 
14:26:19 SQL> -- usage: score_gattn.sql
14:26:19 SQL> 
14:26:19 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
14:26:19 SQL> 
14:26:19 SQL> DEFINE target	= 'gattn'
14:26:19 SQL> DEFINE model_name = 'forex15'
14:26:19 SQL> DEFINE bldtable	= 'bme'
14:26:19 SQL> DEFINE scoretable = 'sme'
14:26:19 SQL> DEFINE case_id	= 'prdate'
14:26:19 SQL> 
14:26:19 SQL> -- Define a variable to help me exclude some columns from some data mining calls
14:26:19 SQL> DEFINE exclude1 = "'&target','&case_id'"
14:26:19 SQL> 
14:26:19 SQL> -- Builds an SVM model using pl/sql.
14:26:19 SQL> 
14:26:19 SQL> -----------------------------------------------------------------------
14:26:19 SQL> --			    BUILD THE MODEL
14:26:19 SQL> -----------------------------------------------------------------------
14:26:19 SQL> 
14:26:19 SQL> -- Cleanup old build data preparation objects for repeat runs
14:26:19 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
14:26:19 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
14:26:19 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
14:26:19 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
14:26:19 SQL> 
14:26:19 SQL> 
14:26:19 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
14:26:19 SQL> --
14:26:19 SQL> -- DROP	TABLE svmc_settings ;
14:26:19 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
14:26:19 SQL> -- DELETE svmc_settings;
14:26:19 SQL> 
14:26:19 SQL> -- The default classification algorithm is Naive Bayes. So override
14:26:19 SQL> -- this choice to SVM using a settings table.
14:26:19 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
14:26:19 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
14:26:19 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
14:26:19 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
14:26:19 SQL> -- models.
14:26:19 SQL> --
14:26:19 SQL> 
14:26:19 SQL> -- Do this once and then comment it out.
14:26:19 SQL> -- That makes script go faster.
14:26:19 SQL> -- BEGIN
14:26:19 SQL> -- -- Populate settings table
14:26:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:26:19 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
14:26:19 SQL> --
14:26:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:26:19 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
14:26:19 SQL> --
14:26:19 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:26:19 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
14:26:19 SQL> --   COMMIT;
14:26:19 SQL> -- END;
14:26:19 SQL> -- /
14:26:19 SQL> 
14:26:19 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
14:26:19 SQL> 
14:26:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
14:26:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:26:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:26:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
14:26:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:26:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:26:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
14:26:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:26:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:26:19 SQL> 
14:26:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
14:26:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:26:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:26:19 SQL> 
14:26:19 SQL> --------------------------------
14:26:19 SQL> -- PREPARE BUILD (TRAINING) DATA
14:26:19 SQL> --
14:26:19 SQL> 
14:26:19 SQL> -- 1. Missing Value treatment for all Predictors and
14:26:19 SQL> -- 2. Outlier Treatment and
14:26:19 SQL> -- 3. Normalization are performed below.
14:26:19 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
14:26:19 SQL> --    normalized here.
14:26:19 SQL> 
14:26:19 SQL> BEGIN
14:26:19   2  	-- Perform missing value treatment for all predictors
14:26:19   3  	-- create miss tables
14:26:19   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
14:26:19   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
14:26:19   6  
14:26:19   7  	-- populate miss tables
14:26:19   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
14:26:19   9  	  miss_table_name => 'svmc_miss_num',
14:26:19  10  	  data_table_name => '&bldtable',
14:26:19  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:26:19  12  
14:26:19  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
14:26:19  14  	  miss_table_name => 'svmc_miss_cat',
14:26:19  15  	  data_table_name => '&bldtable',
14:26:19  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:26:19  17  
14:26:19  18  	-- xform input data to replace missing values
14:26:19  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:26:19  20  	  miss_table_name => 'svmc_miss_num',
14:26:19  21  	  data_table_name => '&bldtable',
14:26:19  22  	  xform_view_name => 'xformed_build_miss_num');
14:26:19  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:26:19  24  	  miss_table_name => 'svmc_miss_cat',
14:26:19  25  	  data_table_name => '&bldtable',
14:26:19  26  	  xform_view_name => 'xformed_build_miss_cat');
14:26:19  27  
14:26:19  28  	-- Perform outlier treatment.
14:26:19  29  	-- create clip table
14:26:19  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
14:26:19  31  
14:26:19  32  	-- populate clip table
14:26:19  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
14:26:19  34  	  clip_table_name => 'svmc_clip',
14:26:19  35  	  data_table_name => '&bldtable',
14:26:19  36  	  tail_frac	  => 0.025,
14:26:19  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:26:19  38  
14:26:19  39  	-- xform input data to winsorized data
14:26:19  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
14:26:19  41  	  clip_table_name => 'svmc_clip',
14:26:19  42  	  data_table_name => '&bldtable',
14:26:19  43  	  xform_view_name => 'svmc_winsor');
14:26:19  44  
14:26:19  45  	-- create normalization table
14:26:19  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
14:26:19  47  
14:26:19  48  	-- populate normalization table based on winsorized data
14:26:19  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
14:26:19  50  	  norm_table_name => 'svmc_norm',
14:26:19  51  	  data_table_name => 'svmc_winsor',
14:26:19  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:26:19  53  
14:26:19  54  	-- normalize the original data
14:26:19  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:26:19  56  	  norm_table_name => 'svmc_norm',
14:26:19  57  	  data_table_name => '&bldtable',
14:26:19  58  	  xform_view_name => 'svmc_build_prep');
14:26:19  59  END;
14:26:19  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.53
14:26:38 SQL> 
14:26:38 SQL> ---------------------
14:26:38 SQL> -- CREATE A NEW MODEL
14:26:38 SQL> --
14:26:38 SQL> -- Cleanup old model with the same name for repeat runs
14:26:38 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
14:26:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:26:38   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.98
14:26:39 SQL> 
14:26:39 SQL> -- Build a new SVM Model
14:26:39 SQL> BEGIN
14:26:39   2  	DBMS_DATA_MINING.CREATE_MODEL(
14:26:39   3  	  model_name	      => '&model_name',
14:26:39   4  	  mining_function     => dbms_data_mining.classification,
14:26:39   5  	  data_table_name     => 'svmc_build_prep',
14:26:39   6  	  case_id_column_name => '&case_id',
14:26:39   7  	  target_column_name  => '&target',
14:26:39   8  	  settings_table_name => 'svmc_settings');
14:26:39   9  END;
14:26:39  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.40
14:27:06 SQL> 
14:27:06 SQL> -----------------------------------------------------------------------
14:27:06 SQL> --			       APPLY/score THE MODEL
14:27:06 SQL> -----------------------------------------------------------------------
14:27:06 SQL> 
14:27:06 SQL> -- Cleanup old scoring data preparation objects for repeat runs
14:27:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
14:27:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:27:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
14:27:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
14:27:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:27:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:27:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
14:27:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:27:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:27:06 SQL> -----------------------
14:27:06 SQL> -- PREPARE SCORING DATA
14:27:06 SQL> --
14:27:06 SQL> -- If the data for model creation has been prepared, then the data
14:27:06 SQL> -- to be scored using the model must be prepared in the same manner
14:27:06 SQL> -- in order to obtain meaningful results.
14:27:06 SQL> --
14:27:06 SQL> -- 1. Missing Value treatment for all Predictors and
14:27:06 SQL> -- 2. Normalization
14:27:06 SQL> -- No outlier treatment will be performed during test and apply. The
14:27:06 SQL> -- normalization step is sufficient, since the normalization parameters
14:27:06 SQL> -- already capture the effects of outlier treatment done with build data.
14:27:06 SQL> --
14:27:06 SQL> BEGIN
14:27:06   2  	-- Xform Test data to replace missing values
14:27:06   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:27:06   4  	  miss_table_name => 'svmc_miss_num',
14:27:06   5  	  data_table_name => '&scoretable',
14:27:06   6  	  xform_view_name => 'xformed_apply_miss_num');
14:27:06   7  
14:27:06   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:27:06   9  	  miss_table_name => 'svmc_miss_cat',
14:27:06  10  	  data_table_name => '&scoretable',
14:27:06  11  	  xform_view_name => 'xformed_apply_miss_cat');
14:27:06  12  
14:27:06  13  	-- Normalize the data to be scored
14:27:06  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:27:06  15  	  norm_table_name => 'svmc_norm',
14:27:06  16  	  data_table_name => '&scoretable',
14:27:06  17  	  xform_view_name => 'svmc_apply_prep');
14:27:06  18  END;
14:27:06  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.46
14:27:08 SQL> 
14:27:08 SQL> -- Use same model_name used in score_gattn.sql
14:27:08 SQL> DEFINE model_name = 'forex15'
14:27:08 SQL> 
14:27:08 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
14:27:08 SQL> 
14:27:08 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
14:27:08   2  SELECT
14:27:08   3  prdate
14:27:08   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
14:27:08   5  ,sysdate
14:27:08   6  ,SUBSTR(prdate,1,3)pair
14:27:08   7  ,SUBSTR(prdate,4,19)ydate
14:27:08   8  FROM svmc_apply_prep
14:27:08   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
14:27:08 SQL> @aud_score1day_gattn.sql	2011-01-05 14:05:00
14:27:08 SQL> --
14:27:08 SQL> -- aud_score1day_gattn.sql
14:27:08 SQL> --
14:27:08 SQL> 
14:27:08 SQL> CREATE OR REPLACE VIEW sme AS
14:27:08   2  SELECT
14:27:08   3  'aud'||m.ydate prdate
14:27:08   4  ,NULL gattn
14:27:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:27:08   6  ,eur_g00
14:27:08   7  ,eur_g01
14:27:08   8  ,eur_g02
14:27:08   9  ,eur_g03
14:27:08  10  ,eur_g04
14:27:08  11  ,eur_g05
14:27:08  12  ,eur_g06
14:27:08  13  ,eur_g07
14:27:08  14  ,eur_g08
14:27:08  15  ,eur_g09
14:27:08  16  ,eur_g10
14:27:08  17  ,eur_g11
14:27:08  18  ,eur_g12
14:27:08  19  ,eur_g13
14:27:08  20  ,eur_g14
14:27:08  21  ,eur_g15
14:27:08  22  ,eur_g16
14:27:08  23  ,eur_g17
14:27:08  24  ,eur_g18
14:27:08  25  ,eur_g19
14:27:08  26  ,eur_g20
14:27:08  27  ,eur_g21
14:27:08  28  ,eur_g22
14:27:08  29  ,eur_g23
14:27:08  30  ,eur_g24
14:27:08  31  ,eur_g25
14:27:08  32  ,eur_g26
14:27:08  33  ,eur_g27
14:27:08  34  ,eur_g28
14:27:08  35  ,eur_g29
14:27:08  36  ,eur_g30
14:27:08  37  ,eur_g31
14:27:08  38  ,eur_g32
14:27:08  39  ,eur_g33
14:27:08  40  ,eur_g34
14:27:08  41  ,eur_g35
14:27:08  42  ,eur_g36
14:27:08  43  ,eur_g37
14:27:08  44  ,eur_g38
14:27:08  45  ,eur_g39
14:27:08  46  ,eur_g40
14:27:08  47  ,eur_g41
14:27:08  48  ,aud_g00
14:27:08  49  ,aud_g01
14:27:08  50  ,aud_g02
14:27:08  51  ,aud_g03
14:27:08  52  ,aud_g04
14:27:08  53  ,aud_g05
14:27:08  54  ,aud_g06
14:27:08  55  ,aud_g07
14:27:08  56  ,aud_g08
14:27:08  57  ,aud_g09
14:27:08  58  ,aud_g10
14:27:08  59  ,aud_g11
14:27:08  60  ,aud_g12
14:27:08  61  ,aud_g13
14:27:08  62  ,aud_g14
14:27:08  63  ,aud_g15
14:27:08  64  ,aud_g16
14:27:08  65  ,aud_g17
14:27:08  66  ,aud_g18
14:27:08  67  ,aud_g19
14:27:08  68  ,aud_g20
14:27:08  69  ,aud_g21
14:27:08  70  ,aud_g22
14:27:08  71  ,aud_g23
14:27:08  72  ,aud_g24
14:27:08  73  ,aud_g25
14:27:08  74  ,aud_g26
14:27:08  75  ,aud_g27
14:27:08  76  ,aud_g28
14:27:08  77  ,aud_g29
14:27:08  78  ,aud_g30
14:27:08  79  ,aud_g31
14:27:08  80  ,aud_g32
14:27:08  81  ,aud_g33
14:27:08  82  ,aud_g34
14:27:08  83  ,aud_g35
14:27:08  84  ,aud_g36
14:27:08  85  ,aud_g37
14:27:08  86  ,aud_g38
14:27:08  87  ,aud_g39
14:27:08  88  ,aud_g40
14:27:08  89  ,aud_g41
14:27:08  90  ,gbp_g00
14:27:08  91  ,gbp_g01
14:27:08  92  ,gbp_g02
14:27:08  93  ,gbp_g03
14:27:08  94  ,gbp_g04
14:27:08  95  ,gbp_g05
14:27:08  96  ,gbp_g06
14:27:08  97  ,gbp_g07
14:27:08  98  ,gbp_g08
14:27:08  99  ,gbp_g09
14:27:08 100  ,gbp_g10
14:27:08 101  ,gbp_g11
14:27:08 102  ,gbp_g12
14:27:08 103  ,gbp_g13
14:27:08 104  ,gbp_g14
14:27:08 105  ,gbp_g15
14:27:08 106  ,gbp_g16
14:27:08 107  ,gbp_g17
14:27:08 108  ,gbp_g18
14:27:08 109  ,gbp_g19
14:27:08 110  ,gbp_g20
14:27:08 111  ,gbp_g21
14:27:08 112  ,gbp_g22
14:27:08 113  ,gbp_g23
14:27:08 114  ,gbp_g24
14:27:08 115  ,gbp_g25
14:27:08 116  ,gbp_g26
14:27:08 117  ,gbp_g27
14:27:08 118  ,gbp_g28
14:27:08 119  ,gbp_g29
14:27:08 120  ,gbp_g30
14:27:08 121  ,gbp_g31
14:27:08 122  ,gbp_g32
14:27:08 123  ,gbp_g33
14:27:08 124  ,gbp_g34
14:27:08 125  ,gbp_g35
14:27:08 126  ,gbp_g36
14:27:08 127  ,gbp_g37
14:27:08 128  ,gbp_g38
14:27:08 129  ,gbp_g39
14:27:08 130  ,gbp_g40
14:27:08 131  ,gbp_g41
14:27:08 132  ,jpy_g00
14:27:08 133  ,jpy_g01
14:27:08 134  ,jpy_g02
14:27:08 135  ,jpy_g03
14:27:08 136  ,jpy_g04
14:27:08 137  ,jpy_g05
14:27:08 138  ,jpy_g06
14:27:08 139  ,jpy_g07
14:27:08 140  ,jpy_g08
14:27:08 141  ,jpy_g09
14:27:08 142  ,jpy_g10
14:27:08 143  ,jpy_g11
14:27:08 144  ,jpy_g12
14:27:08 145  ,jpy_g13
14:27:08 146  ,jpy_g14
14:27:08 147  ,jpy_g15
14:27:08 148  ,jpy_g16
14:27:08 149  ,jpy_g17
14:27:08 150  ,jpy_g18
14:27:08 151  ,jpy_g19
14:27:08 152  ,jpy_g20
14:27:08 153  ,jpy_g21
14:27:08 154  ,jpy_g22
14:27:08 155  ,jpy_g23
14:27:08 156  ,jpy_g24
14:27:08 157  ,jpy_g25
14:27:08 158  ,jpy_g26
14:27:08 159  ,jpy_g27
14:27:08 160  ,jpy_g28
14:27:08 161  ,jpy_g29
14:27:08 162  ,jpy_g30
14:27:08 163  ,jpy_g31
14:27:08 164  ,jpy_g32
14:27:08 165  ,jpy_g33
14:27:08 166  ,jpy_g34
14:27:08 167  ,jpy_g35
14:27:08 168  ,jpy_g36
14:27:08 169  ,jpy_g37
14:27:08 170  ,jpy_g38
14:27:08 171  ,jpy_g39
14:27:08 172  ,jpy_g40
14:27:08 173  ,jpy_g41
14:27:08 174  ,cad_g00
14:27:08 175  ,cad_g01
14:27:08 176  ,cad_g02
14:27:08 177  ,cad_g03
14:27:08 178  ,cad_g04
14:27:08 179  ,cad_g05
14:27:08 180  ,cad_g06
14:27:08 181  ,cad_g07
14:27:08 182  ,cad_g08
14:27:08 183  ,cad_g09
14:27:08 184  ,cad_g10
14:27:08 185  ,cad_g11
14:27:08 186  ,cad_g12
14:27:08 187  ,cad_g13
14:27:08 188  ,cad_g14
14:27:08 189  ,cad_g15
14:27:08 190  ,cad_g16
14:27:08 191  ,cad_g17
14:27:08 192  ,cad_g18
14:27:08 193  ,cad_g19
14:27:08 194  ,cad_g20
14:27:08 195  ,cad_g21
14:27:08 196  ,cad_g22
14:27:08 197  ,cad_g23
14:27:08 198  ,cad_g24
14:27:08 199  ,cad_g25
14:27:08 200  ,cad_g26
14:27:08 201  ,cad_g27
14:27:08 202  ,cad_g28
14:27:08 203  ,cad_g29
14:27:08 204  ,cad_g30
14:27:08 205  ,cad_g31
14:27:08 206  ,cad_g32
14:27:08 207  ,cad_g33
14:27:08 208  ,cad_g34
14:27:08 209  ,cad_g35
14:27:08 210  ,cad_g36
14:27:08 211  ,cad_g37
14:27:08 212  ,cad_g38
14:27:08 213  ,cad_g39
14:27:08 214  ,cad_g40
14:27:08 215  ,cad_g41
14:27:08 216  ,chf_g00
14:27:08 217  ,chf_g01
14:27:08 218  ,chf_g02
14:27:08 219  ,chf_g03
14:27:08 220  ,chf_g04
14:27:08 221  ,chf_g05
14:27:08 222  ,chf_g06
14:27:08 223  ,chf_g07
14:27:08 224  ,chf_g08
14:27:08 225  ,chf_g09
14:27:08 226  ,chf_g10
14:27:08 227  ,chf_g11
14:27:08 228  ,chf_g12
14:27:08 229  ,chf_g13
14:27:08 230  ,chf_g14
14:27:08 231  ,chf_g15
14:27:08 232  ,chf_g16
14:27:08 233  ,chf_g17
14:27:08 234  ,chf_g18
14:27:08 235  ,chf_g19
14:27:08 236  ,chf_g20
14:27:08 237  ,chf_g21
14:27:08 238  ,chf_g22
14:27:08 239  ,chf_g23
14:27:08 240  ,chf_g24
14:27:08 241  ,chf_g25
14:27:08 242  ,chf_g26
14:27:08 243  ,chf_g27
14:27:08 244  ,chf_g28
14:27:08 245  ,chf_g29
14:27:08 246  ,chf_g30
14:27:08 247  ,chf_g31
14:27:08 248  ,chf_g32
14:27:08 249  ,chf_g33
14:27:08 250  ,chf_g34
14:27:08 251  ,chf_g35
14:27:08 252  ,chf_g36
14:27:08 253  ,chf_g37
14:27:08 254  ,chf_g38
14:27:08 255  ,chf_g39
14:27:08 256  ,chf_g40
14:27:08 257  ,chf_g41
14:27:08 258  FROM aud_ms6 m
14:27:08 259  WHERE m.ydate = '&1'||' '||'&2'
14:27:08 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'14:05:00'

View created.

Elapsed: 00:00:00.12
14:27:08 SQL> 
14:27:08 SQL> -- rpt
14:27:08 SQL> -- We should see just 1 row:
14:27:08 SQL> 
14:27:08 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
14:27:08 SQL> 
14:27:08 SQL> -- Build the model:
14:27:08 SQL> CREATE OR REPLACE VIEW bme AS
14:27:08   2  SELECT
14:27:08   3  'aud'||m.ydate prdate
14:27:08   4  ,gattn
14:27:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:27:08   6  ,eur_g00
14:27:08   7  ,eur_g01
14:27:08   8  ,eur_g02
14:27:08   9  ,eur_g03
14:27:08  10  ,eur_g04
14:27:08  11  ,eur_g05
14:27:08  12  ,eur_g06
14:27:08  13  ,eur_g07
14:27:08  14  ,eur_g08
14:27:08  15  ,eur_g09
14:27:08  16  ,eur_g10
14:27:08  17  ,eur_g11
14:27:08  18  ,eur_g12
14:27:08  19  ,eur_g13
14:27:08  20  ,eur_g14
14:27:08  21  ,eur_g15
14:27:08  22  ,eur_g16
14:27:08  23  ,eur_g17
14:27:08  24  ,eur_g18
14:27:08  25  ,eur_g19
14:27:08  26  ,eur_g20
14:27:08  27  ,eur_g21
14:27:08  28  ,eur_g22
14:27:08  29  ,eur_g23
14:27:08  30  ,eur_g24
14:27:08  31  ,eur_g25
14:27:08  32  ,eur_g26
14:27:08  33  ,eur_g27
14:27:08  34  ,eur_g28
14:27:08  35  ,eur_g29
14:27:08  36  ,eur_g30
14:27:08  37  ,eur_g31
14:27:08  38  ,eur_g32
14:27:08  39  ,eur_g33
14:27:08  40  ,eur_g34
14:27:08  41  ,eur_g35
14:27:08  42  ,eur_g36
14:27:08  43  ,eur_g37
14:27:08  44  ,eur_g38
14:27:08  45  ,eur_g39
14:27:08  46  ,eur_g40
14:27:08  47  ,eur_g41
14:27:08  48  ,aud_g00
14:27:08  49  ,aud_g01
14:27:08  50  ,aud_g02
14:27:08  51  ,aud_g03
14:27:08  52  ,aud_g04
14:27:08  53  ,aud_g05
14:27:08  54  ,aud_g06
14:27:08  55  ,aud_g07
14:27:08  56  ,aud_g08
14:27:08  57  ,aud_g09
14:27:08  58  ,aud_g10
14:27:08  59  ,aud_g11
14:27:08  60  ,aud_g12
14:27:08  61  ,aud_g13
14:27:08  62  ,aud_g14
14:27:08  63  ,aud_g15
14:27:08  64  ,aud_g16
14:27:08  65  ,aud_g17
14:27:08  66  ,aud_g18
14:27:08  67  ,aud_g19
14:27:08  68  ,aud_g20
14:27:08  69  ,aud_g21
14:27:08  70  ,aud_g22
14:27:08  71  ,aud_g23
14:27:08  72  ,aud_g24
14:27:08  73  ,aud_g25
14:27:08  74  ,aud_g26
14:27:08  75  ,aud_g27
14:27:08  76  ,aud_g28
14:27:08  77  ,aud_g29
14:27:08  78  ,aud_g30
14:27:08  79  ,aud_g31
14:27:08  80  ,aud_g32
14:27:08  81  ,aud_g33
14:27:08  82  ,aud_g34
14:27:08  83  ,aud_g35
14:27:08  84  ,aud_g36
14:27:08  85  ,aud_g37
14:27:08  86  ,aud_g38
14:27:08  87  ,aud_g39
14:27:08  88  ,aud_g40
14:27:08  89  ,aud_g41
14:27:08  90  ,gbp_g00
14:27:08  91  ,gbp_g01
14:27:08  92  ,gbp_g02
14:27:08  93  ,gbp_g03
14:27:08  94  ,gbp_g04
14:27:08  95  ,gbp_g05
14:27:08  96  ,gbp_g06
14:27:08  97  ,gbp_g07
14:27:08  98  ,gbp_g08
14:27:08  99  ,gbp_g09
14:27:08 100  ,gbp_g10
14:27:08 101  ,gbp_g11
14:27:08 102  ,gbp_g12
14:27:08 103  ,gbp_g13
14:27:08 104  ,gbp_g14
14:27:08 105  ,gbp_g15
14:27:08 106  ,gbp_g16
14:27:08 107  ,gbp_g17
14:27:08 108  ,gbp_g18
14:27:08 109  ,gbp_g19
14:27:08 110  ,gbp_g20
14:27:08 111  ,gbp_g21
14:27:08 112  ,gbp_g22
14:27:08 113  ,gbp_g23
14:27:08 114  ,gbp_g24
14:27:08 115  ,gbp_g25
14:27:08 116  ,gbp_g26
14:27:08 117  ,gbp_g27
14:27:08 118  ,gbp_g28
14:27:08 119  ,gbp_g29
14:27:08 120  ,gbp_g30
14:27:08 121  ,gbp_g31
14:27:08 122  ,gbp_g32
14:27:08 123  ,gbp_g33
14:27:08 124  ,gbp_g34
14:27:08 125  ,gbp_g35
14:27:08 126  ,gbp_g36
14:27:08 127  ,gbp_g37
14:27:08 128  ,gbp_g38
14:27:08 129  ,gbp_g39
14:27:08 130  ,gbp_g40
14:27:08 131  ,gbp_g41
14:27:08 132  ,jpy_g00
14:27:08 133  ,jpy_g01
14:27:08 134  ,jpy_g02
14:27:08 135  ,jpy_g03
14:27:08 136  ,jpy_g04
14:27:08 137  ,jpy_g05
14:27:08 138  ,jpy_g06
14:27:08 139  ,jpy_g07
14:27:08 140  ,jpy_g08
14:27:08 141  ,jpy_g09
14:27:08 142  ,jpy_g10
14:27:08 143  ,jpy_g11
14:27:08 144  ,jpy_g12
14:27:08 145  ,jpy_g13
14:27:08 146  ,jpy_g14
14:27:08 147  ,jpy_g15
14:27:08 148  ,jpy_g16
14:27:08 149  ,jpy_g17
14:27:08 150  ,jpy_g18
14:27:08 151  ,jpy_g19
14:27:08 152  ,jpy_g20
14:27:08 153  ,jpy_g21
14:27:08 154  ,jpy_g22
14:27:08 155  ,jpy_g23
14:27:08 156  ,jpy_g24
14:27:08 157  ,jpy_g25
14:27:08 158  ,jpy_g26
14:27:08 159  ,jpy_g27
14:27:08 160  ,jpy_g28
14:27:08 161  ,jpy_g29
14:27:08 162  ,jpy_g30
14:27:08 163  ,jpy_g31
14:27:08 164  ,jpy_g32
14:27:08 165  ,jpy_g33
14:27:08 166  ,jpy_g34
14:27:08 167  ,jpy_g35
14:27:08 168  ,jpy_g36
14:27:08 169  ,jpy_g37
14:27:08 170  ,jpy_g38
14:27:08 171  ,jpy_g39
14:27:08 172  ,jpy_g40
14:27:08 173  ,jpy_g41
14:27:08 174  ,cad_g00
14:27:08 175  ,cad_g01
14:27:08 176  ,cad_g02
14:27:08 177  ,cad_g03
14:27:08 178  ,cad_g04
14:27:08 179  ,cad_g05
14:27:08 180  ,cad_g06
14:27:08 181  ,cad_g07
14:27:08 182  ,cad_g08
14:27:08 183  ,cad_g09
14:27:08 184  ,cad_g10
14:27:08 185  ,cad_g11
14:27:08 186  ,cad_g12
14:27:08 187  ,cad_g13
14:27:08 188  ,cad_g14
14:27:08 189  ,cad_g15
14:27:08 190  ,cad_g16
14:27:08 191  ,cad_g17
14:27:08 192  ,cad_g18
14:27:08 193  ,cad_g19
14:27:08 194  ,cad_g20
14:27:08 195  ,cad_g21
14:27:08 196  ,cad_g22
14:27:08 197  ,cad_g23
14:27:08 198  ,cad_g24
14:27:08 199  ,cad_g25
14:27:08 200  ,cad_g26
14:27:08 201  ,cad_g27
14:27:08 202  ,cad_g28
14:27:08 203  ,cad_g29
14:27:08 204  ,cad_g30
14:27:08 205  ,cad_g31
14:27:08 206  ,cad_g32
14:27:08 207  ,cad_g33
14:27:08 208  ,cad_g34
14:27:08 209  ,cad_g35
14:27:08 210  ,cad_g36
14:27:08 211  ,cad_g37
14:27:08 212  ,cad_g38
14:27:08 213  ,cad_g39
14:27:08 214  ,cad_g40
14:27:08 215  ,cad_g41
14:27:08 216  ,chf_g00
14:27:08 217  ,chf_g01
14:27:08 218  ,chf_g02
14:27:08 219  ,chf_g03
14:27:08 220  ,chf_g04
14:27:08 221  ,chf_g05
14:27:08 222  ,chf_g06
14:27:08 223  ,chf_g07
14:27:08 224  ,chf_g08
14:27:08 225  ,chf_g09
14:27:08 226  ,chf_g10
14:27:08 227  ,chf_g11
14:27:08 228  ,chf_g12
14:27:08 229  ,chf_g13
14:27:08 230  ,chf_g14
14:27:08 231  ,chf_g15
14:27:08 232  ,chf_g16
14:27:08 233  ,chf_g17
14:27:08 234  ,chf_g18
14:27:08 235  ,chf_g19
14:27:08 236  ,chf_g20
14:27:08 237  ,chf_g21
14:27:08 238  ,chf_g22
14:27:08 239  ,chf_g23
14:27:08 240  ,chf_g24
14:27:08 241  ,chf_g25
14:27:08 242  ,chf_g26
14:27:08 243  ,chf_g27
14:27:08 244  ,chf_g28
14:27:08 245  ,chf_g29
14:27:08 246  ,chf_g30
14:27:08 247  ,chf_g31
14:27:08 248  ,chf_g32
14:27:08 249  ,chf_g33
14:27:08 250  ,chf_g34
14:27:08 251  ,chf_g35
14:27:08 252  ,chf_g36
14:27:08 253  ,chf_g37
14:27:08 254  ,chf_g38
14:27:08 255  ,chf_g39
14:27:08 256  ,chf_g40
14:27:08 257  ,chf_g41
14:27:08 258  FROM aud_ms6 m
14:27:08 259  WHERE gattn IN('nup','up')
14:27:08 260  AND 1+m.ydate < '&1'||' '||'&2'
14:27:08 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'14:05:00'

View created.

Elapsed: 00:00:00.12
14:27:08 SQL> 
14:27:08 SQL> -- rpt
14:27:08 SQL> 
14:27:08 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12704
up	     6445

Elapsed: 00:00:00.03
14:27:08 SQL> 
14:27:08 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-04 14:00:00

Elapsed: 00:00:00.04
14:27:08 SQL> 
14:27:08 SQL> -- Now build model from bme and score sme
14:27:08 SQL> @score1gattn.sql
14:27:08 SQL> -- score1gattn.sql
14:27:08 SQL> 
14:27:08 SQL> -- Does the 1st SVM score
14:27:08 SQL> 
14:27:08 SQL> -- Fill up svmc_apply_prep
14:27:08 SQL> @score_gattn.sql
14:27:08 SQL> --
14:27:08 SQL> -- score_gattn.sql
14:27:08 SQL> --
14:27:08 SQL> 
14:27:08 SQL> -- usage: score_gattn.sql
14:27:08 SQL> 
14:27:08 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
14:27:08 SQL> 
14:27:08 SQL> DEFINE target	= 'gattn'
14:27:08 SQL> DEFINE model_name = 'forex15'
14:27:08 SQL> DEFINE bldtable	= 'bme'
14:27:08 SQL> DEFINE scoretable = 'sme'
14:27:08 SQL> DEFINE case_id	= 'prdate'
14:27:08 SQL> 
14:27:08 SQL> -- Define a variable to help me exclude some columns from some data mining calls
14:27:08 SQL> DEFINE exclude1 = "'&target','&case_id'"
14:27:08 SQL> 
14:27:08 SQL> -- Builds an SVM model using pl/sql.
14:27:08 SQL> 
14:27:08 SQL> -----------------------------------------------------------------------
14:27:08 SQL> --			    BUILD THE MODEL
14:27:08 SQL> -----------------------------------------------------------------------
14:27:08 SQL> 
14:27:08 SQL> -- Cleanup old build data preparation objects for repeat runs
14:27:08 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
14:27:08 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
14:27:08 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
14:27:08 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
14:27:08 SQL> 
14:27:08 SQL> 
14:27:08 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
14:27:08 SQL> --
14:27:08 SQL> -- DROP	TABLE svmc_settings ;
14:27:08 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
14:27:08 SQL> -- DELETE svmc_settings;
14:27:08 SQL> 
14:27:08 SQL> -- The default classification algorithm is Naive Bayes. So override
14:27:08 SQL> -- this choice to SVM using a settings table.
14:27:08 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
14:27:08 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
14:27:08 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
14:27:08 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
14:27:08 SQL> -- models.
14:27:08 SQL> --
14:27:08 SQL> 
14:27:08 SQL> -- Do this once and then comment it out.
14:27:08 SQL> -- That makes script go faster.
14:27:08 SQL> -- BEGIN
14:27:08 SQL> -- -- Populate settings table
14:27:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:27:08 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
14:27:08 SQL> --
14:27:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:27:08 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
14:27:08 SQL> --
14:27:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:27:08 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
14:27:08 SQL> --   COMMIT;
14:27:08 SQL> -- END;
14:27:08 SQL> -- /
14:27:08 SQL> 
14:27:08 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
14:27:08 SQL> 
14:27:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
14:27:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:27:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
14:27:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
14:27:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:27:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:27:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
14:27:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:27:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
14:27:09 SQL> 
14:27:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
14:27:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:27:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
14:27:09 SQL> 
14:27:09 SQL> --------------------------------
14:27:09 SQL> -- PREPARE BUILD (TRAINING) DATA
14:27:09 SQL> --
14:27:09 SQL> 
14:27:09 SQL> -- 1. Missing Value treatment for all Predictors and
14:27:09 SQL> -- 2. Outlier Treatment and
14:27:09 SQL> -- 3. Normalization are performed below.
14:27:09 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
14:27:09 SQL> --    normalized here.
14:27:09 SQL> 
14:27:09 SQL> BEGIN
14:27:09   2  	-- Perform missing value treatment for all predictors
14:27:09   3  	-- create miss tables
14:27:09   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
14:27:09   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
14:27:09   6  
14:27:09   7  	-- populate miss tables
14:27:09   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
14:27:09   9  	  miss_table_name => 'svmc_miss_num',
14:27:09  10  	  data_table_name => '&bldtable',
14:27:09  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:27:09  12  
14:27:09  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
14:27:09  14  	  miss_table_name => 'svmc_miss_cat',
14:27:09  15  	  data_table_name => '&bldtable',
14:27:09  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:27:09  17  
14:27:09  18  	-- xform input data to replace missing values
14:27:09  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:27:09  20  	  miss_table_name => 'svmc_miss_num',
14:27:09  21  	  data_table_name => '&bldtable',
14:27:09  22  	  xform_view_name => 'xformed_build_miss_num');
14:27:09  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:27:09  24  	  miss_table_name => 'svmc_miss_cat',
14:27:09  25  	  data_table_name => '&bldtable',
14:27:09  26  	  xform_view_name => 'xformed_build_miss_cat');
14:27:09  27  
14:27:09  28  	-- Perform outlier treatment.
14:27:09  29  	-- create clip table
14:27:09  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
14:27:09  31  
14:27:09  32  	-- populate clip table
14:27:09  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
14:27:09  34  	  clip_table_name => 'svmc_clip',
14:27:09  35  	  data_table_name => '&bldtable',
14:27:09  36  	  tail_frac	  => 0.025,
14:27:09  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:27:09  38  
14:27:09  39  	-- xform input data to winsorized data
14:27:09  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
14:27:09  41  	  clip_table_name => 'svmc_clip',
14:27:09  42  	  data_table_name => '&bldtable',
14:27:09  43  	  xform_view_name => 'svmc_winsor');
14:27:09  44  
14:27:09  45  	-- create normalization table
14:27:09  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
14:27:09  47  
14:27:09  48  	-- populate normalization table based on winsorized data
14:27:09  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
14:27:09  50  	  norm_table_name => 'svmc_norm',
14:27:09  51  	  data_table_name => 'svmc_winsor',
14:27:09  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:27:09  53  
14:27:09  54  	-- normalize the original data
14:27:09  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:27:09  56  	  norm_table_name => 'svmc_norm',
14:27:09  57  	  data_table_name => '&bldtable',
14:27:09  58  	  xform_view_name => 'svmc_build_prep');
14:27:09  59  END;
14:27:09  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.71
14:27:27 SQL> 
14:27:27 SQL> ---------------------
14:27:27 SQL> -- CREATE A NEW MODEL
14:27:27 SQL> --
14:27:27 SQL> -- Cleanup old model with the same name for repeat runs
14:27:27 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
14:27:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:27:27   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.97
14:27:28 SQL> 
14:27:28 SQL> -- Build a new SVM Model
14:27:28 SQL> BEGIN
14:27:28   2  	DBMS_DATA_MINING.CREATE_MODEL(
14:27:28   3  	  model_name	      => '&model_name',
14:27:28   4  	  mining_function     => dbms_data_mining.classification,
14:27:28   5  	  data_table_name     => 'svmc_build_prep',
14:27:28   6  	  case_id_column_name => '&case_id',
14:27:28   7  	  target_column_name  => '&target',
14:27:28   8  	  settings_table_name => 'svmc_settings');
14:27:28   9  END;
14:27:28  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.95
14:27:56 SQL> 
14:27:56 SQL> -----------------------------------------------------------------------
14:27:56 SQL> --			       APPLY/score THE MODEL
14:27:56 SQL> -----------------------------------------------------------------------
14:27:56 SQL> 
14:27:56 SQL> -- Cleanup old scoring data preparation objects for repeat runs
14:27:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
14:27:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:27:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:27:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
14:27:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:27:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:27:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
14:27:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:27:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
14:27:57 SQL> -----------------------
14:27:57 SQL> -- PREPARE SCORING DATA
14:27:57 SQL> --
14:27:57 SQL> -- If the data for model creation has been prepared, then the data
14:27:57 SQL> -- to be scored using the model must be prepared in the same manner
14:27:57 SQL> -- in order to obtain meaningful results.
14:27:57 SQL> --
14:27:57 SQL> -- 1. Missing Value treatment for all Predictors and
14:27:57 SQL> -- 2. Normalization
14:27:57 SQL> -- No outlier treatment will be performed during test and apply. The
14:27:57 SQL> -- normalization step is sufficient, since the normalization parameters
14:27:57 SQL> -- already capture the effects of outlier treatment done with build data.
14:27:57 SQL> --
14:27:57 SQL> BEGIN
14:27:57   2  	-- Xform Test data to replace missing values
14:27:57   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:27:57   4  	  miss_table_name => 'svmc_miss_num',
14:27:57   5  	  data_table_name => '&scoretable',
14:27:57   6  	  xform_view_name => 'xformed_apply_miss_num');
14:27:57   7  
14:27:57   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:27:57   9  	  miss_table_name => 'svmc_miss_cat',
14:27:57  10  	  data_table_name => '&scoretable',
14:27:57  11  	  xform_view_name => 'xformed_apply_miss_cat');
14:27:57  12  
14:27:57  13  	-- Normalize the data to be scored
14:27:57  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:27:57  15  	  norm_table_name => 'svmc_norm',
14:27:57  16  	  data_table_name => '&scoretable',
14:27:57  17  	  xform_view_name => 'svmc_apply_prep');
14:27:57  18  END;
14:27:57  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:02.56
14:27:59 SQL> 
14:27:59 SQL> -- Use same model_name used in score_gattn.sql
14:27:59 SQL> DEFINE model_name = 'forex15'
14:27:59 SQL> 
14:27:59 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
14:27:59 SQL> 
14:27:59 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
14:27:59   2  SELECT
14:27:59   3  prdate
14:27:59   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
14:27:59   5  ,sysdate
14:27:59   6  ,SUBSTR(prdate,1,3)pair
14:27:59   7  ,SUBSTR(prdate,4,19)ydate
14:27:59   8  FROM svmc_apply_prep
14:27:59   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.44
14:28:00 SQL> @aud_score1day_gattn.sql	2011-01-05 14:10:00
14:28:00 SQL> --
14:28:00 SQL> -- aud_score1day_gattn.sql
14:28:00 SQL> --
14:28:00 SQL> 
14:28:00 SQL> CREATE OR REPLACE VIEW sme AS
14:28:00   2  SELECT
14:28:00   3  'aud'||m.ydate prdate
14:28:00   4  ,NULL gattn
14:28:00   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:28:00   6  ,eur_g00
14:28:00   7  ,eur_g01
14:28:00   8  ,eur_g02
14:28:00   9  ,eur_g03
14:28:00  10  ,eur_g04
14:28:00  11  ,eur_g05
14:28:00  12  ,eur_g06
14:28:00  13  ,eur_g07
14:28:00  14  ,eur_g08
14:28:00  15  ,eur_g09
14:28:00  16  ,eur_g10
14:28:00  17  ,eur_g11
14:28:00  18  ,eur_g12
14:28:00  19  ,eur_g13
14:28:00  20  ,eur_g14
14:28:00  21  ,eur_g15
14:28:00  22  ,eur_g16
14:28:00  23  ,eur_g17
14:28:00  24  ,eur_g18
14:28:00  25  ,eur_g19
14:28:00  26  ,eur_g20
14:28:00  27  ,eur_g21
14:28:00  28  ,eur_g22
14:28:00  29  ,eur_g23
14:28:00  30  ,eur_g24
14:28:00  31  ,eur_g25
14:28:00  32  ,eur_g26
14:28:00  33  ,eur_g27
14:28:00  34  ,eur_g28
14:28:00  35  ,eur_g29
14:28:00  36  ,eur_g30
14:28:00  37  ,eur_g31
14:28:00  38  ,eur_g32
14:28:00  39  ,eur_g33
14:28:00  40  ,eur_g34
14:28:00  41  ,eur_g35
14:28:00  42  ,eur_g36
14:28:00  43  ,eur_g37
14:28:00  44  ,eur_g38
14:28:00  45  ,eur_g39
14:28:00  46  ,eur_g40
14:28:00  47  ,eur_g41
14:28:00  48  ,aud_g00
14:28:00  49  ,aud_g01
14:28:00  50  ,aud_g02
14:28:00  51  ,aud_g03
14:28:00  52  ,aud_g04
14:28:00  53  ,aud_g05
14:28:00  54  ,aud_g06
14:28:00  55  ,aud_g07
14:28:00  56  ,aud_g08
14:28:00  57  ,aud_g09
14:28:00  58  ,aud_g10
14:28:00  59  ,aud_g11
14:28:00  60  ,aud_g12
14:28:00  61  ,aud_g13
14:28:00  62  ,aud_g14
14:28:00  63  ,aud_g15
14:28:00  64  ,aud_g16
14:28:00  65  ,aud_g17
14:28:00  66  ,aud_g18
14:28:00  67  ,aud_g19
14:28:00  68  ,aud_g20
14:28:00  69  ,aud_g21
14:28:00  70  ,aud_g22
14:28:00  71  ,aud_g23
14:28:00  72  ,aud_g24
14:28:00  73  ,aud_g25
14:28:00  74  ,aud_g26
14:28:00  75  ,aud_g27
14:28:00  76  ,aud_g28
14:28:00  77  ,aud_g29
14:28:00  78  ,aud_g30
14:28:00  79  ,aud_g31
14:28:00  80  ,aud_g32
14:28:00  81  ,aud_g33
14:28:00  82  ,aud_g34
14:28:00  83  ,aud_g35
14:28:00  84  ,aud_g36
14:28:00  85  ,aud_g37
14:28:00  86  ,aud_g38
14:28:00  87  ,aud_g39
14:28:00  88  ,aud_g40
14:28:00  89  ,aud_g41
14:28:00  90  ,gbp_g00
14:28:00  91  ,gbp_g01
14:28:00  92  ,gbp_g02
14:28:00  93  ,gbp_g03
14:28:00  94  ,gbp_g04
14:28:00  95  ,gbp_g05
14:28:00  96  ,gbp_g06
14:28:00  97  ,gbp_g07
14:28:00  98  ,gbp_g08
14:28:00  99  ,gbp_g09
14:28:00 100  ,gbp_g10
14:28:00 101  ,gbp_g11
14:28:00 102  ,gbp_g12
14:28:00 103  ,gbp_g13
14:28:00 104  ,gbp_g14
14:28:00 105  ,gbp_g15
14:28:00 106  ,gbp_g16
14:28:00 107  ,gbp_g17
14:28:00 108  ,gbp_g18
14:28:00 109  ,gbp_g19
14:28:00 110  ,gbp_g20
14:28:00 111  ,gbp_g21
14:28:00 112  ,gbp_g22
14:28:00 113  ,gbp_g23
14:28:00 114  ,gbp_g24
14:28:00 115  ,gbp_g25
14:28:00 116  ,gbp_g26
14:28:00 117  ,gbp_g27
14:28:00 118  ,gbp_g28
14:28:00 119  ,gbp_g29
14:28:00 120  ,gbp_g30
14:28:00 121  ,gbp_g31
14:28:00 122  ,gbp_g32
14:28:00 123  ,gbp_g33
14:28:00 124  ,gbp_g34
14:28:00 125  ,gbp_g35
14:28:00 126  ,gbp_g36
14:28:00 127  ,gbp_g37
14:28:00 128  ,gbp_g38
14:28:00 129  ,gbp_g39
14:28:00 130  ,gbp_g40
14:28:00 131  ,gbp_g41
14:28:00 132  ,jpy_g00
14:28:00 133  ,jpy_g01
14:28:00 134  ,jpy_g02
14:28:00 135  ,jpy_g03
14:28:00 136  ,jpy_g04
14:28:00 137  ,jpy_g05
14:28:00 138  ,jpy_g06
14:28:00 139  ,jpy_g07
14:28:00 140  ,jpy_g08
14:28:00 141  ,jpy_g09
14:28:00 142  ,jpy_g10
14:28:00 143  ,jpy_g11
14:28:00 144  ,jpy_g12
14:28:00 145  ,jpy_g13
14:28:00 146  ,jpy_g14
14:28:00 147  ,jpy_g15
14:28:00 148  ,jpy_g16
14:28:00 149  ,jpy_g17
14:28:00 150  ,jpy_g18
14:28:00 151  ,jpy_g19
14:28:00 152  ,jpy_g20
14:28:00 153  ,jpy_g21
14:28:00 154  ,jpy_g22
14:28:00 155  ,jpy_g23
14:28:00 156  ,jpy_g24
14:28:00 157  ,jpy_g25
14:28:00 158  ,jpy_g26
14:28:00 159  ,jpy_g27
14:28:00 160  ,jpy_g28
14:28:00 161  ,jpy_g29
14:28:00 162  ,jpy_g30
14:28:00 163  ,jpy_g31
14:28:00 164  ,jpy_g32
14:28:00 165  ,jpy_g33
14:28:00 166  ,jpy_g34
14:28:00 167  ,jpy_g35
14:28:00 168  ,jpy_g36
14:28:00 169  ,jpy_g37
14:28:00 170  ,jpy_g38
14:28:00 171  ,jpy_g39
14:28:00 172  ,jpy_g40
14:28:00 173  ,jpy_g41
14:28:00 174  ,cad_g00
14:28:00 175  ,cad_g01
14:28:00 176  ,cad_g02
14:28:00 177  ,cad_g03
14:28:00 178  ,cad_g04
14:28:00 179  ,cad_g05
14:28:00 180  ,cad_g06
14:28:00 181  ,cad_g07
14:28:00 182  ,cad_g08
14:28:00 183  ,cad_g09
14:28:00 184  ,cad_g10
14:28:00 185  ,cad_g11
14:28:00 186  ,cad_g12
14:28:00 187  ,cad_g13
14:28:00 188  ,cad_g14
14:28:00 189  ,cad_g15
14:28:00 190  ,cad_g16
14:28:00 191  ,cad_g17
14:28:00 192  ,cad_g18
14:28:00 193  ,cad_g19
14:28:00 194  ,cad_g20
14:28:00 195  ,cad_g21
14:28:00 196  ,cad_g22
14:28:00 197  ,cad_g23
14:28:00 198  ,cad_g24
14:28:00 199  ,cad_g25
14:28:00 200  ,cad_g26
14:28:00 201  ,cad_g27
14:28:00 202  ,cad_g28
14:28:00 203  ,cad_g29
14:28:00 204  ,cad_g30
14:28:00 205  ,cad_g31
14:28:00 206  ,cad_g32
14:28:00 207  ,cad_g33
14:28:00 208  ,cad_g34
14:28:00 209  ,cad_g35
14:28:00 210  ,cad_g36
14:28:00 211  ,cad_g37
14:28:00 212  ,cad_g38
14:28:00 213  ,cad_g39
14:28:00 214  ,cad_g40
14:28:00 215  ,cad_g41
14:28:00 216  ,chf_g00
14:28:00 217  ,chf_g01
14:28:00 218  ,chf_g02
14:28:00 219  ,chf_g03
14:28:00 220  ,chf_g04
14:28:00 221  ,chf_g05
14:28:00 222  ,chf_g06
14:28:00 223  ,chf_g07
14:28:00 224  ,chf_g08
14:28:00 225  ,chf_g09
14:28:00 226  ,chf_g10
14:28:00 227  ,chf_g11
14:28:00 228  ,chf_g12
14:28:00 229  ,chf_g13
14:28:00 230  ,chf_g14
14:28:00 231  ,chf_g15
14:28:00 232  ,chf_g16
14:28:00 233  ,chf_g17
14:28:00 234  ,chf_g18
14:28:00 235  ,chf_g19
14:28:00 236  ,chf_g20
14:28:00 237  ,chf_g21
14:28:00 238  ,chf_g22
14:28:00 239  ,chf_g23
14:28:00 240  ,chf_g24
14:28:00 241  ,chf_g25
14:28:00 242  ,chf_g26
14:28:00 243  ,chf_g27
14:28:00 244  ,chf_g28
14:28:00 245  ,chf_g29
14:28:00 246  ,chf_g30
14:28:00 247  ,chf_g31
14:28:00 248  ,chf_g32
14:28:00 249  ,chf_g33
14:28:00 250  ,chf_g34
14:28:00 251  ,chf_g35
14:28:00 252  ,chf_g36
14:28:00 253  ,chf_g37
14:28:00 254  ,chf_g38
14:28:00 255  ,chf_g39
14:28:00 256  ,chf_g40
14:28:00 257  ,chf_g41
14:28:00 258  FROM aud_ms6 m
14:28:00 259  WHERE m.ydate = '&1'||' '||'&2'
14:28:00 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'14:10:00'

View created.

Elapsed: 00:00:00.25
14:28:00 SQL> 
14:28:00 SQL> -- rpt
14:28:00 SQL> -- We should see just 1 row:
14:28:00 SQL> 
14:28:00 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.04
14:28:00 SQL> 
14:28:00 SQL> -- Build the model:
14:28:00 SQL> CREATE OR REPLACE VIEW bme AS
14:28:00   2  SELECT
14:28:00   3  'aud'||m.ydate prdate
14:28:00   4  ,gattn
14:28:00   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:28:00   6  ,eur_g00
14:28:00   7  ,eur_g01
14:28:00   8  ,eur_g02
14:28:00   9  ,eur_g03
14:28:00  10  ,eur_g04
14:28:00  11  ,eur_g05
14:28:00  12  ,eur_g06
14:28:00  13  ,eur_g07
14:28:00  14  ,eur_g08
14:28:00  15  ,eur_g09
14:28:00  16  ,eur_g10
14:28:00  17  ,eur_g11
14:28:00  18  ,eur_g12
14:28:00  19  ,eur_g13
14:28:00  20  ,eur_g14
14:28:00  21  ,eur_g15
14:28:00  22  ,eur_g16
14:28:00  23  ,eur_g17
14:28:00  24  ,eur_g18
14:28:00  25  ,eur_g19
14:28:00  26  ,eur_g20
14:28:00  27  ,eur_g21
14:28:00  28  ,eur_g22
14:28:00  29  ,eur_g23
14:28:00  30  ,eur_g24
14:28:00  31  ,eur_g25
14:28:00  32  ,eur_g26
14:28:00  33  ,eur_g27
14:28:00  34  ,eur_g28
14:28:00  35  ,eur_g29
14:28:00  36  ,eur_g30
14:28:00  37  ,eur_g31
14:28:00  38  ,eur_g32
14:28:00  39  ,eur_g33
14:28:00  40  ,eur_g34
14:28:00  41  ,eur_g35
14:28:00  42  ,eur_g36
14:28:00  43  ,eur_g37
14:28:00  44  ,eur_g38
14:28:00  45  ,eur_g39
14:28:00  46  ,eur_g40
14:28:00  47  ,eur_g41
14:28:00  48  ,aud_g00
14:28:00  49  ,aud_g01
14:28:00  50  ,aud_g02
14:28:00  51  ,aud_g03
14:28:00  52  ,aud_g04
14:28:00  53  ,aud_g05
14:28:00  54  ,aud_g06
14:28:00  55  ,aud_g07
14:28:00  56  ,aud_g08
14:28:00  57  ,aud_g09
14:28:00  58  ,aud_g10
14:28:00  59  ,aud_g11
14:28:00  60  ,aud_g12
14:28:00  61  ,aud_g13
14:28:00  62  ,aud_g14
14:28:00  63  ,aud_g15
14:28:00  64  ,aud_g16
14:28:00  65  ,aud_g17
14:28:00  66  ,aud_g18
14:28:00  67  ,aud_g19
14:28:00  68  ,aud_g20
14:28:00  69  ,aud_g21
14:28:00  70  ,aud_g22
14:28:00  71  ,aud_g23
14:28:00  72  ,aud_g24
14:28:00  73  ,aud_g25
14:28:00  74  ,aud_g26
14:28:00  75  ,aud_g27
14:28:00  76  ,aud_g28
14:28:00  77  ,aud_g29
14:28:00  78  ,aud_g30
14:28:00  79  ,aud_g31
14:28:00  80  ,aud_g32
14:28:00  81  ,aud_g33
14:28:00  82  ,aud_g34
14:28:00  83  ,aud_g35
14:28:00  84  ,aud_g36
14:28:00  85  ,aud_g37
14:28:00  86  ,aud_g38
14:28:00  87  ,aud_g39
14:28:00  88  ,aud_g40
14:28:00  89  ,aud_g41
14:28:00  90  ,gbp_g00
14:28:00  91  ,gbp_g01
14:28:00  92  ,gbp_g02
14:28:00  93  ,gbp_g03
14:28:00  94  ,gbp_g04
14:28:00  95  ,gbp_g05
14:28:00  96  ,gbp_g06
14:28:00  97  ,gbp_g07
14:28:00  98  ,gbp_g08
14:28:00  99  ,gbp_g09
14:28:00 100  ,gbp_g10
14:28:00 101  ,gbp_g11
14:28:00 102  ,gbp_g12
14:28:00 103  ,gbp_g13
14:28:00 104  ,gbp_g14
14:28:00 105  ,gbp_g15
14:28:00 106  ,gbp_g16
14:28:00 107  ,gbp_g17
14:28:00 108  ,gbp_g18
14:28:00 109  ,gbp_g19
14:28:00 110  ,gbp_g20
14:28:00 111  ,gbp_g21
14:28:00 112  ,gbp_g22
14:28:00 113  ,gbp_g23
14:28:00 114  ,gbp_g24
14:28:00 115  ,gbp_g25
14:28:00 116  ,gbp_g26
14:28:00 117  ,gbp_g27
14:28:00 118  ,gbp_g28
14:28:00 119  ,gbp_g29
14:28:00 120  ,gbp_g30
14:28:00 121  ,gbp_g31
14:28:00 122  ,gbp_g32
14:28:00 123  ,gbp_g33
14:28:00 124  ,gbp_g34
14:28:00 125  ,gbp_g35
14:28:00 126  ,gbp_g36
14:28:00 127  ,gbp_g37
14:28:00 128  ,gbp_g38
14:28:00 129  ,gbp_g39
14:28:00 130  ,gbp_g40
14:28:00 131  ,gbp_g41
14:28:00 132  ,jpy_g00
14:28:00 133  ,jpy_g01
14:28:00 134  ,jpy_g02
14:28:00 135  ,jpy_g03
14:28:00 136  ,jpy_g04
14:28:00 137  ,jpy_g05
14:28:00 138  ,jpy_g06
14:28:00 139  ,jpy_g07
14:28:00 140  ,jpy_g08
14:28:00 141  ,jpy_g09
14:28:00 142  ,jpy_g10
14:28:00 143  ,jpy_g11
14:28:00 144  ,jpy_g12
14:28:00 145  ,jpy_g13
14:28:00 146  ,jpy_g14
14:28:00 147  ,jpy_g15
14:28:00 148  ,jpy_g16
14:28:00 149  ,jpy_g17
14:28:00 150  ,jpy_g18
14:28:00 151  ,jpy_g19
14:28:00 152  ,jpy_g20
14:28:00 153  ,jpy_g21
14:28:00 154  ,jpy_g22
14:28:00 155  ,jpy_g23
14:28:00 156  ,jpy_g24
14:28:00 157  ,jpy_g25
14:28:00 158  ,jpy_g26
14:28:00 159  ,jpy_g27
14:28:00 160  ,jpy_g28
14:28:00 161  ,jpy_g29
14:28:00 162  ,jpy_g30
14:28:00 163  ,jpy_g31
14:28:00 164  ,jpy_g32
14:28:00 165  ,jpy_g33
14:28:00 166  ,jpy_g34
14:28:00 167  ,jpy_g35
14:28:00 168  ,jpy_g36
14:28:00 169  ,jpy_g37
14:28:00 170  ,jpy_g38
14:28:00 171  ,jpy_g39
14:28:00 172  ,jpy_g40
14:28:00 173  ,jpy_g41
14:28:00 174  ,cad_g00
14:28:00 175  ,cad_g01
14:28:00 176  ,cad_g02
14:28:00 177  ,cad_g03
14:28:00 178  ,cad_g04
14:28:00 179  ,cad_g05
14:28:00 180  ,cad_g06
14:28:00 181  ,cad_g07
14:28:00 182  ,cad_g08
14:28:00 183  ,cad_g09
14:28:00 184  ,cad_g10
14:28:00 185  ,cad_g11
14:28:00 186  ,cad_g12
14:28:00 187  ,cad_g13
14:28:00 188  ,cad_g14
14:28:00 189  ,cad_g15
14:28:00 190  ,cad_g16
14:28:00 191  ,cad_g17
14:28:00 192  ,cad_g18
14:28:00 193  ,cad_g19
14:28:00 194  ,cad_g20
14:28:00 195  ,cad_g21
14:28:00 196  ,cad_g22
14:28:00 197  ,cad_g23
14:28:00 198  ,cad_g24
14:28:00 199  ,cad_g25
14:28:00 200  ,cad_g26
14:28:00 201  ,cad_g27
14:28:00 202  ,cad_g28
14:28:00 203  ,cad_g29
14:28:00 204  ,cad_g30
14:28:00 205  ,cad_g31
14:28:00 206  ,cad_g32
14:28:00 207  ,cad_g33
14:28:00 208  ,cad_g34
14:28:00 209  ,cad_g35
14:28:00 210  ,cad_g36
14:28:00 211  ,cad_g37
14:28:00 212  ,cad_g38
14:28:00 213  ,cad_g39
14:28:00 214  ,cad_g40
14:28:00 215  ,cad_g41
14:28:00 216  ,chf_g00
14:28:00 217  ,chf_g01
14:28:00 218  ,chf_g02
14:28:00 219  ,chf_g03
14:28:00 220  ,chf_g04
14:28:00 221  ,chf_g05
14:28:00 222  ,chf_g06
14:28:00 223  ,chf_g07
14:28:00 224  ,chf_g08
14:28:00 225  ,chf_g09
14:28:00 226  ,chf_g10
14:28:00 227  ,chf_g11
14:28:00 228  ,chf_g12
14:28:00 229  ,chf_g13
14:28:00 230  ,chf_g14
14:28:00 231  ,chf_g15
14:28:00 232  ,chf_g16
14:28:00 233  ,chf_g17
14:28:00 234  ,chf_g18
14:28:00 235  ,chf_g19
14:28:00 236  ,chf_g20
14:28:00 237  ,chf_g21
14:28:00 238  ,chf_g22
14:28:00 239  ,chf_g23
14:28:00 240  ,chf_g24
14:28:00 241  ,chf_g25
14:28:00 242  ,chf_g26
14:28:00 243  ,chf_g27
14:28:00 244  ,chf_g28
14:28:00 245  ,chf_g29
14:28:00 246  ,chf_g30
14:28:00 247  ,chf_g31
14:28:00 248  ,chf_g32
14:28:00 249  ,chf_g33
14:28:00 250  ,chf_g34
14:28:00 251  ,chf_g35
14:28:00 252  ,chf_g36
14:28:00 253  ,chf_g37
14:28:00 254  ,chf_g38
14:28:00 255  ,chf_g39
14:28:00 256  ,chf_g40
14:28:00 257  ,chf_g41
14:28:00 258  FROM aud_ms6 m
14:28:00 259  WHERE gattn IN('nup','up')
14:28:00 260  AND 1+m.ydate < '&1'||' '||'&2'
14:28:00 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'14:10:00'

View created.

Elapsed: 00:00:00.23
14:28:00 SQL> 
14:28:00 SQL> -- rpt
14:28:00 SQL> 
14:28:00 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12704
up	     6446

Elapsed: 00:00:00.04
14:28:00 SQL> 
14:28:00 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-04 14:05:00

Elapsed: 00:00:00.04
14:28:00 SQL> 
14:28:00 SQL> -- Now build model from bme and score sme
14:28:00 SQL> @score1gattn.sql
14:28:00 SQL> -- score1gattn.sql
14:28:00 SQL> 
14:28:00 SQL> -- Does the 1st SVM score
14:28:00 SQL> 
14:28:00 SQL> -- Fill up svmc_apply_prep
14:28:00 SQL> @score_gattn.sql
14:28:00 SQL> --
14:28:00 SQL> -- score_gattn.sql
14:28:00 SQL> --
14:28:00 SQL> 
14:28:00 SQL> -- usage: score_gattn.sql
14:28:00 SQL> 
14:28:00 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
14:28:00 SQL> 
14:28:00 SQL> DEFINE target	= 'gattn'
14:28:00 SQL> DEFINE model_name = 'forex15'
14:28:00 SQL> DEFINE bldtable	= 'bme'
14:28:00 SQL> DEFINE scoretable = 'sme'
14:28:00 SQL> DEFINE case_id	= 'prdate'
14:28:00 SQL> 
14:28:00 SQL> -- Define a variable to help me exclude some columns from some data mining calls
14:28:00 SQL> DEFINE exclude1 = "'&target','&case_id'"
14:28:00 SQL> 
14:28:00 SQL> -- Builds an SVM model using pl/sql.
14:28:00 SQL> 
14:28:00 SQL> -----------------------------------------------------------------------
14:28:00 SQL> --			    BUILD THE MODEL
14:28:00 SQL> -----------------------------------------------------------------------
14:28:00 SQL> 
14:28:00 SQL> -- Cleanup old build data preparation objects for repeat runs
14:28:00 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
14:28:00 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
14:28:00 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
14:28:00 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
14:28:00 SQL> 
14:28:00 SQL> 
14:28:00 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
14:28:00 SQL> --
14:28:00 SQL> -- DROP	TABLE svmc_settings ;
14:28:00 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
14:28:00 SQL> -- DELETE svmc_settings;
14:28:00 SQL> 
14:28:00 SQL> -- The default classification algorithm is Naive Bayes. So override
14:28:00 SQL> -- this choice to SVM using a settings table.
14:28:00 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
14:28:00 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
14:28:00 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
14:28:00 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
14:28:00 SQL> -- models.
14:28:00 SQL> --
14:28:00 SQL> 
14:28:00 SQL> -- Do this once and then comment it out.
14:28:00 SQL> -- That makes script go faster.
14:28:00 SQL> -- BEGIN
14:28:00 SQL> -- -- Populate settings table
14:28:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:28:00 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
14:28:00 SQL> --
14:28:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:28:00 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
14:28:00 SQL> --
14:28:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:28:00 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
14:28:00 SQL> --   COMMIT;
14:28:00 SQL> -- END;
14:28:00 SQL> -- /
14:28:00 SQL> 
14:28:00 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
14:28:00 SQL> 
14:28:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
14:28:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:28:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.16
14:28:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
14:28:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:28:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:28:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
14:28:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:28:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:28:01 SQL> 
14:28:01 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
14:28:01   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:28:01   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:28:01 SQL> 
14:28:01 SQL> --------------------------------
14:28:01 SQL> -- PREPARE BUILD (TRAINING) DATA
14:28:01 SQL> --
14:28:01 SQL> 
14:28:01 SQL> -- 1. Missing Value treatment for all Predictors and
14:28:01 SQL> -- 2. Outlier Treatment and
14:28:01 SQL> -- 3. Normalization are performed below.
14:28:01 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
14:28:01 SQL> --    normalized here.
14:28:01 SQL> 
14:28:01 SQL> BEGIN
14:28:01   2  	-- Perform missing value treatment for all predictors
14:28:01   3  	-- create miss tables
14:28:01   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
14:28:01   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
14:28:01   6  
14:28:01   7  	-- populate miss tables
14:28:01   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
14:28:01   9  	  miss_table_name => 'svmc_miss_num',
14:28:01  10  	  data_table_name => '&bldtable',
14:28:01  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:28:01  12  
14:28:01  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
14:28:01  14  	  miss_table_name => 'svmc_miss_cat',
14:28:01  15  	  data_table_name => '&bldtable',
14:28:01  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:28:01  17  
14:28:01  18  	-- xform input data to replace missing values
14:28:01  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:28:01  20  	  miss_table_name => 'svmc_miss_num',
14:28:01  21  	  data_table_name => '&bldtable',
14:28:01  22  	  xform_view_name => 'xformed_build_miss_num');
14:28:01  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:28:01  24  	  miss_table_name => 'svmc_miss_cat',
14:28:01  25  	  data_table_name => '&bldtable',
14:28:01  26  	  xform_view_name => 'xformed_build_miss_cat');
14:28:01  27  
14:28:01  28  	-- Perform outlier treatment.
14:28:01  29  	-- create clip table
14:28:01  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
14:28:01  31  
14:28:01  32  	-- populate clip table
14:28:01  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
14:28:01  34  	  clip_table_name => 'svmc_clip',
14:28:01  35  	  data_table_name => '&bldtable',
14:28:01  36  	  tail_frac	  => 0.025,
14:28:01  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:28:01  38  
14:28:01  39  	-- xform input data to winsorized data
14:28:01  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
14:28:01  41  	  clip_table_name => 'svmc_clip',
14:28:01  42  	  data_table_name => '&bldtable',
14:28:01  43  	  xform_view_name => 'svmc_winsor');
14:28:01  44  
14:28:01  45  	-- create normalization table
14:28:01  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
14:28:01  47  
14:28:01  48  	-- populate normalization table based on winsorized data
14:28:01  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
14:28:01  50  	  norm_table_name => 'svmc_norm',
14:28:01  51  	  data_table_name => 'svmc_winsor',
14:28:01  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:28:01  53  
14:28:01  54  	-- normalize the original data
14:28:01  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:28:01  56  	  norm_table_name => 'svmc_norm',
14:28:01  57  	  data_table_name => '&bldtable',
14:28:01  58  	  xform_view_name => 'svmc_build_prep');
14:28:01  59  END;
14:28:01  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.66
14:28:19 SQL> 
14:28:19 SQL> ---------------------
14:28:19 SQL> -- CREATE A NEW MODEL
14:28:19 SQL> --
14:28:19 SQL> -- Cleanup old model with the same name for repeat runs
14:28:19 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
14:28:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:28:19   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.04
14:28:20 SQL> 
14:28:20 SQL> -- Build a new SVM Model
14:28:20 SQL> BEGIN
14:28:20   2  	DBMS_DATA_MINING.CREATE_MODEL(
14:28:20   3  	  model_name	      => '&model_name',
14:28:20   4  	  mining_function     => dbms_data_mining.classification,
14:28:20   5  	  data_table_name     => 'svmc_build_prep',
14:28:20   6  	  case_id_column_name => '&case_id',
14:28:20   7  	  target_column_name  => '&target',
14:28:20   8  	  settings_table_name => 'svmc_settings');
14:28:20   9  END;
14:28:20  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.80
14:28:49 SQL> 
14:28:49 SQL> -----------------------------------------------------------------------
14:28:49 SQL> --			       APPLY/score THE MODEL
14:28:49 SQL> -----------------------------------------------------------------------
14:28:49 SQL> 
14:28:49 SQL> -- Cleanup old scoring data preparation objects for repeat runs
14:28:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
14:28:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:28:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
14:28:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
14:28:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:28:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:28:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
14:28:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:28:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:28:49 SQL> -----------------------
14:28:49 SQL> -- PREPARE SCORING DATA
14:28:49 SQL> --
14:28:49 SQL> -- If the data for model creation has been prepared, then the data
14:28:49 SQL> -- to be scored using the model must be prepared in the same manner
14:28:49 SQL> -- in order to obtain meaningful results.
14:28:49 SQL> --
14:28:49 SQL> -- 1. Missing Value treatment for all Predictors and
14:28:49 SQL> -- 2. Normalization
14:28:49 SQL> -- No outlier treatment will be performed during test and apply. The
14:28:49 SQL> -- normalization step is sufficient, since the normalization parameters
14:28:49 SQL> -- already capture the effects of outlier treatment done with build data.
14:28:49 SQL> --
14:28:49 SQL> BEGIN
14:28:49   2  	-- Xform Test data to replace missing values
14:28:49   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:28:49   4  	  miss_table_name => 'svmc_miss_num',
14:28:49   5  	  data_table_name => '&scoretable',
14:28:49   6  	  xform_view_name => 'xformed_apply_miss_num');
14:28:49   7  
14:28:49   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:28:49   9  	  miss_table_name => 'svmc_miss_cat',
14:28:49  10  	  data_table_name => '&scoretable',
14:28:49  11  	  xform_view_name => 'xformed_apply_miss_cat');
14:28:49  12  
14:28:49  13  	-- Normalize the data to be scored
14:28:49  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:28:49  15  	  norm_table_name => 'svmc_norm',
14:28:49  16  	  data_table_name => '&scoretable',
14:28:49  17  	  xform_view_name => 'svmc_apply_prep');
14:28:49  18  END;
14:28:49  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.33
14:28:51 SQL> 
14:28:51 SQL> -- Use same model_name used in score_gattn.sql
14:28:51 SQL> DEFINE model_name = 'forex15'
14:28:51 SQL> 
14:28:51 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
14:28:51 SQL> 
14:28:51 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
14:28:51   2  SELECT
14:28:51   3  prdate
14:28:51   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
14:28:51   5  ,sysdate
14:28:51   6  ,SUBSTR(prdate,1,3)pair
14:28:51   7  ,SUBSTR(prdate,4,19)ydate
14:28:51   8  FROM svmc_apply_prep
14:28:51   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
14:28:51 SQL> @aud_score1day_gattn.sql	2011-01-05 14:15:00
14:28:51 SQL> --
14:28:51 SQL> -- aud_score1day_gattn.sql
14:28:51 SQL> --
14:28:51 SQL> 
14:28:51 SQL> CREATE OR REPLACE VIEW sme AS
14:28:51   2  SELECT
14:28:51   3  'aud'||m.ydate prdate
14:28:51   4  ,NULL gattn
14:28:51   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:28:51   6  ,eur_g00
14:28:51   7  ,eur_g01
14:28:51   8  ,eur_g02
14:28:51   9  ,eur_g03
14:28:51  10  ,eur_g04
14:28:51  11  ,eur_g05
14:28:51  12  ,eur_g06
14:28:51  13  ,eur_g07
14:28:51  14  ,eur_g08
14:28:51  15  ,eur_g09
14:28:51  16  ,eur_g10
14:28:51  17  ,eur_g11
14:28:51  18  ,eur_g12
14:28:51  19  ,eur_g13
14:28:51  20  ,eur_g14
14:28:51  21  ,eur_g15
14:28:51  22  ,eur_g16
14:28:51  23  ,eur_g17
14:28:51  24  ,eur_g18
14:28:51  25  ,eur_g19
14:28:51  26  ,eur_g20
14:28:51  27  ,eur_g21
14:28:51  28  ,eur_g22
14:28:51  29  ,eur_g23
14:28:51  30  ,eur_g24
14:28:51  31  ,eur_g25
14:28:51  32  ,eur_g26
14:28:51  33  ,eur_g27
14:28:51  34  ,eur_g28
14:28:51  35  ,eur_g29
14:28:51  36  ,eur_g30
14:28:51  37  ,eur_g31
14:28:51  38  ,eur_g32
14:28:51  39  ,eur_g33
14:28:51  40  ,eur_g34
14:28:51  41  ,eur_g35
14:28:51  42  ,eur_g36
14:28:51  43  ,eur_g37
14:28:51  44  ,eur_g38
14:28:51  45  ,eur_g39
14:28:51  46  ,eur_g40
14:28:51  47  ,eur_g41
14:28:51  48  ,aud_g00
14:28:51  49  ,aud_g01
14:28:51  50  ,aud_g02
14:28:51  51  ,aud_g03
14:28:51  52  ,aud_g04
14:28:51  53  ,aud_g05
14:28:51  54  ,aud_g06
14:28:51  55  ,aud_g07
14:28:51  56  ,aud_g08
14:28:51  57  ,aud_g09
14:28:51  58  ,aud_g10
14:28:51  59  ,aud_g11
14:28:51  60  ,aud_g12
14:28:51  61  ,aud_g13
14:28:51  62  ,aud_g14
14:28:51  63  ,aud_g15
14:28:51  64  ,aud_g16
14:28:51  65  ,aud_g17
14:28:51  66  ,aud_g18
14:28:51  67  ,aud_g19
14:28:51  68  ,aud_g20
14:28:51  69  ,aud_g21
14:28:51  70  ,aud_g22
14:28:51  71  ,aud_g23
14:28:51  72  ,aud_g24
14:28:51  73  ,aud_g25
14:28:51  74  ,aud_g26
14:28:51  75  ,aud_g27
14:28:51  76  ,aud_g28
14:28:51  77  ,aud_g29
14:28:51  78  ,aud_g30
14:28:51  79  ,aud_g31
14:28:51  80  ,aud_g32
14:28:51  81  ,aud_g33
14:28:51  82  ,aud_g34
14:28:51  83  ,aud_g35
14:28:51  84  ,aud_g36
14:28:51  85  ,aud_g37
14:28:51  86  ,aud_g38
14:28:51  87  ,aud_g39
14:28:51  88  ,aud_g40
14:28:51  89  ,aud_g41
14:28:51  90  ,gbp_g00
14:28:51  91  ,gbp_g01
14:28:51  92  ,gbp_g02
14:28:51  93  ,gbp_g03
14:28:51  94  ,gbp_g04
14:28:51  95  ,gbp_g05
14:28:51  96  ,gbp_g06
14:28:51  97  ,gbp_g07
14:28:51  98  ,gbp_g08
14:28:51  99  ,gbp_g09
14:28:51 100  ,gbp_g10
14:28:51 101  ,gbp_g11
14:28:51 102  ,gbp_g12
14:28:51 103  ,gbp_g13
14:28:51 104  ,gbp_g14
14:28:51 105  ,gbp_g15
14:28:51 106  ,gbp_g16
14:28:51 107  ,gbp_g17
14:28:51 108  ,gbp_g18
14:28:51 109  ,gbp_g19
14:28:51 110  ,gbp_g20
14:28:51 111  ,gbp_g21
14:28:51 112  ,gbp_g22
14:28:51 113  ,gbp_g23
14:28:51 114  ,gbp_g24
14:28:51 115  ,gbp_g25
14:28:51 116  ,gbp_g26
14:28:51 117  ,gbp_g27
14:28:51 118  ,gbp_g28
14:28:51 119  ,gbp_g29
14:28:51 120  ,gbp_g30
14:28:51 121  ,gbp_g31
14:28:51 122  ,gbp_g32
14:28:51 123  ,gbp_g33
14:28:51 124  ,gbp_g34
14:28:51 125  ,gbp_g35
14:28:51 126  ,gbp_g36
14:28:51 127  ,gbp_g37
14:28:51 128  ,gbp_g38
14:28:51 129  ,gbp_g39
14:28:51 130  ,gbp_g40
14:28:51 131  ,gbp_g41
14:28:51 132  ,jpy_g00
14:28:51 133  ,jpy_g01
14:28:51 134  ,jpy_g02
14:28:51 135  ,jpy_g03
14:28:51 136  ,jpy_g04
14:28:51 137  ,jpy_g05
14:28:51 138  ,jpy_g06
14:28:51 139  ,jpy_g07
14:28:51 140  ,jpy_g08
14:28:51 141  ,jpy_g09
14:28:51 142  ,jpy_g10
14:28:51 143  ,jpy_g11
14:28:51 144  ,jpy_g12
14:28:51 145  ,jpy_g13
14:28:51 146  ,jpy_g14
14:28:51 147  ,jpy_g15
14:28:51 148  ,jpy_g16
14:28:51 149  ,jpy_g17
14:28:51 150  ,jpy_g18
14:28:51 151  ,jpy_g19
14:28:51 152  ,jpy_g20
14:28:51 153  ,jpy_g21
14:28:51 154  ,jpy_g22
14:28:51 155  ,jpy_g23
14:28:51 156  ,jpy_g24
14:28:51 157  ,jpy_g25
14:28:51 158  ,jpy_g26
14:28:51 159  ,jpy_g27
14:28:51 160  ,jpy_g28
14:28:51 161  ,jpy_g29
14:28:51 162  ,jpy_g30
14:28:51 163  ,jpy_g31
14:28:51 164  ,jpy_g32
14:28:51 165  ,jpy_g33
14:28:51 166  ,jpy_g34
14:28:51 167  ,jpy_g35
14:28:51 168  ,jpy_g36
14:28:51 169  ,jpy_g37
14:28:51 170  ,jpy_g38
14:28:51 171  ,jpy_g39
14:28:51 172  ,jpy_g40
14:28:51 173  ,jpy_g41
14:28:51 174  ,cad_g00
14:28:51 175  ,cad_g01
14:28:51 176  ,cad_g02
14:28:51 177  ,cad_g03
14:28:51 178  ,cad_g04
14:28:51 179  ,cad_g05
14:28:51 180  ,cad_g06
14:28:51 181  ,cad_g07
14:28:51 182  ,cad_g08
14:28:51 183  ,cad_g09
14:28:51 184  ,cad_g10
14:28:51 185  ,cad_g11
14:28:51 186  ,cad_g12
14:28:51 187  ,cad_g13
14:28:51 188  ,cad_g14
14:28:51 189  ,cad_g15
14:28:51 190  ,cad_g16
14:28:51 191  ,cad_g17
14:28:51 192  ,cad_g18
14:28:51 193  ,cad_g19
14:28:51 194  ,cad_g20
14:28:51 195  ,cad_g21
14:28:51 196  ,cad_g22
14:28:51 197  ,cad_g23
14:28:51 198  ,cad_g24
14:28:51 199  ,cad_g25
14:28:51 200  ,cad_g26
14:28:51 201  ,cad_g27
14:28:51 202  ,cad_g28
14:28:51 203  ,cad_g29
14:28:51 204  ,cad_g30
14:28:51 205  ,cad_g31
14:28:51 206  ,cad_g32
14:28:51 207  ,cad_g33
14:28:51 208  ,cad_g34
14:28:51 209  ,cad_g35
14:28:51 210  ,cad_g36
14:28:51 211  ,cad_g37
14:28:51 212  ,cad_g38
14:28:51 213  ,cad_g39
14:28:51 214  ,cad_g40
14:28:51 215  ,cad_g41
14:28:51 216  ,chf_g00
14:28:51 217  ,chf_g01
14:28:51 218  ,chf_g02
14:28:51 219  ,chf_g03
14:28:51 220  ,chf_g04
14:28:51 221  ,chf_g05
14:28:51 222  ,chf_g06
14:28:51 223  ,chf_g07
14:28:51 224  ,chf_g08
14:28:51 225  ,chf_g09
14:28:51 226  ,chf_g10
14:28:51 227  ,chf_g11
14:28:51 228  ,chf_g12
14:28:51 229  ,chf_g13
14:28:51 230  ,chf_g14
14:28:51 231  ,chf_g15
14:28:51 232  ,chf_g16
14:28:51 233  ,chf_g17
14:28:51 234  ,chf_g18
14:28:51 235  ,chf_g19
14:28:51 236  ,chf_g20
14:28:51 237  ,chf_g21
14:28:51 238  ,chf_g22
14:28:51 239  ,chf_g23
14:28:51 240  ,chf_g24
14:28:51 241  ,chf_g25
14:28:51 242  ,chf_g26
14:28:51 243  ,chf_g27
14:28:51 244  ,chf_g28
14:28:51 245  ,chf_g29
14:28:51 246  ,chf_g30
14:28:51 247  ,chf_g31
14:28:51 248  ,chf_g32
14:28:51 249  ,chf_g33
14:28:51 250  ,chf_g34
14:28:51 251  ,chf_g35
14:28:51 252  ,chf_g36
14:28:51 253  ,chf_g37
14:28:51 254  ,chf_g38
14:28:51 255  ,chf_g39
14:28:51 256  ,chf_g40
14:28:51 257  ,chf_g41
14:28:51 258  FROM aud_ms6 m
14:28:51 259  WHERE m.ydate = '&1'||' '||'&2'
14:28:51 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-05'||' '||'14:15:00'

View created.

Elapsed: 00:00:00.13
14:28:51 SQL> 
14:28:51 SQL> -- rpt
14:28:51 SQL> -- We should see just 1 row:
14:28:51 SQL> 
14:28:51 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
14:28:51 SQL> 
14:28:51 SQL> -- Build the model:
14:28:51 SQL> CREATE OR REPLACE VIEW bme AS
14:28:51   2  SELECT
14:28:51   3  'aud'||m.ydate prdate
14:28:51   4  ,gattn
14:28:51   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
14:28:51   6  ,eur_g00
14:28:51   7  ,eur_g01
14:28:51   8  ,eur_g02
14:28:51   9  ,eur_g03
14:28:51  10  ,eur_g04
14:28:51  11  ,eur_g05
14:28:51  12  ,eur_g06
14:28:51  13  ,eur_g07
14:28:51  14  ,eur_g08
14:28:51  15  ,eur_g09
14:28:51  16  ,eur_g10
14:28:51  17  ,eur_g11
14:28:51  18  ,eur_g12
14:28:51  19  ,eur_g13
14:28:51  20  ,eur_g14
14:28:51  21  ,eur_g15
14:28:51  22  ,eur_g16
14:28:51  23  ,eur_g17
14:28:51  24  ,eur_g18
14:28:51  25  ,eur_g19
14:28:51  26  ,eur_g20
14:28:51  27  ,eur_g21
14:28:51  28  ,eur_g22
14:28:51  29  ,eur_g23
14:28:51  30  ,eur_g24
14:28:51  31  ,eur_g25
14:28:51  32  ,eur_g26
14:28:51  33  ,eur_g27
14:28:51  34  ,eur_g28
14:28:51  35  ,eur_g29
14:28:51  36  ,eur_g30
14:28:51  37  ,eur_g31
14:28:51  38  ,eur_g32
14:28:51  39  ,eur_g33
14:28:51  40  ,eur_g34
14:28:51  41  ,eur_g35
14:28:51  42  ,eur_g36
14:28:51  43  ,eur_g37
14:28:51  44  ,eur_g38
14:28:51  45  ,eur_g39
14:28:51  46  ,eur_g40
14:28:51  47  ,eur_g41
14:28:51  48  ,aud_g00
14:28:51  49  ,aud_g01
14:28:51  50  ,aud_g02
14:28:51  51  ,aud_g03
14:28:51  52  ,aud_g04
14:28:51  53  ,aud_g05
14:28:51  54  ,aud_g06
14:28:51  55  ,aud_g07
14:28:51  56  ,aud_g08
14:28:51  57  ,aud_g09
14:28:51  58  ,aud_g10
14:28:51  59  ,aud_g11
14:28:51  60  ,aud_g12
14:28:51  61  ,aud_g13
14:28:51  62  ,aud_g14
14:28:51  63  ,aud_g15
14:28:51  64  ,aud_g16
14:28:51  65  ,aud_g17
14:28:51  66  ,aud_g18
14:28:51  67  ,aud_g19
14:28:51  68  ,aud_g20
14:28:51  69  ,aud_g21
14:28:51  70  ,aud_g22
14:28:51  71  ,aud_g23
14:28:51  72  ,aud_g24
14:28:51  73  ,aud_g25
14:28:51  74  ,aud_g26
14:28:51  75  ,aud_g27
14:28:51  76  ,aud_g28
14:28:51  77  ,aud_g29
14:28:51  78  ,aud_g30
14:28:51  79  ,aud_g31
14:28:51  80  ,aud_g32
14:28:51  81  ,aud_g33
14:28:51  82  ,aud_g34
14:28:51  83  ,aud_g35
14:28:51  84  ,aud_g36
14:28:51  85  ,aud_g37
14:28:51  86  ,aud_g38
14:28:51  87  ,aud_g39
14:28:51  88  ,aud_g40
14:28:51  89  ,aud_g41
14:28:51  90  ,gbp_g00
14:28:51  91  ,gbp_g01
14:28:51  92  ,gbp_g02
14:28:51  93  ,gbp_g03
14:28:51  94  ,gbp_g04
14:28:51  95  ,gbp_g05
14:28:51  96  ,gbp_g06
14:28:51  97  ,gbp_g07
14:28:51  98  ,gbp_g08
14:28:51  99  ,gbp_g09
14:28:51 100  ,gbp_g10
14:28:51 101  ,gbp_g11
14:28:51 102  ,gbp_g12
14:28:51 103  ,gbp_g13
14:28:51 104  ,gbp_g14
14:28:51 105  ,gbp_g15
14:28:51 106  ,gbp_g16
14:28:51 107  ,gbp_g17
14:28:51 108  ,gbp_g18
14:28:51 109  ,gbp_g19
14:28:51 110  ,gbp_g20
14:28:51 111  ,gbp_g21
14:28:51 112  ,gbp_g22
14:28:51 113  ,gbp_g23
14:28:51 114  ,gbp_g24
14:28:51 115  ,gbp_g25
14:28:51 116  ,gbp_g26
14:28:51 117  ,gbp_g27
14:28:51 118  ,gbp_g28
14:28:51 119  ,gbp_g29
14:28:51 120  ,gbp_g30
14:28:51 121  ,gbp_g31
14:28:51 122  ,gbp_g32
14:28:51 123  ,gbp_g33
14:28:51 124  ,gbp_g34
14:28:51 125  ,gbp_g35
14:28:51 126  ,gbp_g36
14:28:51 127  ,gbp_g37
14:28:51 128  ,gbp_g38
14:28:51 129  ,gbp_g39
14:28:51 130  ,gbp_g40
14:28:51 131  ,gbp_g41
14:28:51 132  ,jpy_g00
14:28:51 133  ,jpy_g01
14:28:51 134  ,jpy_g02
14:28:51 135  ,jpy_g03
14:28:51 136  ,jpy_g04
14:28:51 137  ,jpy_g05
14:28:51 138  ,jpy_g06
14:28:51 139  ,jpy_g07
14:28:51 140  ,jpy_g08
14:28:51 141  ,jpy_g09
14:28:51 142  ,jpy_g10
14:28:51 143  ,jpy_g11
14:28:51 144  ,jpy_g12
14:28:51 145  ,jpy_g13
14:28:51 146  ,jpy_g14
14:28:51 147  ,jpy_g15
14:28:51 148  ,jpy_g16
14:28:51 149  ,jpy_g17
14:28:51 150  ,jpy_g18
14:28:51 151  ,jpy_g19
14:28:51 152  ,jpy_g20
14:28:51 153  ,jpy_g21
14:28:51 154  ,jpy_g22
14:28:51 155  ,jpy_g23
14:28:51 156  ,jpy_g24
14:28:51 157  ,jpy_g25
14:28:51 158  ,jpy_g26
14:28:51 159  ,jpy_g27
14:28:51 160  ,jpy_g28
14:28:51 161  ,jpy_g29
14:28:51 162  ,jpy_g30
14:28:51 163  ,jpy_g31
14:28:51 164  ,jpy_g32
14:28:51 165  ,jpy_g33
14:28:51 166  ,jpy_g34
14:28:51 167  ,jpy_g35
14:28:51 168  ,jpy_g36
14:28:51 169  ,jpy_g37
14:28:51 170  ,jpy_g38
14:28:51 171  ,jpy_g39
14:28:51 172  ,jpy_g40
14:28:51 173  ,jpy_g41
14:28:51 174  ,cad_g00
14:28:51 175  ,cad_g01
14:28:51 176  ,cad_g02
14:28:51 177  ,cad_g03
14:28:51 178  ,cad_g04
14:28:51 179  ,cad_g05
14:28:51 180  ,cad_g06
14:28:51 181  ,cad_g07
14:28:51 182  ,cad_g08
14:28:51 183  ,cad_g09
14:28:51 184  ,cad_g10
14:28:51 185  ,cad_g11
14:28:51 186  ,cad_g12
14:28:51 187  ,cad_g13
14:28:51 188  ,cad_g14
14:28:51 189  ,cad_g15
14:28:51 190  ,cad_g16
14:28:51 191  ,cad_g17
14:28:51 192  ,cad_g18
14:28:51 193  ,cad_g19
14:28:51 194  ,cad_g20
14:28:51 195  ,cad_g21
14:28:51 196  ,cad_g22
14:28:51 197  ,cad_g23
14:28:51 198  ,cad_g24
14:28:51 199  ,cad_g25
14:28:51 200  ,cad_g26
14:28:51 201  ,cad_g27
14:28:51 202  ,cad_g28
14:28:51 203  ,cad_g29
14:28:51 204  ,cad_g30
14:28:51 205  ,cad_g31
14:28:51 206  ,cad_g32
14:28:51 207  ,cad_g33
14:28:51 208  ,cad_g34
14:28:51 209  ,cad_g35
14:28:51 210  ,cad_g36
14:28:51 211  ,cad_g37
14:28:51 212  ,cad_g38
14:28:51 213  ,cad_g39
14:28:51 214  ,cad_g40
14:28:51 215  ,cad_g41
14:28:51 216  ,chf_g00
14:28:51 217  ,chf_g01
14:28:51 218  ,chf_g02
14:28:51 219  ,chf_g03
14:28:51 220  ,chf_g04
14:28:51 221  ,chf_g05
14:28:51 222  ,chf_g06
14:28:51 223  ,chf_g07
14:28:51 224  ,chf_g08
14:28:51 225  ,chf_g09
14:28:51 226  ,chf_g10
14:28:51 227  ,chf_g11
14:28:51 228  ,chf_g12
14:28:51 229  ,chf_g13
14:28:51 230  ,chf_g14
14:28:51 231  ,chf_g15
14:28:51 232  ,chf_g16
14:28:51 233  ,chf_g17
14:28:51 234  ,chf_g18
14:28:51 235  ,chf_g19
14:28:51 236  ,chf_g20
14:28:51 237  ,chf_g21
14:28:51 238  ,chf_g22
14:28:51 239  ,chf_g23
14:28:51 240  ,chf_g24
14:28:51 241  ,chf_g25
14:28:51 242  ,chf_g26
14:28:51 243  ,chf_g27
14:28:51 244  ,chf_g28
14:28:51 245  ,chf_g29
14:28:51 246  ,chf_g30
14:28:51 247  ,chf_g31
14:28:51 248  ,chf_g32
14:28:51 249  ,chf_g33
14:28:51 250  ,chf_g34
14:28:51 251  ,chf_g35
14:28:51 252  ,chf_g36
14:28:51 253  ,chf_g37
14:28:51 254  ,chf_g38
14:28:51 255  ,chf_g39
14:28:51 256  ,chf_g40
14:28:51 257  ,chf_g41
14:28:51 258  FROM aud_ms6 m
14:28:51 259  WHERE gattn IN('nup','up')
14:28:51 260  AND 1+m.ydate < '&1'||' '||'&2'
14:28:51 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-05'||' '||'14:15:00'

View created.

Elapsed: 00:00:00.14
14:28:51 SQL> 
14:28:51 SQL> -- rpt
14:28:51 SQL> 
14:28:51 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12704
up	     6447

Elapsed: 00:00:00.05
14:28:51 SQL> 
14:28:51 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-04 14:10:00

Elapsed: 00:00:00.03
14:28:51 SQL> 
14:28:51 SQL> -- Now build model from bme and score sme
14:28:51 SQL> @score1gattn.sql
14:28:51 SQL> -- score1gattn.sql
14:28:51 SQL> 
14:28:51 SQL> -- Does the 1st SVM score
14:28:51 SQL> 
14:28:51 SQL> -- Fill up svmc_apply_prep
14:28:51 SQL> @score_gattn.sql
14:28:51 SQL> --
14:28:51 SQL> -- score_gattn.sql
14:28:51 SQL> --
14:28:51 SQL> 
14:28:51 SQL> -- usage: score_gattn.sql
14:28:51 SQL> 
14:28:51 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
14:28:51 SQL> 
14:28:51 SQL> DEFINE target	= 'gattn'
14:28:51 SQL> DEFINE model_name = 'forex15'
14:28:51 SQL> DEFINE bldtable	= 'bme'
14:28:51 SQL> DEFINE scoretable = 'sme'
14:28:51 SQL> DEFINE case_id	= 'prdate'
14:28:51 SQL> 
14:28:51 SQL> -- Define a variable to help me exclude some columns from some data mining calls
14:28:51 SQL> DEFINE exclude1 = "'&target','&case_id'"
14:28:51 SQL> 
14:28:51 SQL> -- Builds an SVM model using pl/sql.
14:28:51 SQL> 
14:28:51 SQL> -----------------------------------------------------------------------
14:28:51 SQL> --			    BUILD THE MODEL
14:28:51 SQL> -----------------------------------------------------------------------
14:28:51 SQL> 
14:28:51 SQL> -- Cleanup old build data preparation objects for repeat runs
14:28:51 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
14:28:51 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
14:28:51 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
14:28:51 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
14:28:51 SQL> 
14:28:51 SQL> 
14:28:51 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
14:28:51 SQL> --
14:28:51 SQL> -- DROP	TABLE svmc_settings ;
14:28:51 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
14:28:51 SQL> -- DELETE svmc_settings;
14:28:51 SQL> 
14:28:51 SQL> -- The default classification algorithm is Naive Bayes. So override
14:28:51 SQL> -- this choice to SVM using a settings table.
14:28:51 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
14:28:51 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
14:28:51 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
14:28:51 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
14:28:51 SQL> -- models.
14:28:51 SQL> --
14:28:51 SQL> 
14:28:51 SQL> -- Do this once and then comment it out.
14:28:51 SQL> -- That makes script go faster.
14:28:51 SQL> -- BEGIN
14:28:51 SQL> -- -- Populate settings table
14:28:51 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:28:51 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
14:28:51 SQL> --
14:28:51 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:28:51 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
14:28:51 SQL> --
14:28:51 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
14:28:51 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
14:28:51 SQL> --   COMMIT;
14:28:51 SQL> -- END;
14:28:51 SQL> -- /
14:28:51 SQL> 
14:28:51 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
14:28:51 SQL> 
14:28:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
14:28:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:28:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:28:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
14:28:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:28:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:28:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
14:28:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:28:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:28:51 SQL> 
14:28:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
14:28:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:28:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:28:51 SQL> 
14:28:51 SQL> --------------------------------
14:28:51 SQL> -- PREPARE BUILD (TRAINING) DATA
14:28:51 SQL> --
14:28:51 SQL> 
14:28:51 SQL> -- 1. Missing Value treatment for all Predictors and
14:28:51 SQL> -- 2. Outlier Treatment and
14:28:51 SQL> -- 3. Normalization are performed below.
14:28:51 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
14:28:51 SQL> --    normalized here.
14:28:51 SQL> 
14:28:51 SQL> BEGIN
14:28:51   2  	-- Perform missing value treatment for all predictors
14:28:51   3  	-- create miss tables
14:28:51   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
14:28:51   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
14:28:51   6  
14:28:51   7  	-- populate miss tables
14:28:51   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
14:28:51   9  	  miss_table_name => 'svmc_miss_num',
14:28:51  10  	  data_table_name => '&bldtable',
14:28:51  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:28:51  12  
14:28:51  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
14:28:51  14  	  miss_table_name => 'svmc_miss_cat',
14:28:51  15  	  data_table_name => '&bldtable',
14:28:51  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:28:51  17  
14:28:51  18  	-- xform input data to replace missing values
14:28:51  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:28:51  20  	  miss_table_name => 'svmc_miss_num',
14:28:51  21  	  data_table_name => '&bldtable',
14:28:51  22  	  xform_view_name => 'xformed_build_miss_num');
14:28:51  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:28:51  24  	  miss_table_name => 'svmc_miss_cat',
14:28:51  25  	  data_table_name => '&bldtable',
14:28:51  26  	  xform_view_name => 'xformed_build_miss_cat');
14:28:51  27  
14:28:51  28  	-- Perform outlier treatment.
14:28:51  29  	-- create clip table
14:28:51  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
14:28:51  31  
14:28:51  32  	-- populate clip table
14:28:51  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
14:28:51  34  	  clip_table_name => 'svmc_clip',
14:28:51  35  	  data_table_name => '&bldtable',
14:28:51  36  	  tail_frac	  => 0.025,
14:28:51  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:28:51  38  
14:28:51  39  	-- xform input data to winsorized data
14:28:51  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
14:28:51  41  	  clip_table_name => 'svmc_clip',
14:28:51  42  	  data_table_name => '&bldtable',
14:28:51  43  	  xform_view_name => 'svmc_winsor');
14:28:51  44  
14:28:51  45  	-- create normalization table
14:28:51  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
14:28:51  47  
14:28:51  48  	-- populate normalization table based on winsorized data
14:28:51  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
14:28:51  50  	  norm_table_name => 'svmc_norm',
14:28:51  51  	  data_table_name => 'svmc_winsor',
14:28:51  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
14:28:51  53  
14:28:51  54  	-- normalize the original data
14:28:51  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:28:51  56  	  norm_table_name => 'svmc_norm',
14:28:51  57  	  data_table_name => '&bldtable',
14:28:51  58  	  xform_view_name => 'svmc_build_prep');
14:28:51  59  END;
14:28:51  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.10
14:29:11 SQL> 
14:29:11 SQL> ---------------------
14:29:11 SQL> -- CREATE A NEW MODEL
14:29:11 SQL> --
14:29:11 SQL> -- Cleanup old model with the same name for repeat runs
14:29:11 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
14:29:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:29:11   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.92
14:29:11 SQL> 
14:29:11 SQL> -- Build a new SVM Model
14:29:11 SQL> BEGIN
14:29:11   2  	DBMS_DATA_MINING.CREATE_MODEL(
14:29:11   3  	  model_name	      => '&model_name',
14:29:11   4  	  mining_function     => dbms_data_mining.classification,
14:29:11   5  	  data_table_name     => 'svmc_build_prep',
14:29:11   6  	  case_id_column_name => '&case_id',
14:29:11   7  	  target_column_name  => '&target',
14:29:11   8  	  settings_table_name => 'svmc_settings');
14:29:11   9  END;
14:29:11  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.28
14:29:38 SQL> 
14:29:38 SQL> -----------------------------------------------------------------------
14:29:38 SQL> --			       APPLY/score THE MODEL
14:29:38 SQL> -----------------------------------------------------------------------
14:29:38 SQL> 
14:29:38 SQL> -- Cleanup old scoring data preparation objects for repeat runs
14:29:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
14:29:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:29:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
14:29:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
14:29:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:29:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:29:38 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
14:29:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
14:29:38   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
14:29:38 SQL> -----------------------
14:29:38 SQL> -- PREPARE SCORING DATA
14:29:38 SQL> --
14:29:38 SQL> -- If the data for model creation has been prepared, then the data
14:29:38 SQL> -- to be scored using the model must be prepared in the same manner
14:29:38 SQL> -- in order to obtain meaningful results.
14:29:38 SQL> --
14:29:38 SQL> -- 1. Missing Value treatment for all Predictors and
14:29:38 SQL> -- 2. Normalization
14:29:38 SQL> -- No outlier treatment will be performed during test and apply. The
14:29:38 SQL> -- normalization step is sufficient, since the normalization parameters
14:29:38 SQL> -- already capture the effects of outlier treatment done with build data.
14:29:38 SQL> --
14:29:38 SQL> BEGIN
14:29:38   2  	-- Xform Test data to replace missing values
14:29:38   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
14:29:38   4  	  miss_table_name => 'svmc_miss_num',
14:29:38   5  	  data_table_name => '&scoretable',
14:29:38   6  	  xform_view_name => 'xformed_apply_miss_num');
14:29:38   7  
14:29:38   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
14:29:38   9  	  miss_table_name => 'svmc_miss_cat',
14:29:38  10  	  data_table_name => '&scoretable',
14:29:38  11  	  xform_view_name => 'xformed_apply_miss_cat');
14:29:38  12  
14:29:38  13  	-- Normalize the data to be scored
14:29:38  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
14:29:38  15  	  norm_table_name => 'svmc_norm',
14:29:38  16  	  data_table_name => '&scoretable',
14:29:38  17  	  xform_view_name => 'svmc_apply_prep');
14:29:38  18  END;
14:29:38  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.29
14:29:39 SQL> 
14:29:39 SQL> -- Use same model_name used in score_gattn.sql
14:29:39 SQL> DEFINE model_name = 'forex15'
14:29:39 SQL> 
14:29:39 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
14:29:39 SQL> 
14:29:39 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
14:29:39   2  SELECT
14:29:39   3  prdate
14:29:39   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
14:29:39   5  ,sysdate
14:29:39   6  ,SUBSTR(prdate,1,3)pair
14:29:39   7  ,SUBSTR(prdate,4,19)ydate
14:29:39   8  FROM svmc_apply_prep
14:29:39   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
14:29:39 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
