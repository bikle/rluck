
SQL*Plus: Release 11.2.0.1.0 Production on Thu Jan 6 22:04:41 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:04:41 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
22:04:41 SQL> 22:04:41 SQL> @aud_score1day.sql  2011-01-06 21:40:00
22:04:41 SQL> --
22:04:41 SQL> -- aud_score1day.sql
22:04:41 SQL> --
22:04:41 SQL> 
22:04:41 SQL> CREATE OR REPLACE VIEW sme AS
22:04:41   2  SELECT
22:04:41   3  'aud'||m.ydate prdate
22:04:41   4  ,NULL gatt
22:04:41   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:04:41   6  ,eur_g00
22:04:41   7  ,eur_g01
22:04:41   8  ,eur_g02
22:04:41   9  ,eur_g03
22:04:41  10  ,eur_g04
22:04:41  11  ,eur_g05
22:04:41  12  ,eur_g06
22:04:41  13  ,eur_g07
22:04:41  14  ,eur_g08
22:04:41  15  ,eur_g09
22:04:41  16  ,eur_g10
22:04:41  17  ,eur_g11
22:04:41  18  ,eur_g12
22:04:41  19  ,eur_g13
22:04:41  20  ,eur_g14
22:04:41  21  ,eur_g15
22:04:41  22  ,eur_g16
22:04:41  23  ,eur_g17
22:04:41  24  ,eur_g18
22:04:41  25  ,eur_g19
22:04:41  26  ,eur_g20
22:04:41  27  ,eur_g21
22:04:41  28  ,eur_g22
22:04:41  29  ,eur_g23
22:04:41  30  ,eur_g24
22:04:41  31  ,eur_g25
22:04:41  32  ,eur_g26
22:04:41  33  ,eur_g27
22:04:41  34  ,eur_g28
22:04:41  35  ,eur_g29
22:04:41  36  ,eur_g30
22:04:41  37  ,eur_g31
22:04:41  38  ,eur_g32
22:04:41  39  ,eur_g33
22:04:41  40  ,eur_g34
22:04:41  41  ,eur_g35
22:04:41  42  ,eur_g36
22:04:41  43  ,eur_g37
22:04:41  44  ,eur_g38
22:04:41  45  ,eur_g39
22:04:41  46  ,eur_g40
22:04:41  47  ,eur_g41
22:04:41  48  ,aud_g00
22:04:41  49  ,aud_g01
22:04:41  50  ,aud_g02
22:04:41  51  ,aud_g03
22:04:41  52  ,aud_g04
22:04:41  53  ,aud_g05
22:04:41  54  ,aud_g06
22:04:41  55  ,aud_g07
22:04:41  56  ,aud_g08
22:04:41  57  ,aud_g09
22:04:41  58  ,aud_g10
22:04:41  59  ,aud_g11
22:04:41  60  ,aud_g12
22:04:41  61  ,aud_g13
22:04:41  62  ,aud_g14
22:04:41  63  ,aud_g15
22:04:41  64  ,aud_g16
22:04:41  65  ,aud_g17
22:04:41  66  ,aud_g18
22:04:41  67  ,aud_g19
22:04:41  68  ,aud_g20
22:04:41  69  ,aud_g21
22:04:41  70  ,aud_g22
22:04:41  71  ,aud_g23
22:04:41  72  ,aud_g24
22:04:41  73  ,aud_g25
22:04:41  74  ,aud_g26
22:04:41  75  ,aud_g27
22:04:41  76  ,aud_g28
22:04:41  77  ,aud_g29
22:04:41  78  ,aud_g30
22:04:41  79  ,aud_g31
22:04:41  80  ,aud_g32
22:04:41  81  ,aud_g33
22:04:41  82  ,aud_g34
22:04:41  83  ,aud_g35
22:04:41  84  ,aud_g36
22:04:41  85  ,aud_g37
22:04:41  86  ,aud_g38
22:04:41  87  ,aud_g39
22:04:41  88  ,aud_g40
22:04:41  89  ,aud_g41
22:04:41  90  ,gbp_g00
22:04:41  91  ,gbp_g01
22:04:41  92  ,gbp_g02
22:04:41  93  ,gbp_g03
22:04:41  94  ,gbp_g04
22:04:41  95  ,gbp_g05
22:04:41  96  ,gbp_g06
22:04:41  97  ,gbp_g07
22:04:41  98  ,gbp_g08
22:04:41  99  ,gbp_g09
22:04:41 100  ,gbp_g10
22:04:41 101  ,gbp_g11
22:04:41 102  ,gbp_g12
22:04:41 103  ,gbp_g13
22:04:41 104  ,gbp_g14
22:04:41 105  ,gbp_g15
22:04:41 106  ,gbp_g16
22:04:41 107  ,gbp_g17
22:04:41 108  ,gbp_g18
22:04:41 109  ,gbp_g19
22:04:41 110  ,gbp_g20
22:04:41 111  ,gbp_g21
22:04:41 112  ,gbp_g22
22:04:41 113  ,gbp_g23
22:04:41 114  ,gbp_g24
22:04:41 115  ,gbp_g25
22:04:41 116  ,gbp_g26
22:04:41 117  ,gbp_g27
22:04:41 118  ,gbp_g28
22:04:41 119  ,gbp_g29
22:04:41 120  ,gbp_g30
22:04:41 121  ,gbp_g31
22:04:41 122  ,gbp_g32
22:04:41 123  ,gbp_g33
22:04:41 124  ,gbp_g34
22:04:41 125  ,gbp_g35
22:04:41 126  ,gbp_g36
22:04:41 127  ,gbp_g37
22:04:41 128  ,gbp_g38
22:04:41 129  ,gbp_g39
22:04:41 130  ,gbp_g40
22:04:41 131  ,gbp_g41
22:04:41 132  ,jpy_g00
22:04:41 133  ,jpy_g01
22:04:41 134  ,jpy_g02
22:04:41 135  ,jpy_g03
22:04:41 136  ,jpy_g04
22:04:41 137  ,jpy_g05
22:04:41 138  ,jpy_g06
22:04:41 139  ,jpy_g07
22:04:41 140  ,jpy_g08
22:04:41 141  ,jpy_g09
22:04:41 142  ,jpy_g10
22:04:41 143  ,jpy_g11
22:04:41 144  ,jpy_g12
22:04:41 145  ,jpy_g13
22:04:41 146  ,jpy_g14
22:04:41 147  ,jpy_g15
22:04:41 148  ,jpy_g16
22:04:41 149  ,jpy_g17
22:04:41 150  ,jpy_g18
22:04:41 151  ,jpy_g19
22:04:41 152  ,jpy_g20
22:04:41 153  ,jpy_g21
22:04:41 154  ,jpy_g22
22:04:41 155  ,jpy_g23
22:04:41 156  ,jpy_g24
22:04:41 157  ,jpy_g25
22:04:41 158  ,jpy_g26
22:04:41 159  ,jpy_g27
22:04:41 160  ,jpy_g28
22:04:41 161  ,jpy_g29
22:04:41 162  ,jpy_g30
22:04:41 163  ,jpy_g31
22:04:41 164  ,jpy_g32
22:04:41 165  ,jpy_g33
22:04:41 166  ,jpy_g34
22:04:41 167  ,jpy_g35
22:04:41 168  ,jpy_g36
22:04:41 169  ,jpy_g37
22:04:41 170  ,jpy_g38
22:04:41 171  ,jpy_g39
22:04:41 172  ,jpy_g40
22:04:41 173  ,jpy_g41
22:04:41 174  ,cad_g00
22:04:41 175  ,cad_g01
22:04:41 176  ,cad_g02
22:04:41 177  ,cad_g03
22:04:41 178  ,cad_g04
22:04:41 179  ,cad_g05
22:04:41 180  ,cad_g06
22:04:41 181  ,cad_g07
22:04:41 182  ,cad_g08
22:04:41 183  ,cad_g09
22:04:41 184  ,cad_g10
22:04:41 185  ,cad_g11
22:04:41 186  ,cad_g12
22:04:41 187  ,cad_g13
22:04:41 188  ,cad_g14
22:04:41 189  ,cad_g15
22:04:41 190  ,cad_g16
22:04:41 191  ,cad_g17
22:04:41 192  ,cad_g18
22:04:41 193  ,cad_g19
22:04:41 194  ,cad_g20
22:04:41 195  ,cad_g21
22:04:41 196  ,cad_g22
22:04:41 197  ,cad_g23
22:04:41 198  ,cad_g24
22:04:41 199  ,cad_g25
22:04:41 200  ,cad_g26
22:04:41 201  ,cad_g27
22:04:41 202  ,cad_g28
22:04:41 203  ,cad_g29
22:04:41 204  ,cad_g30
22:04:41 205  ,cad_g31
22:04:41 206  ,cad_g32
22:04:41 207  ,cad_g33
22:04:41 208  ,cad_g34
22:04:41 209  ,cad_g35
22:04:41 210  ,cad_g36
22:04:41 211  ,cad_g37
22:04:41 212  ,cad_g38
22:04:41 213  ,cad_g39
22:04:41 214  ,cad_g40
22:04:41 215  ,cad_g41
22:04:41 216  ,chf_g00
22:04:41 217  ,chf_g01
22:04:41 218  ,chf_g02
22:04:41 219  ,chf_g03
22:04:41 220  ,chf_g04
22:04:41 221  ,chf_g05
22:04:41 222  ,chf_g06
22:04:41 223  ,chf_g07
22:04:41 224  ,chf_g08
22:04:41 225  ,chf_g09
22:04:41 226  ,chf_g10
22:04:41 227  ,chf_g11
22:04:41 228  ,chf_g12
22:04:41 229  ,chf_g13
22:04:41 230  ,chf_g14
22:04:41 231  ,chf_g15
22:04:41 232  ,chf_g16
22:04:41 233  ,chf_g17
22:04:41 234  ,chf_g18
22:04:41 235  ,chf_g19
22:04:41 236  ,chf_g20
22:04:41 237  ,chf_g21
22:04:41 238  ,chf_g22
22:04:41 239  ,chf_g23
22:04:41 240  ,chf_g24
22:04:41 241  ,chf_g25
22:04:41 242  ,chf_g26
22:04:41 243  ,chf_g27
22:04:41 244  ,chf_g28
22:04:41 245  ,chf_g29
22:04:41 246  ,chf_g30
22:04:41 247  ,chf_g31
22:04:41 248  ,chf_g32
22:04:41 249  ,chf_g33
22:04:41 250  ,chf_g34
22:04:41 251  ,chf_g35
22:04:41 252  ,chf_g36
22:04:41 253  ,chf_g37
22:04:41 254  ,chf_g38
22:04:41 255  ,chf_g39
22:04:41 256  ,chf_g40
22:04:41 257  ,chf_g41
22:04:41 258  FROM aud_ms6 m
22:04:41 259  WHERE m.ydate = '&1'||' '||'&2'
22:04:41 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'21:40:00'

View created.

Elapsed: 00:00:00.14
22:04:41 SQL> 
22:04:41 SQL> -- rpt
22:04:41 SQL> -- We should see just 1 row:
22:04:41 SQL> 
22:04:41 SQL> SELECT COUNT(prdate) FROM sme
22:04:41   2  
22:04:41 SQL> -- Build the model:
22:04:41 SQL> CREATE OR REPLACE VIEW bme AS
22:04:41   2  SELECT
22:04:41   3  'aud'||m.ydate prdate
22:04:41   4  ,gatt
22:04:41   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:04:41   6  ,eur_g00
22:04:41   7  ,eur_g01
22:04:41   8  ,eur_g02
22:04:41   9  ,eur_g03
22:04:41  10  ,eur_g04
22:04:41  11  ,eur_g05
22:04:41  12  ,eur_g06
22:04:41  13  ,eur_g07
22:04:41  14  ,eur_g08
22:04:41  15  ,eur_g09
22:04:41  16  ,eur_g10
22:04:41  17  ,eur_g11
22:04:41  18  ,eur_g12
22:04:41  19  ,eur_g13
22:04:41  20  ,eur_g14
22:04:41  21  ,eur_g15
22:04:41  22  ,eur_g16
22:04:41  23  ,eur_g17
22:04:41  24  ,eur_g18
22:04:41  25  ,eur_g19
22:04:41  26  ,eur_g20
22:04:41  27  ,eur_g21
22:04:41  28  ,eur_g22
22:04:41  29  ,eur_g23
22:04:41  30  ,eur_g24
22:04:41  31  ,eur_g25
22:04:41  32  ,eur_g26
22:04:41  33  ,eur_g27
22:04:41  34  ,eur_g28
22:04:41  35  ,eur_g29
22:04:41  36  ,eur_g30
22:04:41  37  ,eur_g31
22:04:41  38  ,eur_g32
22:04:41  39  ,eur_g33
22:04:41  40  ,eur_g34
22:04:41  41  ,eur_g35
22:04:41  42  ,eur_g36
22:04:41  43  ,eur_g37
22:04:41  44  ,eur_g38
22:04:41  45  ,eur_g39
22:04:41  46  ,eur_g40
22:04:41  47  ,eur_g41
22:04:41  48  ,aud_g00
22:04:41  49  ,aud_g01
22:04:41  50  ,aud_g02
22:04:41  51  ,aud_g03
22:04:41  52  ,aud_g04
22:04:41  53  ,aud_g05
22:04:41  54  ,aud_g06
22:04:41  55  ,aud_g07
22:04:41  56  ,aud_g08
22:04:41  57  ,aud_g09
22:04:41  58  ,aud_g10
22:04:41  59  ,aud_g11
22:04:41  60  ,aud_g12
22:04:41  61  ,aud_g13
22:04:41  62  ,aud_g14
22:04:41  63  ,aud_g15
22:04:41  64  ,aud_g16
22:04:41  65  ,aud_g17
22:04:41  66  ,aud_g18
22:04:41  67  ,aud_g19
22:04:41  68  ,aud_g20
22:04:41  69  ,aud_g21
22:04:41  70  ,aud_g22
22:04:41  71  ,aud_g23
22:04:41  72  ,aud_g24
22:04:41  73  ,aud_g25
22:04:41  74  ,aud_g26
22:04:41  75  ,aud_g27
22:04:41  76  ,aud_g28
22:04:41  77  ,aud_g29
22:04:41  78  ,aud_g30
22:04:41  79  ,aud_g31
22:04:41  80  ,aud_g32
22:04:41  81  ,aud_g33
22:04:41  82  ,aud_g34
22:04:41  83  ,aud_g35
22:04:41  84  ,aud_g36
22:04:41  85  ,aud_g37
22:04:41  86  ,aud_g38
22:04:41  87  ,aud_g39
22:04:41  88  ,aud_g40
22:04:41  89  ,aud_g41
22:04:41  90  ,gbp_g00
22:04:41  91  ,gbp_g01
22:04:41  92  ,gbp_g02
22:04:41  93  ,gbp_g03
22:04:41  94  ,gbp_g04
22:04:41  95  ,gbp_g05
22:04:41  96  ,gbp_g06
22:04:41  97  ,gbp_g07
22:04:41  98  ,gbp_g08
22:04:41  99  ,gbp_g09
22:04:41 100  ,gbp_g10
22:04:41 101  ,gbp_g11
22:04:41 102  ,gbp_g12
22:04:41 103  ,gbp_g13
22:04:41 104  ,gbp_g14
22:04:41 105  ,gbp_g15
22:04:41 106  ,gbp_g16
22:04:41 107  ,gbp_g17
22:04:41 108  ,gbp_g18
22:04:41 109  ,gbp_g19
22:04:41 110  ,gbp_g20
22:04:41 111  ,gbp_g21
22:04:41 112  ,gbp_g22
22:04:41 113  ,gbp_g23
22:04:41 114  ,gbp_g24
22:04:41 115  ,gbp_g25
22:04:41 116  ,gbp_g26
22:04:41 117  ,gbp_g27
22:04:41 118  ,gbp_g28
22:04:41 119  ,gbp_g29
22:04:41 120  ,gbp_g30
22:04:41 121  ,gbp_g31
22:04:41 122  ,gbp_g32
22:04:41 123  ,gbp_g33
22:04:41 124  ,gbp_g34
22:04:41 125  ,gbp_g35
22:04:41 126  ,gbp_g36
22:04:41 127  ,gbp_g37
22:04:41 128  ,gbp_g38
22:04:41 129  ,gbp_g39
22:04:41 130  ,gbp_g40
22:04:41 131  ,gbp_g41
22:04:41 132  ,jpy_g00
22:04:41 133  ,jpy_g01
22:04:41 134  ,jpy_g02
22:04:41 135  ,jpy_g03
22:04:41 136  ,jpy_g04
22:04:41 137  ,jpy_g05
22:04:41 138  ,jpy_g06
22:04:41 139  ,jpy_g07
22:04:41 140  ,jpy_g08
22:04:41 141  ,jpy_g09
22:04:41 142  ,jpy_g10
22:04:41 143  ,jpy_g11
22:04:41 144  ,jpy_g12
22:04:41 145  ,jpy_g13
22:04:41 146  ,jpy_g14
22:04:41 147  ,jpy_g15
22:04:41 148  ,jpy_g16
22:04:41 149  ,jpy_g17
22:04:41 150  ,jpy_g18
22:04:41 151  ,jpy_g19
22:04:41 152  ,jpy_g20
22:04:41 153  ,jpy_g21
22:04:41 154  ,jpy_g22
22:04:41 155  ,jpy_g23
22:04:41 156  ,jpy_g24
22:04:41 157  ,jpy_g25
22:04:41 158  ,jpy_g26
22:04:41 159  ,jpy_g27
22:04:41 160  ,jpy_g28
22:04:41 161  ,jpy_g29
22:04:41 162  ,jpy_g30
22:04:41 163  ,jpy_g31
22:04:41 164  ,jpy_g32
22:04:41 165  ,jpy_g33
22:04:41 166  ,jpy_g34
22:04:41 167  ,jpy_g35
22:04:41 168  ,jpy_g36
22:04:41 169  ,jpy_g37
22:04:41 170  ,jpy_g38
22:04:41 171  ,jpy_g39
22:04:41 172  ,jpy_g40
22:04:41 173  ,jpy_g41
22:04:41 174  ,cad_g00
22:04:41 175  ,cad_g01
22:04:41 176  ,cad_g02
22:04:41 177  ,cad_g03
22:04:41 178  ,cad_g04
22:04:41 179  ,cad_g05
22:04:41 180  ,cad_g06
22:04:41 181  ,cad_g07
22:04:41 182  ,cad_g08
22:04:41 183  ,cad_g09
22:04:41 184  ,cad_g10
22:04:41 185  ,cad_g11
22:04:41 186  ,cad_g12
22:04:41 187  ,cad_g13
22:04:41 188  ,cad_g14
22:04:41 189  ,cad_g15
22:04:41 190  ,cad_g16
22:04:41 191  ,cad_g17
22:04:41 192  ,cad_g18
22:04:41 193  ,cad_g19
22:04:41 194  ,cad_g20
22:04:41 195  ,cad_g21
22:04:41 196  ,cad_g22
22:04:41 197  ,cad_g23
22:04:41 198  ,cad_g24
22:04:41 199  ,cad_g25
22:04:41 200  ,cad_g26
22:04:41 201  ,cad_g27
22:04:41 202  ,cad_g28
22:04:41 203  ,cad_g29
22:04:41 204  ,cad_g30
22:04:41 205  ,cad_g31
22:04:41 206  ,cad_g32
22:04:41 207  ,cad_g33
22:04:41 208  ,cad_g34
22:04:41 209  ,cad_g35
22:04:41 210  ,cad_g36
22:04:41 211  ,cad_g37
22:04:41 212  ,cad_g38
22:04:41 213  ,cad_g39
22:04:41 214  ,cad_g40
22:04:41 215  ,cad_g41
22:04:41 216  ,chf_g00
22:04:41 217  ,chf_g01
22:04:41 218  ,chf_g02
22:04:41 219  ,chf_g03
22:04:41 220  ,chf_g04
22:04:41 221  ,chf_g05
22:04:41 222  ,chf_g06
22:04:41 223  ,chf_g07
22:04:41 224  ,chf_g08
22:04:41 225  ,chf_g09
22:04:41 226  ,chf_g10
22:04:41 227  ,chf_g11
22:04:41 228  ,chf_g12
22:04:41 229  ,chf_g13
22:04:41 230  ,chf_g14
22:04:41 231  ,chf_g15
22:04:41 232  ,chf_g16
22:04:41 233  ,chf_g17
22:04:41 234  ,chf_g18
22:04:41 235  ,chf_g19
22:04:41 236  ,chf_g20
22:04:41 237  ,chf_g21
22:04:41 238  ,chf_g22
22:04:41 239  ,chf_g23
22:04:41 240  ,chf_g24
22:04:41 241  ,chf_g25
22:04:41 242  ,chf_g26
22:04:41 243  ,chf_g27
22:04:41 244  ,chf_g28
22:04:41 245  ,chf_g29
22:04:41 246  ,chf_g30
22:04:41 247  ,chf_g31
22:04:41 248  ,chf_g32
22:04:41 249  ,chf_g33
22:04:41 250  ,chf_g34
22:04:41 251  ,chf_g35
22:04:41 252  ,chf_g36
22:04:41 253  ,chf_g37
22:04:41 254  ,chf_g38
22:04:41 255  ,chf_g39
22:04:41 256  ,chf_g40
22:04:41 257  ,chf_g41
22:04:41 258  FROM aud_ms6 m
22:04:41 259  WHERE gatt IN('nup','up')
22:04:41 260  AND 1+m.ydate < '&1'||' '||'&2'
22:04:41 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'21:40:00'

View created.

Elapsed: 00:00:00.14
22:04:41 SQL> 
22:04:41 SQL> -- rpt
22:04:41 SQL> 
22:04:41 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
22:04:41   2  
22:04:41 SQL> SELECT MAX(prdate) FROM bme
22:04:41   2  
22:04:41 SQL> -- Now build model from bme and score sme
22:04:41 SQL> @score1.sql
22:04:41 SQL> -- score1.sql
22:04:41 SQL> 
22:04:41 SQL> -- Does the 1st SVM score
22:04:41 SQL> 
22:04:41 SQL> -- Fill up svmc_apply_prep
22:04:41 SQL> @score.sql
22:04:41 SQL> --
22:04:41 SQL> -- score.sql
22:04:41 SQL> --
22:04:41 SQL> 
22:04:41 SQL> -- usage: score.sql
22:04:41 SQL> 
22:04:41 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:04:41 SQL> 
22:04:41 SQL> DEFINE target	= 'gatt'
22:04:41 SQL> DEFINE model_name = 'forex15'
22:04:41 SQL> DEFINE bldtable	= 'bme'
22:04:41 SQL> DEFINE scoretable = 'sme'
22:04:41 SQL> DEFINE case_id	= 'prdate'
22:04:41 SQL> 
22:04:41 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:04:41 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:04:41 SQL> 
22:04:41 SQL> -- Builds an SVM model using pl/sql.
22:04:41 SQL> 
22:04:41 SQL> -----------------------------------------------------------------------
22:04:41 SQL> --			    BUILD THE MODEL
22:04:41 SQL> -----------------------------------------------------------------------
22:04:41 SQL> 
22:04:41 SQL> -- Cleanup old build data preparation objects for repeat runs
22:04:41 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:04:41 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
22:04:41 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
22:04:41 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
22:04:41 SQL> 
22:04:41 SQL> 
22:04:41 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:04:41 SQL> --
22:04:41 SQL> -- DROP	TABLE svmc_settings ;
22:04:41 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:04:41 SQL> -- DELETE svmc_settings;
22:04:41 SQL> 
22:04:41 SQL> -- The default classification algorithm is Naive Bayes. So override
22:04:41 SQL> -- this choice to SVM using a settings table.
22:04:41 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:04:41 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:04:41 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:04:41 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:04:41 SQL> -- models.
22:04:41 SQL> --
22:04:41 SQL> 
22:04:41 SQL> -- Do this once and then comment it out.
22:04:41 SQL> -- That makes script go faster.
22:04:41 SQL> -- BEGIN
22:04:41 SQL> -- -- Populate settings table
22:04:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:04:41 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:04:41 SQL> --
22:04:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:04:41 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:04:41 SQL> --
22:04:41 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:04:41 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:04:41 SQL> --   COMMIT;
22:04:41 SQL> -- END;
22:04:41 SQL> -- /
22:04:41 SQL> 
22:04:41 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:04:41 SQL> 
22:04:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:04:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:04:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
22:04:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:04:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:04:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:04:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:04:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:04:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:04:41 SQL> 
22:04:41 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:04:41   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:04:41   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:04:41 SQL> 
22:04:41 SQL> --------------------------------
22:04:41 SQL> -- PREPARE BUILD (TRAINING) DATA
22:04:41 SQL> --
22:04:41 SQL> 
22:04:41 SQL> -- 1. Missing Value treatment for all Predictors and
22:04:41 SQL> -- 2. Outlier Treatment and
22:04:41 SQL> -- 3. Normalization are performed below.
22:04:41 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:04:41 SQL> --    normalized here.
22:04:41 SQL> 
22:04:41 SQL> BEGIN
22:04:41   2  	-- Perform missing value treatment for all predictors
22:04:41   3  	-- create miss tables
22:04:41   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:04:41   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:04:41   6  
22:04:41   7  	-- populate miss tables
22:04:41   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:04:41   9  	  miss_table_name => 'svmc_miss_num',
22:04:41  10  	  data_table_name => '&bldtable',
22:04:41  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:04:41  12  
22:04:41  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:04:41  14  	  miss_table_name => 'svmc_miss_cat',
22:04:41  15  	  data_table_name => '&bldtable',
22:04:41  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:04:41  17  
22:04:41  18  	-- xform input data to replace missing values
22:04:41  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:04:41  20  	  miss_table_name => 'svmc_miss_num',
22:04:41  21  	  data_table_name => '&bldtable',
22:04:41  22  	  xform_view_name => 'xformed_build_miss_num');
22:04:41  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:04:41  24  	  miss_table_name => 'svmc_miss_cat',
22:04:41  25  	  data_table_name => '&bldtable',
22:04:41  26  	  xform_view_name => 'xformed_build_miss_cat');
22:04:41  27  
22:04:41  28  	-- Perform outlier treatment.
22:04:41  29  	-- create clip table
22:04:41  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:04:41  31  
22:04:41  32  	-- populate clip table
22:04:41  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:04:41  34  	  clip_table_name => 'svmc_clip',
22:04:41  35  	  data_table_name => '&bldtable',
22:04:41  36  	  tail_frac	  => 0.025,
22:04:41  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:04:41  38  
22:04:41  39  	-- xform input data to winsorized data
22:04:41  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:04:41  41  	  clip_table_name => 'svmc_clip',
22:04:41  42  	  data_table_name => '&bldtable',
22:04:41  43  	  xform_view_name => 'svmc_winsor');
22:04:41  44  
22:04:41  45  	-- create normalization table
22:04:41  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:04:41  47  
22:04:41  48  	-- populate normalization table based on winsorized data
22:04:41  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:04:41  50  	  norm_table_name => 'svmc_norm',
22:04:41  51  	  data_table_name => 'svmc_winsor',
22:04:41  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:04:41  53  
22:04:41  54  	-- normalize the original data
22:04:41  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:04:41  56  	  norm_table_name => 'svmc_norm',
22:04:41  57  	  data_table_name => '&bldtable',
22:04:41  58  	  xform_view_name => 'svmc_build_prep');
22:04:41  59  END;
22:04:41  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.81
22:05:00 SQL> 
22:05:00 SQL> ---------------------
22:05:00 SQL> -- CREATE A NEW MODEL
22:05:00 SQL> --
22:05:00 SQL> -- Cleanup old model with the same name for repeat runs
22:05:00 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:05:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:00   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.76
22:05:01 SQL> 
22:05:01 SQL> -- Build a new SVM Model
22:05:01 SQL> BEGIN
22:05:01   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:05:01   3  	  model_name	      => '&model_name',
22:05:01   4  	  mining_function     => dbms_data_mining.classification,
22:05:01   5  	  data_table_name     => 'svmc_build_prep',
22:05:01   6  	  case_id_column_name => '&case_id',
22:05:01   7  	  target_column_name  => '&target',
22:05:01   8  	  settings_table_name => 'svmc_settings');
22:05:01   9  END;
22:05:01  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.77
22:05:30 SQL> 
22:05:30 SQL> -----------------------------------------------------------------------
22:05:30 SQL> --			       APPLY/score THE MODEL
22:05:30 SQL> -----------------------------------------------------------------------
22:05:30 SQL> 
22:05:30 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:05:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:05:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
22:05:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:05:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
22:05:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:05:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
22:05:30 SQL> -----------------------
22:05:30 SQL> -- PREPARE SCORING DATA
22:05:30 SQL> --
22:05:30 SQL> -- If the data for model creation has been prepared, then the data
22:05:30 SQL> -- to be scored using the model must be prepared in the same manner
22:05:30 SQL> -- in order to obtain meaningful results.
22:05:30 SQL> --
22:05:30 SQL> -- 1. Missing Value treatment for all Predictors and
22:05:30 SQL> -- 2. Normalization
22:05:30 SQL> -- No outlier treatment will be performed during test and apply. The
22:05:30 SQL> -- normalization step is sufficient, since the normalization parameters
22:05:30 SQL> -- already capture the effects of outlier treatment done with build data.
22:05:30 SQL> --
22:05:30 SQL> BEGIN
22:05:30   2  	-- Xform Test data to replace missing values
22:05:30   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:05:30   4  	  miss_table_name => 'svmc_miss_num',
22:05:30   5  	  data_table_name => '&scoretable',
22:05:30   6  	  xform_view_name => 'xformed_apply_miss_num');
22:05:30   7  
22:05:30   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:05:30   9  	  miss_table_name => 'svmc_miss_cat',
22:05:30  10  	  data_table_name => '&scoretable',
22:05:30  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:05:30  12  
22:05:30  13  	-- Normalize the data to be scored
22:05:30  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:05:30  15  	  norm_table_name => 'svmc_norm',
22:05:30  16  	  data_table_name => '&scoretable',
22:05:30  17  	  xform_view_name => 'svmc_apply_prep');
22:05:30  18  END;
22:05:30  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
22:05:31 SQL> 
22:05:31 SQL> -- Use same model_name used in score.sql
22:05:31 SQL> DEFINE model_name = 'forex15'
22:05:31 SQL> 
22:05:31 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
22:05:31 SQL> 
22:05:31 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:05:31 SQL> 
22:05:31 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
22:05:31   2  SELECT
22:05:31   3  prdate
22:05:31   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:05:31   5  ,sysdate
22:05:31   6  ,SUBSTR(prdate,1,3)pair
22:05:31   7  ,SUBSTR(prdate,4,19)ydate
22:05:31   8  FROM svmc_apply_prep
22:05:31   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.20
22:05:31 SQL> @aud_score1day.sql  2011-01-06 21:45:00
22:05:31 SQL> --
22:05:31 SQL> -- aud_score1day.sql
22:05:31 SQL> --
22:05:31 SQL> 
22:05:31 SQL> CREATE OR REPLACE VIEW sme AS
22:05:31   2  SELECT
22:05:31   3  'aud'||m.ydate prdate
22:05:31   4  ,NULL gatt
22:05:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:05:31   6  ,eur_g00
22:05:31   7  ,eur_g01
22:05:31   8  ,eur_g02
22:05:31   9  ,eur_g03
22:05:31  10  ,eur_g04
22:05:31  11  ,eur_g05
22:05:31  12  ,eur_g06
22:05:31  13  ,eur_g07
22:05:31  14  ,eur_g08
22:05:31  15  ,eur_g09
22:05:31  16  ,eur_g10
22:05:31  17  ,eur_g11
22:05:31  18  ,eur_g12
22:05:31  19  ,eur_g13
22:05:31  20  ,eur_g14
22:05:31  21  ,eur_g15
22:05:31  22  ,eur_g16
22:05:31  23  ,eur_g17
22:05:31  24  ,eur_g18
22:05:31  25  ,eur_g19
22:05:31  26  ,eur_g20
22:05:31  27  ,eur_g21
22:05:31  28  ,eur_g22
22:05:31  29  ,eur_g23
22:05:31  30  ,eur_g24
22:05:31  31  ,eur_g25
22:05:31  32  ,eur_g26
22:05:31  33  ,eur_g27
22:05:31  34  ,eur_g28
22:05:31  35  ,eur_g29
22:05:31  36  ,eur_g30
22:05:31  37  ,eur_g31
22:05:31  38  ,eur_g32
22:05:31  39  ,eur_g33
22:05:31  40  ,eur_g34
22:05:31  41  ,eur_g35
22:05:31  42  ,eur_g36
22:05:31  43  ,eur_g37
22:05:31  44  ,eur_g38
22:05:31  45  ,eur_g39
22:05:31  46  ,eur_g40
22:05:31  47  ,eur_g41
22:05:31  48  ,aud_g00
22:05:31  49  ,aud_g01
22:05:31  50  ,aud_g02
22:05:31  51  ,aud_g03
22:05:31  52  ,aud_g04
22:05:31  53  ,aud_g05
22:05:31  54  ,aud_g06
22:05:31  55  ,aud_g07
22:05:31  56  ,aud_g08
22:05:31  57  ,aud_g09
22:05:31  58  ,aud_g10
22:05:31  59  ,aud_g11
22:05:31  60  ,aud_g12
22:05:31  61  ,aud_g13
22:05:31  62  ,aud_g14
22:05:31  63  ,aud_g15
22:05:31  64  ,aud_g16
22:05:31  65  ,aud_g17
22:05:31  66  ,aud_g18
22:05:31  67  ,aud_g19
22:05:31  68  ,aud_g20
22:05:31  69  ,aud_g21
22:05:31  70  ,aud_g22
22:05:31  71  ,aud_g23
22:05:31  72  ,aud_g24
22:05:31  73  ,aud_g25
22:05:31  74  ,aud_g26
22:05:31  75  ,aud_g27
22:05:31  76  ,aud_g28
22:05:31  77  ,aud_g29
22:05:31  78  ,aud_g30
22:05:31  79  ,aud_g31
22:05:31  80  ,aud_g32
22:05:31  81  ,aud_g33
22:05:31  82  ,aud_g34
22:05:31  83  ,aud_g35
22:05:31  84  ,aud_g36
22:05:31  85  ,aud_g37
22:05:31  86  ,aud_g38
22:05:31  87  ,aud_g39
22:05:31  88  ,aud_g40
22:05:31  89  ,aud_g41
22:05:31  90  ,gbp_g00
22:05:31  91  ,gbp_g01
22:05:31  92  ,gbp_g02
22:05:31  93  ,gbp_g03
22:05:31  94  ,gbp_g04
22:05:31  95  ,gbp_g05
22:05:31  96  ,gbp_g06
22:05:31  97  ,gbp_g07
22:05:31  98  ,gbp_g08
22:05:31  99  ,gbp_g09
22:05:31 100  ,gbp_g10
22:05:31 101  ,gbp_g11
22:05:31 102  ,gbp_g12
22:05:31 103  ,gbp_g13
22:05:31 104  ,gbp_g14
22:05:31 105  ,gbp_g15
22:05:31 106  ,gbp_g16
22:05:31 107  ,gbp_g17
22:05:31 108  ,gbp_g18
22:05:31 109  ,gbp_g19
22:05:31 110  ,gbp_g20
22:05:31 111  ,gbp_g21
22:05:31 112  ,gbp_g22
22:05:31 113  ,gbp_g23
22:05:31 114  ,gbp_g24
22:05:31 115  ,gbp_g25
22:05:31 116  ,gbp_g26
22:05:31 117  ,gbp_g27
22:05:31 118  ,gbp_g28
22:05:31 119  ,gbp_g29
22:05:31 120  ,gbp_g30
22:05:31 121  ,gbp_g31
22:05:31 122  ,gbp_g32
22:05:31 123  ,gbp_g33
22:05:31 124  ,gbp_g34
22:05:31 125  ,gbp_g35
22:05:31 126  ,gbp_g36
22:05:31 127  ,gbp_g37
22:05:31 128  ,gbp_g38
22:05:31 129  ,gbp_g39
22:05:31 130  ,gbp_g40
22:05:31 131  ,gbp_g41
22:05:31 132  ,jpy_g00
22:05:31 133  ,jpy_g01
22:05:31 134  ,jpy_g02
22:05:31 135  ,jpy_g03
22:05:31 136  ,jpy_g04
22:05:31 137  ,jpy_g05
22:05:31 138  ,jpy_g06
22:05:31 139  ,jpy_g07
22:05:31 140  ,jpy_g08
22:05:31 141  ,jpy_g09
22:05:31 142  ,jpy_g10
22:05:31 143  ,jpy_g11
22:05:31 144  ,jpy_g12
22:05:31 145  ,jpy_g13
22:05:31 146  ,jpy_g14
22:05:31 147  ,jpy_g15
22:05:31 148  ,jpy_g16
22:05:31 149  ,jpy_g17
22:05:31 150  ,jpy_g18
22:05:31 151  ,jpy_g19
22:05:31 152  ,jpy_g20
22:05:31 153  ,jpy_g21
22:05:31 154  ,jpy_g22
22:05:31 155  ,jpy_g23
22:05:31 156  ,jpy_g24
22:05:31 157  ,jpy_g25
22:05:31 158  ,jpy_g26
22:05:31 159  ,jpy_g27
22:05:31 160  ,jpy_g28
22:05:31 161  ,jpy_g29
22:05:31 162  ,jpy_g30
22:05:31 163  ,jpy_g31
22:05:31 164  ,jpy_g32
22:05:31 165  ,jpy_g33
22:05:31 166  ,jpy_g34
22:05:31 167  ,jpy_g35
22:05:31 168  ,jpy_g36
22:05:31 169  ,jpy_g37
22:05:31 170  ,jpy_g38
22:05:31 171  ,jpy_g39
22:05:31 172  ,jpy_g40
22:05:31 173  ,jpy_g41
22:05:31 174  ,cad_g00
22:05:31 175  ,cad_g01
22:05:31 176  ,cad_g02
22:05:31 177  ,cad_g03
22:05:31 178  ,cad_g04
22:05:31 179  ,cad_g05
22:05:31 180  ,cad_g06
22:05:31 181  ,cad_g07
22:05:31 182  ,cad_g08
22:05:31 183  ,cad_g09
22:05:31 184  ,cad_g10
22:05:31 185  ,cad_g11
22:05:31 186  ,cad_g12
22:05:31 187  ,cad_g13
22:05:31 188  ,cad_g14
22:05:31 189  ,cad_g15
22:05:31 190  ,cad_g16
22:05:31 191  ,cad_g17
22:05:31 192  ,cad_g18
22:05:31 193  ,cad_g19
22:05:31 194  ,cad_g20
22:05:31 195  ,cad_g21
22:05:31 196  ,cad_g22
22:05:31 197  ,cad_g23
22:05:31 198  ,cad_g24
22:05:31 199  ,cad_g25
22:05:31 200  ,cad_g26
22:05:31 201  ,cad_g27
22:05:31 202  ,cad_g28
22:05:31 203  ,cad_g29
22:05:31 204  ,cad_g30
22:05:31 205  ,cad_g31
22:05:31 206  ,cad_g32
22:05:31 207  ,cad_g33
22:05:31 208  ,cad_g34
22:05:31 209  ,cad_g35
22:05:31 210  ,cad_g36
22:05:31 211  ,cad_g37
22:05:31 212  ,cad_g38
22:05:31 213  ,cad_g39
22:05:31 214  ,cad_g40
22:05:31 215  ,cad_g41
22:05:31 216  ,chf_g00
22:05:31 217  ,chf_g01
22:05:31 218  ,chf_g02
22:05:31 219  ,chf_g03
22:05:31 220  ,chf_g04
22:05:31 221  ,chf_g05
22:05:31 222  ,chf_g06
22:05:31 223  ,chf_g07
22:05:31 224  ,chf_g08
22:05:31 225  ,chf_g09
22:05:31 226  ,chf_g10
22:05:31 227  ,chf_g11
22:05:31 228  ,chf_g12
22:05:31 229  ,chf_g13
22:05:31 230  ,chf_g14
22:05:31 231  ,chf_g15
22:05:31 232  ,chf_g16
22:05:31 233  ,chf_g17
22:05:31 234  ,chf_g18
22:05:31 235  ,chf_g19
22:05:31 236  ,chf_g20
22:05:31 237  ,chf_g21
22:05:31 238  ,chf_g22
22:05:31 239  ,chf_g23
22:05:31 240  ,chf_g24
22:05:31 241  ,chf_g25
22:05:31 242  ,chf_g26
22:05:31 243  ,chf_g27
22:05:31 244  ,chf_g28
22:05:31 245  ,chf_g29
22:05:31 246  ,chf_g30
22:05:31 247  ,chf_g31
22:05:31 248  ,chf_g32
22:05:31 249  ,chf_g33
22:05:31 250  ,chf_g34
22:05:31 251  ,chf_g35
22:05:31 252  ,chf_g36
22:05:31 253  ,chf_g37
22:05:31 254  ,chf_g38
22:05:31 255  ,chf_g39
22:05:31 256  ,chf_g40
22:05:31 257  ,chf_g41
22:05:31 258  FROM aud_ms6 m
22:05:31 259  WHERE m.ydate = '&1'||' '||'&2'
22:05:31 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'21:45:00'

View created.

Elapsed: 00:00:00.11
22:05:32 SQL> 
22:05:32 SQL> -- rpt
22:05:32 SQL> -- We should see just 1 row:
22:05:32 SQL> 
22:05:32 SQL> SELECT COUNT(prdate) FROM sme
22:05:32   2  
22:05:32 SQL> -- Build the model:
22:05:32 SQL> CREATE OR REPLACE VIEW bme AS
22:05:32   2  SELECT
22:05:32   3  'aud'||m.ydate prdate
22:05:32   4  ,gatt
22:05:32   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:05:32   6  ,eur_g00
22:05:32   7  ,eur_g01
22:05:32   8  ,eur_g02
22:05:32   9  ,eur_g03
22:05:32  10  ,eur_g04
22:05:32  11  ,eur_g05
22:05:32  12  ,eur_g06
22:05:32  13  ,eur_g07
22:05:32  14  ,eur_g08
22:05:32  15  ,eur_g09
22:05:32  16  ,eur_g10
22:05:32  17  ,eur_g11
22:05:32  18  ,eur_g12
22:05:32  19  ,eur_g13
22:05:32  20  ,eur_g14
22:05:32  21  ,eur_g15
22:05:32  22  ,eur_g16
22:05:32  23  ,eur_g17
22:05:32  24  ,eur_g18
22:05:32  25  ,eur_g19
22:05:32  26  ,eur_g20
22:05:32  27  ,eur_g21
22:05:32  28  ,eur_g22
22:05:32  29  ,eur_g23
22:05:32  30  ,eur_g24
22:05:32  31  ,eur_g25
22:05:32  32  ,eur_g26
22:05:32  33  ,eur_g27
22:05:32  34  ,eur_g28
22:05:32  35  ,eur_g29
22:05:32  36  ,eur_g30
22:05:32  37  ,eur_g31
22:05:32  38  ,eur_g32
22:05:32  39  ,eur_g33
22:05:32  40  ,eur_g34
22:05:32  41  ,eur_g35
22:05:32  42  ,eur_g36
22:05:32  43  ,eur_g37
22:05:32  44  ,eur_g38
22:05:32  45  ,eur_g39
22:05:32  46  ,eur_g40
22:05:32  47  ,eur_g41
22:05:32  48  ,aud_g00
22:05:32  49  ,aud_g01
22:05:32  50  ,aud_g02
22:05:32  51  ,aud_g03
22:05:32  52  ,aud_g04
22:05:32  53  ,aud_g05
22:05:32  54  ,aud_g06
22:05:32  55  ,aud_g07
22:05:32  56  ,aud_g08
22:05:32  57  ,aud_g09
22:05:32  58  ,aud_g10
22:05:32  59  ,aud_g11
22:05:32  60  ,aud_g12
22:05:32  61  ,aud_g13
22:05:32  62  ,aud_g14
22:05:32  63  ,aud_g15
22:05:32  64  ,aud_g16
22:05:32  65  ,aud_g17
22:05:32  66  ,aud_g18
22:05:32  67  ,aud_g19
22:05:32  68  ,aud_g20
22:05:32  69  ,aud_g21
22:05:32  70  ,aud_g22
22:05:32  71  ,aud_g23
22:05:32  72  ,aud_g24
22:05:32  73  ,aud_g25
22:05:32  74  ,aud_g26
22:05:32  75  ,aud_g27
22:05:32  76  ,aud_g28
22:05:32  77  ,aud_g29
22:05:32  78  ,aud_g30
22:05:32  79  ,aud_g31
22:05:32  80  ,aud_g32
22:05:32  81  ,aud_g33
22:05:32  82  ,aud_g34
22:05:32  83  ,aud_g35
22:05:32  84  ,aud_g36
22:05:32  85  ,aud_g37
22:05:32  86  ,aud_g38
22:05:32  87  ,aud_g39
22:05:32  88  ,aud_g40
22:05:32  89  ,aud_g41
22:05:32  90  ,gbp_g00
22:05:32  91  ,gbp_g01
22:05:32  92  ,gbp_g02
22:05:32  93  ,gbp_g03
22:05:32  94  ,gbp_g04
22:05:32  95  ,gbp_g05
22:05:32  96  ,gbp_g06
22:05:32  97  ,gbp_g07
22:05:32  98  ,gbp_g08
22:05:32  99  ,gbp_g09
22:05:32 100  ,gbp_g10
22:05:32 101  ,gbp_g11
22:05:32 102  ,gbp_g12
22:05:32 103  ,gbp_g13
22:05:32 104  ,gbp_g14
22:05:32 105  ,gbp_g15
22:05:32 106  ,gbp_g16
22:05:32 107  ,gbp_g17
22:05:32 108  ,gbp_g18
22:05:32 109  ,gbp_g19
22:05:32 110  ,gbp_g20
22:05:32 111  ,gbp_g21
22:05:32 112  ,gbp_g22
22:05:32 113  ,gbp_g23
22:05:32 114  ,gbp_g24
22:05:32 115  ,gbp_g25
22:05:32 116  ,gbp_g26
22:05:32 117  ,gbp_g27
22:05:32 118  ,gbp_g28
22:05:32 119  ,gbp_g29
22:05:32 120  ,gbp_g30
22:05:32 121  ,gbp_g31
22:05:32 122  ,gbp_g32
22:05:32 123  ,gbp_g33
22:05:32 124  ,gbp_g34
22:05:32 125  ,gbp_g35
22:05:32 126  ,gbp_g36
22:05:32 127  ,gbp_g37
22:05:32 128  ,gbp_g38
22:05:32 129  ,gbp_g39
22:05:32 130  ,gbp_g40
22:05:32 131  ,gbp_g41
22:05:32 132  ,jpy_g00
22:05:32 133  ,jpy_g01
22:05:32 134  ,jpy_g02
22:05:32 135  ,jpy_g03
22:05:32 136  ,jpy_g04
22:05:32 137  ,jpy_g05
22:05:32 138  ,jpy_g06
22:05:32 139  ,jpy_g07
22:05:32 140  ,jpy_g08
22:05:32 141  ,jpy_g09
22:05:32 142  ,jpy_g10
22:05:32 143  ,jpy_g11
22:05:32 144  ,jpy_g12
22:05:32 145  ,jpy_g13
22:05:32 146  ,jpy_g14
22:05:32 147  ,jpy_g15
22:05:32 148  ,jpy_g16
22:05:32 149  ,jpy_g17
22:05:32 150  ,jpy_g18
22:05:32 151  ,jpy_g19
22:05:32 152  ,jpy_g20
22:05:32 153  ,jpy_g21
22:05:32 154  ,jpy_g22
22:05:32 155  ,jpy_g23
22:05:32 156  ,jpy_g24
22:05:32 157  ,jpy_g25
22:05:32 158  ,jpy_g26
22:05:32 159  ,jpy_g27
22:05:32 160  ,jpy_g28
22:05:32 161  ,jpy_g29
22:05:32 162  ,jpy_g30
22:05:32 163  ,jpy_g31
22:05:32 164  ,jpy_g32
22:05:32 165  ,jpy_g33
22:05:32 166  ,jpy_g34
22:05:32 167  ,jpy_g35
22:05:32 168  ,jpy_g36
22:05:32 169  ,jpy_g37
22:05:32 170  ,jpy_g38
22:05:32 171  ,jpy_g39
22:05:32 172  ,jpy_g40
22:05:32 173  ,jpy_g41
22:05:32 174  ,cad_g00
22:05:32 175  ,cad_g01
22:05:32 176  ,cad_g02
22:05:32 177  ,cad_g03
22:05:32 178  ,cad_g04
22:05:32 179  ,cad_g05
22:05:32 180  ,cad_g06
22:05:32 181  ,cad_g07
22:05:32 182  ,cad_g08
22:05:32 183  ,cad_g09
22:05:32 184  ,cad_g10
22:05:32 185  ,cad_g11
22:05:32 186  ,cad_g12
22:05:32 187  ,cad_g13
22:05:32 188  ,cad_g14
22:05:32 189  ,cad_g15
22:05:32 190  ,cad_g16
22:05:32 191  ,cad_g17
22:05:32 192  ,cad_g18
22:05:32 193  ,cad_g19
22:05:32 194  ,cad_g20
22:05:32 195  ,cad_g21
22:05:32 196  ,cad_g22
22:05:32 197  ,cad_g23
22:05:32 198  ,cad_g24
22:05:32 199  ,cad_g25
22:05:32 200  ,cad_g26
22:05:32 201  ,cad_g27
22:05:32 202  ,cad_g28
22:05:32 203  ,cad_g29
22:05:32 204  ,cad_g30
22:05:32 205  ,cad_g31
22:05:32 206  ,cad_g32
22:05:32 207  ,cad_g33
22:05:32 208  ,cad_g34
22:05:32 209  ,cad_g35
22:05:32 210  ,cad_g36
22:05:32 211  ,cad_g37
22:05:32 212  ,cad_g38
22:05:32 213  ,cad_g39
22:05:32 214  ,cad_g40
22:05:32 215  ,cad_g41
22:05:32 216  ,chf_g00
22:05:32 217  ,chf_g01
22:05:32 218  ,chf_g02
22:05:32 219  ,chf_g03
22:05:32 220  ,chf_g04
22:05:32 221  ,chf_g05
22:05:32 222  ,chf_g06
22:05:32 223  ,chf_g07
22:05:32 224  ,chf_g08
22:05:32 225  ,chf_g09
22:05:32 226  ,chf_g10
22:05:32 227  ,chf_g11
22:05:32 228  ,chf_g12
22:05:32 229  ,chf_g13
22:05:32 230  ,chf_g14
22:05:32 231  ,chf_g15
22:05:32 232  ,chf_g16
22:05:32 233  ,chf_g17
22:05:32 234  ,chf_g18
22:05:32 235  ,chf_g19
22:05:32 236  ,chf_g20
22:05:32 237  ,chf_g21
22:05:32 238  ,chf_g22
22:05:32 239  ,chf_g23
22:05:32 240  ,chf_g24
22:05:32 241  ,chf_g25
22:05:32 242  ,chf_g26
22:05:32 243  ,chf_g27
22:05:32 244  ,chf_g28
22:05:32 245  ,chf_g29
22:05:32 246  ,chf_g30
22:05:32 247  ,chf_g31
22:05:32 248  ,chf_g32
22:05:32 249  ,chf_g33
22:05:32 250  ,chf_g34
22:05:32 251  ,chf_g35
22:05:32 252  ,chf_g36
22:05:32 253  ,chf_g37
22:05:32 254  ,chf_g38
22:05:32 255  ,chf_g39
22:05:32 256  ,chf_g40
22:05:32 257  ,chf_g41
22:05:32 258  FROM aud_ms6 m
22:05:32 259  WHERE gatt IN('nup','up')
22:05:32 260  AND 1+m.ydate < '&1'||' '||'&2'
22:05:32 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'21:45:00'

View created.

Elapsed: 00:00:00.12
22:05:32 SQL> 
22:05:32 SQL> -- rpt
22:05:32 SQL> 
22:05:32 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
22:05:32   2  
22:05:32 SQL> SELECT MAX(prdate) FROM bme
22:05:32   2  
22:05:32 SQL> -- Now build model from bme and score sme
22:05:32 SQL> @score1.sql
22:05:32 SQL> -- score1.sql
22:05:32 SQL> 
22:05:32 SQL> -- Does the 1st SVM score
22:05:32 SQL> 
22:05:32 SQL> -- Fill up svmc_apply_prep
22:05:32 SQL> @score.sql
22:05:32 SQL> --
22:05:32 SQL> -- score.sql
22:05:32 SQL> --
22:05:32 SQL> 
22:05:32 SQL> -- usage: score.sql
22:05:32 SQL> 
22:05:32 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:05:32 SQL> 
22:05:32 SQL> DEFINE target	= 'gatt'
22:05:32 SQL> DEFINE model_name = 'forex15'
22:05:32 SQL> DEFINE bldtable	= 'bme'
22:05:32 SQL> DEFINE scoretable = 'sme'
22:05:32 SQL> DEFINE case_id	= 'prdate'
22:05:32 SQL> 
22:05:32 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:05:32 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:05:32 SQL> 
22:05:32 SQL> -- Builds an SVM model using pl/sql.
22:05:32 SQL> 
22:05:32 SQL> -----------------------------------------------------------------------
22:05:32 SQL> --			    BUILD THE MODEL
22:05:32 SQL> -----------------------------------------------------------------------
22:05:32 SQL> 
22:05:32 SQL> -- Cleanup old build data preparation objects for repeat runs
22:05:32 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:05:32 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
22:05:32 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
22:05:32 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
22:05:32 SQL> 
22:05:32 SQL> 
22:05:32 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:05:32 SQL> --
22:05:32 SQL> -- DROP	TABLE svmc_settings ;
22:05:32 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:05:32 SQL> -- DELETE svmc_settings;
22:05:32 SQL> 
22:05:32 SQL> -- The default classification algorithm is Naive Bayes. So override
22:05:32 SQL> -- this choice to SVM using a settings table.
22:05:32 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:05:32 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:05:32 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:05:32 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:05:32 SQL> -- models.
22:05:32 SQL> --
22:05:32 SQL> 
22:05:32 SQL> -- Do this once and then comment it out.
22:05:32 SQL> -- That makes script go faster.
22:05:32 SQL> -- BEGIN
22:05:32 SQL> -- -- Populate settings table
22:05:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:05:32 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:05:32 SQL> --
22:05:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:05:32 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:05:32 SQL> --
22:05:32 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:05:32 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:05:32 SQL> --   COMMIT;
22:05:32 SQL> -- END;
22:05:32 SQL> -- /
22:05:32 SQL> 
22:05:32 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:05:32 SQL> 
22:05:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:05:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
22:05:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:05:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:05:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:05:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:05:32 SQL> 
22:05:32 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:05:32   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:32   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:05:32 SQL> 
22:05:32 SQL> --------------------------------
22:05:32 SQL> -- PREPARE BUILD (TRAINING) DATA
22:05:32 SQL> --
22:05:32 SQL> 
22:05:32 SQL> -- 1. Missing Value treatment for all Predictors and
22:05:32 SQL> -- 2. Outlier Treatment and
22:05:32 SQL> -- 3. Normalization are performed below.
22:05:32 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:05:32 SQL> --    normalized here.
22:05:32 SQL> 
22:05:32 SQL> BEGIN
22:05:32   2  	-- Perform missing value treatment for all predictors
22:05:32   3  	-- create miss tables
22:05:32   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:05:32   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:05:32   6  
22:05:32   7  	-- populate miss tables
22:05:32   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:05:32   9  	  miss_table_name => 'svmc_miss_num',
22:05:32  10  	  data_table_name => '&bldtable',
22:05:32  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:05:32  12  
22:05:32  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:05:32  14  	  miss_table_name => 'svmc_miss_cat',
22:05:32  15  	  data_table_name => '&bldtable',
22:05:32  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:05:32  17  
22:05:32  18  	-- xform input data to replace missing values
22:05:32  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:05:32  20  	  miss_table_name => 'svmc_miss_num',
22:05:32  21  	  data_table_name => '&bldtable',
22:05:32  22  	  xform_view_name => 'xformed_build_miss_num');
22:05:32  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:05:32  24  	  miss_table_name => 'svmc_miss_cat',
22:05:32  25  	  data_table_name => '&bldtable',
22:05:32  26  	  xform_view_name => 'xformed_build_miss_cat');
22:05:32  27  
22:05:32  28  	-- Perform outlier treatment.
22:05:32  29  	-- create clip table
22:05:32  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:05:32  31  
22:05:32  32  	-- populate clip table
22:05:32  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:05:32  34  	  clip_table_name => 'svmc_clip',
22:05:32  35  	  data_table_name => '&bldtable',
22:05:32  36  	  tail_frac	  => 0.025,
22:05:32  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:05:32  38  
22:05:32  39  	-- xform input data to winsorized data
22:05:32  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:05:32  41  	  clip_table_name => 'svmc_clip',
22:05:32  42  	  data_table_name => '&bldtable',
22:05:32  43  	  xform_view_name => 'svmc_winsor');
22:05:32  44  
22:05:32  45  	-- create normalization table
22:05:32  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:05:32  47  
22:05:32  48  	-- populate normalization table based on winsorized data
22:05:32  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:05:32  50  	  norm_table_name => 'svmc_norm',
22:05:32  51  	  data_table_name => 'svmc_winsor',
22:05:32  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:05:32  53  
22:05:32  54  	-- normalize the original data
22:05:32  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:05:32  56  	  norm_table_name => 'svmc_norm',
22:05:32  57  	  data_table_name => '&bldtable',
22:05:32  58  	  xform_view_name => 'svmc_build_prep');
22:05:32  59  END;
22:05:32  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.65
22:05:51 SQL> 
22:05:51 SQL> ---------------------
22:05:51 SQL> -- CREATE A NEW MODEL
22:05:51 SQL> --
22:05:51 SQL> -- Cleanup old model with the same name for repeat runs
22:05:51 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:05:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:05:51   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.05
22:05:52 SQL> 
22:05:52 SQL> -- Build a new SVM Model
22:05:52 SQL> BEGIN
22:05:52   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:05:52   3  	  model_name	      => '&model_name',
22:05:52   4  	  mining_function     => dbms_data_mining.classification,
22:05:52   5  	  data_table_name     => 'svmc_build_prep',
22:05:52   6  	  case_id_column_name => '&case_id',
22:05:52   7  	  target_column_name  => '&target',
22:05:52   8  	  settings_table_name => 'svmc_settings');
22:05:52   9  END;
22:05:52  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:25.92
22:06:18 SQL> 
22:06:18 SQL> -----------------------------------------------------------------------
22:06:18 SQL> --			       APPLY/score THE MODEL
22:06:18 SQL> -----------------------------------------------------------------------
22:06:18 SQL> 
22:06:18 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:06:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:06:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:06:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:06:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:06:18 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:06:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:18   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:06:18 SQL> -----------------------
22:06:18 SQL> -- PREPARE SCORING DATA
22:06:18 SQL> --
22:06:18 SQL> -- If the data for model creation has been prepared, then the data
22:06:18 SQL> -- to be scored using the model must be prepared in the same manner
22:06:18 SQL> -- in order to obtain meaningful results.
22:06:18 SQL> --
22:06:18 SQL> -- 1. Missing Value treatment for all Predictors and
22:06:18 SQL> -- 2. Normalization
22:06:18 SQL> -- No outlier treatment will be performed during test and apply. The
22:06:18 SQL> -- normalization step is sufficient, since the normalization parameters
22:06:18 SQL> -- already capture the effects of outlier treatment done with build data.
22:06:18 SQL> --
22:06:18 SQL> BEGIN
22:06:18   2  	-- Xform Test data to replace missing values
22:06:18   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:06:18   4  	  miss_table_name => 'svmc_miss_num',
22:06:18   5  	  data_table_name => '&scoretable',
22:06:18   6  	  xform_view_name => 'xformed_apply_miss_num');
22:06:18   7  
22:06:18   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:06:18   9  	  miss_table_name => 'svmc_miss_cat',
22:06:18  10  	  data_table_name => '&scoretable',
22:06:18  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:06:18  12  
22:06:18  13  	-- Normalize the data to be scored
22:06:18  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:06:18  15  	  norm_table_name => 'svmc_norm',
22:06:18  16  	  data_table_name => '&scoretable',
22:06:18  17  	  xform_view_name => 'svmc_apply_prep');
22:06:18  18  END;
22:06:18  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
22:06:19 SQL> 
22:06:19 SQL> -- Use same model_name used in score.sql
22:06:19 SQL> DEFINE model_name = 'forex15'
22:06:19 SQL> 
22:06:19 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
22:06:19 SQL> 
22:06:19 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:06:19 SQL> 
22:06:19 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
22:06:19   2  SELECT
22:06:19   3  prdate
22:06:19   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:06:19   5  ,sysdate
22:06:19   6  ,SUBSTR(prdate,1,3)pair
22:06:19   7  ,SUBSTR(prdate,4,19)ydate
22:06:19   8  FROM svmc_apply_prep
22:06:19   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:06:19 SQL> @aud_score1day.sql  2011-01-06 21:50:00
22:06:19 SQL> --
22:06:19 SQL> -- aud_score1day.sql
22:06:19 SQL> --
22:06:19 SQL> 
22:06:19 SQL> CREATE OR REPLACE VIEW sme AS
22:06:19   2  SELECT
22:06:19   3  'aud'||m.ydate prdate
22:06:19   4  ,NULL gatt
22:06:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:06:19   6  ,eur_g00
22:06:19   7  ,eur_g01
22:06:19   8  ,eur_g02
22:06:19   9  ,eur_g03
22:06:19  10  ,eur_g04
22:06:19  11  ,eur_g05
22:06:19  12  ,eur_g06
22:06:19  13  ,eur_g07
22:06:19  14  ,eur_g08
22:06:19  15  ,eur_g09
22:06:19  16  ,eur_g10
22:06:19  17  ,eur_g11
22:06:19  18  ,eur_g12
22:06:19  19  ,eur_g13
22:06:19  20  ,eur_g14
22:06:19  21  ,eur_g15
22:06:19  22  ,eur_g16
22:06:19  23  ,eur_g17
22:06:19  24  ,eur_g18
22:06:19  25  ,eur_g19
22:06:19  26  ,eur_g20
22:06:19  27  ,eur_g21
22:06:19  28  ,eur_g22
22:06:19  29  ,eur_g23
22:06:19  30  ,eur_g24
22:06:19  31  ,eur_g25
22:06:19  32  ,eur_g26
22:06:19  33  ,eur_g27
22:06:19  34  ,eur_g28
22:06:19  35  ,eur_g29
22:06:19  36  ,eur_g30
22:06:19  37  ,eur_g31
22:06:19  38  ,eur_g32
22:06:19  39  ,eur_g33
22:06:19  40  ,eur_g34
22:06:19  41  ,eur_g35
22:06:19  42  ,eur_g36
22:06:19  43  ,eur_g37
22:06:19  44  ,eur_g38
22:06:19  45  ,eur_g39
22:06:19  46  ,eur_g40
22:06:19  47  ,eur_g41
22:06:19  48  ,aud_g00
22:06:19  49  ,aud_g01
22:06:19  50  ,aud_g02
22:06:19  51  ,aud_g03
22:06:19  52  ,aud_g04
22:06:19  53  ,aud_g05
22:06:19  54  ,aud_g06
22:06:19  55  ,aud_g07
22:06:19  56  ,aud_g08
22:06:19  57  ,aud_g09
22:06:19  58  ,aud_g10
22:06:19  59  ,aud_g11
22:06:19  60  ,aud_g12
22:06:19  61  ,aud_g13
22:06:19  62  ,aud_g14
22:06:19  63  ,aud_g15
22:06:19  64  ,aud_g16
22:06:19  65  ,aud_g17
22:06:19  66  ,aud_g18
22:06:19  67  ,aud_g19
22:06:19  68  ,aud_g20
22:06:19  69  ,aud_g21
22:06:19  70  ,aud_g22
22:06:19  71  ,aud_g23
22:06:19  72  ,aud_g24
22:06:19  73  ,aud_g25
22:06:19  74  ,aud_g26
22:06:19  75  ,aud_g27
22:06:19  76  ,aud_g28
22:06:19  77  ,aud_g29
22:06:19  78  ,aud_g30
22:06:19  79  ,aud_g31
22:06:19  80  ,aud_g32
22:06:19  81  ,aud_g33
22:06:19  82  ,aud_g34
22:06:19  83  ,aud_g35
22:06:19  84  ,aud_g36
22:06:19  85  ,aud_g37
22:06:19  86  ,aud_g38
22:06:19  87  ,aud_g39
22:06:19  88  ,aud_g40
22:06:19  89  ,aud_g41
22:06:19  90  ,gbp_g00
22:06:19  91  ,gbp_g01
22:06:19  92  ,gbp_g02
22:06:19  93  ,gbp_g03
22:06:19  94  ,gbp_g04
22:06:19  95  ,gbp_g05
22:06:19  96  ,gbp_g06
22:06:19  97  ,gbp_g07
22:06:19  98  ,gbp_g08
22:06:19  99  ,gbp_g09
22:06:19 100  ,gbp_g10
22:06:19 101  ,gbp_g11
22:06:19 102  ,gbp_g12
22:06:19 103  ,gbp_g13
22:06:19 104  ,gbp_g14
22:06:19 105  ,gbp_g15
22:06:19 106  ,gbp_g16
22:06:19 107  ,gbp_g17
22:06:19 108  ,gbp_g18
22:06:19 109  ,gbp_g19
22:06:19 110  ,gbp_g20
22:06:19 111  ,gbp_g21
22:06:19 112  ,gbp_g22
22:06:19 113  ,gbp_g23
22:06:19 114  ,gbp_g24
22:06:19 115  ,gbp_g25
22:06:19 116  ,gbp_g26
22:06:19 117  ,gbp_g27
22:06:19 118  ,gbp_g28
22:06:19 119  ,gbp_g29
22:06:19 120  ,gbp_g30
22:06:19 121  ,gbp_g31
22:06:19 122  ,gbp_g32
22:06:19 123  ,gbp_g33
22:06:19 124  ,gbp_g34
22:06:19 125  ,gbp_g35
22:06:19 126  ,gbp_g36
22:06:19 127  ,gbp_g37
22:06:19 128  ,gbp_g38
22:06:19 129  ,gbp_g39
22:06:19 130  ,gbp_g40
22:06:19 131  ,gbp_g41
22:06:19 132  ,jpy_g00
22:06:19 133  ,jpy_g01
22:06:19 134  ,jpy_g02
22:06:19 135  ,jpy_g03
22:06:19 136  ,jpy_g04
22:06:19 137  ,jpy_g05
22:06:19 138  ,jpy_g06
22:06:19 139  ,jpy_g07
22:06:19 140  ,jpy_g08
22:06:19 141  ,jpy_g09
22:06:19 142  ,jpy_g10
22:06:19 143  ,jpy_g11
22:06:19 144  ,jpy_g12
22:06:19 145  ,jpy_g13
22:06:19 146  ,jpy_g14
22:06:19 147  ,jpy_g15
22:06:19 148  ,jpy_g16
22:06:19 149  ,jpy_g17
22:06:19 150  ,jpy_g18
22:06:19 151  ,jpy_g19
22:06:19 152  ,jpy_g20
22:06:19 153  ,jpy_g21
22:06:19 154  ,jpy_g22
22:06:19 155  ,jpy_g23
22:06:19 156  ,jpy_g24
22:06:19 157  ,jpy_g25
22:06:19 158  ,jpy_g26
22:06:19 159  ,jpy_g27
22:06:19 160  ,jpy_g28
22:06:19 161  ,jpy_g29
22:06:19 162  ,jpy_g30
22:06:19 163  ,jpy_g31
22:06:19 164  ,jpy_g32
22:06:19 165  ,jpy_g33
22:06:19 166  ,jpy_g34
22:06:19 167  ,jpy_g35
22:06:19 168  ,jpy_g36
22:06:19 169  ,jpy_g37
22:06:19 170  ,jpy_g38
22:06:19 171  ,jpy_g39
22:06:19 172  ,jpy_g40
22:06:19 173  ,jpy_g41
22:06:19 174  ,cad_g00
22:06:19 175  ,cad_g01
22:06:19 176  ,cad_g02
22:06:19 177  ,cad_g03
22:06:19 178  ,cad_g04
22:06:19 179  ,cad_g05
22:06:19 180  ,cad_g06
22:06:19 181  ,cad_g07
22:06:19 182  ,cad_g08
22:06:19 183  ,cad_g09
22:06:19 184  ,cad_g10
22:06:19 185  ,cad_g11
22:06:19 186  ,cad_g12
22:06:19 187  ,cad_g13
22:06:19 188  ,cad_g14
22:06:19 189  ,cad_g15
22:06:19 190  ,cad_g16
22:06:19 191  ,cad_g17
22:06:19 192  ,cad_g18
22:06:19 193  ,cad_g19
22:06:19 194  ,cad_g20
22:06:19 195  ,cad_g21
22:06:19 196  ,cad_g22
22:06:19 197  ,cad_g23
22:06:19 198  ,cad_g24
22:06:19 199  ,cad_g25
22:06:19 200  ,cad_g26
22:06:19 201  ,cad_g27
22:06:19 202  ,cad_g28
22:06:19 203  ,cad_g29
22:06:19 204  ,cad_g30
22:06:19 205  ,cad_g31
22:06:19 206  ,cad_g32
22:06:19 207  ,cad_g33
22:06:19 208  ,cad_g34
22:06:19 209  ,cad_g35
22:06:19 210  ,cad_g36
22:06:19 211  ,cad_g37
22:06:19 212  ,cad_g38
22:06:19 213  ,cad_g39
22:06:19 214  ,cad_g40
22:06:19 215  ,cad_g41
22:06:19 216  ,chf_g00
22:06:19 217  ,chf_g01
22:06:19 218  ,chf_g02
22:06:19 219  ,chf_g03
22:06:19 220  ,chf_g04
22:06:19 221  ,chf_g05
22:06:19 222  ,chf_g06
22:06:19 223  ,chf_g07
22:06:19 224  ,chf_g08
22:06:19 225  ,chf_g09
22:06:19 226  ,chf_g10
22:06:19 227  ,chf_g11
22:06:19 228  ,chf_g12
22:06:19 229  ,chf_g13
22:06:19 230  ,chf_g14
22:06:19 231  ,chf_g15
22:06:19 232  ,chf_g16
22:06:19 233  ,chf_g17
22:06:19 234  ,chf_g18
22:06:19 235  ,chf_g19
22:06:19 236  ,chf_g20
22:06:19 237  ,chf_g21
22:06:19 238  ,chf_g22
22:06:19 239  ,chf_g23
22:06:19 240  ,chf_g24
22:06:19 241  ,chf_g25
22:06:19 242  ,chf_g26
22:06:19 243  ,chf_g27
22:06:19 244  ,chf_g28
22:06:19 245  ,chf_g29
22:06:19 246  ,chf_g30
22:06:19 247  ,chf_g31
22:06:19 248  ,chf_g32
22:06:19 249  ,chf_g33
22:06:19 250  ,chf_g34
22:06:19 251  ,chf_g35
22:06:19 252  ,chf_g36
22:06:19 253  ,chf_g37
22:06:19 254  ,chf_g38
22:06:19 255  ,chf_g39
22:06:19 256  ,chf_g40
22:06:19 257  ,chf_g41
22:06:19 258  FROM aud_ms6 m
22:06:19 259  WHERE m.ydate = '&1'||' '||'&2'
22:06:19 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'21:50:00'

View created.

Elapsed: 00:00:00.12
22:06:19 SQL> 
22:06:19 SQL> -- rpt
22:06:19 SQL> -- We should see just 1 row:
22:06:19 SQL> 
22:06:19 SQL> SELECT COUNT(prdate) FROM sme
22:06:19   2  
22:06:19 SQL> -- Build the model:
22:06:19 SQL> CREATE OR REPLACE VIEW bme AS
22:06:19   2  SELECT
22:06:19   3  'aud'||m.ydate prdate
22:06:19   4  ,gatt
22:06:19   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:06:19   6  ,eur_g00
22:06:19   7  ,eur_g01
22:06:19   8  ,eur_g02
22:06:19   9  ,eur_g03
22:06:19  10  ,eur_g04
22:06:19  11  ,eur_g05
22:06:19  12  ,eur_g06
22:06:19  13  ,eur_g07
22:06:19  14  ,eur_g08
22:06:19  15  ,eur_g09
22:06:19  16  ,eur_g10
22:06:19  17  ,eur_g11
22:06:19  18  ,eur_g12
22:06:19  19  ,eur_g13
22:06:19  20  ,eur_g14
22:06:19  21  ,eur_g15
22:06:19  22  ,eur_g16
22:06:19  23  ,eur_g17
22:06:19  24  ,eur_g18
22:06:19  25  ,eur_g19
22:06:19  26  ,eur_g20
22:06:19  27  ,eur_g21
22:06:19  28  ,eur_g22
22:06:19  29  ,eur_g23
22:06:19  30  ,eur_g24
22:06:19  31  ,eur_g25
22:06:19  32  ,eur_g26
22:06:19  33  ,eur_g27
22:06:19  34  ,eur_g28
22:06:19  35  ,eur_g29
22:06:19  36  ,eur_g30
22:06:19  37  ,eur_g31
22:06:19  38  ,eur_g32
22:06:19  39  ,eur_g33
22:06:19  40  ,eur_g34
22:06:19  41  ,eur_g35
22:06:19  42  ,eur_g36
22:06:19  43  ,eur_g37
22:06:19  44  ,eur_g38
22:06:19  45  ,eur_g39
22:06:19  46  ,eur_g40
22:06:19  47  ,eur_g41
22:06:19  48  ,aud_g00
22:06:19  49  ,aud_g01
22:06:19  50  ,aud_g02
22:06:19  51  ,aud_g03
22:06:19  52  ,aud_g04
22:06:19  53  ,aud_g05
22:06:19  54  ,aud_g06
22:06:19  55  ,aud_g07
22:06:19  56  ,aud_g08
22:06:19  57  ,aud_g09
22:06:19  58  ,aud_g10
22:06:19  59  ,aud_g11
22:06:19  60  ,aud_g12
22:06:19  61  ,aud_g13
22:06:19  62  ,aud_g14
22:06:19  63  ,aud_g15
22:06:19  64  ,aud_g16
22:06:19  65  ,aud_g17
22:06:19  66  ,aud_g18
22:06:19  67  ,aud_g19
22:06:19  68  ,aud_g20
22:06:19  69  ,aud_g21
22:06:19  70  ,aud_g22
22:06:19  71  ,aud_g23
22:06:19  72  ,aud_g24
22:06:19  73  ,aud_g25
22:06:19  74  ,aud_g26
22:06:19  75  ,aud_g27
22:06:19  76  ,aud_g28
22:06:19  77  ,aud_g29
22:06:19  78  ,aud_g30
22:06:19  79  ,aud_g31
22:06:19  80  ,aud_g32
22:06:19  81  ,aud_g33
22:06:19  82  ,aud_g34
22:06:19  83  ,aud_g35
22:06:19  84  ,aud_g36
22:06:19  85  ,aud_g37
22:06:19  86  ,aud_g38
22:06:19  87  ,aud_g39
22:06:19  88  ,aud_g40
22:06:19  89  ,aud_g41
22:06:19  90  ,gbp_g00
22:06:19  91  ,gbp_g01
22:06:19  92  ,gbp_g02
22:06:19  93  ,gbp_g03
22:06:19  94  ,gbp_g04
22:06:19  95  ,gbp_g05
22:06:19  96  ,gbp_g06
22:06:19  97  ,gbp_g07
22:06:19  98  ,gbp_g08
22:06:19  99  ,gbp_g09
22:06:19 100  ,gbp_g10
22:06:19 101  ,gbp_g11
22:06:19 102  ,gbp_g12
22:06:19 103  ,gbp_g13
22:06:19 104  ,gbp_g14
22:06:19 105  ,gbp_g15
22:06:19 106  ,gbp_g16
22:06:19 107  ,gbp_g17
22:06:19 108  ,gbp_g18
22:06:19 109  ,gbp_g19
22:06:19 110  ,gbp_g20
22:06:19 111  ,gbp_g21
22:06:19 112  ,gbp_g22
22:06:19 113  ,gbp_g23
22:06:19 114  ,gbp_g24
22:06:19 115  ,gbp_g25
22:06:19 116  ,gbp_g26
22:06:19 117  ,gbp_g27
22:06:19 118  ,gbp_g28
22:06:19 119  ,gbp_g29
22:06:19 120  ,gbp_g30
22:06:19 121  ,gbp_g31
22:06:19 122  ,gbp_g32
22:06:19 123  ,gbp_g33
22:06:19 124  ,gbp_g34
22:06:19 125  ,gbp_g35
22:06:19 126  ,gbp_g36
22:06:19 127  ,gbp_g37
22:06:19 128  ,gbp_g38
22:06:19 129  ,gbp_g39
22:06:19 130  ,gbp_g40
22:06:19 131  ,gbp_g41
22:06:19 132  ,jpy_g00
22:06:19 133  ,jpy_g01
22:06:19 134  ,jpy_g02
22:06:19 135  ,jpy_g03
22:06:19 136  ,jpy_g04
22:06:19 137  ,jpy_g05
22:06:19 138  ,jpy_g06
22:06:19 139  ,jpy_g07
22:06:19 140  ,jpy_g08
22:06:19 141  ,jpy_g09
22:06:19 142  ,jpy_g10
22:06:19 143  ,jpy_g11
22:06:19 144  ,jpy_g12
22:06:19 145  ,jpy_g13
22:06:19 146  ,jpy_g14
22:06:19 147  ,jpy_g15
22:06:19 148  ,jpy_g16
22:06:19 149  ,jpy_g17
22:06:19 150  ,jpy_g18
22:06:19 151  ,jpy_g19
22:06:19 152  ,jpy_g20
22:06:19 153  ,jpy_g21
22:06:19 154  ,jpy_g22
22:06:19 155  ,jpy_g23
22:06:19 156  ,jpy_g24
22:06:19 157  ,jpy_g25
22:06:19 158  ,jpy_g26
22:06:19 159  ,jpy_g27
22:06:19 160  ,jpy_g28
22:06:19 161  ,jpy_g29
22:06:19 162  ,jpy_g30
22:06:19 163  ,jpy_g31
22:06:19 164  ,jpy_g32
22:06:19 165  ,jpy_g33
22:06:19 166  ,jpy_g34
22:06:19 167  ,jpy_g35
22:06:19 168  ,jpy_g36
22:06:19 169  ,jpy_g37
22:06:19 170  ,jpy_g38
22:06:19 171  ,jpy_g39
22:06:19 172  ,jpy_g40
22:06:19 173  ,jpy_g41
22:06:19 174  ,cad_g00
22:06:19 175  ,cad_g01
22:06:19 176  ,cad_g02
22:06:19 177  ,cad_g03
22:06:19 178  ,cad_g04
22:06:19 179  ,cad_g05
22:06:19 180  ,cad_g06
22:06:19 181  ,cad_g07
22:06:19 182  ,cad_g08
22:06:19 183  ,cad_g09
22:06:19 184  ,cad_g10
22:06:19 185  ,cad_g11
22:06:19 186  ,cad_g12
22:06:19 187  ,cad_g13
22:06:19 188  ,cad_g14
22:06:19 189  ,cad_g15
22:06:19 190  ,cad_g16
22:06:19 191  ,cad_g17
22:06:19 192  ,cad_g18
22:06:19 193  ,cad_g19
22:06:19 194  ,cad_g20
22:06:19 195  ,cad_g21
22:06:19 196  ,cad_g22
22:06:19 197  ,cad_g23
22:06:19 198  ,cad_g24
22:06:19 199  ,cad_g25
22:06:19 200  ,cad_g26
22:06:19 201  ,cad_g27
22:06:19 202  ,cad_g28
22:06:19 203  ,cad_g29
22:06:19 204  ,cad_g30
22:06:19 205  ,cad_g31
22:06:19 206  ,cad_g32
22:06:19 207  ,cad_g33
22:06:19 208  ,cad_g34
22:06:19 209  ,cad_g35
22:06:19 210  ,cad_g36
22:06:19 211  ,cad_g37
22:06:19 212  ,cad_g38
22:06:19 213  ,cad_g39
22:06:19 214  ,cad_g40
22:06:19 215  ,cad_g41
22:06:19 216  ,chf_g00
22:06:19 217  ,chf_g01
22:06:19 218  ,chf_g02
22:06:19 219  ,chf_g03
22:06:19 220  ,chf_g04
22:06:19 221  ,chf_g05
22:06:19 222  ,chf_g06
22:06:19 223  ,chf_g07
22:06:19 224  ,chf_g08
22:06:19 225  ,chf_g09
22:06:19 226  ,chf_g10
22:06:19 227  ,chf_g11
22:06:19 228  ,chf_g12
22:06:19 229  ,chf_g13
22:06:19 230  ,chf_g14
22:06:19 231  ,chf_g15
22:06:19 232  ,chf_g16
22:06:19 233  ,chf_g17
22:06:19 234  ,chf_g18
22:06:19 235  ,chf_g19
22:06:19 236  ,chf_g20
22:06:19 237  ,chf_g21
22:06:19 238  ,chf_g22
22:06:19 239  ,chf_g23
22:06:19 240  ,chf_g24
22:06:19 241  ,chf_g25
22:06:19 242  ,chf_g26
22:06:19 243  ,chf_g27
22:06:19 244  ,chf_g28
22:06:19 245  ,chf_g29
22:06:19 246  ,chf_g30
22:06:19 247  ,chf_g31
22:06:19 248  ,chf_g32
22:06:19 249  ,chf_g33
22:06:19 250  ,chf_g34
22:06:19 251  ,chf_g35
22:06:19 252  ,chf_g36
22:06:19 253  ,chf_g37
22:06:19 254  ,chf_g38
22:06:19 255  ,chf_g39
22:06:19 256  ,chf_g40
22:06:19 257  ,chf_g41
22:06:19 258  FROM aud_ms6 m
22:06:19 259  WHERE gatt IN('nup','up')
22:06:19 260  AND 1+m.ydate < '&1'||' '||'&2'
22:06:19 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'21:50:00'

View created.

Elapsed: 00:00:00.11
22:06:20 SQL> 
22:06:20 SQL> -- rpt
22:06:20 SQL> 
22:06:20 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
22:06:20   2  
22:06:20 SQL> SELECT MAX(prdate) FROM bme
22:06:20   2  
22:06:20 SQL> -- Now build model from bme and score sme
22:06:20 SQL> @score1.sql
22:06:20 SQL> -- score1.sql
22:06:20 SQL> 
22:06:20 SQL> -- Does the 1st SVM score
22:06:20 SQL> 
22:06:20 SQL> -- Fill up svmc_apply_prep
22:06:20 SQL> @score.sql
22:06:20 SQL> --
22:06:20 SQL> -- score.sql
22:06:20 SQL> --
22:06:20 SQL> 
22:06:20 SQL> -- usage: score.sql
22:06:20 SQL> 
22:06:20 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:06:20 SQL> 
22:06:20 SQL> DEFINE target	= 'gatt'
22:06:20 SQL> DEFINE model_name = 'forex15'
22:06:20 SQL> DEFINE bldtable	= 'bme'
22:06:20 SQL> DEFINE scoretable = 'sme'
22:06:20 SQL> DEFINE case_id	= 'prdate'
22:06:20 SQL> 
22:06:20 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:06:20 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:06:20 SQL> 
22:06:20 SQL> -- Builds an SVM model using pl/sql.
22:06:20 SQL> 
22:06:20 SQL> -----------------------------------------------------------------------
22:06:20 SQL> --			    BUILD THE MODEL
22:06:20 SQL> -----------------------------------------------------------------------
22:06:20 SQL> 
22:06:20 SQL> -- Cleanup old build data preparation objects for repeat runs
22:06:20 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:06:20 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:06:20 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
22:06:20 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
22:06:20 SQL> 
22:06:20 SQL> 
22:06:20 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:06:20 SQL> --
22:06:20 SQL> -- DROP	TABLE svmc_settings ;
22:06:20 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:06:20 SQL> -- DELETE svmc_settings;
22:06:20 SQL> 
22:06:20 SQL> -- The default classification algorithm is Naive Bayes. So override
22:06:20 SQL> -- this choice to SVM using a settings table.
22:06:20 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:06:20 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:06:20 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:06:20 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:06:20 SQL> -- models.
22:06:20 SQL> --
22:06:20 SQL> 
22:06:20 SQL> -- Do this once and then comment it out.
22:06:20 SQL> -- That makes script go faster.
22:06:20 SQL> -- BEGIN
22:06:20 SQL> -- -- Populate settings table
22:06:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:06:20 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:06:20 SQL> --
22:06:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:06:20 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:06:20 SQL> --
22:06:20 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:06:20 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:06:20 SQL> --   COMMIT;
22:06:20 SQL> -- END;
22:06:20 SQL> -- /
22:06:20 SQL> 
22:06:20 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:06:20 SQL> 
22:06:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:06:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:06:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:06:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:06:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:06:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:06:20 SQL> 
22:06:20 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:06:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:20   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:06:20 SQL> 
22:06:20 SQL> --------------------------------
22:06:20 SQL> -- PREPARE BUILD (TRAINING) DATA
22:06:20 SQL> --
22:06:20 SQL> 
22:06:20 SQL> -- 1. Missing Value treatment for all Predictors and
22:06:20 SQL> -- 2. Outlier Treatment and
22:06:20 SQL> -- 3. Normalization are performed below.
22:06:20 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:06:20 SQL> --    normalized here.
22:06:20 SQL> 
22:06:20 SQL> BEGIN
22:06:20   2  	-- Perform missing value treatment for all predictors
22:06:20   3  	-- create miss tables
22:06:20   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:06:20   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:06:20   6  
22:06:20   7  	-- populate miss tables
22:06:20   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:06:20   9  	  miss_table_name => 'svmc_miss_num',
22:06:20  10  	  data_table_name => '&bldtable',
22:06:20  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:06:20  12  
22:06:20  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:06:20  14  	  miss_table_name => 'svmc_miss_cat',
22:06:20  15  	  data_table_name => '&bldtable',
22:06:20  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:06:20  17  
22:06:20  18  	-- xform input data to replace missing values
22:06:20  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:06:20  20  	  miss_table_name => 'svmc_miss_num',
22:06:20  21  	  data_table_name => '&bldtable',
22:06:20  22  	  xform_view_name => 'xformed_build_miss_num');
22:06:20  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:06:20  24  	  miss_table_name => 'svmc_miss_cat',
22:06:20  25  	  data_table_name => '&bldtable',
22:06:20  26  	  xform_view_name => 'xformed_build_miss_cat');
22:06:20  27  
22:06:20  28  	-- Perform outlier treatment.
22:06:20  29  	-- create clip table
22:06:20  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:06:20  31  
22:06:20  32  	-- populate clip table
22:06:20  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:06:20  34  	  clip_table_name => 'svmc_clip',
22:06:20  35  	  data_table_name => '&bldtable',
22:06:20  36  	  tail_frac	  => 0.025,
22:06:20  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:06:20  38  
22:06:20  39  	-- xform input data to winsorized data
22:06:20  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:06:20  41  	  clip_table_name => 'svmc_clip',
22:06:20  42  	  data_table_name => '&bldtable',
22:06:20  43  	  xform_view_name => 'svmc_winsor');
22:06:20  44  
22:06:20  45  	-- create normalization table
22:06:20  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:06:20  47  
22:06:20  48  	-- populate normalization table based on winsorized data
22:06:20  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:06:20  50  	  norm_table_name => 'svmc_norm',
22:06:20  51  	  data_table_name => 'svmc_winsor',
22:06:20  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:06:20  53  
22:06:20  54  	-- normalize the original data
22:06:20  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:06:20  56  	  norm_table_name => 'svmc_norm',
22:06:20  57  	  data_table_name => '&bldtable',
22:06:20  58  	  xform_view_name => 'svmc_build_prep');
22:06:20  59  END;
22:06:20  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.40
22:06:38 SQL> 
22:06:38 SQL> ---------------------
22:06:38 SQL> -- CREATE A NEW MODEL
22:06:38 SQL> --
22:06:38 SQL> -- Cleanup old model with the same name for repeat runs
22:06:38 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:06:38   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:06:38   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.13
22:06:39 SQL> 
22:06:39 SQL> -- Build a new SVM Model
22:06:39 SQL> BEGIN
22:06:39   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:06:39   3  	  model_name	      => '&model_name',
22:06:39   4  	  mining_function     => dbms_data_mining.classification,
22:06:39   5  	  data_table_name     => 'svmc_build_prep',
22:06:39   6  	  case_id_column_name => '&case_id',
22:06:39   7  	  target_column_name  => '&target',
22:06:39   8  	  settings_table_name => 'svmc_settings');
22:06:39   9  END;
22:06:39  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.63
22:07:06 SQL> 
22:07:06 SQL> -----------------------------------------------------------------------
22:07:06 SQL> --			       APPLY/score THE MODEL
22:07:06 SQL> -----------------------------------------------------------------------
22:07:06 SQL> 
22:07:06 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:07:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:07:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:07:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:07:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:07:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:07:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:07:06 SQL> -----------------------
22:07:06 SQL> -- PREPARE SCORING DATA
22:07:06 SQL> --
22:07:06 SQL> -- If the data for model creation has been prepared, then the data
22:07:06 SQL> -- to be scored using the model must be prepared in the same manner
22:07:06 SQL> -- in order to obtain meaningful results.
22:07:06 SQL> --
22:07:06 SQL> -- 1. Missing Value treatment for all Predictors and
22:07:06 SQL> -- 2. Normalization
22:07:06 SQL> -- No outlier treatment will be performed during test and apply. The
22:07:06 SQL> -- normalization step is sufficient, since the normalization parameters
22:07:06 SQL> -- already capture the effects of outlier treatment done with build data.
22:07:06 SQL> --
22:07:06 SQL> BEGIN
22:07:06   2  	-- Xform Test data to replace missing values
22:07:06   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:07:06   4  	  miss_table_name => 'svmc_miss_num',
22:07:06   5  	  data_table_name => '&scoretable',
22:07:06   6  	  xform_view_name => 'xformed_apply_miss_num');
22:07:06   7  
22:07:06   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:07:06   9  	  miss_table_name => 'svmc_miss_cat',
22:07:06  10  	  data_table_name => '&scoretable',
22:07:06  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:07:06  12  
22:07:06  13  	-- Normalize the data to be scored
22:07:06  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:07:06  15  	  norm_table_name => 'svmc_norm',
22:07:06  16  	  data_table_name => '&scoretable',
22:07:06  17  	  xform_view_name => 'svmc_apply_prep');
22:07:06  18  END;
22:07:06  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.33
22:07:07 SQL> 
22:07:07 SQL> -- Use same model_name used in score.sql
22:07:07 SQL> DEFINE model_name = 'forex15'
22:07:07 SQL> 
22:07:07 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
22:07:07 SQL> 
22:07:07 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
22:07:08 SQL> 
22:07:08 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
22:07:08   2  SELECT
22:07:08   3  prdate
22:07:08   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:07:08   5  ,sysdate
22:07:08   6  ,SUBSTR(prdate,1,3)pair
22:07:08   7  ,SUBSTR(prdate,4,19)ydate
22:07:08   8  FROM svmc_apply_prep
22:07:08   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:07:08 SQL> @aud_score1day.sql  2011-01-06 21:55:00
22:07:08 SQL> --
22:07:08 SQL> -- aud_score1day.sql
22:07:08 SQL> --
22:07:08 SQL> 
22:07:08 SQL> CREATE OR REPLACE VIEW sme AS
22:07:08   2  SELECT
22:07:08   3  'aud'||m.ydate prdate
22:07:08   4  ,NULL gatt
22:07:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:07:08   6  ,eur_g00
22:07:08   7  ,eur_g01
22:07:08   8  ,eur_g02
22:07:08   9  ,eur_g03
22:07:08  10  ,eur_g04
22:07:08  11  ,eur_g05
22:07:08  12  ,eur_g06
22:07:08  13  ,eur_g07
22:07:08  14  ,eur_g08
22:07:08  15  ,eur_g09
22:07:08  16  ,eur_g10
22:07:08  17  ,eur_g11
22:07:08  18  ,eur_g12
22:07:08  19  ,eur_g13
22:07:08  20  ,eur_g14
22:07:08  21  ,eur_g15
22:07:08  22  ,eur_g16
22:07:08  23  ,eur_g17
22:07:08  24  ,eur_g18
22:07:08  25  ,eur_g19
22:07:08  26  ,eur_g20
22:07:08  27  ,eur_g21
22:07:08  28  ,eur_g22
22:07:08  29  ,eur_g23
22:07:08  30  ,eur_g24
22:07:08  31  ,eur_g25
22:07:08  32  ,eur_g26
22:07:08  33  ,eur_g27
22:07:08  34  ,eur_g28
22:07:08  35  ,eur_g29
22:07:08  36  ,eur_g30
22:07:08  37  ,eur_g31
22:07:08  38  ,eur_g32
22:07:08  39  ,eur_g33
22:07:08  40  ,eur_g34
22:07:08  41  ,eur_g35
22:07:08  42  ,eur_g36
22:07:08  43  ,eur_g37
22:07:08  44  ,eur_g38
22:07:08  45  ,eur_g39
22:07:08  46  ,eur_g40
22:07:08  47  ,eur_g41
22:07:08  48  ,aud_g00
22:07:08  49  ,aud_g01
22:07:08  50  ,aud_g02
22:07:08  51  ,aud_g03
22:07:08  52  ,aud_g04
22:07:08  53  ,aud_g05
22:07:08  54  ,aud_g06
22:07:08  55  ,aud_g07
22:07:08  56  ,aud_g08
22:07:08  57  ,aud_g09
22:07:08  58  ,aud_g10
22:07:08  59  ,aud_g11
22:07:08  60  ,aud_g12
22:07:08  61  ,aud_g13
22:07:08  62  ,aud_g14
22:07:08  63  ,aud_g15
22:07:08  64  ,aud_g16
22:07:08  65  ,aud_g17
22:07:08  66  ,aud_g18
22:07:08  67  ,aud_g19
22:07:08  68  ,aud_g20
22:07:08  69  ,aud_g21
22:07:08  70  ,aud_g22
22:07:08  71  ,aud_g23
22:07:08  72  ,aud_g24
22:07:08  73  ,aud_g25
22:07:08  74  ,aud_g26
22:07:08  75  ,aud_g27
22:07:08  76  ,aud_g28
22:07:08  77  ,aud_g29
22:07:08  78  ,aud_g30
22:07:08  79  ,aud_g31
22:07:08  80  ,aud_g32
22:07:08  81  ,aud_g33
22:07:08  82  ,aud_g34
22:07:08  83  ,aud_g35
22:07:08  84  ,aud_g36
22:07:08  85  ,aud_g37
22:07:08  86  ,aud_g38
22:07:08  87  ,aud_g39
22:07:08  88  ,aud_g40
22:07:08  89  ,aud_g41
22:07:08  90  ,gbp_g00
22:07:08  91  ,gbp_g01
22:07:08  92  ,gbp_g02
22:07:08  93  ,gbp_g03
22:07:08  94  ,gbp_g04
22:07:08  95  ,gbp_g05
22:07:08  96  ,gbp_g06
22:07:08  97  ,gbp_g07
22:07:08  98  ,gbp_g08
22:07:08  99  ,gbp_g09
22:07:08 100  ,gbp_g10
22:07:08 101  ,gbp_g11
22:07:08 102  ,gbp_g12
22:07:08 103  ,gbp_g13
22:07:08 104  ,gbp_g14
22:07:08 105  ,gbp_g15
22:07:08 106  ,gbp_g16
22:07:08 107  ,gbp_g17
22:07:08 108  ,gbp_g18
22:07:08 109  ,gbp_g19
22:07:08 110  ,gbp_g20
22:07:08 111  ,gbp_g21
22:07:08 112  ,gbp_g22
22:07:08 113  ,gbp_g23
22:07:08 114  ,gbp_g24
22:07:08 115  ,gbp_g25
22:07:08 116  ,gbp_g26
22:07:08 117  ,gbp_g27
22:07:08 118  ,gbp_g28
22:07:08 119  ,gbp_g29
22:07:08 120  ,gbp_g30
22:07:08 121  ,gbp_g31
22:07:08 122  ,gbp_g32
22:07:08 123  ,gbp_g33
22:07:08 124  ,gbp_g34
22:07:08 125  ,gbp_g35
22:07:08 126  ,gbp_g36
22:07:08 127  ,gbp_g37
22:07:08 128  ,gbp_g38
22:07:08 129  ,gbp_g39
22:07:08 130  ,gbp_g40
22:07:08 131  ,gbp_g41
22:07:08 132  ,jpy_g00
22:07:08 133  ,jpy_g01
22:07:08 134  ,jpy_g02
22:07:08 135  ,jpy_g03
22:07:08 136  ,jpy_g04
22:07:08 137  ,jpy_g05
22:07:08 138  ,jpy_g06
22:07:08 139  ,jpy_g07
22:07:08 140  ,jpy_g08
22:07:08 141  ,jpy_g09
22:07:08 142  ,jpy_g10
22:07:08 143  ,jpy_g11
22:07:08 144  ,jpy_g12
22:07:08 145  ,jpy_g13
22:07:08 146  ,jpy_g14
22:07:08 147  ,jpy_g15
22:07:08 148  ,jpy_g16
22:07:08 149  ,jpy_g17
22:07:08 150  ,jpy_g18
22:07:08 151  ,jpy_g19
22:07:08 152  ,jpy_g20
22:07:08 153  ,jpy_g21
22:07:08 154  ,jpy_g22
22:07:08 155  ,jpy_g23
22:07:08 156  ,jpy_g24
22:07:08 157  ,jpy_g25
22:07:08 158  ,jpy_g26
22:07:08 159  ,jpy_g27
22:07:08 160  ,jpy_g28
22:07:08 161  ,jpy_g29
22:07:08 162  ,jpy_g30
22:07:08 163  ,jpy_g31
22:07:08 164  ,jpy_g32
22:07:08 165  ,jpy_g33
22:07:08 166  ,jpy_g34
22:07:08 167  ,jpy_g35
22:07:08 168  ,jpy_g36
22:07:08 169  ,jpy_g37
22:07:08 170  ,jpy_g38
22:07:08 171  ,jpy_g39
22:07:08 172  ,jpy_g40
22:07:08 173  ,jpy_g41
22:07:08 174  ,cad_g00
22:07:08 175  ,cad_g01
22:07:08 176  ,cad_g02
22:07:08 177  ,cad_g03
22:07:08 178  ,cad_g04
22:07:08 179  ,cad_g05
22:07:08 180  ,cad_g06
22:07:08 181  ,cad_g07
22:07:08 182  ,cad_g08
22:07:08 183  ,cad_g09
22:07:08 184  ,cad_g10
22:07:08 185  ,cad_g11
22:07:08 186  ,cad_g12
22:07:08 187  ,cad_g13
22:07:08 188  ,cad_g14
22:07:08 189  ,cad_g15
22:07:08 190  ,cad_g16
22:07:08 191  ,cad_g17
22:07:08 192  ,cad_g18
22:07:08 193  ,cad_g19
22:07:08 194  ,cad_g20
22:07:08 195  ,cad_g21
22:07:08 196  ,cad_g22
22:07:08 197  ,cad_g23
22:07:08 198  ,cad_g24
22:07:08 199  ,cad_g25
22:07:08 200  ,cad_g26
22:07:08 201  ,cad_g27
22:07:08 202  ,cad_g28
22:07:08 203  ,cad_g29
22:07:08 204  ,cad_g30
22:07:08 205  ,cad_g31
22:07:08 206  ,cad_g32
22:07:08 207  ,cad_g33
22:07:08 208  ,cad_g34
22:07:08 209  ,cad_g35
22:07:08 210  ,cad_g36
22:07:08 211  ,cad_g37
22:07:08 212  ,cad_g38
22:07:08 213  ,cad_g39
22:07:08 214  ,cad_g40
22:07:08 215  ,cad_g41
22:07:08 216  ,chf_g00
22:07:08 217  ,chf_g01
22:07:08 218  ,chf_g02
22:07:08 219  ,chf_g03
22:07:08 220  ,chf_g04
22:07:08 221  ,chf_g05
22:07:08 222  ,chf_g06
22:07:08 223  ,chf_g07
22:07:08 224  ,chf_g08
22:07:08 225  ,chf_g09
22:07:08 226  ,chf_g10
22:07:08 227  ,chf_g11
22:07:08 228  ,chf_g12
22:07:08 229  ,chf_g13
22:07:08 230  ,chf_g14
22:07:08 231  ,chf_g15
22:07:08 232  ,chf_g16
22:07:08 233  ,chf_g17
22:07:08 234  ,chf_g18
22:07:08 235  ,chf_g19
22:07:08 236  ,chf_g20
22:07:08 237  ,chf_g21
22:07:08 238  ,chf_g22
22:07:08 239  ,chf_g23
22:07:08 240  ,chf_g24
22:07:08 241  ,chf_g25
22:07:08 242  ,chf_g26
22:07:08 243  ,chf_g27
22:07:08 244  ,chf_g28
22:07:08 245  ,chf_g29
22:07:08 246  ,chf_g30
22:07:08 247  ,chf_g31
22:07:08 248  ,chf_g32
22:07:08 249  ,chf_g33
22:07:08 250  ,chf_g34
22:07:08 251  ,chf_g35
22:07:08 252  ,chf_g36
22:07:08 253  ,chf_g37
22:07:08 254  ,chf_g38
22:07:08 255  ,chf_g39
22:07:08 256  ,chf_g40
22:07:08 257  ,chf_g41
22:07:08 258  FROM aud_ms6 m
22:07:08 259  WHERE m.ydate = '&1'||' '||'&2'
22:07:08 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'21:55:00'

View created.

Elapsed: 00:00:00.14
22:07:08 SQL> 
22:07:08 SQL> -- rpt
22:07:08 SQL> -- We should see just 1 row:
22:07:08 SQL> 
22:07:08 SQL> SELECT COUNT(prdate) FROM sme
22:07:08   2  
22:07:08 SQL> -- Build the model:
22:07:08 SQL> CREATE OR REPLACE VIEW bme AS
22:07:08   2  SELECT
22:07:08   3  'aud'||m.ydate prdate
22:07:08   4  ,gatt
22:07:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:07:08   6  ,eur_g00
22:07:08   7  ,eur_g01
22:07:08   8  ,eur_g02
22:07:08   9  ,eur_g03
22:07:08  10  ,eur_g04
22:07:08  11  ,eur_g05
22:07:08  12  ,eur_g06
22:07:08  13  ,eur_g07
22:07:08  14  ,eur_g08
22:07:08  15  ,eur_g09
22:07:08  16  ,eur_g10
22:07:08  17  ,eur_g11
22:07:08  18  ,eur_g12
22:07:08  19  ,eur_g13
22:07:08  20  ,eur_g14
22:07:08  21  ,eur_g15
22:07:08  22  ,eur_g16
22:07:08  23  ,eur_g17
22:07:08  24  ,eur_g18
22:07:08  25  ,eur_g19
22:07:08  26  ,eur_g20
22:07:08  27  ,eur_g21
22:07:08  28  ,eur_g22
22:07:08  29  ,eur_g23
22:07:08  30  ,eur_g24
22:07:08  31  ,eur_g25
22:07:08  32  ,eur_g26
22:07:08  33  ,eur_g27
22:07:08  34  ,eur_g28
22:07:08  35  ,eur_g29
22:07:08  36  ,eur_g30
22:07:08  37  ,eur_g31
22:07:08  38  ,eur_g32
22:07:08  39  ,eur_g33
22:07:08  40  ,eur_g34
22:07:08  41  ,eur_g35
22:07:08  42  ,eur_g36
22:07:08  43  ,eur_g37
22:07:08  44  ,eur_g38
22:07:08  45  ,eur_g39
22:07:08  46  ,eur_g40
22:07:08  47  ,eur_g41
22:07:08  48  ,aud_g00
22:07:08  49  ,aud_g01
22:07:08  50  ,aud_g02
22:07:08  51  ,aud_g03
22:07:08  52  ,aud_g04
22:07:08  53  ,aud_g05
22:07:08  54  ,aud_g06
22:07:08  55  ,aud_g07
22:07:08  56  ,aud_g08
22:07:08  57  ,aud_g09
22:07:08  58  ,aud_g10
22:07:08  59  ,aud_g11
22:07:08  60  ,aud_g12
22:07:08  61  ,aud_g13
22:07:08  62  ,aud_g14
22:07:08  63  ,aud_g15
22:07:08  64  ,aud_g16
22:07:08  65  ,aud_g17
22:07:08  66  ,aud_g18
22:07:08  67  ,aud_g19
22:07:08  68  ,aud_g20
22:07:08  69  ,aud_g21
22:07:08  70  ,aud_g22
22:07:08  71  ,aud_g23
22:07:08  72  ,aud_g24
22:07:08  73  ,aud_g25
22:07:08  74  ,aud_g26
22:07:08  75  ,aud_g27
22:07:08  76  ,aud_g28
22:07:08  77  ,aud_g29
22:07:08  78  ,aud_g30
22:07:08  79  ,aud_g31
22:07:08  80  ,aud_g32
22:07:08  81  ,aud_g33
22:07:08  82  ,aud_g34
22:07:08  83  ,aud_g35
22:07:08  84  ,aud_g36
22:07:08  85  ,aud_g37
22:07:08  86  ,aud_g38
22:07:08  87  ,aud_g39
22:07:08  88  ,aud_g40
22:07:08  89  ,aud_g41
22:07:08  90  ,gbp_g00
22:07:08  91  ,gbp_g01
22:07:08  92  ,gbp_g02
22:07:08  93  ,gbp_g03
22:07:08  94  ,gbp_g04
22:07:08  95  ,gbp_g05
22:07:08  96  ,gbp_g06
22:07:08  97  ,gbp_g07
22:07:08  98  ,gbp_g08
22:07:08  99  ,gbp_g09
22:07:08 100  ,gbp_g10
22:07:08 101  ,gbp_g11
22:07:08 102  ,gbp_g12
22:07:08 103  ,gbp_g13
22:07:08 104  ,gbp_g14
22:07:08 105  ,gbp_g15
22:07:08 106  ,gbp_g16
22:07:08 107  ,gbp_g17
22:07:08 108  ,gbp_g18
22:07:08 109  ,gbp_g19
22:07:08 110  ,gbp_g20
22:07:08 111  ,gbp_g21
22:07:08 112  ,gbp_g22
22:07:08 113  ,gbp_g23
22:07:08 114  ,gbp_g24
22:07:08 115  ,gbp_g25
22:07:08 116  ,gbp_g26
22:07:08 117  ,gbp_g27
22:07:08 118  ,gbp_g28
22:07:08 119  ,gbp_g29
22:07:08 120  ,gbp_g30
22:07:08 121  ,gbp_g31
22:07:08 122  ,gbp_g32
22:07:08 123  ,gbp_g33
22:07:08 124  ,gbp_g34
22:07:08 125  ,gbp_g35
22:07:08 126  ,gbp_g36
22:07:08 127  ,gbp_g37
22:07:08 128  ,gbp_g38
22:07:08 129  ,gbp_g39
22:07:08 130  ,gbp_g40
22:07:08 131  ,gbp_g41
22:07:08 132  ,jpy_g00
22:07:08 133  ,jpy_g01
22:07:08 134  ,jpy_g02
22:07:08 135  ,jpy_g03
22:07:08 136  ,jpy_g04
22:07:08 137  ,jpy_g05
22:07:08 138  ,jpy_g06
22:07:08 139  ,jpy_g07
22:07:08 140  ,jpy_g08
22:07:08 141  ,jpy_g09
22:07:08 142  ,jpy_g10
22:07:08 143  ,jpy_g11
22:07:08 144  ,jpy_g12
22:07:08 145  ,jpy_g13
22:07:08 146  ,jpy_g14
22:07:08 147  ,jpy_g15
22:07:08 148  ,jpy_g16
22:07:08 149  ,jpy_g17
22:07:08 150  ,jpy_g18
22:07:08 151  ,jpy_g19
22:07:08 152  ,jpy_g20
22:07:08 153  ,jpy_g21
22:07:08 154  ,jpy_g22
22:07:08 155  ,jpy_g23
22:07:08 156  ,jpy_g24
22:07:08 157  ,jpy_g25
22:07:08 158  ,jpy_g26
22:07:08 159  ,jpy_g27
22:07:08 160  ,jpy_g28
22:07:08 161  ,jpy_g29
22:07:08 162  ,jpy_g30
22:07:08 163  ,jpy_g31
22:07:08 164  ,jpy_g32
22:07:08 165  ,jpy_g33
22:07:08 166  ,jpy_g34
22:07:08 167  ,jpy_g35
22:07:08 168  ,jpy_g36
22:07:08 169  ,jpy_g37
22:07:08 170  ,jpy_g38
22:07:08 171  ,jpy_g39
22:07:08 172  ,jpy_g40
22:07:08 173  ,jpy_g41
22:07:08 174  ,cad_g00
22:07:08 175  ,cad_g01
22:07:08 176  ,cad_g02
22:07:08 177  ,cad_g03
22:07:08 178  ,cad_g04
22:07:08 179  ,cad_g05
22:07:08 180  ,cad_g06
22:07:08 181  ,cad_g07
22:07:08 182  ,cad_g08
22:07:08 183  ,cad_g09
22:07:08 184  ,cad_g10
22:07:08 185  ,cad_g11
22:07:08 186  ,cad_g12
22:07:08 187  ,cad_g13
22:07:08 188  ,cad_g14
22:07:08 189  ,cad_g15
22:07:08 190  ,cad_g16
22:07:08 191  ,cad_g17
22:07:08 192  ,cad_g18
22:07:08 193  ,cad_g19
22:07:08 194  ,cad_g20
22:07:08 195  ,cad_g21
22:07:08 196  ,cad_g22
22:07:08 197  ,cad_g23
22:07:08 198  ,cad_g24
22:07:08 199  ,cad_g25
22:07:08 200  ,cad_g26
22:07:08 201  ,cad_g27
22:07:08 202  ,cad_g28
22:07:08 203  ,cad_g29
22:07:08 204  ,cad_g30
22:07:08 205  ,cad_g31
22:07:08 206  ,cad_g32
22:07:08 207  ,cad_g33
22:07:08 208  ,cad_g34
22:07:08 209  ,cad_g35
22:07:08 210  ,cad_g36
22:07:08 211  ,cad_g37
22:07:08 212  ,cad_g38
22:07:08 213  ,cad_g39
22:07:08 214  ,cad_g40
22:07:08 215  ,cad_g41
22:07:08 216  ,chf_g00
22:07:08 217  ,chf_g01
22:07:08 218  ,chf_g02
22:07:08 219  ,chf_g03
22:07:08 220  ,chf_g04
22:07:08 221  ,chf_g05
22:07:08 222  ,chf_g06
22:07:08 223  ,chf_g07
22:07:08 224  ,chf_g08
22:07:08 225  ,chf_g09
22:07:08 226  ,chf_g10
22:07:08 227  ,chf_g11
22:07:08 228  ,chf_g12
22:07:08 229  ,chf_g13
22:07:08 230  ,chf_g14
22:07:08 231  ,chf_g15
22:07:08 232  ,chf_g16
22:07:08 233  ,chf_g17
22:07:08 234  ,chf_g18
22:07:08 235  ,chf_g19
22:07:08 236  ,chf_g20
22:07:08 237  ,chf_g21
22:07:08 238  ,chf_g22
22:07:08 239  ,chf_g23
22:07:08 240  ,chf_g24
22:07:08 241  ,chf_g25
22:07:08 242  ,chf_g26
22:07:08 243  ,chf_g27
22:07:08 244  ,chf_g28
22:07:08 245  ,chf_g29
22:07:08 246  ,chf_g30
22:07:08 247  ,chf_g31
22:07:08 248  ,chf_g32
22:07:08 249  ,chf_g33
22:07:08 250  ,chf_g34
22:07:08 251  ,chf_g35
22:07:08 252  ,chf_g36
22:07:08 253  ,chf_g37
22:07:08 254  ,chf_g38
22:07:08 255  ,chf_g39
22:07:08 256  ,chf_g40
22:07:08 257  ,chf_g41
22:07:08 258  FROM aud_ms6 m
22:07:08 259  WHERE gatt IN('nup','up')
22:07:08 260  AND 1+m.ydate < '&1'||' '||'&2'
22:07:08 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'21:55:00'

View created.

Elapsed: 00:00:00.11
22:07:08 SQL> 
22:07:08 SQL> -- rpt
22:07:08 SQL> 
22:07:08 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
22:07:08   2  
22:07:08 SQL> SELECT MAX(prdate) FROM bme
22:07:08   2  
22:07:08 SQL> -- Now build model from bme and score sme
22:07:08 SQL> @score1.sql
22:07:08 SQL> -- score1.sql
22:07:08 SQL> 
22:07:08 SQL> -- Does the 1st SVM score
22:07:08 SQL> 
22:07:08 SQL> -- Fill up svmc_apply_prep
22:07:08 SQL> @score.sql
22:07:08 SQL> --
22:07:08 SQL> -- score.sql
22:07:08 SQL> --
22:07:08 SQL> 
22:07:08 SQL> -- usage: score.sql
22:07:08 SQL> 
22:07:08 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:07:08 SQL> 
22:07:08 SQL> DEFINE target	= 'gatt'
22:07:08 SQL> DEFINE model_name = 'forex15'
22:07:08 SQL> DEFINE bldtable	= 'bme'
22:07:08 SQL> DEFINE scoretable = 'sme'
22:07:08 SQL> DEFINE case_id	= 'prdate'
22:07:08 SQL> 
22:07:08 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:07:08 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:07:08 SQL> 
22:07:08 SQL> -- Builds an SVM model using pl/sql.
22:07:08 SQL> 
22:07:08 SQL> -----------------------------------------------------------------------
22:07:08 SQL> --			    BUILD THE MODEL
22:07:08 SQL> -----------------------------------------------------------------------
22:07:08 SQL> 
22:07:08 SQL> -- Cleanup old build data preparation objects for repeat runs
22:07:08 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
22:07:08 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:07:08 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
22:07:08 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
22:07:08 SQL> 
22:07:08 SQL> 
22:07:08 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:07:08 SQL> --
22:07:08 SQL> -- DROP	TABLE svmc_settings ;
22:07:08 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:07:08 SQL> -- DELETE svmc_settings;
22:07:08 SQL> 
22:07:08 SQL> -- The default classification algorithm is Naive Bayes. So override
22:07:08 SQL> -- this choice to SVM using a settings table.
22:07:08 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:07:08 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:07:08 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:07:08 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:07:08 SQL> -- models.
22:07:08 SQL> --
22:07:08 SQL> 
22:07:08 SQL> -- Do this once and then comment it out.
22:07:08 SQL> -- That makes script go faster.
22:07:08 SQL> -- BEGIN
22:07:08 SQL> -- -- Populate settings table
22:07:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:07:08 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:07:08 SQL> --
22:07:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:07:08 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:07:08 SQL> --
22:07:08 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:07:08 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:07:08 SQL> --   COMMIT;
22:07:08 SQL> -- END;
22:07:08 SQL> -- /
22:07:08 SQL> 
22:07:08 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:07:08 SQL> 
22:07:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:07:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
22:07:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:07:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:07:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:07:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:07:08 SQL> 
22:07:08 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:07:08   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:08   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:07:08 SQL> 
22:07:08 SQL> --------------------------------
22:07:08 SQL> -- PREPARE BUILD (TRAINING) DATA
22:07:08 SQL> --
22:07:08 SQL> 
22:07:08 SQL> -- 1. Missing Value treatment for all Predictors and
22:07:08 SQL> -- 2. Outlier Treatment and
22:07:08 SQL> -- 3. Normalization are performed below.
22:07:08 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:07:08 SQL> --    normalized here.
22:07:08 SQL> 
22:07:08 SQL> BEGIN
22:07:08   2  	-- Perform missing value treatment for all predictors
22:07:08   3  	-- create miss tables
22:07:08   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:07:08   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:07:08   6  
22:07:08   7  	-- populate miss tables
22:07:08   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:07:08   9  	  miss_table_name => 'svmc_miss_num',
22:07:08  10  	  data_table_name => '&bldtable',
22:07:08  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:07:08  12  
22:07:08  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:07:08  14  	  miss_table_name => 'svmc_miss_cat',
22:07:08  15  	  data_table_name => '&bldtable',
22:07:08  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:07:08  17  
22:07:08  18  	-- xform input data to replace missing values
22:07:08  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:07:08  20  	  miss_table_name => 'svmc_miss_num',
22:07:08  21  	  data_table_name => '&bldtable',
22:07:08  22  	  xform_view_name => 'xformed_build_miss_num');
22:07:08  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:07:08  24  	  miss_table_name => 'svmc_miss_cat',
22:07:08  25  	  data_table_name => '&bldtable',
22:07:08  26  	  xform_view_name => 'xformed_build_miss_cat');
22:07:08  27  
22:07:08  28  	-- Perform outlier treatment.
22:07:08  29  	-- create clip table
22:07:08  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:07:08  31  
22:07:08  32  	-- populate clip table
22:07:08  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:07:08  34  	  clip_table_name => 'svmc_clip',
22:07:08  35  	  data_table_name => '&bldtable',
22:07:08  36  	  tail_frac	  => 0.025,
22:07:08  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:07:08  38  
22:07:08  39  	-- xform input data to winsorized data
22:07:08  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:07:08  41  	  clip_table_name => 'svmc_clip',
22:07:08  42  	  data_table_name => '&bldtable',
22:07:08  43  	  xform_view_name => 'svmc_winsor');
22:07:08  44  
22:07:08  45  	-- create normalization table
22:07:08  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:07:08  47  
22:07:08  48  	-- populate normalization table based on winsorized data
22:07:08  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:07:08  50  	  norm_table_name => 'svmc_norm',
22:07:08  51  	  data_table_name => 'svmc_winsor',
22:07:08  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:07:08  53  
22:07:08  54  	-- normalize the original data
22:07:08  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:07:08  56  	  norm_table_name => 'svmc_norm',
22:07:08  57  	  data_table_name => '&bldtable',
22:07:08  58  	  xform_view_name => 'svmc_build_prep');
22:07:08  59  END;
22:07:08  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.21
22:07:27 SQL> 
22:07:27 SQL> ---------------------
22:07:27 SQL> -- CREATE A NEW MODEL
22:07:27 SQL> --
22:07:27 SQL> -- Cleanup old model with the same name for repeat runs
22:07:27 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:07:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:27   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.03
22:07:28 SQL> 
22:07:28 SQL> -- Build a new SVM Model
22:07:28 SQL> BEGIN
22:07:28   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:07:28   3  	  model_name	      => '&model_name',
22:07:28   4  	  mining_function     => dbms_data_mining.classification,
22:07:28   5  	  data_table_name     => 'svmc_build_prep',
22:07:28   6  	  case_id_column_name => '&case_id',
22:07:28   7  	  target_column_name  => '&target',
22:07:28   8  	  settings_table_name => 'svmc_settings');
22:07:28   9  END;
22:07:28  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.90
22:07:54 SQL> 
22:07:54 SQL> -----------------------------------------------------------------------
22:07:54 SQL> --			       APPLY/score THE MODEL
22:07:54 SQL> -----------------------------------------------------------------------
22:07:54 SQL> 
22:07:54 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:07:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:07:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:07:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:07:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:07:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:07:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:07:55 SQL> -----------------------
22:07:55 SQL> -- PREPARE SCORING DATA
22:07:55 SQL> --
22:07:55 SQL> -- If the data for model creation has been prepared, then the data
22:07:55 SQL> -- to be scored using the model must be prepared in the same manner
22:07:55 SQL> -- in order to obtain meaningful results.
22:07:55 SQL> --
22:07:55 SQL> -- 1. Missing Value treatment for all Predictors and
22:07:55 SQL> -- 2. Normalization
22:07:55 SQL> -- No outlier treatment will be performed during test and apply. The
22:07:55 SQL> -- normalization step is sufficient, since the normalization parameters
22:07:55 SQL> -- already capture the effects of outlier treatment done with build data.
22:07:55 SQL> --
22:07:55 SQL> BEGIN
22:07:55   2  	-- Xform Test data to replace missing values
22:07:55   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:07:55   4  	  miss_table_name => 'svmc_miss_num',
22:07:55   5  	  data_table_name => '&scoretable',
22:07:55   6  	  xform_view_name => 'xformed_apply_miss_num');
22:07:55   7  
22:07:55   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:07:55   9  	  miss_table_name => 'svmc_miss_cat',
22:07:55  10  	  data_table_name => '&scoretable',
22:07:55  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:07:55  12  
22:07:55  13  	-- Normalize the data to be scored
22:07:55  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:07:55  15  	  norm_table_name => 'svmc_norm',
22:07:55  16  	  data_table_name => '&scoretable',
22:07:55  17  	  xform_view_name => 'svmc_apply_prep');
22:07:55  18  END;
22:07:55  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.16
22:07:56 SQL> 
22:07:56 SQL> -- Use same model_name used in score.sql
22:07:56 SQL> DEFINE model_name = 'forex15'
22:07:56 SQL> 
22:07:56 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
22:07:56 SQL> 
22:07:56 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:07:56 SQL> 
22:07:56 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
22:07:56   2  SELECT
22:07:56   3  prdate
22:07:56   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:07:56   5  ,sysdate
22:07:56   6  ,SUBSTR(prdate,1,3)pair
22:07:56   7  ,SUBSTR(prdate,4,19)ydate
22:07:56   8  FROM svmc_apply_prep
22:07:56   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:07:56 SQL> @aud_score1day_gattn.sql	2011-01-06 21:40:00
22:07:56 SQL> --
22:07:56 SQL> -- aud_score1day_gattn.sql
22:07:56 SQL> --
22:07:56 SQL> 
22:07:56 SQL> CREATE OR REPLACE VIEW sme AS
22:07:56   2  SELECT
22:07:56   3  'aud'||m.ydate prdate
22:07:56   4  ,NULL gattn
22:07:56   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:07:56   6  ,eur_g00
22:07:56   7  ,eur_g01
22:07:56   8  ,eur_g02
22:07:56   9  ,eur_g03
22:07:56  10  ,eur_g04
22:07:56  11  ,eur_g05
22:07:56  12  ,eur_g06
22:07:56  13  ,eur_g07
22:07:56  14  ,eur_g08
22:07:56  15  ,eur_g09
22:07:56  16  ,eur_g10
22:07:56  17  ,eur_g11
22:07:56  18  ,eur_g12
22:07:56  19  ,eur_g13
22:07:56  20  ,eur_g14
22:07:56  21  ,eur_g15
22:07:56  22  ,eur_g16
22:07:56  23  ,eur_g17
22:07:56  24  ,eur_g18
22:07:56  25  ,eur_g19
22:07:56  26  ,eur_g20
22:07:56  27  ,eur_g21
22:07:56  28  ,eur_g22
22:07:56  29  ,eur_g23
22:07:56  30  ,eur_g24
22:07:56  31  ,eur_g25
22:07:56  32  ,eur_g26
22:07:56  33  ,eur_g27
22:07:56  34  ,eur_g28
22:07:56  35  ,eur_g29
22:07:56  36  ,eur_g30
22:07:56  37  ,eur_g31
22:07:56  38  ,eur_g32
22:07:56  39  ,eur_g33
22:07:56  40  ,eur_g34
22:07:56  41  ,eur_g35
22:07:56  42  ,eur_g36
22:07:56  43  ,eur_g37
22:07:56  44  ,eur_g38
22:07:56  45  ,eur_g39
22:07:56  46  ,eur_g40
22:07:56  47  ,eur_g41
22:07:56  48  ,aud_g00
22:07:56  49  ,aud_g01
22:07:56  50  ,aud_g02
22:07:56  51  ,aud_g03
22:07:56  52  ,aud_g04
22:07:56  53  ,aud_g05
22:07:56  54  ,aud_g06
22:07:56  55  ,aud_g07
22:07:56  56  ,aud_g08
22:07:56  57  ,aud_g09
22:07:56  58  ,aud_g10
22:07:56  59  ,aud_g11
22:07:56  60  ,aud_g12
22:07:56  61  ,aud_g13
22:07:56  62  ,aud_g14
22:07:56  63  ,aud_g15
22:07:56  64  ,aud_g16
22:07:56  65  ,aud_g17
22:07:56  66  ,aud_g18
22:07:56  67  ,aud_g19
22:07:56  68  ,aud_g20
22:07:56  69  ,aud_g21
22:07:56  70  ,aud_g22
22:07:56  71  ,aud_g23
22:07:56  72  ,aud_g24
22:07:56  73  ,aud_g25
22:07:56  74  ,aud_g26
22:07:56  75  ,aud_g27
22:07:56  76  ,aud_g28
22:07:56  77  ,aud_g29
22:07:56  78  ,aud_g30
22:07:56  79  ,aud_g31
22:07:56  80  ,aud_g32
22:07:56  81  ,aud_g33
22:07:56  82  ,aud_g34
22:07:56  83  ,aud_g35
22:07:56  84  ,aud_g36
22:07:56  85  ,aud_g37
22:07:56  86  ,aud_g38
22:07:56  87  ,aud_g39
22:07:56  88  ,aud_g40
22:07:56  89  ,aud_g41
22:07:56  90  ,gbp_g00
22:07:56  91  ,gbp_g01
22:07:56  92  ,gbp_g02
22:07:56  93  ,gbp_g03
22:07:56  94  ,gbp_g04
22:07:56  95  ,gbp_g05
22:07:56  96  ,gbp_g06
22:07:56  97  ,gbp_g07
22:07:56  98  ,gbp_g08
22:07:56  99  ,gbp_g09
22:07:56 100  ,gbp_g10
22:07:56 101  ,gbp_g11
22:07:56 102  ,gbp_g12
22:07:56 103  ,gbp_g13
22:07:56 104  ,gbp_g14
22:07:56 105  ,gbp_g15
22:07:56 106  ,gbp_g16
22:07:56 107  ,gbp_g17
22:07:56 108  ,gbp_g18
22:07:56 109  ,gbp_g19
22:07:56 110  ,gbp_g20
22:07:56 111  ,gbp_g21
22:07:56 112  ,gbp_g22
22:07:56 113  ,gbp_g23
22:07:56 114  ,gbp_g24
22:07:56 115  ,gbp_g25
22:07:56 116  ,gbp_g26
22:07:56 117  ,gbp_g27
22:07:56 118  ,gbp_g28
22:07:56 119  ,gbp_g29
22:07:56 120  ,gbp_g30
22:07:56 121  ,gbp_g31
22:07:56 122  ,gbp_g32
22:07:56 123  ,gbp_g33
22:07:56 124  ,gbp_g34
22:07:56 125  ,gbp_g35
22:07:56 126  ,gbp_g36
22:07:56 127  ,gbp_g37
22:07:56 128  ,gbp_g38
22:07:56 129  ,gbp_g39
22:07:56 130  ,gbp_g40
22:07:56 131  ,gbp_g41
22:07:56 132  ,jpy_g00
22:07:56 133  ,jpy_g01
22:07:56 134  ,jpy_g02
22:07:56 135  ,jpy_g03
22:07:56 136  ,jpy_g04
22:07:56 137  ,jpy_g05
22:07:56 138  ,jpy_g06
22:07:56 139  ,jpy_g07
22:07:56 140  ,jpy_g08
22:07:56 141  ,jpy_g09
22:07:56 142  ,jpy_g10
22:07:56 143  ,jpy_g11
22:07:56 144  ,jpy_g12
22:07:56 145  ,jpy_g13
22:07:56 146  ,jpy_g14
22:07:56 147  ,jpy_g15
22:07:56 148  ,jpy_g16
22:07:56 149  ,jpy_g17
22:07:56 150  ,jpy_g18
22:07:56 151  ,jpy_g19
22:07:56 152  ,jpy_g20
22:07:56 153  ,jpy_g21
22:07:56 154  ,jpy_g22
22:07:56 155  ,jpy_g23
22:07:56 156  ,jpy_g24
22:07:56 157  ,jpy_g25
22:07:56 158  ,jpy_g26
22:07:56 159  ,jpy_g27
22:07:56 160  ,jpy_g28
22:07:56 161  ,jpy_g29
22:07:56 162  ,jpy_g30
22:07:56 163  ,jpy_g31
22:07:56 164  ,jpy_g32
22:07:56 165  ,jpy_g33
22:07:56 166  ,jpy_g34
22:07:56 167  ,jpy_g35
22:07:56 168  ,jpy_g36
22:07:56 169  ,jpy_g37
22:07:56 170  ,jpy_g38
22:07:56 171  ,jpy_g39
22:07:56 172  ,jpy_g40
22:07:56 173  ,jpy_g41
22:07:56 174  ,cad_g00
22:07:56 175  ,cad_g01
22:07:56 176  ,cad_g02
22:07:56 177  ,cad_g03
22:07:56 178  ,cad_g04
22:07:56 179  ,cad_g05
22:07:56 180  ,cad_g06
22:07:56 181  ,cad_g07
22:07:56 182  ,cad_g08
22:07:56 183  ,cad_g09
22:07:56 184  ,cad_g10
22:07:56 185  ,cad_g11
22:07:56 186  ,cad_g12
22:07:56 187  ,cad_g13
22:07:56 188  ,cad_g14
22:07:56 189  ,cad_g15
22:07:56 190  ,cad_g16
22:07:56 191  ,cad_g17
22:07:56 192  ,cad_g18
22:07:56 193  ,cad_g19
22:07:56 194  ,cad_g20
22:07:56 195  ,cad_g21
22:07:56 196  ,cad_g22
22:07:56 197  ,cad_g23
22:07:56 198  ,cad_g24
22:07:56 199  ,cad_g25
22:07:56 200  ,cad_g26
22:07:56 201  ,cad_g27
22:07:56 202  ,cad_g28
22:07:56 203  ,cad_g29
22:07:56 204  ,cad_g30
22:07:56 205  ,cad_g31
22:07:56 206  ,cad_g32
22:07:56 207  ,cad_g33
22:07:56 208  ,cad_g34
22:07:56 209  ,cad_g35
22:07:56 210  ,cad_g36
22:07:56 211  ,cad_g37
22:07:56 212  ,cad_g38
22:07:56 213  ,cad_g39
22:07:56 214  ,cad_g40
22:07:56 215  ,cad_g41
22:07:56 216  ,chf_g00
22:07:56 217  ,chf_g01
22:07:56 218  ,chf_g02
22:07:56 219  ,chf_g03
22:07:56 220  ,chf_g04
22:07:56 221  ,chf_g05
22:07:56 222  ,chf_g06
22:07:56 223  ,chf_g07
22:07:56 224  ,chf_g08
22:07:56 225  ,chf_g09
22:07:56 226  ,chf_g10
22:07:56 227  ,chf_g11
22:07:56 228  ,chf_g12
22:07:56 229  ,chf_g13
22:07:56 230  ,chf_g14
22:07:56 231  ,chf_g15
22:07:56 232  ,chf_g16
22:07:56 233  ,chf_g17
22:07:56 234  ,chf_g18
22:07:56 235  ,chf_g19
22:07:56 236  ,chf_g20
22:07:56 237  ,chf_g21
22:07:56 238  ,chf_g22
22:07:56 239  ,chf_g23
22:07:56 240  ,chf_g24
22:07:56 241  ,chf_g25
22:07:56 242  ,chf_g26
22:07:56 243  ,chf_g27
22:07:56 244  ,chf_g28
22:07:56 245  ,chf_g29
22:07:56 246  ,chf_g30
22:07:56 247  ,chf_g31
22:07:56 248  ,chf_g32
22:07:56 249  ,chf_g33
22:07:56 250  ,chf_g34
22:07:56 251  ,chf_g35
22:07:56 252  ,chf_g36
22:07:56 253  ,chf_g37
22:07:56 254  ,chf_g38
22:07:56 255  ,chf_g39
22:07:56 256  ,chf_g40
22:07:56 257  ,chf_g41
22:07:56 258  FROM aud_ms6 m
22:07:56 259  WHERE m.ydate = '&1'||' '||'&2'
22:07:56 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'21:40:00'

View created.

Elapsed: 00:00:00.15
22:07:56 SQL> 
22:07:56 SQL> -- rpt
22:07:56 SQL> -- We should see just 1 row:
22:07:56 SQL> 
22:07:56 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
22:07:56 SQL> 
22:07:56 SQL> -- Build the model:
22:07:56 SQL> CREATE OR REPLACE VIEW bme AS
22:07:56   2  SELECT
22:07:56   3  'aud'||m.ydate prdate
22:07:56   4  ,gattn
22:07:56   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:07:56   6  ,eur_g00
22:07:56   7  ,eur_g01
22:07:56   8  ,eur_g02
22:07:56   9  ,eur_g03
22:07:56  10  ,eur_g04
22:07:56  11  ,eur_g05
22:07:56  12  ,eur_g06
22:07:56  13  ,eur_g07
22:07:56  14  ,eur_g08
22:07:56  15  ,eur_g09
22:07:56  16  ,eur_g10
22:07:56  17  ,eur_g11
22:07:56  18  ,eur_g12
22:07:56  19  ,eur_g13
22:07:56  20  ,eur_g14
22:07:56  21  ,eur_g15
22:07:56  22  ,eur_g16
22:07:56  23  ,eur_g17
22:07:56  24  ,eur_g18
22:07:56  25  ,eur_g19
22:07:56  26  ,eur_g20
22:07:56  27  ,eur_g21
22:07:56  28  ,eur_g22
22:07:56  29  ,eur_g23
22:07:56  30  ,eur_g24
22:07:56  31  ,eur_g25
22:07:56  32  ,eur_g26
22:07:56  33  ,eur_g27
22:07:56  34  ,eur_g28
22:07:56  35  ,eur_g29
22:07:56  36  ,eur_g30
22:07:56  37  ,eur_g31
22:07:56  38  ,eur_g32
22:07:56  39  ,eur_g33
22:07:56  40  ,eur_g34
22:07:56  41  ,eur_g35
22:07:56  42  ,eur_g36
22:07:56  43  ,eur_g37
22:07:56  44  ,eur_g38
22:07:56  45  ,eur_g39
22:07:56  46  ,eur_g40
22:07:56  47  ,eur_g41
22:07:56  48  ,aud_g00
22:07:56  49  ,aud_g01
22:07:56  50  ,aud_g02
22:07:56  51  ,aud_g03
22:07:56  52  ,aud_g04
22:07:56  53  ,aud_g05
22:07:56  54  ,aud_g06
22:07:56  55  ,aud_g07
22:07:56  56  ,aud_g08
22:07:56  57  ,aud_g09
22:07:56  58  ,aud_g10
22:07:56  59  ,aud_g11
22:07:56  60  ,aud_g12
22:07:56  61  ,aud_g13
22:07:56  62  ,aud_g14
22:07:56  63  ,aud_g15
22:07:56  64  ,aud_g16
22:07:56  65  ,aud_g17
22:07:56  66  ,aud_g18
22:07:56  67  ,aud_g19
22:07:56  68  ,aud_g20
22:07:56  69  ,aud_g21
22:07:56  70  ,aud_g22
22:07:56  71  ,aud_g23
22:07:56  72  ,aud_g24
22:07:56  73  ,aud_g25
22:07:56  74  ,aud_g26
22:07:56  75  ,aud_g27
22:07:56  76  ,aud_g28
22:07:56  77  ,aud_g29
22:07:56  78  ,aud_g30
22:07:56  79  ,aud_g31
22:07:56  80  ,aud_g32
22:07:56  81  ,aud_g33
22:07:56  82  ,aud_g34
22:07:56  83  ,aud_g35
22:07:56  84  ,aud_g36
22:07:56  85  ,aud_g37
22:07:56  86  ,aud_g38
22:07:56  87  ,aud_g39
22:07:56  88  ,aud_g40
22:07:56  89  ,aud_g41
22:07:56  90  ,gbp_g00
22:07:56  91  ,gbp_g01
22:07:56  92  ,gbp_g02
22:07:56  93  ,gbp_g03
22:07:56  94  ,gbp_g04
22:07:56  95  ,gbp_g05
22:07:56  96  ,gbp_g06
22:07:56  97  ,gbp_g07
22:07:56  98  ,gbp_g08
22:07:56  99  ,gbp_g09
22:07:56 100  ,gbp_g10
22:07:56 101  ,gbp_g11
22:07:56 102  ,gbp_g12
22:07:56 103  ,gbp_g13
22:07:56 104  ,gbp_g14
22:07:56 105  ,gbp_g15
22:07:56 106  ,gbp_g16
22:07:56 107  ,gbp_g17
22:07:56 108  ,gbp_g18
22:07:56 109  ,gbp_g19
22:07:56 110  ,gbp_g20
22:07:56 111  ,gbp_g21
22:07:56 112  ,gbp_g22
22:07:56 113  ,gbp_g23
22:07:56 114  ,gbp_g24
22:07:56 115  ,gbp_g25
22:07:56 116  ,gbp_g26
22:07:56 117  ,gbp_g27
22:07:56 118  ,gbp_g28
22:07:56 119  ,gbp_g29
22:07:56 120  ,gbp_g30
22:07:56 121  ,gbp_g31
22:07:56 122  ,gbp_g32
22:07:56 123  ,gbp_g33
22:07:56 124  ,gbp_g34
22:07:56 125  ,gbp_g35
22:07:56 126  ,gbp_g36
22:07:56 127  ,gbp_g37
22:07:56 128  ,gbp_g38
22:07:56 129  ,gbp_g39
22:07:56 130  ,gbp_g40
22:07:56 131  ,gbp_g41
22:07:56 132  ,jpy_g00
22:07:56 133  ,jpy_g01
22:07:56 134  ,jpy_g02
22:07:56 135  ,jpy_g03
22:07:56 136  ,jpy_g04
22:07:56 137  ,jpy_g05
22:07:56 138  ,jpy_g06
22:07:56 139  ,jpy_g07
22:07:56 140  ,jpy_g08
22:07:56 141  ,jpy_g09
22:07:56 142  ,jpy_g10
22:07:56 143  ,jpy_g11
22:07:56 144  ,jpy_g12
22:07:56 145  ,jpy_g13
22:07:56 146  ,jpy_g14
22:07:56 147  ,jpy_g15
22:07:56 148  ,jpy_g16
22:07:56 149  ,jpy_g17
22:07:56 150  ,jpy_g18
22:07:56 151  ,jpy_g19
22:07:56 152  ,jpy_g20
22:07:56 153  ,jpy_g21
22:07:56 154  ,jpy_g22
22:07:56 155  ,jpy_g23
22:07:56 156  ,jpy_g24
22:07:56 157  ,jpy_g25
22:07:56 158  ,jpy_g26
22:07:56 159  ,jpy_g27
22:07:56 160  ,jpy_g28
22:07:56 161  ,jpy_g29
22:07:56 162  ,jpy_g30
22:07:56 163  ,jpy_g31
22:07:56 164  ,jpy_g32
22:07:56 165  ,jpy_g33
22:07:56 166  ,jpy_g34
22:07:56 167  ,jpy_g35
22:07:56 168  ,jpy_g36
22:07:56 169  ,jpy_g37
22:07:56 170  ,jpy_g38
22:07:56 171  ,jpy_g39
22:07:56 172  ,jpy_g40
22:07:56 173  ,jpy_g41
22:07:56 174  ,cad_g00
22:07:56 175  ,cad_g01
22:07:56 176  ,cad_g02
22:07:56 177  ,cad_g03
22:07:56 178  ,cad_g04
22:07:56 179  ,cad_g05
22:07:56 180  ,cad_g06
22:07:56 181  ,cad_g07
22:07:56 182  ,cad_g08
22:07:56 183  ,cad_g09
22:07:56 184  ,cad_g10
22:07:56 185  ,cad_g11
22:07:56 186  ,cad_g12
22:07:56 187  ,cad_g13
22:07:56 188  ,cad_g14
22:07:56 189  ,cad_g15
22:07:56 190  ,cad_g16
22:07:56 191  ,cad_g17
22:07:56 192  ,cad_g18
22:07:56 193  ,cad_g19
22:07:56 194  ,cad_g20
22:07:56 195  ,cad_g21
22:07:56 196  ,cad_g22
22:07:56 197  ,cad_g23
22:07:56 198  ,cad_g24
22:07:56 199  ,cad_g25
22:07:56 200  ,cad_g26
22:07:56 201  ,cad_g27
22:07:56 202  ,cad_g28
22:07:56 203  ,cad_g29
22:07:56 204  ,cad_g30
22:07:56 205  ,cad_g31
22:07:56 206  ,cad_g32
22:07:56 207  ,cad_g33
22:07:56 208  ,cad_g34
22:07:56 209  ,cad_g35
22:07:56 210  ,cad_g36
22:07:56 211  ,cad_g37
22:07:56 212  ,cad_g38
22:07:56 213  ,cad_g39
22:07:56 214  ,cad_g40
22:07:56 215  ,cad_g41
22:07:56 216  ,chf_g00
22:07:56 217  ,chf_g01
22:07:56 218  ,chf_g02
22:07:56 219  ,chf_g03
22:07:56 220  ,chf_g04
22:07:56 221  ,chf_g05
22:07:56 222  ,chf_g06
22:07:56 223  ,chf_g07
22:07:56 224  ,chf_g08
22:07:56 225  ,chf_g09
22:07:56 226  ,chf_g10
22:07:56 227  ,chf_g11
22:07:56 228  ,chf_g12
22:07:56 229  ,chf_g13
22:07:56 230  ,chf_g14
22:07:56 231  ,chf_g15
22:07:56 232  ,chf_g16
22:07:56 233  ,chf_g17
22:07:56 234  ,chf_g18
22:07:56 235  ,chf_g19
22:07:56 236  ,chf_g20
22:07:56 237  ,chf_g21
22:07:56 238  ,chf_g22
22:07:56 239  ,chf_g23
22:07:56 240  ,chf_g24
22:07:56 241  ,chf_g25
22:07:56 242  ,chf_g26
22:07:56 243  ,chf_g27
22:07:56 244  ,chf_g28
22:07:56 245  ,chf_g29
22:07:56 246  ,chf_g30
22:07:56 247  ,chf_g31
22:07:56 248  ,chf_g32
22:07:56 249  ,chf_g33
22:07:56 250  ,chf_g34
22:07:56 251  ,chf_g35
22:07:56 252  ,chf_g36
22:07:56 253  ,chf_g37
22:07:56 254  ,chf_g38
22:07:56 255  ,chf_g39
22:07:56 256  ,chf_g40
22:07:56 257  ,chf_g41
22:07:56 258  FROM aud_ms6 m
22:07:56 259  WHERE gattn IN('nup','up')
22:07:56 260  AND 1+m.ydate < '&1'||' '||'&2'
22:07:56 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'21:40:00'

View created.

Elapsed: 00:00:00.13
22:07:56 SQL> 
22:07:56 SQL> -- rpt
22:07:56 SQL> 
22:07:56 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12870
up	     6642

Elapsed: 00:00:00.05
22:07:56 SQL> 
22:07:56 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 21:35:00

Elapsed: 00:00:00.04
22:07:56 SQL> 
22:07:56 SQL> -- Now build model from bme and score sme
22:07:56 SQL> @score1gattn.sql
22:07:56 SQL> -- score1gattn.sql
22:07:56 SQL> 
22:07:56 SQL> -- Does the 1st SVM score
22:07:56 SQL> 
22:07:56 SQL> -- Fill up svmc_apply_prep
22:07:56 SQL> @score_gattn.sql
22:07:56 SQL> --
22:07:56 SQL> -- score_gattn.sql
22:07:56 SQL> --
22:07:56 SQL> 
22:07:56 SQL> -- usage: score_gattn.sql
22:07:56 SQL> 
22:07:56 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:07:56 SQL> 
22:07:56 SQL> DEFINE target	= 'gattn'
22:07:56 SQL> DEFINE model_name = 'forex15'
22:07:56 SQL> DEFINE bldtable	= 'bme'
22:07:56 SQL> DEFINE scoretable = 'sme'
22:07:56 SQL> DEFINE case_id	= 'prdate'
22:07:56 SQL> 
22:07:56 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:07:56 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:07:56 SQL> 
22:07:56 SQL> -- Builds an SVM model using pl/sql.
22:07:56 SQL> 
22:07:56 SQL> -----------------------------------------------------------------------
22:07:56 SQL> --			    BUILD THE MODEL
22:07:56 SQL> -----------------------------------------------------------------------
22:07:56 SQL> 
22:07:56 SQL> -- Cleanup old build data preparation objects for repeat runs
22:07:56 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:07:56 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:07:56 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
22:07:56 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
22:07:56 SQL> 
22:07:56 SQL> 
22:07:56 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:07:56 SQL> --
22:07:56 SQL> -- DROP	TABLE svmc_settings ;
22:07:56 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:07:56 SQL> -- DELETE svmc_settings;
22:07:56 SQL> 
22:07:56 SQL> -- The default classification algorithm is Naive Bayes. So override
22:07:56 SQL> -- this choice to SVM using a settings table.
22:07:56 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:07:56 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:07:56 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:07:56 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:07:56 SQL> -- models.
22:07:56 SQL> --
22:07:56 SQL> 
22:07:56 SQL> -- Do this once and then comment it out.
22:07:56 SQL> -- That makes script go faster.
22:07:56 SQL> -- BEGIN
22:07:56 SQL> -- -- Populate settings table
22:07:56 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:07:56 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:07:56 SQL> --
22:07:56 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:07:56 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:07:56 SQL> --
22:07:56 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:07:56 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:07:56 SQL> --   COMMIT;
22:07:56 SQL> -- END;
22:07:56 SQL> -- /
22:07:56 SQL> 
22:07:56 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:07:56 SQL> 
22:07:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:07:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:07:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:07:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:07:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:07:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:07:57 SQL> 
22:07:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:07:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:07:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
22:07:57 SQL> 
22:07:57 SQL> --------------------------------
22:07:57 SQL> -- PREPARE BUILD (TRAINING) DATA
22:07:57 SQL> --
22:07:57 SQL> 
22:07:57 SQL> -- 1. Missing Value treatment for all Predictors and
22:07:57 SQL> -- 2. Outlier Treatment and
22:07:57 SQL> -- 3. Normalization are performed below.
22:07:57 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:07:57 SQL> --    normalized here.
22:07:57 SQL> 
22:07:57 SQL> BEGIN
22:07:57   2  	-- Perform missing value treatment for all predictors
22:07:57   3  	-- create miss tables
22:07:57   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:07:57   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:07:57   6  
22:07:57   7  	-- populate miss tables
22:07:57   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:07:57   9  	  miss_table_name => 'svmc_miss_num',
22:07:57  10  	  data_table_name => '&bldtable',
22:07:57  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:07:57  12  
22:07:57  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:07:57  14  	  miss_table_name => 'svmc_miss_cat',
22:07:57  15  	  data_table_name => '&bldtable',
22:07:57  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:07:57  17  
22:07:57  18  	-- xform input data to replace missing values
22:07:57  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:07:57  20  	  miss_table_name => 'svmc_miss_num',
22:07:57  21  	  data_table_name => '&bldtable',
22:07:57  22  	  xform_view_name => 'xformed_build_miss_num');
22:07:57  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:07:57  24  	  miss_table_name => 'svmc_miss_cat',
22:07:57  25  	  data_table_name => '&bldtable',
22:07:57  26  	  xform_view_name => 'xformed_build_miss_cat');
22:07:57  27  
22:07:57  28  	-- Perform outlier treatment.
22:07:57  29  	-- create clip table
22:07:57  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:07:57  31  
22:07:57  32  	-- populate clip table
22:07:57  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:07:57  34  	  clip_table_name => 'svmc_clip',
22:07:57  35  	  data_table_name => '&bldtable',
22:07:57  36  	  tail_frac	  => 0.025,
22:07:57  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:07:57  38  
22:07:57  39  	-- xform input data to winsorized data
22:07:57  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:07:57  41  	  clip_table_name => 'svmc_clip',
22:07:57  42  	  data_table_name => '&bldtable',
22:07:57  43  	  xform_view_name => 'svmc_winsor');
22:07:57  44  
22:07:57  45  	-- create normalization table
22:07:57  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:07:57  47  
22:07:57  48  	-- populate normalization table based on winsorized data
22:07:57  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:07:57  50  	  norm_table_name => 'svmc_norm',
22:07:57  51  	  data_table_name => 'svmc_winsor',
22:07:57  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:07:57  53  
22:07:57  54  	-- normalize the original data
22:07:57  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:07:57  56  	  norm_table_name => 'svmc_norm',
22:07:57  57  	  data_table_name => '&bldtable',
22:07:57  58  	  xform_view_name => 'svmc_build_prep');
22:07:57  59  END;
22:07:57  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.88
22:08:16 SQL> 
22:08:16 SQL> ---------------------
22:08:16 SQL> -- CREATE A NEW MODEL
22:08:16 SQL> --
22:08:16 SQL> -- Cleanup old model with the same name for repeat runs
22:08:16 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:08:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:08:16   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.07
22:08:17 SQL> 
22:08:17 SQL> -- Build a new SVM Model
22:08:17 SQL> BEGIN
22:08:17   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:08:17   3  	  model_name	      => '&model_name',
22:08:17   4  	  mining_function     => dbms_data_mining.classification,
22:08:17   5  	  data_table_name     => 'svmc_build_prep',
22:08:17   6  	  case_id_column_name => '&case_id',
22:08:17   7  	  target_column_name  => '&target',
22:08:17   8  	  settings_table_name => 'svmc_settings');
22:08:17   9  END;
22:08:17  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.87
22:08:46 SQL> 
22:08:46 SQL> -----------------------------------------------------------------------
22:08:46 SQL> --			       APPLY/score THE MODEL
22:08:46 SQL> -----------------------------------------------------------------------
22:08:46 SQL> 
22:08:46 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:08:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:08:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:08:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:08:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:08:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:08:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:08:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:08:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:08:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:08:46 SQL> -----------------------
22:08:46 SQL> -- PREPARE SCORING DATA
22:08:46 SQL> --
22:08:46 SQL> -- If the data for model creation has been prepared, then the data
22:08:46 SQL> -- to be scored using the model must be prepared in the same manner
22:08:46 SQL> -- in order to obtain meaningful results.
22:08:46 SQL> --
22:08:46 SQL> -- 1. Missing Value treatment for all Predictors and
22:08:46 SQL> -- 2. Normalization
22:08:46 SQL> -- No outlier treatment will be performed during test and apply. The
22:08:46 SQL> -- normalization step is sufficient, since the normalization parameters
22:08:46 SQL> -- already capture the effects of outlier treatment done with build data.
22:08:46 SQL> --
22:08:46 SQL> BEGIN
22:08:46   2  	-- Xform Test data to replace missing values
22:08:46   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:08:46   4  	  miss_table_name => 'svmc_miss_num',
22:08:46   5  	  data_table_name => '&scoretable',
22:08:46   6  	  xform_view_name => 'xformed_apply_miss_num');
22:08:46   7  
22:08:46   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:08:46   9  	  miss_table_name => 'svmc_miss_cat',
22:08:46  10  	  data_table_name => '&scoretable',
22:08:46  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:08:46  12  
22:08:46  13  	-- Normalize the data to be scored
22:08:46  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:08:46  15  	  norm_table_name => 'svmc_norm',
22:08:46  16  	  data_table_name => '&scoretable',
22:08:46  17  	  xform_view_name => 'svmc_apply_prep');
22:08:46  18  END;
22:08:46  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.34
22:08:47 SQL> 
22:08:47 SQL> -- Use same model_name used in score_gattn.sql
22:08:47 SQL> DEFINE model_name = 'forex15'
22:08:47 SQL> 
22:08:47 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
22:08:47 SQL> 
22:08:47 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
22:08:47   2  SELECT
22:08:47   3  prdate
22:08:47   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:08:47   5  ,sysdate
22:08:47   6  ,SUBSTR(prdate,1,3)pair
22:08:47   7  ,SUBSTR(prdate,4,19)ydate
22:08:47   8  FROM svmc_apply_prep
22:08:47   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:08:47 SQL> @aud_score1day_gattn.sql	2011-01-06 21:45:00
22:08:47 SQL> --
22:08:47 SQL> -- aud_score1day_gattn.sql
22:08:47 SQL> --
22:08:47 SQL> 
22:08:47 SQL> CREATE OR REPLACE VIEW sme AS
22:08:47   2  SELECT
22:08:47   3  'aud'||m.ydate prdate
22:08:47   4  ,NULL gattn
22:08:47   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:08:47   6  ,eur_g00
22:08:47   7  ,eur_g01
22:08:47   8  ,eur_g02
22:08:47   9  ,eur_g03
22:08:47  10  ,eur_g04
22:08:47  11  ,eur_g05
22:08:47  12  ,eur_g06
22:08:47  13  ,eur_g07
22:08:47  14  ,eur_g08
22:08:47  15  ,eur_g09
22:08:47  16  ,eur_g10
22:08:47  17  ,eur_g11
22:08:47  18  ,eur_g12
22:08:47  19  ,eur_g13
22:08:47  20  ,eur_g14
22:08:47  21  ,eur_g15
22:08:47  22  ,eur_g16
22:08:47  23  ,eur_g17
22:08:47  24  ,eur_g18
22:08:47  25  ,eur_g19
22:08:47  26  ,eur_g20
22:08:47  27  ,eur_g21
22:08:47  28  ,eur_g22
22:08:47  29  ,eur_g23
22:08:47  30  ,eur_g24
22:08:47  31  ,eur_g25
22:08:47  32  ,eur_g26
22:08:47  33  ,eur_g27
22:08:47  34  ,eur_g28
22:08:47  35  ,eur_g29
22:08:47  36  ,eur_g30
22:08:47  37  ,eur_g31
22:08:47  38  ,eur_g32
22:08:47  39  ,eur_g33
22:08:47  40  ,eur_g34
22:08:47  41  ,eur_g35
22:08:47  42  ,eur_g36
22:08:47  43  ,eur_g37
22:08:47  44  ,eur_g38
22:08:47  45  ,eur_g39
22:08:47  46  ,eur_g40
22:08:47  47  ,eur_g41
22:08:47  48  ,aud_g00
22:08:47  49  ,aud_g01
22:08:47  50  ,aud_g02
22:08:47  51  ,aud_g03
22:08:47  52  ,aud_g04
22:08:47  53  ,aud_g05
22:08:47  54  ,aud_g06
22:08:47  55  ,aud_g07
22:08:47  56  ,aud_g08
22:08:47  57  ,aud_g09
22:08:47  58  ,aud_g10
22:08:47  59  ,aud_g11
22:08:47  60  ,aud_g12
22:08:47  61  ,aud_g13
22:08:47  62  ,aud_g14
22:08:47  63  ,aud_g15
22:08:47  64  ,aud_g16
22:08:47  65  ,aud_g17
22:08:47  66  ,aud_g18
22:08:47  67  ,aud_g19
22:08:47  68  ,aud_g20
22:08:47  69  ,aud_g21
22:08:47  70  ,aud_g22
22:08:47  71  ,aud_g23
22:08:47  72  ,aud_g24
22:08:47  73  ,aud_g25
22:08:47  74  ,aud_g26
22:08:47  75  ,aud_g27
22:08:47  76  ,aud_g28
22:08:47  77  ,aud_g29
22:08:47  78  ,aud_g30
22:08:47  79  ,aud_g31
22:08:47  80  ,aud_g32
22:08:47  81  ,aud_g33
22:08:47  82  ,aud_g34
22:08:47  83  ,aud_g35
22:08:47  84  ,aud_g36
22:08:47  85  ,aud_g37
22:08:47  86  ,aud_g38
22:08:47  87  ,aud_g39
22:08:47  88  ,aud_g40
22:08:47  89  ,aud_g41
22:08:47  90  ,gbp_g00
22:08:47  91  ,gbp_g01
22:08:47  92  ,gbp_g02
22:08:47  93  ,gbp_g03
22:08:47  94  ,gbp_g04
22:08:47  95  ,gbp_g05
22:08:47  96  ,gbp_g06
22:08:47  97  ,gbp_g07
22:08:47  98  ,gbp_g08
22:08:47  99  ,gbp_g09
22:08:47 100  ,gbp_g10
22:08:47 101  ,gbp_g11
22:08:47 102  ,gbp_g12
22:08:47 103  ,gbp_g13
22:08:47 104  ,gbp_g14
22:08:47 105  ,gbp_g15
22:08:47 106  ,gbp_g16
22:08:47 107  ,gbp_g17
22:08:47 108  ,gbp_g18
22:08:47 109  ,gbp_g19
22:08:47 110  ,gbp_g20
22:08:47 111  ,gbp_g21
22:08:47 112  ,gbp_g22
22:08:47 113  ,gbp_g23
22:08:47 114  ,gbp_g24
22:08:47 115  ,gbp_g25
22:08:47 116  ,gbp_g26
22:08:47 117  ,gbp_g27
22:08:47 118  ,gbp_g28
22:08:47 119  ,gbp_g29
22:08:47 120  ,gbp_g30
22:08:47 121  ,gbp_g31
22:08:47 122  ,gbp_g32
22:08:47 123  ,gbp_g33
22:08:47 124  ,gbp_g34
22:08:47 125  ,gbp_g35
22:08:47 126  ,gbp_g36
22:08:47 127  ,gbp_g37
22:08:47 128  ,gbp_g38
22:08:47 129  ,gbp_g39
22:08:47 130  ,gbp_g40
22:08:47 131  ,gbp_g41
22:08:47 132  ,jpy_g00
22:08:47 133  ,jpy_g01
22:08:47 134  ,jpy_g02
22:08:47 135  ,jpy_g03
22:08:47 136  ,jpy_g04
22:08:47 137  ,jpy_g05
22:08:47 138  ,jpy_g06
22:08:47 139  ,jpy_g07
22:08:47 140  ,jpy_g08
22:08:47 141  ,jpy_g09
22:08:47 142  ,jpy_g10
22:08:47 143  ,jpy_g11
22:08:47 144  ,jpy_g12
22:08:47 145  ,jpy_g13
22:08:47 146  ,jpy_g14
22:08:47 147  ,jpy_g15
22:08:47 148  ,jpy_g16
22:08:47 149  ,jpy_g17
22:08:47 150  ,jpy_g18
22:08:47 151  ,jpy_g19
22:08:47 152  ,jpy_g20
22:08:47 153  ,jpy_g21
22:08:47 154  ,jpy_g22
22:08:47 155  ,jpy_g23
22:08:47 156  ,jpy_g24
22:08:47 157  ,jpy_g25
22:08:47 158  ,jpy_g26
22:08:47 159  ,jpy_g27
22:08:47 160  ,jpy_g28
22:08:47 161  ,jpy_g29
22:08:47 162  ,jpy_g30
22:08:47 163  ,jpy_g31
22:08:47 164  ,jpy_g32
22:08:47 165  ,jpy_g33
22:08:47 166  ,jpy_g34
22:08:47 167  ,jpy_g35
22:08:47 168  ,jpy_g36
22:08:47 169  ,jpy_g37
22:08:47 170  ,jpy_g38
22:08:47 171  ,jpy_g39
22:08:47 172  ,jpy_g40
22:08:47 173  ,jpy_g41
22:08:47 174  ,cad_g00
22:08:47 175  ,cad_g01
22:08:47 176  ,cad_g02
22:08:47 177  ,cad_g03
22:08:47 178  ,cad_g04
22:08:47 179  ,cad_g05
22:08:47 180  ,cad_g06
22:08:47 181  ,cad_g07
22:08:47 182  ,cad_g08
22:08:47 183  ,cad_g09
22:08:47 184  ,cad_g10
22:08:47 185  ,cad_g11
22:08:47 186  ,cad_g12
22:08:47 187  ,cad_g13
22:08:47 188  ,cad_g14
22:08:47 189  ,cad_g15
22:08:47 190  ,cad_g16
22:08:47 191  ,cad_g17
22:08:47 192  ,cad_g18
22:08:47 193  ,cad_g19
22:08:47 194  ,cad_g20
22:08:47 195  ,cad_g21
22:08:47 196  ,cad_g22
22:08:47 197  ,cad_g23
22:08:47 198  ,cad_g24
22:08:47 199  ,cad_g25
22:08:47 200  ,cad_g26
22:08:47 201  ,cad_g27
22:08:47 202  ,cad_g28
22:08:47 203  ,cad_g29
22:08:47 204  ,cad_g30
22:08:47 205  ,cad_g31
22:08:47 206  ,cad_g32
22:08:47 207  ,cad_g33
22:08:47 208  ,cad_g34
22:08:47 209  ,cad_g35
22:08:47 210  ,cad_g36
22:08:47 211  ,cad_g37
22:08:47 212  ,cad_g38
22:08:47 213  ,cad_g39
22:08:47 214  ,cad_g40
22:08:47 215  ,cad_g41
22:08:47 216  ,chf_g00
22:08:47 217  ,chf_g01
22:08:47 218  ,chf_g02
22:08:47 219  ,chf_g03
22:08:47 220  ,chf_g04
22:08:47 221  ,chf_g05
22:08:47 222  ,chf_g06
22:08:47 223  ,chf_g07
22:08:47 224  ,chf_g08
22:08:47 225  ,chf_g09
22:08:47 226  ,chf_g10
22:08:47 227  ,chf_g11
22:08:47 228  ,chf_g12
22:08:47 229  ,chf_g13
22:08:47 230  ,chf_g14
22:08:47 231  ,chf_g15
22:08:47 232  ,chf_g16
22:08:47 233  ,chf_g17
22:08:47 234  ,chf_g18
22:08:47 235  ,chf_g19
22:08:47 236  ,chf_g20
22:08:47 237  ,chf_g21
22:08:47 238  ,chf_g22
22:08:47 239  ,chf_g23
22:08:47 240  ,chf_g24
22:08:47 241  ,chf_g25
22:08:47 242  ,chf_g26
22:08:47 243  ,chf_g27
22:08:47 244  ,chf_g28
22:08:47 245  ,chf_g29
22:08:47 246  ,chf_g30
22:08:47 247  ,chf_g31
22:08:47 248  ,chf_g32
22:08:47 249  ,chf_g33
22:08:47 250  ,chf_g34
22:08:47 251  ,chf_g35
22:08:47 252  ,chf_g36
22:08:47 253  ,chf_g37
22:08:47 254  ,chf_g38
22:08:47 255  ,chf_g39
22:08:47 256  ,chf_g40
22:08:47 257  ,chf_g41
22:08:47 258  FROM aud_ms6 m
22:08:47 259  WHERE m.ydate = '&1'||' '||'&2'
22:08:47 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'21:45:00'

View created.

Elapsed: 00:00:00.13
22:08:47 SQL> 
22:08:47 SQL> -- rpt
22:08:47 SQL> -- We should see just 1 row:
22:08:47 SQL> 
22:08:47 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
22:08:47 SQL> 
22:08:47 SQL> -- Build the model:
22:08:47 SQL> CREATE OR REPLACE VIEW bme AS
22:08:47   2  SELECT
22:08:47   3  'aud'||m.ydate prdate
22:08:47   4  ,gattn
22:08:47   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:08:47   6  ,eur_g00
22:08:47   7  ,eur_g01
22:08:47   8  ,eur_g02
22:08:47   9  ,eur_g03
22:08:47  10  ,eur_g04
22:08:47  11  ,eur_g05
22:08:47  12  ,eur_g06
22:08:47  13  ,eur_g07
22:08:47  14  ,eur_g08
22:08:47  15  ,eur_g09
22:08:47  16  ,eur_g10
22:08:47  17  ,eur_g11
22:08:47  18  ,eur_g12
22:08:47  19  ,eur_g13
22:08:47  20  ,eur_g14
22:08:47  21  ,eur_g15
22:08:47  22  ,eur_g16
22:08:47  23  ,eur_g17
22:08:47  24  ,eur_g18
22:08:47  25  ,eur_g19
22:08:47  26  ,eur_g20
22:08:47  27  ,eur_g21
22:08:47  28  ,eur_g22
22:08:47  29  ,eur_g23
22:08:47  30  ,eur_g24
22:08:47  31  ,eur_g25
22:08:47  32  ,eur_g26
22:08:47  33  ,eur_g27
22:08:47  34  ,eur_g28
22:08:47  35  ,eur_g29
22:08:47  36  ,eur_g30
22:08:47  37  ,eur_g31
22:08:47  38  ,eur_g32
22:08:47  39  ,eur_g33
22:08:47  40  ,eur_g34
22:08:47  41  ,eur_g35
22:08:47  42  ,eur_g36
22:08:47  43  ,eur_g37
22:08:47  44  ,eur_g38
22:08:47  45  ,eur_g39
22:08:47  46  ,eur_g40
22:08:47  47  ,eur_g41
22:08:47  48  ,aud_g00
22:08:47  49  ,aud_g01
22:08:47  50  ,aud_g02
22:08:47  51  ,aud_g03
22:08:47  52  ,aud_g04
22:08:47  53  ,aud_g05
22:08:47  54  ,aud_g06
22:08:47  55  ,aud_g07
22:08:47  56  ,aud_g08
22:08:47  57  ,aud_g09
22:08:47  58  ,aud_g10
22:08:47  59  ,aud_g11
22:08:47  60  ,aud_g12
22:08:47  61  ,aud_g13
22:08:47  62  ,aud_g14
22:08:47  63  ,aud_g15
22:08:47  64  ,aud_g16
22:08:47  65  ,aud_g17
22:08:47  66  ,aud_g18
22:08:47  67  ,aud_g19
22:08:47  68  ,aud_g20
22:08:47  69  ,aud_g21
22:08:47  70  ,aud_g22
22:08:47  71  ,aud_g23
22:08:47  72  ,aud_g24
22:08:47  73  ,aud_g25
22:08:47  74  ,aud_g26
22:08:47  75  ,aud_g27
22:08:47  76  ,aud_g28
22:08:47  77  ,aud_g29
22:08:47  78  ,aud_g30
22:08:47  79  ,aud_g31
22:08:47  80  ,aud_g32
22:08:47  81  ,aud_g33
22:08:47  82  ,aud_g34
22:08:47  83  ,aud_g35
22:08:47  84  ,aud_g36
22:08:47  85  ,aud_g37
22:08:47  86  ,aud_g38
22:08:47  87  ,aud_g39
22:08:47  88  ,aud_g40
22:08:47  89  ,aud_g41
22:08:47  90  ,gbp_g00
22:08:47  91  ,gbp_g01
22:08:47  92  ,gbp_g02
22:08:47  93  ,gbp_g03
22:08:47  94  ,gbp_g04
22:08:47  95  ,gbp_g05
22:08:47  96  ,gbp_g06
22:08:47  97  ,gbp_g07
22:08:47  98  ,gbp_g08
22:08:47  99  ,gbp_g09
22:08:47 100  ,gbp_g10
22:08:47 101  ,gbp_g11
22:08:47 102  ,gbp_g12
22:08:47 103  ,gbp_g13
22:08:47 104  ,gbp_g14
22:08:47 105  ,gbp_g15
22:08:47 106  ,gbp_g16
22:08:47 107  ,gbp_g17
22:08:47 108  ,gbp_g18
22:08:47 109  ,gbp_g19
22:08:47 110  ,gbp_g20
22:08:47 111  ,gbp_g21
22:08:47 112  ,gbp_g22
22:08:47 113  ,gbp_g23
22:08:47 114  ,gbp_g24
22:08:47 115  ,gbp_g25
22:08:47 116  ,gbp_g26
22:08:47 117  ,gbp_g27
22:08:47 118  ,gbp_g28
22:08:47 119  ,gbp_g29
22:08:47 120  ,gbp_g30
22:08:47 121  ,gbp_g31
22:08:47 122  ,gbp_g32
22:08:47 123  ,gbp_g33
22:08:47 124  ,gbp_g34
22:08:47 125  ,gbp_g35
22:08:47 126  ,gbp_g36
22:08:47 127  ,gbp_g37
22:08:47 128  ,gbp_g38
22:08:47 129  ,gbp_g39
22:08:47 130  ,gbp_g40
22:08:47 131  ,gbp_g41
22:08:47 132  ,jpy_g00
22:08:47 133  ,jpy_g01
22:08:47 134  ,jpy_g02
22:08:47 135  ,jpy_g03
22:08:47 136  ,jpy_g04
22:08:47 137  ,jpy_g05
22:08:47 138  ,jpy_g06
22:08:47 139  ,jpy_g07
22:08:47 140  ,jpy_g08
22:08:47 141  ,jpy_g09
22:08:47 142  ,jpy_g10
22:08:47 143  ,jpy_g11
22:08:47 144  ,jpy_g12
22:08:47 145  ,jpy_g13
22:08:47 146  ,jpy_g14
22:08:47 147  ,jpy_g15
22:08:47 148  ,jpy_g16
22:08:47 149  ,jpy_g17
22:08:47 150  ,jpy_g18
22:08:47 151  ,jpy_g19
22:08:47 152  ,jpy_g20
22:08:47 153  ,jpy_g21
22:08:47 154  ,jpy_g22
22:08:47 155  ,jpy_g23
22:08:47 156  ,jpy_g24
22:08:47 157  ,jpy_g25
22:08:47 158  ,jpy_g26
22:08:47 159  ,jpy_g27
22:08:47 160  ,jpy_g28
22:08:47 161  ,jpy_g29
22:08:47 162  ,jpy_g30
22:08:47 163  ,jpy_g31
22:08:47 164  ,jpy_g32
22:08:47 165  ,jpy_g33
22:08:47 166  ,jpy_g34
22:08:47 167  ,jpy_g35
22:08:47 168  ,jpy_g36
22:08:47 169  ,jpy_g37
22:08:47 170  ,jpy_g38
22:08:47 171  ,jpy_g39
22:08:47 172  ,jpy_g40
22:08:47 173  ,jpy_g41
22:08:47 174  ,cad_g00
22:08:47 175  ,cad_g01
22:08:47 176  ,cad_g02
22:08:47 177  ,cad_g03
22:08:47 178  ,cad_g04
22:08:47 179  ,cad_g05
22:08:47 180  ,cad_g06
22:08:47 181  ,cad_g07
22:08:47 182  ,cad_g08
22:08:47 183  ,cad_g09
22:08:47 184  ,cad_g10
22:08:47 185  ,cad_g11
22:08:47 186  ,cad_g12
22:08:47 187  ,cad_g13
22:08:47 188  ,cad_g14
22:08:47 189  ,cad_g15
22:08:47 190  ,cad_g16
22:08:47 191  ,cad_g17
22:08:47 192  ,cad_g18
22:08:47 193  ,cad_g19
22:08:47 194  ,cad_g20
22:08:47 195  ,cad_g21
22:08:47 196  ,cad_g22
22:08:47 197  ,cad_g23
22:08:47 198  ,cad_g24
22:08:47 199  ,cad_g25
22:08:47 200  ,cad_g26
22:08:47 201  ,cad_g27
22:08:47 202  ,cad_g28
22:08:47 203  ,cad_g29
22:08:47 204  ,cad_g30
22:08:47 205  ,cad_g31
22:08:47 206  ,cad_g32
22:08:47 207  ,cad_g33
22:08:47 208  ,cad_g34
22:08:47 209  ,cad_g35
22:08:47 210  ,cad_g36
22:08:47 211  ,cad_g37
22:08:47 212  ,cad_g38
22:08:47 213  ,cad_g39
22:08:47 214  ,cad_g40
22:08:47 215  ,cad_g41
22:08:47 216  ,chf_g00
22:08:47 217  ,chf_g01
22:08:47 218  ,chf_g02
22:08:47 219  ,chf_g03
22:08:47 220  ,chf_g04
22:08:47 221  ,chf_g05
22:08:47 222  ,chf_g06
22:08:47 223  ,chf_g07
22:08:47 224  ,chf_g08
22:08:47 225  ,chf_g09
22:08:47 226  ,chf_g10
22:08:47 227  ,chf_g11
22:08:47 228  ,chf_g12
22:08:47 229  ,chf_g13
22:08:47 230  ,chf_g14
22:08:47 231  ,chf_g15
22:08:47 232  ,chf_g16
22:08:47 233  ,chf_g17
22:08:47 234  ,chf_g18
22:08:47 235  ,chf_g19
22:08:47 236  ,chf_g20
22:08:47 237  ,chf_g21
22:08:47 238  ,chf_g22
22:08:47 239  ,chf_g23
22:08:47 240  ,chf_g24
22:08:47 241  ,chf_g25
22:08:47 242  ,chf_g26
22:08:47 243  ,chf_g27
22:08:47 244  ,chf_g28
22:08:47 245  ,chf_g29
22:08:47 246  ,chf_g30
22:08:47 247  ,chf_g31
22:08:47 248  ,chf_g32
22:08:47 249  ,chf_g33
22:08:47 250  ,chf_g34
22:08:47 251  ,chf_g35
22:08:47 252  ,chf_g36
22:08:47 253  ,chf_g37
22:08:47 254  ,chf_g38
22:08:47 255  ,chf_g39
22:08:47 256  ,chf_g40
22:08:47 257  ,chf_g41
22:08:47 258  FROM aud_ms6 m
22:08:47 259  WHERE gattn IN('nup','up')
22:08:47 260  AND 1+m.ydate < '&1'||' '||'&2'
22:08:47 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'21:45:00'

View created.

Elapsed: 00:00:00.12
22:08:48 SQL> 
22:08:48 SQL> -- rpt
22:08:48 SQL> 
22:08:48 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12870
up	     6643

Elapsed: 00:00:00.04
22:08:48 SQL> 
22:08:48 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 21:40:00

Elapsed: 00:00:00.04
22:08:48 SQL> 
22:08:48 SQL> -- Now build model from bme and score sme
22:08:48 SQL> @score1gattn.sql
22:08:48 SQL> -- score1gattn.sql
22:08:48 SQL> 
22:08:48 SQL> -- Does the 1st SVM score
22:08:48 SQL> 
22:08:48 SQL> -- Fill up svmc_apply_prep
22:08:48 SQL> @score_gattn.sql
22:08:48 SQL> --
22:08:48 SQL> -- score_gattn.sql
22:08:48 SQL> --
22:08:48 SQL> 
22:08:48 SQL> -- usage: score_gattn.sql
22:08:48 SQL> 
22:08:48 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:08:48 SQL> 
22:08:48 SQL> DEFINE target	= 'gattn'
22:08:48 SQL> DEFINE model_name = 'forex15'
22:08:48 SQL> DEFINE bldtable	= 'bme'
22:08:48 SQL> DEFINE scoretable = 'sme'
22:08:48 SQL> DEFINE case_id	= 'prdate'
22:08:48 SQL> 
22:08:48 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:08:48 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:08:48 SQL> 
22:08:48 SQL> -- Builds an SVM model using pl/sql.
22:08:48 SQL> 
22:08:48 SQL> -----------------------------------------------------------------------
22:08:48 SQL> --			    BUILD THE MODEL
22:08:48 SQL> -----------------------------------------------------------------------
22:08:48 SQL> 
22:08:48 SQL> -- Cleanup old build data preparation objects for repeat runs
22:08:48 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:08:48 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:08:48 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
22:08:48 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
22:08:48 SQL> 
22:08:48 SQL> 
22:08:48 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:08:48 SQL> --
22:08:48 SQL> -- DROP	TABLE svmc_settings ;
22:08:48 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:08:48 SQL> -- DELETE svmc_settings;
22:08:48 SQL> 
22:08:48 SQL> -- The default classification algorithm is Naive Bayes. So override
22:08:48 SQL> -- this choice to SVM using a settings table.
22:08:48 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:08:48 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:08:48 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:08:48 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:08:48 SQL> -- models.
22:08:48 SQL> --
22:08:48 SQL> 
22:08:48 SQL> -- Do this once and then comment it out.
22:08:48 SQL> -- That makes script go faster.
22:08:48 SQL> -- BEGIN
22:08:48 SQL> -- -- Populate settings table
22:08:48 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:08:48 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:08:48 SQL> --
22:08:48 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:08:48 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:08:48 SQL> --
22:08:48 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:08:48 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:08:48 SQL> --   COMMIT;
22:08:48 SQL> -- END;
22:08:48 SQL> -- /
22:08:48 SQL> 
22:08:48 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:08:48 SQL> 
22:08:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:08:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:08:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:08:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:08:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:08:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:08:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:08:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:08:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:08:48 SQL> 
22:08:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:08:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:08:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:08:48 SQL> 
22:08:48 SQL> --------------------------------
22:08:48 SQL> -- PREPARE BUILD (TRAINING) DATA
22:08:48 SQL> --
22:08:48 SQL> 
22:08:48 SQL> -- 1. Missing Value treatment for all Predictors and
22:08:48 SQL> -- 2. Outlier Treatment and
22:08:48 SQL> -- 3. Normalization are performed below.
22:08:48 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:08:48 SQL> --    normalized here.
22:08:48 SQL> 
22:08:48 SQL> BEGIN
22:08:48   2  	-- Perform missing value treatment for all predictors
22:08:48   3  	-- create miss tables
22:08:48   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:08:48   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:08:48   6  
22:08:48   7  	-- populate miss tables
22:08:48   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:08:48   9  	  miss_table_name => 'svmc_miss_num',
22:08:48  10  	  data_table_name => '&bldtable',
22:08:48  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:08:48  12  
22:08:48  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:08:48  14  	  miss_table_name => 'svmc_miss_cat',
22:08:48  15  	  data_table_name => '&bldtable',
22:08:48  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:08:48  17  
22:08:48  18  	-- xform input data to replace missing values
22:08:48  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:08:48  20  	  miss_table_name => 'svmc_miss_num',
22:08:48  21  	  data_table_name => '&bldtable',
22:08:48  22  	  xform_view_name => 'xformed_build_miss_num');
22:08:48  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:08:48  24  	  miss_table_name => 'svmc_miss_cat',
22:08:48  25  	  data_table_name => '&bldtable',
22:08:48  26  	  xform_view_name => 'xformed_build_miss_cat');
22:08:48  27  
22:08:48  28  	-- Perform outlier treatment.
22:08:48  29  	-- create clip table
22:08:48  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:08:48  31  
22:08:48  32  	-- populate clip table
22:08:48  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:08:48  34  	  clip_table_name => 'svmc_clip',
22:08:48  35  	  data_table_name => '&bldtable',
22:08:48  36  	  tail_frac	  => 0.025,
22:08:48  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:08:48  38  
22:08:48  39  	-- xform input data to winsorized data
22:08:48  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:08:48  41  	  clip_table_name => 'svmc_clip',
22:08:48  42  	  data_table_name => '&bldtable',
22:08:48  43  	  xform_view_name => 'svmc_winsor');
22:08:48  44  
22:08:48  45  	-- create normalization table
22:08:48  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:08:48  47  
22:08:48  48  	-- populate normalization table based on winsorized data
22:08:48  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:08:48  50  	  norm_table_name => 'svmc_norm',
22:08:48  51  	  data_table_name => 'svmc_winsor',
22:08:48  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:08:48  53  
22:08:48  54  	-- normalize the original data
22:08:48  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:08:48  56  	  norm_table_name => 'svmc_norm',
22:08:48  57  	  data_table_name => '&bldtable',
22:08:48  58  	  xform_view_name => 'svmc_build_prep');
22:08:48  59  END;
22:08:48  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.39
22:09:06 SQL> 
22:09:06 SQL> ---------------------
22:09:06 SQL> -- CREATE A NEW MODEL
22:09:06 SQL> --
22:09:06 SQL> -- Cleanup old model with the same name for repeat runs
22:09:06 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:09:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:06   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
22:09:08 SQL> 
22:09:08 SQL> -- Build a new SVM Model
22:09:08 SQL> BEGIN
22:09:08   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:09:08   3  	  model_name	      => '&model_name',
22:09:08   4  	  mining_function     => dbms_data_mining.classification,
22:09:08   5  	  data_table_name     => 'svmc_build_prep',
22:09:08   6  	  case_id_column_name => '&case_id',
22:09:08   7  	  target_column_name  => '&target',
22:09:08   8  	  settings_table_name => 'svmc_settings');
22:09:08   9  END;
22:09:08  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.57
22:09:35 SQL> 
22:09:35 SQL> -----------------------------------------------------------------------
22:09:35 SQL> --			       APPLY/score THE MODEL
22:09:35 SQL> -----------------------------------------------------------------------
22:09:35 SQL> 
22:09:35 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:09:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:09:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:09:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:09:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:09:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:09:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:09:35 SQL> -----------------------
22:09:35 SQL> -- PREPARE SCORING DATA
22:09:35 SQL> --
22:09:35 SQL> -- If the data for model creation has been prepared, then the data
22:09:35 SQL> -- to be scored using the model must be prepared in the same manner
22:09:35 SQL> -- in order to obtain meaningful results.
22:09:35 SQL> --
22:09:35 SQL> -- 1. Missing Value treatment for all Predictors and
22:09:35 SQL> -- 2. Normalization
22:09:35 SQL> -- No outlier treatment will be performed during test and apply. The
22:09:35 SQL> -- normalization step is sufficient, since the normalization parameters
22:09:35 SQL> -- already capture the effects of outlier treatment done with build data.
22:09:35 SQL> --
22:09:35 SQL> BEGIN
22:09:35   2  	-- Xform Test data to replace missing values
22:09:35   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:09:35   4  	  miss_table_name => 'svmc_miss_num',
22:09:35   5  	  data_table_name => '&scoretable',
22:09:35   6  	  xform_view_name => 'xformed_apply_miss_num');
22:09:35   7  
22:09:35   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:09:35   9  	  miss_table_name => 'svmc_miss_cat',
22:09:35  10  	  data_table_name => '&scoretable',
22:09:35  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:09:35  12  
22:09:35  13  	-- Normalize the data to be scored
22:09:35  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:09:35  15  	  norm_table_name => 'svmc_norm',
22:09:35  16  	  data_table_name => '&scoretable',
22:09:35  17  	  xform_view_name => 'svmc_apply_prep');
22:09:35  18  END;
22:09:35  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
22:09:36 SQL> 
22:09:36 SQL> -- Use same model_name used in score_gattn.sql
22:09:36 SQL> DEFINE model_name = 'forex15'
22:09:36 SQL> 
22:09:36 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
22:09:37 SQL> 
22:09:37 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
22:09:37   2  SELECT
22:09:37   3  prdate
22:09:37   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:09:37   5  ,sysdate
22:09:37   6  ,SUBSTR(prdate,1,3)pair
22:09:37   7  ,SUBSTR(prdate,4,19)ydate
22:09:37   8  FROM svmc_apply_prep
22:09:37   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
22:09:37 SQL> @aud_score1day_gattn.sql	2011-01-06 21:50:00
22:09:37 SQL> --
22:09:37 SQL> -- aud_score1day_gattn.sql
22:09:37 SQL> --
22:09:37 SQL> 
22:09:37 SQL> CREATE OR REPLACE VIEW sme AS
22:09:37   2  SELECT
22:09:37   3  'aud'||m.ydate prdate
22:09:37   4  ,NULL gattn
22:09:37   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:09:37   6  ,eur_g00
22:09:37   7  ,eur_g01
22:09:37   8  ,eur_g02
22:09:37   9  ,eur_g03
22:09:37  10  ,eur_g04
22:09:37  11  ,eur_g05
22:09:37  12  ,eur_g06
22:09:37  13  ,eur_g07
22:09:37  14  ,eur_g08
22:09:37  15  ,eur_g09
22:09:37  16  ,eur_g10
22:09:37  17  ,eur_g11
22:09:37  18  ,eur_g12
22:09:37  19  ,eur_g13
22:09:37  20  ,eur_g14
22:09:37  21  ,eur_g15
22:09:37  22  ,eur_g16
22:09:37  23  ,eur_g17
22:09:37  24  ,eur_g18
22:09:37  25  ,eur_g19
22:09:37  26  ,eur_g20
22:09:37  27  ,eur_g21
22:09:37  28  ,eur_g22
22:09:37  29  ,eur_g23
22:09:37  30  ,eur_g24
22:09:37  31  ,eur_g25
22:09:37  32  ,eur_g26
22:09:37  33  ,eur_g27
22:09:37  34  ,eur_g28
22:09:37  35  ,eur_g29
22:09:37  36  ,eur_g30
22:09:37  37  ,eur_g31
22:09:37  38  ,eur_g32
22:09:37  39  ,eur_g33
22:09:37  40  ,eur_g34
22:09:37  41  ,eur_g35
22:09:37  42  ,eur_g36
22:09:37  43  ,eur_g37
22:09:37  44  ,eur_g38
22:09:37  45  ,eur_g39
22:09:37  46  ,eur_g40
22:09:37  47  ,eur_g41
22:09:37  48  ,aud_g00
22:09:37  49  ,aud_g01
22:09:37  50  ,aud_g02
22:09:37  51  ,aud_g03
22:09:37  52  ,aud_g04
22:09:37  53  ,aud_g05
22:09:37  54  ,aud_g06
22:09:37  55  ,aud_g07
22:09:37  56  ,aud_g08
22:09:37  57  ,aud_g09
22:09:37  58  ,aud_g10
22:09:37  59  ,aud_g11
22:09:37  60  ,aud_g12
22:09:37  61  ,aud_g13
22:09:37  62  ,aud_g14
22:09:37  63  ,aud_g15
22:09:37  64  ,aud_g16
22:09:37  65  ,aud_g17
22:09:37  66  ,aud_g18
22:09:37  67  ,aud_g19
22:09:37  68  ,aud_g20
22:09:37  69  ,aud_g21
22:09:37  70  ,aud_g22
22:09:37  71  ,aud_g23
22:09:37  72  ,aud_g24
22:09:37  73  ,aud_g25
22:09:37  74  ,aud_g26
22:09:37  75  ,aud_g27
22:09:37  76  ,aud_g28
22:09:37  77  ,aud_g29
22:09:37  78  ,aud_g30
22:09:37  79  ,aud_g31
22:09:37  80  ,aud_g32
22:09:37  81  ,aud_g33
22:09:37  82  ,aud_g34
22:09:37  83  ,aud_g35
22:09:37  84  ,aud_g36
22:09:37  85  ,aud_g37
22:09:37  86  ,aud_g38
22:09:37  87  ,aud_g39
22:09:37  88  ,aud_g40
22:09:37  89  ,aud_g41
22:09:37  90  ,gbp_g00
22:09:37  91  ,gbp_g01
22:09:37  92  ,gbp_g02
22:09:37  93  ,gbp_g03
22:09:37  94  ,gbp_g04
22:09:37  95  ,gbp_g05
22:09:37  96  ,gbp_g06
22:09:37  97  ,gbp_g07
22:09:37  98  ,gbp_g08
22:09:37  99  ,gbp_g09
22:09:37 100  ,gbp_g10
22:09:37 101  ,gbp_g11
22:09:37 102  ,gbp_g12
22:09:37 103  ,gbp_g13
22:09:37 104  ,gbp_g14
22:09:37 105  ,gbp_g15
22:09:37 106  ,gbp_g16
22:09:37 107  ,gbp_g17
22:09:37 108  ,gbp_g18
22:09:37 109  ,gbp_g19
22:09:37 110  ,gbp_g20
22:09:37 111  ,gbp_g21
22:09:37 112  ,gbp_g22
22:09:37 113  ,gbp_g23
22:09:37 114  ,gbp_g24
22:09:37 115  ,gbp_g25
22:09:37 116  ,gbp_g26
22:09:37 117  ,gbp_g27
22:09:37 118  ,gbp_g28
22:09:37 119  ,gbp_g29
22:09:37 120  ,gbp_g30
22:09:37 121  ,gbp_g31
22:09:37 122  ,gbp_g32
22:09:37 123  ,gbp_g33
22:09:37 124  ,gbp_g34
22:09:37 125  ,gbp_g35
22:09:37 126  ,gbp_g36
22:09:37 127  ,gbp_g37
22:09:37 128  ,gbp_g38
22:09:37 129  ,gbp_g39
22:09:37 130  ,gbp_g40
22:09:37 131  ,gbp_g41
22:09:37 132  ,jpy_g00
22:09:37 133  ,jpy_g01
22:09:37 134  ,jpy_g02
22:09:37 135  ,jpy_g03
22:09:37 136  ,jpy_g04
22:09:37 137  ,jpy_g05
22:09:37 138  ,jpy_g06
22:09:37 139  ,jpy_g07
22:09:37 140  ,jpy_g08
22:09:37 141  ,jpy_g09
22:09:37 142  ,jpy_g10
22:09:37 143  ,jpy_g11
22:09:37 144  ,jpy_g12
22:09:37 145  ,jpy_g13
22:09:37 146  ,jpy_g14
22:09:37 147  ,jpy_g15
22:09:37 148  ,jpy_g16
22:09:37 149  ,jpy_g17
22:09:37 150  ,jpy_g18
22:09:37 151  ,jpy_g19
22:09:37 152  ,jpy_g20
22:09:37 153  ,jpy_g21
22:09:37 154  ,jpy_g22
22:09:37 155  ,jpy_g23
22:09:37 156  ,jpy_g24
22:09:37 157  ,jpy_g25
22:09:37 158  ,jpy_g26
22:09:37 159  ,jpy_g27
22:09:37 160  ,jpy_g28
22:09:37 161  ,jpy_g29
22:09:37 162  ,jpy_g30
22:09:37 163  ,jpy_g31
22:09:37 164  ,jpy_g32
22:09:37 165  ,jpy_g33
22:09:37 166  ,jpy_g34
22:09:37 167  ,jpy_g35
22:09:37 168  ,jpy_g36
22:09:37 169  ,jpy_g37
22:09:37 170  ,jpy_g38
22:09:37 171  ,jpy_g39
22:09:37 172  ,jpy_g40
22:09:37 173  ,jpy_g41
22:09:37 174  ,cad_g00
22:09:37 175  ,cad_g01
22:09:37 176  ,cad_g02
22:09:37 177  ,cad_g03
22:09:37 178  ,cad_g04
22:09:37 179  ,cad_g05
22:09:37 180  ,cad_g06
22:09:37 181  ,cad_g07
22:09:37 182  ,cad_g08
22:09:37 183  ,cad_g09
22:09:37 184  ,cad_g10
22:09:37 185  ,cad_g11
22:09:37 186  ,cad_g12
22:09:37 187  ,cad_g13
22:09:37 188  ,cad_g14
22:09:37 189  ,cad_g15
22:09:37 190  ,cad_g16
22:09:37 191  ,cad_g17
22:09:37 192  ,cad_g18
22:09:37 193  ,cad_g19
22:09:37 194  ,cad_g20
22:09:37 195  ,cad_g21
22:09:37 196  ,cad_g22
22:09:37 197  ,cad_g23
22:09:37 198  ,cad_g24
22:09:37 199  ,cad_g25
22:09:37 200  ,cad_g26
22:09:37 201  ,cad_g27
22:09:37 202  ,cad_g28
22:09:37 203  ,cad_g29
22:09:37 204  ,cad_g30
22:09:37 205  ,cad_g31
22:09:37 206  ,cad_g32
22:09:37 207  ,cad_g33
22:09:37 208  ,cad_g34
22:09:37 209  ,cad_g35
22:09:37 210  ,cad_g36
22:09:37 211  ,cad_g37
22:09:37 212  ,cad_g38
22:09:37 213  ,cad_g39
22:09:37 214  ,cad_g40
22:09:37 215  ,cad_g41
22:09:37 216  ,chf_g00
22:09:37 217  ,chf_g01
22:09:37 218  ,chf_g02
22:09:37 219  ,chf_g03
22:09:37 220  ,chf_g04
22:09:37 221  ,chf_g05
22:09:37 222  ,chf_g06
22:09:37 223  ,chf_g07
22:09:37 224  ,chf_g08
22:09:37 225  ,chf_g09
22:09:37 226  ,chf_g10
22:09:37 227  ,chf_g11
22:09:37 228  ,chf_g12
22:09:37 229  ,chf_g13
22:09:37 230  ,chf_g14
22:09:37 231  ,chf_g15
22:09:37 232  ,chf_g16
22:09:37 233  ,chf_g17
22:09:37 234  ,chf_g18
22:09:37 235  ,chf_g19
22:09:37 236  ,chf_g20
22:09:37 237  ,chf_g21
22:09:37 238  ,chf_g22
22:09:37 239  ,chf_g23
22:09:37 240  ,chf_g24
22:09:37 241  ,chf_g25
22:09:37 242  ,chf_g26
22:09:37 243  ,chf_g27
22:09:37 244  ,chf_g28
22:09:37 245  ,chf_g29
22:09:37 246  ,chf_g30
22:09:37 247  ,chf_g31
22:09:37 248  ,chf_g32
22:09:37 249  ,chf_g33
22:09:37 250  ,chf_g34
22:09:37 251  ,chf_g35
22:09:37 252  ,chf_g36
22:09:37 253  ,chf_g37
22:09:37 254  ,chf_g38
22:09:37 255  ,chf_g39
22:09:37 256  ,chf_g40
22:09:37 257  ,chf_g41
22:09:37 258  FROM aud_ms6 m
22:09:37 259  WHERE m.ydate = '&1'||' '||'&2'
22:09:37 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'21:50:00'

View created.

Elapsed: 00:00:00.22
22:09:37 SQL> 
22:09:37 SQL> -- rpt
22:09:37 SQL> -- We should see just 1 row:
22:09:37 SQL> 
22:09:37 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
22:09:37 SQL> 
22:09:37 SQL> -- Build the model:
22:09:37 SQL> CREATE OR REPLACE VIEW bme AS
22:09:37   2  SELECT
22:09:37   3  'aud'||m.ydate prdate
22:09:37   4  ,gattn
22:09:37   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:09:37   6  ,eur_g00
22:09:37   7  ,eur_g01
22:09:37   8  ,eur_g02
22:09:37   9  ,eur_g03
22:09:37  10  ,eur_g04
22:09:37  11  ,eur_g05
22:09:37  12  ,eur_g06
22:09:37  13  ,eur_g07
22:09:37  14  ,eur_g08
22:09:37  15  ,eur_g09
22:09:37  16  ,eur_g10
22:09:37  17  ,eur_g11
22:09:37  18  ,eur_g12
22:09:37  19  ,eur_g13
22:09:37  20  ,eur_g14
22:09:37  21  ,eur_g15
22:09:37  22  ,eur_g16
22:09:37  23  ,eur_g17
22:09:37  24  ,eur_g18
22:09:37  25  ,eur_g19
22:09:37  26  ,eur_g20
22:09:37  27  ,eur_g21
22:09:37  28  ,eur_g22
22:09:37  29  ,eur_g23
22:09:37  30  ,eur_g24
22:09:37  31  ,eur_g25
22:09:37  32  ,eur_g26
22:09:37  33  ,eur_g27
22:09:37  34  ,eur_g28
22:09:37  35  ,eur_g29
22:09:37  36  ,eur_g30
22:09:37  37  ,eur_g31
22:09:37  38  ,eur_g32
22:09:37  39  ,eur_g33
22:09:37  40  ,eur_g34
22:09:37  41  ,eur_g35
22:09:37  42  ,eur_g36
22:09:37  43  ,eur_g37
22:09:37  44  ,eur_g38
22:09:37  45  ,eur_g39
22:09:37  46  ,eur_g40
22:09:37  47  ,eur_g41
22:09:37  48  ,aud_g00
22:09:37  49  ,aud_g01
22:09:37  50  ,aud_g02
22:09:37  51  ,aud_g03
22:09:37  52  ,aud_g04
22:09:37  53  ,aud_g05
22:09:37  54  ,aud_g06
22:09:37  55  ,aud_g07
22:09:37  56  ,aud_g08
22:09:37  57  ,aud_g09
22:09:37  58  ,aud_g10
22:09:37  59  ,aud_g11
22:09:37  60  ,aud_g12
22:09:37  61  ,aud_g13
22:09:37  62  ,aud_g14
22:09:37  63  ,aud_g15
22:09:37  64  ,aud_g16
22:09:37  65  ,aud_g17
22:09:37  66  ,aud_g18
22:09:37  67  ,aud_g19
22:09:37  68  ,aud_g20
22:09:37  69  ,aud_g21
22:09:37  70  ,aud_g22
22:09:37  71  ,aud_g23
22:09:37  72  ,aud_g24
22:09:37  73  ,aud_g25
22:09:37  74  ,aud_g26
22:09:37  75  ,aud_g27
22:09:37  76  ,aud_g28
22:09:37  77  ,aud_g29
22:09:37  78  ,aud_g30
22:09:37  79  ,aud_g31
22:09:37  80  ,aud_g32
22:09:37  81  ,aud_g33
22:09:37  82  ,aud_g34
22:09:37  83  ,aud_g35
22:09:37  84  ,aud_g36
22:09:37  85  ,aud_g37
22:09:37  86  ,aud_g38
22:09:37  87  ,aud_g39
22:09:37  88  ,aud_g40
22:09:37  89  ,aud_g41
22:09:37  90  ,gbp_g00
22:09:37  91  ,gbp_g01
22:09:37  92  ,gbp_g02
22:09:37  93  ,gbp_g03
22:09:37  94  ,gbp_g04
22:09:37  95  ,gbp_g05
22:09:37  96  ,gbp_g06
22:09:37  97  ,gbp_g07
22:09:37  98  ,gbp_g08
22:09:37  99  ,gbp_g09
22:09:37 100  ,gbp_g10
22:09:37 101  ,gbp_g11
22:09:37 102  ,gbp_g12
22:09:37 103  ,gbp_g13
22:09:37 104  ,gbp_g14
22:09:37 105  ,gbp_g15
22:09:37 106  ,gbp_g16
22:09:37 107  ,gbp_g17
22:09:37 108  ,gbp_g18
22:09:37 109  ,gbp_g19
22:09:37 110  ,gbp_g20
22:09:37 111  ,gbp_g21
22:09:37 112  ,gbp_g22
22:09:37 113  ,gbp_g23
22:09:37 114  ,gbp_g24
22:09:37 115  ,gbp_g25
22:09:37 116  ,gbp_g26
22:09:37 117  ,gbp_g27
22:09:37 118  ,gbp_g28
22:09:37 119  ,gbp_g29
22:09:37 120  ,gbp_g30
22:09:37 121  ,gbp_g31
22:09:37 122  ,gbp_g32
22:09:37 123  ,gbp_g33
22:09:37 124  ,gbp_g34
22:09:37 125  ,gbp_g35
22:09:37 126  ,gbp_g36
22:09:37 127  ,gbp_g37
22:09:37 128  ,gbp_g38
22:09:37 129  ,gbp_g39
22:09:37 130  ,gbp_g40
22:09:37 131  ,gbp_g41
22:09:37 132  ,jpy_g00
22:09:37 133  ,jpy_g01
22:09:37 134  ,jpy_g02
22:09:37 135  ,jpy_g03
22:09:37 136  ,jpy_g04
22:09:37 137  ,jpy_g05
22:09:37 138  ,jpy_g06
22:09:37 139  ,jpy_g07
22:09:37 140  ,jpy_g08
22:09:37 141  ,jpy_g09
22:09:37 142  ,jpy_g10
22:09:37 143  ,jpy_g11
22:09:37 144  ,jpy_g12
22:09:37 145  ,jpy_g13
22:09:37 146  ,jpy_g14
22:09:37 147  ,jpy_g15
22:09:37 148  ,jpy_g16
22:09:37 149  ,jpy_g17
22:09:37 150  ,jpy_g18
22:09:37 151  ,jpy_g19
22:09:37 152  ,jpy_g20
22:09:37 153  ,jpy_g21
22:09:37 154  ,jpy_g22
22:09:37 155  ,jpy_g23
22:09:37 156  ,jpy_g24
22:09:37 157  ,jpy_g25
22:09:37 158  ,jpy_g26
22:09:37 159  ,jpy_g27
22:09:37 160  ,jpy_g28
22:09:37 161  ,jpy_g29
22:09:37 162  ,jpy_g30
22:09:37 163  ,jpy_g31
22:09:37 164  ,jpy_g32
22:09:37 165  ,jpy_g33
22:09:37 166  ,jpy_g34
22:09:37 167  ,jpy_g35
22:09:37 168  ,jpy_g36
22:09:37 169  ,jpy_g37
22:09:37 170  ,jpy_g38
22:09:37 171  ,jpy_g39
22:09:37 172  ,jpy_g40
22:09:37 173  ,jpy_g41
22:09:37 174  ,cad_g00
22:09:37 175  ,cad_g01
22:09:37 176  ,cad_g02
22:09:37 177  ,cad_g03
22:09:37 178  ,cad_g04
22:09:37 179  ,cad_g05
22:09:37 180  ,cad_g06
22:09:37 181  ,cad_g07
22:09:37 182  ,cad_g08
22:09:37 183  ,cad_g09
22:09:37 184  ,cad_g10
22:09:37 185  ,cad_g11
22:09:37 186  ,cad_g12
22:09:37 187  ,cad_g13
22:09:37 188  ,cad_g14
22:09:37 189  ,cad_g15
22:09:37 190  ,cad_g16
22:09:37 191  ,cad_g17
22:09:37 192  ,cad_g18
22:09:37 193  ,cad_g19
22:09:37 194  ,cad_g20
22:09:37 195  ,cad_g21
22:09:37 196  ,cad_g22
22:09:37 197  ,cad_g23
22:09:37 198  ,cad_g24
22:09:37 199  ,cad_g25
22:09:37 200  ,cad_g26
22:09:37 201  ,cad_g27
22:09:37 202  ,cad_g28
22:09:37 203  ,cad_g29
22:09:37 204  ,cad_g30
22:09:37 205  ,cad_g31
22:09:37 206  ,cad_g32
22:09:37 207  ,cad_g33
22:09:37 208  ,cad_g34
22:09:37 209  ,cad_g35
22:09:37 210  ,cad_g36
22:09:37 211  ,cad_g37
22:09:37 212  ,cad_g38
22:09:37 213  ,cad_g39
22:09:37 214  ,cad_g40
22:09:37 215  ,cad_g41
22:09:37 216  ,chf_g00
22:09:37 217  ,chf_g01
22:09:37 218  ,chf_g02
22:09:37 219  ,chf_g03
22:09:37 220  ,chf_g04
22:09:37 221  ,chf_g05
22:09:37 222  ,chf_g06
22:09:37 223  ,chf_g07
22:09:37 224  ,chf_g08
22:09:37 225  ,chf_g09
22:09:37 226  ,chf_g10
22:09:37 227  ,chf_g11
22:09:37 228  ,chf_g12
22:09:37 229  ,chf_g13
22:09:37 230  ,chf_g14
22:09:37 231  ,chf_g15
22:09:37 232  ,chf_g16
22:09:37 233  ,chf_g17
22:09:37 234  ,chf_g18
22:09:37 235  ,chf_g19
22:09:37 236  ,chf_g20
22:09:37 237  ,chf_g21
22:09:37 238  ,chf_g22
22:09:37 239  ,chf_g23
22:09:37 240  ,chf_g24
22:09:37 241  ,chf_g25
22:09:37 242  ,chf_g26
22:09:37 243  ,chf_g27
22:09:37 244  ,chf_g28
22:09:37 245  ,chf_g29
22:09:37 246  ,chf_g30
22:09:37 247  ,chf_g31
22:09:37 248  ,chf_g32
22:09:37 249  ,chf_g33
22:09:37 250  ,chf_g34
22:09:37 251  ,chf_g35
22:09:37 252  ,chf_g36
22:09:37 253  ,chf_g37
22:09:37 254  ,chf_g38
22:09:37 255  ,chf_g39
22:09:37 256  ,chf_g40
22:09:37 257  ,chf_g41
22:09:37 258  FROM aud_ms6 m
22:09:37 259  WHERE gattn IN('nup','up')
22:09:37 260  AND 1+m.ydate < '&1'||' '||'&2'
22:09:37 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'21:50:00'

View created.

Elapsed: 00:00:00.15
22:09:37 SQL> 
22:09:37 SQL> -- rpt
22:09:37 SQL> 
22:09:37 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12870
up	     6644

Elapsed: 00:00:00.04
22:09:37 SQL> 
22:09:37 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 21:45:00

Elapsed: 00:00:00.03
22:09:37 SQL> 
22:09:37 SQL> -- Now build model from bme and score sme
22:09:37 SQL> @score1gattn.sql
22:09:37 SQL> -- score1gattn.sql
22:09:37 SQL> 
22:09:37 SQL> -- Does the 1st SVM score
22:09:37 SQL> 
22:09:37 SQL> -- Fill up svmc_apply_prep
22:09:37 SQL> @score_gattn.sql
22:09:37 SQL> --
22:09:37 SQL> -- score_gattn.sql
22:09:37 SQL> --
22:09:37 SQL> 
22:09:37 SQL> -- usage: score_gattn.sql
22:09:37 SQL> 
22:09:37 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:09:37 SQL> 
22:09:37 SQL> DEFINE target	= 'gattn'
22:09:37 SQL> DEFINE model_name = 'forex15'
22:09:37 SQL> DEFINE bldtable	= 'bme'
22:09:37 SQL> DEFINE scoretable = 'sme'
22:09:37 SQL> DEFINE case_id	= 'prdate'
22:09:37 SQL> 
22:09:37 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:09:37 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:09:37 SQL> 
22:09:37 SQL> -- Builds an SVM model using pl/sql.
22:09:37 SQL> 
22:09:37 SQL> -----------------------------------------------------------------------
22:09:37 SQL> --			    BUILD THE MODEL
22:09:37 SQL> -----------------------------------------------------------------------
22:09:37 SQL> 
22:09:37 SQL> -- Cleanup old build data preparation objects for repeat runs
22:09:37 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
22:09:37 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
22:09:37 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
22:09:37 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
22:09:37 SQL> 
22:09:37 SQL> 
22:09:37 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:09:37 SQL> --
22:09:37 SQL> -- DROP	TABLE svmc_settings ;
22:09:37 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:09:37 SQL> -- DELETE svmc_settings;
22:09:37 SQL> 
22:09:37 SQL> -- The default classification algorithm is Naive Bayes. So override
22:09:37 SQL> -- this choice to SVM using a settings table.
22:09:37 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:09:37 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:09:37 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:09:37 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:09:37 SQL> -- models.
22:09:37 SQL> --
22:09:37 SQL> 
22:09:37 SQL> -- Do this once and then comment it out.
22:09:37 SQL> -- That makes script go faster.
22:09:37 SQL> -- BEGIN
22:09:37 SQL> -- -- Populate settings table
22:09:37 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:09:37 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:09:37 SQL> --
22:09:37 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:09:37 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:09:37 SQL> --
22:09:37 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:09:37 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:09:37 SQL> --   COMMIT;
22:09:37 SQL> -- END;
22:09:37 SQL> -- /
22:09:37 SQL> 
22:09:37 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
22:09:37 SQL> 
22:09:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:09:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:09:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:09:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:09:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:09:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
22:09:37 SQL> 
22:09:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:09:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:09:38 SQL> 
22:09:38 SQL> --------------------------------
22:09:38 SQL> -- PREPARE BUILD (TRAINING) DATA
22:09:38 SQL> --
22:09:38 SQL> 
22:09:38 SQL> -- 1. Missing Value treatment for all Predictors and
22:09:38 SQL> -- 2. Outlier Treatment and
22:09:38 SQL> -- 3. Normalization are performed below.
22:09:38 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:09:38 SQL> --    normalized here.
22:09:38 SQL> 
22:09:38 SQL> BEGIN
22:09:38   2  	-- Perform missing value treatment for all predictors
22:09:38   3  	-- create miss tables
22:09:38   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:09:38   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:09:38   6  
22:09:38   7  	-- populate miss tables
22:09:38   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:09:38   9  	  miss_table_name => 'svmc_miss_num',
22:09:38  10  	  data_table_name => '&bldtable',
22:09:38  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:09:38  12  
22:09:38  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:09:38  14  	  miss_table_name => 'svmc_miss_cat',
22:09:38  15  	  data_table_name => '&bldtable',
22:09:38  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:09:38  17  
22:09:38  18  	-- xform input data to replace missing values
22:09:38  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:09:38  20  	  miss_table_name => 'svmc_miss_num',
22:09:38  21  	  data_table_name => '&bldtable',
22:09:38  22  	  xform_view_name => 'xformed_build_miss_num');
22:09:38  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:09:38  24  	  miss_table_name => 'svmc_miss_cat',
22:09:38  25  	  data_table_name => '&bldtable',
22:09:38  26  	  xform_view_name => 'xformed_build_miss_cat');
22:09:38  27  
22:09:38  28  	-- Perform outlier treatment.
22:09:38  29  	-- create clip table
22:09:38  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:09:38  31  
22:09:38  32  	-- populate clip table
22:09:38  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:09:38  34  	  clip_table_name => 'svmc_clip',
22:09:38  35  	  data_table_name => '&bldtable',
22:09:38  36  	  tail_frac	  => 0.025,
22:09:38  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:09:38  38  
22:09:38  39  	-- xform input data to winsorized data
22:09:38  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:09:38  41  	  clip_table_name => 'svmc_clip',
22:09:38  42  	  data_table_name => '&bldtable',
22:09:38  43  	  xform_view_name => 'svmc_winsor');
22:09:38  44  
22:09:38  45  	-- create normalization table
22:09:38  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:09:38  47  
22:09:38  48  	-- populate normalization table based on winsorized data
22:09:38  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:09:38  50  	  norm_table_name => 'svmc_norm',
22:09:38  51  	  data_table_name => 'svmc_winsor',
22:09:38  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:09:38  53  
22:09:38  54  	-- normalize the original data
22:09:38  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:09:38  56  	  norm_table_name => 'svmc_norm',
22:09:38  57  	  data_table_name => '&bldtable',
22:09:38  58  	  xform_view_name => 'svmc_build_prep');
22:09:38  59  END;
22:09:38  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.39
22:09:56 SQL> 
22:09:56 SQL> ---------------------
22:09:56 SQL> -- CREATE A NEW MODEL
22:09:56 SQL> --
22:09:56 SQL> -- Cleanup old model with the same name for repeat runs
22:09:56 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:09:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:09:56   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.06
22:09:57 SQL> 
22:09:57 SQL> -- Build a new SVM Model
22:09:57 SQL> BEGIN
22:09:57   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:09:57   3  	  model_name	      => '&model_name',
22:09:57   4  	  mining_function     => dbms_data_mining.classification,
22:09:57   5  	  data_table_name     => 'svmc_build_prep',
22:09:57   6  	  case_id_column_name => '&case_id',
22:09:57   7  	  target_column_name  => '&target',
22:09:57   8  	  settings_table_name => 'svmc_settings');
22:09:57   9  END;
22:09:57  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.16
22:10:25 SQL> 
22:10:25 SQL> -----------------------------------------------------------------------
22:10:25 SQL> --			       APPLY/score THE MODEL
22:10:25 SQL> -----------------------------------------------------------------------
22:10:25 SQL> 
22:10:25 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:10:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:10:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
22:10:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:10:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:10:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:10:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:10:25 SQL> -----------------------
22:10:25 SQL> -- PREPARE SCORING DATA
22:10:25 SQL> --
22:10:25 SQL> -- If the data for model creation has been prepared, then the data
22:10:25 SQL> -- to be scored using the model must be prepared in the same manner
22:10:25 SQL> -- in order to obtain meaningful results.
22:10:25 SQL> --
22:10:25 SQL> -- 1. Missing Value treatment for all Predictors and
22:10:25 SQL> -- 2. Normalization
22:10:25 SQL> -- No outlier treatment will be performed during test and apply. The
22:10:25 SQL> -- normalization step is sufficient, since the normalization parameters
22:10:25 SQL> -- already capture the effects of outlier treatment done with build data.
22:10:25 SQL> --
22:10:25 SQL> BEGIN
22:10:25   2  	-- Xform Test data to replace missing values
22:10:25   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:10:25   4  	  miss_table_name => 'svmc_miss_num',
22:10:25   5  	  data_table_name => '&scoretable',
22:10:25   6  	  xform_view_name => 'xformed_apply_miss_num');
22:10:25   7  
22:10:25   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:10:25   9  	  miss_table_name => 'svmc_miss_cat',
22:10:25  10  	  data_table_name => '&scoretable',
22:10:25  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:10:25  12  
22:10:25  13  	-- Normalize the data to be scored
22:10:25  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:10:25  15  	  norm_table_name => 'svmc_norm',
22:10:25  16  	  data_table_name => '&scoretable',
22:10:25  17  	  xform_view_name => 'svmc_apply_prep');
22:10:25  18  END;
22:10:25  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
22:10:26 SQL> 
22:10:26 SQL> -- Use same model_name used in score_gattn.sql
22:10:26 SQL> DEFINE model_name = 'forex15'
22:10:26 SQL> 
22:10:26 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:10:27 SQL> 
22:10:27 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
22:10:27   2  SELECT
22:10:27   3  prdate
22:10:27   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:10:27   5  ,sysdate
22:10:27   6  ,SUBSTR(prdate,1,3)pair
22:10:27   7  ,SUBSTR(prdate,4,19)ydate
22:10:27   8  FROM svmc_apply_prep
22:10:27   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
22:10:27 SQL> @aud_score1day_gattn.sql	2011-01-06 21:55:00
22:10:27 SQL> --
22:10:27 SQL> -- aud_score1day_gattn.sql
22:10:27 SQL> --
22:10:27 SQL> 
22:10:27 SQL> CREATE OR REPLACE VIEW sme AS
22:10:27   2  SELECT
22:10:27   3  'aud'||m.ydate prdate
22:10:27   4  ,NULL gattn
22:10:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:10:27   6  ,eur_g00
22:10:27   7  ,eur_g01
22:10:27   8  ,eur_g02
22:10:27   9  ,eur_g03
22:10:27  10  ,eur_g04
22:10:27  11  ,eur_g05
22:10:27  12  ,eur_g06
22:10:27  13  ,eur_g07
22:10:27  14  ,eur_g08
22:10:27  15  ,eur_g09
22:10:27  16  ,eur_g10
22:10:27  17  ,eur_g11
22:10:27  18  ,eur_g12
22:10:27  19  ,eur_g13
22:10:27  20  ,eur_g14
22:10:27  21  ,eur_g15
22:10:27  22  ,eur_g16
22:10:27  23  ,eur_g17
22:10:27  24  ,eur_g18
22:10:27  25  ,eur_g19
22:10:27  26  ,eur_g20
22:10:27  27  ,eur_g21
22:10:27  28  ,eur_g22
22:10:27  29  ,eur_g23
22:10:27  30  ,eur_g24
22:10:27  31  ,eur_g25
22:10:27  32  ,eur_g26
22:10:27  33  ,eur_g27
22:10:27  34  ,eur_g28
22:10:27  35  ,eur_g29
22:10:27  36  ,eur_g30
22:10:27  37  ,eur_g31
22:10:27  38  ,eur_g32
22:10:27  39  ,eur_g33
22:10:27  40  ,eur_g34
22:10:27  41  ,eur_g35
22:10:27  42  ,eur_g36
22:10:27  43  ,eur_g37
22:10:27  44  ,eur_g38
22:10:27  45  ,eur_g39
22:10:27  46  ,eur_g40
22:10:27  47  ,eur_g41
22:10:27  48  ,aud_g00
22:10:27  49  ,aud_g01
22:10:27  50  ,aud_g02
22:10:27  51  ,aud_g03
22:10:27  52  ,aud_g04
22:10:27  53  ,aud_g05
22:10:27  54  ,aud_g06
22:10:27  55  ,aud_g07
22:10:27  56  ,aud_g08
22:10:27  57  ,aud_g09
22:10:27  58  ,aud_g10
22:10:27  59  ,aud_g11
22:10:27  60  ,aud_g12
22:10:27  61  ,aud_g13
22:10:27  62  ,aud_g14
22:10:27  63  ,aud_g15
22:10:27  64  ,aud_g16
22:10:27  65  ,aud_g17
22:10:27  66  ,aud_g18
22:10:27  67  ,aud_g19
22:10:27  68  ,aud_g20
22:10:27  69  ,aud_g21
22:10:27  70  ,aud_g22
22:10:27  71  ,aud_g23
22:10:27  72  ,aud_g24
22:10:27  73  ,aud_g25
22:10:27  74  ,aud_g26
22:10:27  75  ,aud_g27
22:10:27  76  ,aud_g28
22:10:27  77  ,aud_g29
22:10:27  78  ,aud_g30
22:10:27  79  ,aud_g31
22:10:27  80  ,aud_g32
22:10:27  81  ,aud_g33
22:10:27  82  ,aud_g34
22:10:27  83  ,aud_g35
22:10:27  84  ,aud_g36
22:10:27  85  ,aud_g37
22:10:27  86  ,aud_g38
22:10:27  87  ,aud_g39
22:10:27  88  ,aud_g40
22:10:27  89  ,aud_g41
22:10:27  90  ,gbp_g00
22:10:27  91  ,gbp_g01
22:10:27  92  ,gbp_g02
22:10:27  93  ,gbp_g03
22:10:27  94  ,gbp_g04
22:10:27  95  ,gbp_g05
22:10:27  96  ,gbp_g06
22:10:27  97  ,gbp_g07
22:10:27  98  ,gbp_g08
22:10:27  99  ,gbp_g09
22:10:27 100  ,gbp_g10
22:10:27 101  ,gbp_g11
22:10:27 102  ,gbp_g12
22:10:27 103  ,gbp_g13
22:10:27 104  ,gbp_g14
22:10:27 105  ,gbp_g15
22:10:27 106  ,gbp_g16
22:10:27 107  ,gbp_g17
22:10:27 108  ,gbp_g18
22:10:27 109  ,gbp_g19
22:10:27 110  ,gbp_g20
22:10:27 111  ,gbp_g21
22:10:27 112  ,gbp_g22
22:10:27 113  ,gbp_g23
22:10:27 114  ,gbp_g24
22:10:27 115  ,gbp_g25
22:10:27 116  ,gbp_g26
22:10:27 117  ,gbp_g27
22:10:27 118  ,gbp_g28
22:10:27 119  ,gbp_g29
22:10:27 120  ,gbp_g30
22:10:27 121  ,gbp_g31
22:10:27 122  ,gbp_g32
22:10:27 123  ,gbp_g33
22:10:27 124  ,gbp_g34
22:10:27 125  ,gbp_g35
22:10:27 126  ,gbp_g36
22:10:27 127  ,gbp_g37
22:10:27 128  ,gbp_g38
22:10:27 129  ,gbp_g39
22:10:27 130  ,gbp_g40
22:10:27 131  ,gbp_g41
22:10:27 132  ,jpy_g00
22:10:27 133  ,jpy_g01
22:10:27 134  ,jpy_g02
22:10:27 135  ,jpy_g03
22:10:27 136  ,jpy_g04
22:10:27 137  ,jpy_g05
22:10:27 138  ,jpy_g06
22:10:27 139  ,jpy_g07
22:10:27 140  ,jpy_g08
22:10:27 141  ,jpy_g09
22:10:27 142  ,jpy_g10
22:10:27 143  ,jpy_g11
22:10:27 144  ,jpy_g12
22:10:27 145  ,jpy_g13
22:10:27 146  ,jpy_g14
22:10:27 147  ,jpy_g15
22:10:27 148  ,jpy_g16
22:10:27 149  ,jpy_g17
22:10:27 150  ,jpy_g18
22:10:27 151  ,jpy_g19
22:10:27 152  ,jpy_g20
22:10:27 153  ,jpy_g21
22:10:27 154  ,jpy_g22
22:10:27 155  ,jpy_g23
22:10:27 156  ,jpy_g24
22:10:27 157  ,jpy_g25
22:10:27 158  ,jpy_g26
22:10:27 159  ,jpy_g27
22:10:27 160  ,jpy_g28
22:10:27 161  ,jpy_g29
22:10:27 162  ,jpy_g30
22:10:27 163  ,jpy_g31
22:10:27 164  ,jpy_g32
22:10:27 165  ,jpy_g33
22:10:27 166  ,jpy_g34
22:10:27 167  ,jpy_g35
22:10:27 168  ,jpy_g36
22:10:27 169  ,jpy_g37
22:10:27 170  ,jpy_g38
22:10:27 171  ,jpy_g39
22:10:27 172  ,jpy_g40
22:10:27 173  ,jpy_g41
22:10:27 174  ,cad_g00
22:10:27 175  ,cad_g01
22:10:27 176  ,cad_g02
22:10:27 177  ,cad_g03
22:10:27 178  ,cad_g04
22:10:27 179  ,cad_g05
22:10:27 180  ,cad_g06
22:10:27 181  ,cad_g07
22:10:27 182  ,cad_g08
22:10:27 183  ,cad_g09
22:10:27 184  ,cad_g10
22:10:27 185  ,cad_g11
22:10:27 186  ,cad_g12
22:10:27 187  ,cad_g13
22:10:27 188  ,cad_g14
22:10:27 189  ,cad_g15
22:10:27 190  ,cad_g16
22:10:27 191  ,cad_g17
22:10:27 192  ,cad_g18
22:10:27 193  ,cad_g19
22:10:27 194  ,cad_g20
22:10:27 195  ,cad_g21
22:10:27 196  ,cad_g22
22:10:27 197  ,cad_g23
22:10:27 198  ,cad_g24
22:10:27 199  ,cad_g25
22:10:27 200  ,cad_g26
22:10:27 201  ,cad_g27
22:10:27 202  ,cad_g28
22:10:27 203  ,cad_g29
22:10:27 204  ,cad_g30
22:10:27 205  ,cad_g31
22:10:27 206  ,cad_g32
22:10:27 207  ,cad_g33
22:10:27 208  ,cad_g34
22:10:27 209  ,cad_g35
22:10:27 210  ,cad_g36
22:10:27 211  ,cad_g37
22:10:27 212  ,cad_g38
22:10:27 213  ,cad_g39
22:10:27 214  ,cad_g40
22:10:27 215  ,cad_g41
22:10:27 216  ,chf_g00
22:10:27 217  ,chf_g01
22:10:27 218  ,chf_g02
22:10:27 219  ,chf_g03
22:10:27 220  ,chf_g04
22:10:27 221  ,chf_g05
22:10:27 222  ,chf_g06
22:10:27 223  ,chf_g07
22:10:27 224  ,chf_g08
22:10:27 225  ,chf_g09
22:10:27 226  ,chf_g10
22:10:27 227  ,chf_g11
22:10:27 228  ,chf_g12
22:10:27 229  ,chf_g13
22:10:27 230  ,chf_g14
22:10:27 231  ,chf_g15
22:10:27 232  ,chf_g16
22:10:27 233  ,chf_g17
22:10:27 234  ,chf_g18
22:10:27 235  ,chf_g19
22:10:27 236  ,chf_g20
22:10:27 237  ,chf_g21
22:10:27 238  ,chf_g22
22:10:27 239  ,chf_g23
22:10:27 240  ,chf_g24
22:10:27 241  ,chf_g25
22:10:27 242  ,chf_g26
22:10:27 243  ,chf_g27
22:10:27 244  ,chf_g28
22:10:27 245  ,chf_g29
22:10:27 246  ,chf_g30
22:10:27 247  ,chf_g31
22:10:27 248  ,chf_g32
22:10:27 249  ,chf_g33
22:10:27 250  ,chf_g34
22:10:27 251  ,chf_g35
22:10:27 252  ,chf_g36
22:10:27 253  ,chf_g37
22:10:27 254  ,chf_g38
22:10:27 255  ,chf_g39
22:10:27 256  ,chf_g40
22:10:27 257  ,chf_g41
22:10:27 258  FROM aud_ms6 m
22:10:27 259  WHERE m.ydate = '&1'||' '||'&2'
22:10:27 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-06'||' '||'21:55:00'

View created.

Elapsed: 00:00:00.12
22:10:27 SQL> 
22:10:27 SQL> -- rpt
22:10:27 SQL> -- We should see just 1 row:
22:10:27 SQL> 
22:10:27 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
22:10:27 SQL> 
22:10:27 SQL> -- Build the model:
22:10:27 SQL> CREATE OR REPLACE VIEW bme AS
22:10:27   2  SELECT
22:10:27   3  'aud'||m.ydate prdate
22:10:27   4  ,gattn
22:10:27   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
22:10:27   6  ,eur_g00
22:10:27   7  ,eur_g01
22:10:27   8  ,eur_g02
22:10:27   9  ,eur_g03
22:10:27  10  ,eur_g04
22:10:27  11  ,eur_g05
22:10:27  12  ,eur_g06
22:10:27  13  ,eur_g07
22:10:27  14  ,eur_g08
22:10:27  15  ,eur_g09
22:10:27  16  ,eur_g10
22:10:27  17  ,eur_g11
22:10:27  18  ,eur_g12
22:10:27  19  ,eur_g13
22:10:27  20  ,eur_g14
22:10:27  21  ,eur_g15
22:10:27  22  ,eur_g16
22:10:27  23  ,eur_g17
22:10:27  24  ,eur_g18
22:10:27  25  ,eur_g19
22:10:27  26  ,eur_g20
22:10:27  27  ,eur_g21
22:10:27  28  ,eur_g22
22:10:27  29  ,eur_g23
22:10:27  30  ,eur_g24
22:10:27  31  ,eur_g25
22:10:27  32  ,eur_g26
22:10:27  33  ,eur_g27
22:10:27  34  ,eur_g28
22:10:27  35  ,eur_g29
22:10:27  36  ,eur_g30
22:10:27  37  ,eur_g31
22:10:27  38  ,eur_g32
22:10:27  39  ,eur_g33
22:10:27  40  ,eur_g34
22:10:27  41  ,eur_g35
22:10:27  42  ,eur_g36
22:10:27  43  ,eur_g37
22:10:27  44  ,eur_g38
22:10:27  45  ,eur_g39
22:10:27  46  ,eur_g40
22:10:27  47  ,eur_g41
22:10:27  48  ,aud_g00
22:10:27  49  ,aud_g01
22:10:27  50  ,aud_g02
22:10:27  51  ,aud_g03
22:10:27  52  ,aud_g04
22:10:27  53  ,aud_g05
22:10:27  54  ,aud_g06
22:10:27  55  ,aud_g07
22:10:27  56  ,aud_g08
22:10:27  57  ,aud_g09
22:10:27  58  ,aud_g10
22:10:27  59  ,aud_g11
22:10:27  60  ,aud_g12
22:10:27  61  ,aud_g13
22:10:27  62  ,aud_g14
22:10:27  63  ,aud_g15
22:10:27  64  ,aud_g16
22:10:27  65  ,aud_g17
22:10:27  66  ,aud_g18
22:10:27  67  ,aud_g19
22:10:27  68  ,aud_g20
22:10:27  69  ,aud_g21
22:10:27  70  ,aud_g22
22:10:27  71  ,aud_g23
22:10:27  72  ,aud_g24
22:10:27  73  ,aud_g25
22:10:27  74  ,aud_g26
22:10:27  75  ,aud_g27
22:10:27  76  ,aud_g28
22:10:27  77  ,aud_g29
22:10:27  78  ,aud_g30
22:10:27  79  ,aud_g31
22:10:27  80  ,aud_g32
22:10:27  81  ,aud_g33
22:10:27  82  ,aud_g34
22:10:27  83  ,aud_g35
22:10:27  84  ,aud_g36
22:10:27  85  ,aud_g37
22:10:27  86  ,aud_g38
22:10:27  87  ,aud_g39
22:10:27  88  ,aud_g40
22:10:27  89  ,aud_g41
22:10:27  90  ,gbp_g00
22:10:27  91  ,gbp_g01
22:10:27  92  ,gbp_g02
22:10:27  93  ,gbp_g03
22:10:27  94  ,gbp_g04
22:10:27  95  ,gbp_g05
22:10:27  96  ,gbp_g06
22:10:27  97  ,gbp_g07
22:10:27  98  ,gbp_g08
22:10:27  99  ,gbp_g09
22:10:27 100  ,gbp_g10
22:10:27 101  ,gbp_g11
22:10:27 102  ,gbp_g12
22:10:27 103  ,gbp_g13
22:10:27 104  ,gbp_g14
22:10:27 105  ,gbp_g15
22:10:27 106  ,gbp_g16
22:10:27 107  ,gbp_g17
22:10:27 108  ,gbp_g18
22:10:27 109  ,gbp_g19
22:10:27 110  ,gbp_g20
22:10:27 111  ,gbp_g21
22:10:27 112  ,gbp_g22
22:10:27 113  ,gbp_g23
22:10:27 114  ,gbp_g24
22:10:27 115  ,gbp_g25
22:10:27 116  ,gbp_g26
22:10:27 117  ,gbp_g27
22:10:27 118  ,gbp_g28
22:10:27 119  ,gbp_g29
22:10:27 120  ,gbp_g30
22:10:27 121  ,gbp_g31
22:10:27 122  ,gbp_g32
22:10:27 123  ,gbp_g33
22:10:27 124  ,gbp_g34
22:10:27 125  ,gbp_g35
22:10:27 126  ,gbp_g36
22:10:27 127  ,gbp_g37
22:10:27 128  ,gbp_g38
22:10:27 129  ,gbp_g39
22:10:27 130  ,gbp_g40
22:10:27 131  ,gbp_g41
22:10:27 132  ,jpy_g00
22:10:27 133  ,jpy_g01
22:10:27 134  ,jpy_g02
22:10:27 135  ,jpy_g03
22:10:27 136  ,jpy_g04
22:10:27 137  ,jpy_g05
22:10:27 138  ,jpy_g06
22:10:27 139  ,jpy_g07
22:10:27 140  ,jpy_g08
22:10:27 141  ,jpy_g09
22:10:27 142  ,jpy_g10
22:10:27 143  ,jpy_g11
22:10:27 144  ,jpy_g12
22:10:27 145  ,jpy_g13
22:10:27 146  ,jpy_g14
22:10:27 147  ,jpy_g15
22:10:27 148  ,jpy_g16
22:10:27 149  ,jpy_g17
22:10:27 150  ,jpy_g18
22:10:27 151  ,jpy_g19
22:10:27 152  ,jpy_g20
22:10:27 153  ,jpy_g21
22:10:27 154  ,jpy_g22
22:10:27 155  ,jpy_g23
22:10:27 156  ,jpy_g24
22:10:27 157  ,jpy_g25
22:10:27 158  ,jpy_g26
22:10:27 159  ,jpy_g27
22:10:27 160  ,jpy_g28
22:10:27 161  ,jpy_g29
22:10:27 162  ,jpy_g30
22:10:27 163  ,jpy_g31
22:10:27 164  ,jpy_g32
22:10:27 165  ,jpy_g33
22:10:27 166  ,jpy_g34
22:10:27 167  ,jpy_g35
22:10:27 168  ,jpy_g36
22:10:27 169  ,jpy_g37
22:10:27 170  ,jpy_g38
22:10:27 171  ,jpy_g39
22:10:27 172  ,jpy_g40
22:10:27 173  ,jpy_g41
22:10:27 174  ,cad_g00
22:10:27 175  ,cad_g01
22:10:27 176  ,cad_g02
22:10:27 177  ,cad_g03
22:10:27 178  ,cad_g04
22:10:27 179  ,cad_g05
22:10:27 180  ,cad_g06
22:10:27 181  ,cad_g07
22:10:27 182  ,cad_g08
22:10:27 183  ,cad_g09
22:10:27 184  ,cad_g10
22:10:27 185  ,cad_g11
22:10:27 186  ,cad_g12
22:10:27 187  ,cad_g13
22:10:27 188  ,cad_g14
22:10:27 189  ,cad_g15
22:10:27 190  ,cad_g16
22:10:27 191  ,cad_g17
22:10:27 192  ,cad_g18
22:10:27 193  ,cad_g19
22:10:27 194  ,cad_g20
22:10:27 195  ,cad_g21
22:10:27 196  ,cad_g22
22:10:27 197  ,cad_g23
22:10:27 198  ,cad_g24
22:10:27 199  ,cad_g25
22:10:27 200  ,cad_g26
22:10:27 201  ,cad_g27
22:10:27 202  ,cad_g28
22:10:27 203  ,cad_g29
22:10:27 204  ,cad_g30
22:10:27 205  ,cad_g31
22:10:27 206  ,cad_g32
22:10:27 207  ,cad_g33
22:10:27 208  ,cad_g34
22:10:27 209  ,cad_g35
22:10:27 210  ,cad_g36
22:10:27 211  ,cad_g37
22:10:27 212  ,cad_g38
22:10:27 213  ,cad_g39
22:10:27 214  ,cad_g40
22:10:27 215  ,cad_g41
22:10:27 216  ,chf_g00
22:10:27 217  ,chf_g01
22:10:27 218  ,chf_g02
22:10:27 219  ,chf_g03
22:10:27 220  ,chf_g04
22:10:27 221  ,chf_g05
22:10:27 222  ,chf_g06
22:10:27 223  ,chf_g07
22:10:27 224  ,chf_g08
22:10:27 225  ,chf_g09
22:10:27 226  ,chf_g10
22:10:27 227  ,chf_g11
22:10:27 228  ,chf_g12
22:10:27 229  ,chf_g13
22:10:27 230  ,chf_g14
22:10:27 231  ,chf_g15
22:10:27 232  ,chf_g16
22:10:27 233  ,chf_g17
22:10:27 234  ,chf_g18
22:10:27 235  ,chf_g19
22:10:27 236  ,chf_g20
22:10:27 237  ,chf_g21
22:10:27 238  ,chf_g22
22:10:27 239  ,chf_g23
22:10:27 240  ,chf_g24
22:10:27 241  ,chf_g25
22:10:27 242  ,chf_g26
22:10:27 243  ,chf_g27
22:10:27 244  ,chf_g28
22:10:27 245  ,chf_g29
22:10:27 246  ,chf_g30
22:10:27 247  ,chf_g31
22:10:27 248  ,chf_g32
22:10:27 249  ,chf_g33
22:10:27 250  ,chf_g34
22:10:27 251  ,chf_g35
22:10:27 252  ,chf_g36
22:10:27 253  ,chf_g37
22:10:27 254  ,chf_g38
22:10:27 255  ,chf_g39
22:10:27 256  ,chf_g40
22:10:27 257  ,chf_g41
22:10:27 258  FROM aud_ms6 m
22:10:27 259  WHERE gattn IN('nup','up')
22:10:27 260  AND 1+m.ydate < '&1'||' '||'&2'
22:10:27 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-06'||' '||'21:55:00'

View created.

Elapsed: 00:00:00.13
22:10:27 SQL> 
22:10:27 SQL> -- rpt
22:10:27 SQL> 
22:10:27 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12870
up	     6645

Elapsed: 00:00:00.04
22:10:27 SQL> 
22:10:27 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2011-01-05 21:50:00

Elapsed: 00:00:00.03
22:10:27 SQL> 
22:10:27 SQL> -- Now build model from bme and score sme
22:10:27 SQL> @score1gattn.sql
22:10:27 SQL> -- score1gattn.sql
22:10:27 SQL> 
22:10:27 SQL> -- Does the 1st SVM score
22:10:27 SQL> 
22:10:27 SQL> -- Fill up svmc_apply_prep
22:10:27 SQL> @score_gattn.sql
22:10:27 SQL> --
22:10:27 SQL> -- score_gattn.sql
22:10:27 SQL> --
22:10:27 SQL> 
22:10:27 SQL> -- usage: score_gattn.sql
22:10:27 SQL> 
22:10:27 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
22:10:27 SQL> 
22:10:27 SQL> DEFINE target	= 'gattn'
22:10:27 SQL> DEFINE model_name = 'forex15'
22:10:27 SQL> DEFINE bldtable	= 'bme'
22:10:27 SQL> DEFINE scoretable = 'sme'
22:10:27 SQL> DEFINE case_id	= 'prdate'
22:10:27 SQL> 
22:10:27 SQL> -- Define a variable to help me exclude some columns from some data mining calls
22:10:27 SQL> DEFINE exclude1 = "'&target','&case_id'"
22:10:27 SQL> 
22:10:27 SQL> -- Builds an SVM model using pl/sql.
22:10:27 SQL> 
22:10:27 SQL> -----------------------------------------------------------------------
22:10:27 SQL> --			    BUILD THE MODEL
22:10:27 SQL> -----------------------------------------------------------------------
22:10:27 SQL> 
22:10:27 SQL> -- Cleanup old build data preparation objects for repeat runs
22:10:27 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
22:10:27 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
22:10:27 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
22:10:27 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
22:10:27 SQL> 
22:10:27 SQL> 
22:10:27 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
22:10:27 SQL> --
22:10:27 SQL> -- DROP	TABLE svmc_settings ;
22:10:27 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
22:10:27 SQL> -- DELETE svmc_settings;
22:10:27 SQL> 
22:10:27 SQL> -- The default classification algorithm is Naive Bayes. So override
22:10:27 SQL> -- this choice to SVM using a settings table.
22:10:27 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
22:10:27 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
22:10:27 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
22:10:27 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
22:10:27 SQL> -- models.
22:10:27 SQL> --
22:10:27 SQL> 
22:10:27 SQL> -- Do this once and then comment it out.
22:10:27 SQL> -- That makes script go faster.
22:10:27 SQL> -- BEGIN
22:10:27 SQL> -- -- Populate settings table
22:10:27 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:10:27 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
22:10:27 SQL> --
22:10:27 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:10:27 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
22:10:27 SQL> --
22:10:27 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
22:10:27 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
22:10:27 SQL> --   COMMIT;
22:10:27 SQL> -- END;
22:10:27 SQL> -- /
22:10:27 SQL> 
22:10:27 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
22:10:27 SQL> 
22:10:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
22:10:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:10:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
22:10:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:10:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
22:10:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:10:27 SQL> 
22:10:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
22:10:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:10:27 SQL> 
22:10:27 SQL> --------------------------------
22:10:27 SQL> -- PREPARE BUILD (TRAINING) DATA
22:10:27 SQL> --
22:10:27 SQL> 
22:10:27 SQL> -- 1. Missing Value treatment for all Predictors and
22:10:27 SQL> -- 2. Outlier Treatment and
22:10:27 SQL> -- 3. Normalization are performed below.
22:10:27 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
22:10:27 SQL> --    normalized here.
22:10:27 SQL> 
22:10:27 SQL> BEGIN
22:10:27   2  	-- Perform missing value treatment for all predictors
22:10:27   3  	-- create miss tables
22:10:27   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
22:10:27   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
22:10:27   6  
22:10:27   7  	-- populate miss tables
22:10:27   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
22:10:27   9  	  miss_table_name => 'svmc_miss_num',
22:10:27  10  	  data_table_name => '&bldtable',
22:10:27  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:10:27  12  
22:10:27  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
22:10:27  14  	  miss_table_name => 'svmc_miss_cat',
22:10:27  15  	  data_table_name => '&bldtable',
22:10:27  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:10:27  17  
22:10:27  18  	-- xform input data to replace missing values
22:10:27  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:10:27  20  	  miss_table_name => 'svmc_miss_num',
22:10:27  21  	  data_table_name => '&bldtable',
22:10:27  22  	  xform_view_name => 'xformed_build_miss_num');
22:10:27  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:10:27  24  	  miss_table_name => 'svmc_miss_cat',
22:10:27  25  	  data_table_name => '&bldtable',
22:10:27  26  	  xform_view_name => 'xformed_build_miss_cat');
22:10:27  27  
22:10:27  28  	-- Perform outlier treatment.
22:10:27  29  	-- create clip table
22:10:27  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
22:10:27  31  
22:10:27  32  	-- populate clip table
22:10:27  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
22:10:27  34  	  clip_table_name => 'svmc_clip',
22:10:27  35  	  data_table_name => '&bldtable',
22:10:27  36  	  tail_frac	  => 0.025,
22:10:27  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:10:27  38  
22:10:27  39  	-- xform input data to winsorized data
22:10:27  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
22:10:27  41  	  clip_table_name => 'svmc_clip',
22:10:27  42  	  data_table_name => '&bldtable',
22:10:27  43  	  xform_view_name => 'svmc_winsor');
22:10:27  44  
22:10:27  45  	-- create normalization table
22:10:27  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
22:10:27  47  
22:10:27  48  	-- populate normalization table based on winsorized data
22:10:27  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
22:10:27  50  	  norm_table_name => 'svmc_norm',
22:10:27  51  	  data_table_name => 'svmc_winsor',
22:10:27  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
22:10:27  53  
22:10:27  54  	-- normalize the original data
22:10:27  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:10:27  56  	  norm_table_name => 'svmc_norm',
22:10:27  57  	  data_table_name => '&bldtable',
22:10:27  58  	  xform_view_name => 'svmc_build_prep');
22:10:27  59  END;
22:10:27  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.24
22:10:46 SQL> 
22:10:46 SQL> ---------------------
22:10:46 SQL> -- CREATE A NEW MODEL
22:10:46 SQL> --
22:10:46 SQL> -- Cleanup old model with the same name for repeat runs
22:10:46 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
22:10:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:10:46   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex15');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.11
22:10:47 SQL> 
22:10:47 SQL> -- Build a new SVM Model
22:10:47 SQL> BEGIN
22:10:47   2  	DBMS_DATA_MINING.CREATE_MODEL(
22:10:47   3  	  model_name	      => '&model_name',
22:10:47   4  	  mining_function     => dbms_data_mining.classification,
22:10:47   5  	  data_table_name     => 'svmc_build_prep',
22:10:47   6  	  case_id_column_name => '&case_id',
22:10:47   7  	  target_column_name  => '&target',
22:10:47   8  	  settings_table_name => 'svmc_settings');
22:10:47   9  END;
22:10:47  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex15',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.11
22:11:14 SQL> 
22:11:14 SQL> -----------------------------------------------------------------------
22:11:14 SQL> --			       APPLY/score THE MODEL
22:11:14 SQL> -----------------------------------------------------------------------
22:11:14 SQL> 
22:11:14 SQL> -- Cleanup old scoring data preparation objects for repeat runs
22:11:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
22:11:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:11:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
22:11:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
22:11:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:11:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:11:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
22:11:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
22:11:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
22:11:14 SQL> -----------------------
22:11:14 SQL> -- PREPARE SCORING DATA
22:11:14 SQL> --
22:11:14 SQL> -- If the data for model creation has been prepared, then the data
22:11:14 SQL> -- to be scored using the model must be prepared in the same manner
22:11:14 SQL> -- in order to obtain meaningful results.
22:11:14 SQL> --
22:11:14 SQL> -- 1. Missing Value treatment for all Predictors and
22:11:14 SQL> -- 2. Normalization
22:11:14 SQL> -- No outlier treatment will be performed during test and apply. The
22:11:14 SQL> -- normalization step is sufficient, since the normalization parameters
22:11:14 SQL> -- already capture the effects of outlier treatment done with build data.
22:11:14 SQL> --
22:11:14 SQL> BEGIN
22:11:14   2  	-- Xform Test data to replace missing values
22:11:14   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
22:11:14   4  	  miss_table_name => 'svmc_miss_num',
22:11:14   5  	  data_table_name => '&scoretable',
22:11:14   6  	  xform_view_name => 'xformed_apply_miss_num');
22:11:14   7  
22:11:14   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
22:11:14   9  	  miss_table_name => 'svmc_miss_cat',
22:11:14  10  	  data_table_name => '&scoretable',
22:11:14  11  	  xform_view_name => 'xformed_apply_miss_cat');
22:11:14  12  
22:11:14  13  	-- Normalize the data to be scored
22:11:14  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
22:11:14  15  	  norm_table_name => 'svmc_norm',
22:11:14  16  	  data_table_name => '&scoretable',
22:11:14  17  	  xform_view_name => 'svmc_apply_prep');
22:11:14  18  END;
22:11:14  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
22:11:15 SQL> 
22:11:15 SQL> -- Use same model_name used in score_gattn.sql
22:11:15 SQL> DEFINE model_name = 'forex15'
22:11:15 SQL> 
22:11:15 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
22:11:15 SQL> 
22:11:15 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
22:11:15   2  SELECT
22:11:15   3  prdate
22:11:15   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
22:11:15   5  ,sysdate
22:11:15   6  ,SUBSTR(prdate,1,3)pair
22:11:15   7  ,SUBSTR(prdate,4,19)ydate
22:11:15   8  FROM svmc_apply_prep
22:11:15   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex15,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
22:11:15 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
