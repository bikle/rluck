
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 30 05:06:38 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

05:06:38 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
05:06:38 SQL> 05:06:38 SQL> @aud_score1day.sql  2010-12-30 04:45:00
05:06:38 SQL> --
05:06:38 SQL> -- aud_score1day.sql
05:06:38 SQL> --
05:06:38 SQL> 
05:06:38 SQL> CREATE OR REPLACE VIEW sme AS
05:06:38   2  SELECT
05:06:38   3  'aud'||m.ydate prdate
05:06:38   4  ,NULL gatt
05:06:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:06:38   6  ,eur_g00
05:06:38   7  ,eur_g01
05:06:38   8  ,eur_g02
05:06:38   9  ,eur_g03
05:06:38  10  ,eur_g04
05:06:38  11  ,eur_g05
05:06:38  12  ,eur_g06
05:06:38  13  ,eur_g07
05:06:38  14  ,eur_g08
05:06:38  15  ,eur_g09
05:06:38  16  ,eur_g10
05:06:38  17  ,eur_g11
05:06:38  18  ,eur_g12
05:06:38  19  ,eur_g13
05:06:38  20  ,eur_g14
05:06:38  21  ,eur_g15
05:06:38  22  ,eur_g16
05:06:38  23  ,eur_g17
05:06:38  24  ,eur_g18
05:06:38  25  ,eur_g19
05:06:38  26  ,eur_g20
05:06:38  27  ,eur_g21
05:06:38  28  ,eur_g22
05:06:38  29  ,eur_g23
05:06:38  30  ,eur_g24
05:06:38  31  ,eur_g25
05:06:38  32  ,eur_g26
05:06:38  33  ,eur_g27
05:06:38  34  ,eur_g28
05:06:38  35  ,eur_g29
05:06:38  36  ,eur_g30
05:06:38  37  ,eur_g31
05:06:38  38  ,eur_g32
05:06:38  39  ,eur_g33
05:06:38  40  ,eur_g34
05:06:38  41  ,eur_g35
05:06:38  42  ,eur_g36
05:06:38  43  ,eur_g37
05:06:38  44  ,eur_g38
05:06:38  45  ,eur_g39
05:06:38  46  ,eur_g40
05:06:38  47  ,eur_g41
05:06:38  48  ,aud_g00
05:06:38  49  ,aud_g01
05:06:38  50  ,aud_g02
05:06:38  51  ,aud_g03
05:06:38  52  ,aud_g04
05:06:38  53  ,aud_g05
05:06:38  54  ,aud_g06
05:06:38  55  ,aud_g07
05:06:38  56  ,aud_g08
05:06:38  57  ,aud_g09
05:06:38  58  ,aud_g10
05:06:38  59  ,aud_g11
05:06:38  60  ,aud_g12
05:06:38  61  ,aud_g13
05:06:38  62  ,aud_g14
05:06:38  63  ,aud_g15
05:06:38  64  ,aud_g16
05:06:38  65  ,aud_g17
05:06:38  66  ,aud_g18
05:06:38  67  ,aud_g19
05:06:38  68  ,aud_g20
05:06:38  69  ,aud_g21
05:06:38  70  ,aud_g22
05:06:38  71  ,aud_g23
05:06:38  72  ,aud_g24
05:06:38  73  ,aud_g25
05:06:38  74  ,aud_g26
05:06:38  75  ,aud_g27
05:06:38  76  ,aud_g28
05:06:38  77  ,aud_g29
05:06:38  78  ,aud_g30
05:06:38  79  ,aud_g31
05:06:38  80  ,aud_g32
05:06:38  81  ,aud_g33
05:06:38  82  ,aud_g34
05:06:38  83  ,aud_g35
05:06:38  84  ,aud_g36
05:06:38  85  ,aud_g37
05:06:38  86  ,aud_g38
05:06:38  87  ,aud_g39
05:06:38  88  ,aud_g40
05:06:38  89  ,aud_g41
05:06:38  90  ,gbp_g00
05:06:38  91  ,gbp_g01
05:06:38  92  ,gbp_g02
05:06:38  93  ,gbp_g03
05:06:38  94  ,gbp_g04
05:06:38  95  ,gbp_g05
05:06:38  96  ,gbp_g06
05:06:38  97  ,gbp_g07
05:06:38  98  ,gbp_g08
05:06:38  99  ,gbp_g09
05:06:38 100  ,gbp_g10
05:06:38 101  ,gbp_g11
05:06:38 102  ,gbp_g12
05:06:38 103  ,gbp_g13
05:06:38 104  ,gbp_g14
05:06:38 105  ,gbp_g15
05:06:38 106  ,gbp_g16
05:06:38 107  ,gbp_g17
05:06:38 108  ,gbp_g18
05:06:38 109  ,gbp_g19
05:06:38 110  ,gbp_g20
05:06:38 111  ,gbp_g21
05:06:38 112  ,gbp_g22
05:06:38 113  ,gbp_g23
05:06:38 114  ,gbp_g24
05:06:38 115  ,gbp_g25
05:06:38 116  ,gbp_g26
05:06:38 117  ,gbp_g27
05:06:38 118  ,gbp_g28
05:06:38 119  ,gbp_g29
05:06:38 120  ,gbp_g30
05:06:38 121  ,gbp_g31
05:06:38 122  ,gbp_g32
05:06:38 123  ,gbp_g33
05:06:38 124  ,gbp_g34
05:06:38 125  ,gbp_g35
05:06:38 126  ,gbp_g36
05:06:38 127  ,gbp_g37
05:06:38 128  ,gbp_g38
05:06:38 129  ,gbp_g39
05:06:38 130  ,gbp_g40
05:06:38 131  ,gbp_g41
05:06:38 132  ,jpy_g00
05:06:38 133  ,jpy_g01
05:06:38 134  ,jpy_g02
05:06:38 135  ,jpy_g03
05:06:38 136  ,jpy_g04
05:06:38 137  ,jpy_g05
05:06:38 138  ,jpy_g06
05:06:38 139  ,jpy_g07
05:06:38 140  ,jpy_g08
05:06:38 141  ,jpy_g09
05:06:38 142  ,jpy_g10
05:06:38 143  ,jpy_g11
05:06:38 144  ,jpy_g12
05:06:38 145  ,jpy_g13
05:06:38 146  ,jpy_g14
05:06:38 147  ,jpy_g15
05:06:38 148  ,jpy_g16
05:06:38 149  ,jpy_g17
05:06:38 150  ,jpy_g18
05:06:38 151  ,jpy_g19
05:06:38 152  ,jpy_g20
05:06:38 153  ,jpy_g21
05:06:38 154  ,jpy_g22
05:06:38 155  ,jpy_g23
05:06:38 156  ,jpy_g24
05:06:38 157  ,jpy_g25
05:06:38 158  ,jpy_g26
05:06:38 159  ,jpy_g27
05:06:38 160  ,jpy_g28
05:06:38 161  ,jpy_g29
05:06:38 162  ,jpy_g30
05:06:38 163  ,jpy_g31
05:06:38 164  ,jpy_g32
05:06:38 165  ,jpy_g33
05:06:38 166  ,jpy_g34
05:06:38 167  ,jpy_g35
05:06:38 168  ,jpy_g36
05:06:38 169  ,jpy_g37
05:06:38 170  ,jpy_g38
05:06:38 171  ,jpy_g39
05:06:38 172  ,jpy_g40
05:06:38 173  ,jpy_g41
05:06:38 174  ,cad_g00
05:06:38 175  ,cad_g01
05:06:38 176  ,cad_g02
05:06:38 177  ,cad_g03
05:06:38 178  ,cad_g04
05:06:38 179  ,cad_g05
05:06:38 180  ,cad_g06
05:06:38 181  ,cad_g07
05:06:38 182  ,cad_g08
05:06:38 183  ,cad_g09
05:06:38 184  ,cad_g10
05:06:38 185  ,cad_g11
05:06:38 186  ,cad_g12
05:06:38 187  ,cad_g13
05:06:38 188  ,cad_g14
05:06:38 189  ,cad_g15
05:06:38 190  ,cad_g16
05:06:38 191  ,cad_g17
05:06:38 192  ,cad_g18
05:06:38 193  ,cad_g19
05:06:38 194  ,cad_g20
05:06:38 195  ,cad_g21
05:06:38 196  ,cad_g22
05:06:38 197  ,cad_g23
05:06:38 198  ,cad_g24
05:06:38 199  ,cad_g25
05:06:38 200  ,cad_g26
05:06:38 201  ,cad_g27
05:06:38 202  ,cad_g28
05:06:38 203  ,cad_g29
05:06:38 204  ,cad_g30
05:06:38 205  ,cad_g31
05:06:38 206  ,cad_g32
05:06:38 207  ,cad_g33
05:06:38 208  ,cad_g34
05:06:38 209  ,cad_g35
05:06:38 210  ,cad_g36
05:06:38 211  ,cad_g37
05:06:38 212  ,cad_g38
05:06:38 213  ,cad_g39
05:06:38 214  ,cad_g40
05:06:38 215  ,cad_g41
05:06:38 216  ,chf_g00
05:06:38 217  ,chf_g01
05:06:38 218  ,chf_g02
05:06:38 219  ,chf_g03
05:06:38 220  ,chf_g04
05:06:38 221  ,chf_g05
05:06:38 222  ,chf_g06
05:06:38 223  ,chf_g07
05:06:38 224  ,chf_g08
05:06:38 225  ,chf_g09
05:06:38 226  ,chf_g10
05:06:38 227  ,chf_g11
05:06:38 228  ,chf_g12
05:06:38 229  ,chf_g13
05:06:38 230  ,chf_g14
05:06:38 231  ,chf_g15
05:06:38 232  ,chf_g16
05:06:38 233  ,chf_g17
05:06:38 234  ,chf_g18
05:06:38 235  ,chf_g19
05:06:38 236  ,chf_g20
05:06:38 237  ,chf_g21
05:06:38 238  ,chf_g22
05:06:38 239  ,chf_g23
05:06:38 240  ,chf_g24
05:06:38 241  ,chf_g25
05:06:38 242  ,chf_g26
05:06:38 243  ,chf_g27
05:06:38 244  ,chf_g28
05:06:38 245  ,chf_g29
05:06:38 246  ,chf_g30
05:06:38 247  ,chf_g31
05:06:38 248  ,chf_g32
05:06:38 249  ,chf_g33
05:06:38 250  ,chf_g34
05:06:38 251  ,chf_g35
05:06:38 252  ,chf_g36
05:06:38 253  ,chf_g37
05:06:38 254  ,chf_g38
05:06:38 255  ,chf_g39
05:06:38 256  ,chf_g40
05:06:38 257  ,chf_g41
05:06:38 258  FROM aud_ms6 m
05:06:38 259  WHERE m.ydate = '&1'||' '||'&2'
05:06:38 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'04:45:00'

View created.

Elapsed: 00:00:00.15
05:06:39 SQL> 
05:06:39 SQL> -- rpt
05:06:39 SQL> -- We should see just 1 row:
05:06:39 SQL> 
05:06:39 SQL> SELECT COUNT(prdate) FROM sme
05:06:39   2  
05:06:39 SQL> -- Build the model:
05:06:39 SQL> CREATE OR REPLACE VIEW bme AS
05:06:39   2  SELECT
05:06:39   3  'aud'||m.ydate prdate
05:06:39   4  ,gatt
05:06:39   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:06:39   6  ,eur_g00
05:06:39   7  ,eur_g01
05:06:39   8  ,eur_g02
05:06:39   9  ,eur_g03
05:06:39  10  ,eur_g04
05:06:39  11  ,eur_g05
05:06:39  12  ,eur_g06
05:06:39  13  ,eur_g07
05:06:39  14  ,eur_g08
05:06:39  15  ,eur_g09
05:06:39  16  ,eur_g10
05:06:39  17  ,eur_g11
05:06:39  18  ,eur_g12
05:06:39  19  ,eur_g13
05:06:39  20  ,eur_g14
05:06:39  21  ,eur_g15
05:06:39  22  ,eur_g16
05:06:39  23  ,eur_g17
05:06:39  24  ,eur_g18
05:06:39  25  ,eur_g19
05:06:39  26  ,eur_g20
05:06:39  27  ,eur_g21
05:06:39  28  ,eur_g22
05:06:39  29  ,eur_g23
05:06:39  30  ,eur_g24
05:06:39  31  ,eur_g25
05:06:39  32  ,eur_g26
05:06:39  33  ,eur_g27
05:06:39  34  ,eur_g28
05:06:39  35  ,eur_g29
05:06:39  36  ,eur_g30
05:06:39  37  ,eur_g31
05:06:39  38  ,eur_g32
05:06:39  39  ,eur_g33
05:06:39  40  ,eur_g34
05:06:39  41  ,eur_g35
05:06:39  42  ,eur_g36
05:06:39  43  ,eur_g37
05:06:39  44  ,eur_g38
05:06:39  45  ,eur_g39
05:06:39  46  ,eur_g40
05:06:39  47  ,eur_g41
05:06:39  48  ,aud_g00
05:06:39  49  ,aud_g01
05:06:39  50  ,aud_g02
05:06:39  51  ,aud_g03
05:06:39  52  ,aud_g04
05:06:39  53  ,aud_g05
05:06:39  54  ,aud_g06
05:06:39  55  ,aud_g07
05:06:39  56  ,aud_g08
05:06:39  57  ,aud_g09
05:06:39  58  ,aud_g10
05:06:39  59  ,aud_g11
05:06:39  60  ,aud_g12
05:06:39  61  ,aud_g13
05:06:39  62  ,aud_g14
05:06:39  63  ,aud_g15
05:06:39  64  ,aud_g16
05:06:39  65  ,aud_g17
05:06:39  66  ,aud_g18
05:06:39  67  ,aud_g19
05:06:39  68  ,aud_g20
05:06:39  69  ,aud_g21
05:06:39  70  ,aud_g22
05:06:39  71  ,aud_g23
05:06:39  72  ,aud_g24
05:06:39  73  ,aud_g25
05:06:39  74  ,aud_g26
05:06:39  75  ,aud_g27
05:06:39  76  ,aud_g28
05:06:39  77  ,aud_g29
05:06:39  78  ,aud_g30
05:06:39  79  ,aud_g31
05:06:39  80  ,aud_g32
05:06:39  81  ,aud_g33
05:06:39  82  ,aud_g34
05:06:39  83  ,aud_g35
05:06:39  84  ,aud_g36
05:06:39  85  ,aud_g37
05:06:39  86  ,aud_g38
05:06:39  87  ,aud_g39
05:06:39  88  ,aud_g40
05:06:39  89  ,aud_g41
05:06:39  90  ,gbp_g00
05:06:39  91  ,gbp_g01
05:06:39  92  ,gbp_g02
05:06:39  93  ,gbp_g03
05:06:39  94  ,gbp_g04
05:06:39  95  ,gbp_g05
05:06:39  96  ,gbp_g06
05:06:39  97  ,gbp_g07
05:06:39  98  ,gbp_g08
05:06:39  99  ,gbp_g09
05:06:39 100  ,gbp_g10
05:06:39 101  ,gbp_g11
05:06:39 102  ,gbp_g12
05:06:39 103  ,gbp_g13
05:06:39 104  ,gbp_g14
05:06:39 105  ,gbp_g15
05:06:39 106  ,gbp_g16
05:06:39 107  ,gbp_g17
05:06:39 108  ,gbp_g18
05:06:39 109  ,gbp_g19
05:06:39 110  ,gbp_g20
05:06:39 111  ,gbp_g21
05:06:39 112  ,gbp_g22
05:06:39 113  ,gbp_g23
05:06:39 114  ,gbp_g24
05:06:39 115  ,gbp_g25
05:06:39 116  ,gbp_g26
05:06:39 117  ,gbp_g27
05:06:39 118  ,gbp_g28
05:06:39 119  ,gbp_g29
05:06:39 120  ,gbp_g30
05:06:39 121  ,gbp_g31
05:06:39 122  ,gbp_g32
05:06:39 123  ,gbp_g33
05:06:39 124  ,gbp_g34
05:06:39 125  ,gbp_g35
05:06:39 126  ,gbp_g36
05:06:39 127  ,gbp_g37
05:06:39 128  ,gbp_g38
05:06:39 129  ,gbp_g39
05:06:39 130  ,gbp_g40
05:06:39 131  ,gbp_g41
05:06:39 132  ,jpy_g00
05:06:39 133  ,jpy_g01
05:06:39 134  ,jpy_g02
05:06:39 135  ,jpy_g03
05:06:39 136  ,jpy_g04
05:06:39 137  ,jpy_g05
05:06:39 138  ,jpy_g06
05:06:39 139  ,jpy_g07
05:06:39 140  ,jpy_g08
05:06:39 141  ,jpy_g09
05:06:39 142  ,jpy_g10
05:06:39 143  ,jpy_g11
05:06:39 144  ,jpy_g12
05:06:39 145  ,jpy_g13
05:06:39 146  ,jpy_g14
05:06:39 147  ,jpy_g15
05:06:39 148  ,jpy_g16
05:06:39 149  ,jpy_g17
05:06:39 150  ,jpy_g18
05:06:39 151  ,jpy_g19
05:06:39 152  ,jpy_g20
05:06:39 153  ,jpy_g21
05:06:39 154  ,jpy_g22
05:06:39 155  ,jpy_g23
05:06:39 156  ,jpy_g24
05:06:39 157  ,jpy_g25
05:06:39 158  ,jpy_g26
05:06:39 159  ,jpy_g27
05:06:39 160  ,jpy_g28
05:06:39 161  ,jpy_g29
05:06:39 162  ,jpy_g30
05:06:39 163  ,jpy_g31
05:06:39 164  ,jpy_g32
05:06:39 165  ,jpy_g33
05:06:39 166  ,jpy_g34
05:06:39 167  ,jpy_g35
05:06:39 168  ,jpy_g36
05:06:39 169  ,jpy_g37
05:06:39 170  ,jpy_g38
05:06:39 171  ,jpy_g39
05:06:39 172  ,jpy_g40
05:06:39 173  ,jpy_g41
05:06:39 174  ,cad_g00
05:06:39 175  ,cad_g01
05:06:39 176  ,cad_g02
05:06:39 177  ,cad_g03
05:06:39 178  ,cad_g04
05:06:39 179  ,cad_g05
05:06:39 180  ,cad_g06
05:06:39 181  ,cad_g07
05:06:39 182  ,cad_g08
05:06:39 183  ,cad_g09
05:06:39 184  ,cad_g10
05:06:39 185  ,cad_g11
05:06:39 186  ,cad_g12
05:06:39 187  ,cad_g13
05:06:39 188  ,cad_g14
05:06:39 189  ,cad_g15
05:06:39 190  ,cad_g16
05:06:39 191  ,cad_g17
05:06:39 192  ,cad_g18
05:06:39 193  ,cad_g19
05:06:39 194  ,cad_g20
05:06:39 195  ,cad_g21
05:06:39 196  ,cad_g22
05:06:39 197  ,cad_g23
05:06:39 198  ,cad_g24
05:06:39 199  ,cad_g25
05:06:39 200  ,cad_g26
05:06:39 201  ,cad_g27
05:06:39 202  ,cad_g28
05:06:39 203  ,cad_g29
05:06:39 204  ,cad_g30
05:06:39 205  ,cad_g31
05:06:39 206  ,cad_g32
05:06:39 207  ,cad_g33
05:06:39 208  ,cad_g34
05:06:39 209  ,cad_g35
05:06:39 210  ,cad_g36
05:06:39 211  ,cad_g37
05:06:39 212  ,cad_g38
05:06:39 213  ,cad_g39
05:06:39 214  ,cad_g40
05:06:39 215  ,cad_g41
05:06:39 216  ,chf_g00
05:06:39 217  ,chf_g01
05:06:39 218  ,chf_g02
05:06:39 219  ,chf_g03
05:06:39 220  ,chf_g04
05:06:39 221  ,chf_g05
05:06:39 222  ,chf_g06
05:06:39 223  ,chf_g07
05:06:39 224  ,chf_g08
05:06:39 225  ,chf_g09
05:06:39 226  ,chf_g10
05:06:39 227  ,chf_g11
05:06:39 228  ,chf_g12
05:06:39 229  ,chf_g13
05:06:39 230  ,chf_g14
05:06:39 231  ,chf_g15
05:06:39 232  ,chf_g16
05:06:39 233  ,chf_g17
05:06:39 234  ,chf_g18
05:06:39 235  ,chf_g19
05:06:39 236  ,chf_g20
05:06:39 237  ,chf_g21
05:06:39 238  ,chf_g22
05:06:39 239  ,chf_g23
05:06:39 240  ,chf_g24
05:06:39 241  ,chf_g25
05:06:39 242  ,chf_g26
05:06:39 243  ,chf_g27
05:06:39 244  ,chf_g28
05:06:39 245  ,chf_g29
05:06:39 246  ,chf_g30
05:06:39 247  ,chf_g31
05:06:39 248  ,chf_g32
05:06:39 249  ,chf_g33
05:06:39 250  ,chf_g34
05:06:39 251  ,chf_g35
05:06:39 252  ,chf_g36
05:06:39 253  ,chf_g37
05:06:39 254  ,chf_g38
05:06:39 255  ,chf_g39
05:06:39 256  ,chf_g40
05:06:39 257  ,chf_g41
05:06:39 258  FROM aud_ms6 m
05:06:39 259  WHERE gatt IN('nup','up')
05:06:39 260  AND 1+m.ydate < '&1'||' '||'&2'
05:06:39 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'04:45:00'

View created.

Elapsed: 00:00:00.15
05:06:39 SQL> 
05:06:39 SQL> -- rpt
05:06:39 SQL> 
05:06:39 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
05:06:39   2  
05:06:39 SQL> SELECT MAX(prdate) FROM bme
05:06:39   2  
05:06:39 SQL> -- Now build model from bme and score sme
05:06:39 SQL> @score1.sql
05:06:39 SQL> -- score1.sql
05:06:39 SQL> 
05:06:39 SQL> -- Does the 1st SVM score
05:06:39 SQL> 
05:06:39 SQL> -- Fill up svmc_apply_prep
05:06:39 SQL> @score.sql
05:06:39 SQL> --
05:06:39 SQL> -- score.sql
05:06:39 SQL> --
05:06:39 SQL> 
05:06:39 SQL> -- usage: score.sql
05:06:39 SQL> 
05:06:39 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
05:06:39 SQL> 
05:06:39 SQL> DEFINE target	= 'gatt'
05:06:39 SQL> DEFINE model_name = 'forex14'
05:06:39 SQL> DEFINE bldtable	= 'bme'
05:06:39 SQL> DEFINE scoretable = 'sme'
05:06:39 SQL> DEFINE case_id	= 'prdate'
05:06:39 SQL> 
05:06:39 SQL> -- Define a variable to help me exclude some columns from some data mining calls
05:06:39 SQL> DEFINE exclude1 = "'&target','&case_id'"
05:06:39 SQL> 
05:06:39 SQL> -- Builds an SVM model using pl/sql.
05:06:39 SQL> 
05:06:39 SQL> -----------------------------------------------------------------------
05:06:39 SQL> --			    BUILD THE MODEL
05:06:39 SQL> -----------------------------------------------------------------------
05:06:39 SQL> 
05:06:39 SQL> -- Cleanup old build data preparation objects for repeat runs
05:06:39 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
05:06:39 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
05:06:39 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
05:06:39 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
05:06:39 SQL> 
05:06:39 SQL> 
05:06:39 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
05:06:39 SQL> --
05:06:39 SQL> -- DROP	TABLE svmc_settings ;
05:06:39 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
05:06:39 SQL> -- DELETE svmc_settings;
05:06:39 SQL> 
05:06:39 SQL> -- The default classification algorithm is Naive Bayes. So override
05:06:39 SQL> -- this choice to SVM using a settings table.
05:06:39 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
05:06:39 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
05:06:39 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
05:06:39 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
05:06:39 SQL> -- models.
05:06:39 SQL> --
05:06:39 SQL> 
05:06:39 SQL> -- Do this once and then comment it out.
05:06:39 SQL> -- That makes script go faster.
05:06:39 SQL> -- BEGIN
05:06:39 SQL> -- -- Populate settings table
05:06:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:06:39 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
05:06:39 SQL> --
05:06:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:06:39 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
05:06:39 SQL> --
05:06:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:06:39 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
05:06:39 SQL> --   COMMIT;
05:06:39 SQL> -- END;
05:06:39 SQL> -- /
05:06:39 SQL> 
05:06:39 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
05:06:39 SQL> 
05:06:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
05:06:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:06:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:06:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
05:06:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:06:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:06:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
05:06:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:06:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:06:39 SQL> 
05:06:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
05:06:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:06:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:06:39 SQL> 
05:06:39 SQL> --------------------------------
05:06:39 SQL> -- PREPARE BUILD (TRAINING) DATA
05:06:39 SQL> --
05:06:39 SQL> 
05:06:39 SQL> -- 1. Missing Value treatment for all Predictors and
05:06:39 SQL> -- 2. Outlier Treatment and
05:06:39 SQL> -- 3. Normalization are performed below.
05:06:39 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
05:06:39 SQL> --    normalized here.
05:06:39 SQL> 
05:06:39 SQL> BEGIN
05:06:39   2  	-- Perform missing value treatment for all predictors
05:06:39   3  	-- create miss tables
05:06:39   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
05:06:39   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
05:06:39   6  
05:06:39   7  	-- populate miss tables
05:06:39   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
05:06:39   9  	  miss_table_name => 'svmc_miss_num',
05:06:39  10  	  data_table_name => '&bldtable',
05:06:39  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:06:39  12  
05:06:39  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
05:06:39  14  	  miss_table_name => 'svmc_miss_cat',
05:06:39  15  	  data_table_name => '&bldtable',
05:06:39  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:06:39  17  
05:06:39  18  	-- xform input data to replace missing values
05:06:39  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:06:39  20  	  miss_table_name => 'svmc_miss_num',
05:06:39  21  	  data_table_name => '&bldtable',
05:06:39  22  	  xform_view_name => 'xformed_build_miss_num');
05:06:39  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:06:39  24  	  miss_table_name => 'svmc_miss_cat',
05:06:39  25  	  data_table_name => '&bldtable',
05:06:39  26  	  xform_view_name => 'xformed_build_miss_cat');
05:06:39  27  
05:06:39  28  	-- Perform outlier treatment.
05:06:39  29  	-- create clip table
05:06:39  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
05:06:39  31  
05:06:39  32  	-- populate clip table
05:06:39  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
05:06:39  34  	  clip_table_name => 'svmc_clip',
05:06:39  35  	  data_table_name => '&bldtable',
05:06:39  36  	  tail_frac	  => 0.025,
05:06:39  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:06:39  38  
05:06:39  39  	-- xform input data to winsorized data
05:06:39  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
05:06:39  41  	  clip_table_name => 'svmc_clip',
05:06:39  42  	  data_table_name => '&bldtable',
05:06:39  43  	  xform_view_name => 'svmc_winsor');
05:06:39  44  
05:06:39  45  	-- create normalization table
05:06:39  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
05:06:39  47  
05:06:39  48  	-- populate normalization table based on winsorized data
05:06:39  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
05:06:39  50  	  norm_table_name => 'svmc_norm',
05:06:39  51  	  data_table_name => 'svmc_winsor',
05:06:39  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:06:39  53  
05:06:39  54  	-- normalize the original data
05:06:39  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:06:39  56  	  norm_table_name => 'svmc_norm',
05:06:39  57  	  data_table_name => '&bldtable',
05:06:39  58  	  xform_view_name => 'svmc_build_prep');
05:06:39  59  END;
05:06:39  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.36
05:06:57 SQL> 
05:06:57 SQL> ---------------------
05:06:57 SQL> -- CREATE A NEW MODEL
05:06:57 SQL> --
05:06:57 SQL> -- Cleanup old model with the same name for repeat runs
05:06:57 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
05:06:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:06:57   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.65
05:06:58 SQL> 
05:06:58 SQL> -- Build a new SVM Model
05:06:58 SQL> BEGIN
05:06:58   2  	DBMS_DATA_MINING.CREATE_MODEL(
05:06:58   3  	  model_name	      => '&model_name',
05:06:58   4  	  mining_function     => dbms_data_mining.classification,
05:06:58   5  	  data_table_name     => 'svmc_build_prep',
05:06:58   6  	  case_id_column_name => '&case_id',
05:06:58   7  	  target_column_name  => '&target',
05:06:58   8  	  settings_table_name => 'svmc_settings');
05:06:58   9  END;
05:06:58  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.85
05:07:27 SQL> 
05:07:27 SQL> -----------------------------------------------------------------------
05:07:27 SQL> --			       APPLY/score THE MODEL
05:07:27 SQL> -----------------------------------------------------------------------
05:07:27 SQL> 
05:07:27 SQL> -- Cleanup old scoring data preparation objects for repeat runs
05:07:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
05:07:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:07:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:07:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
05:07:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:07:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:07:27 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
05:07:27   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:07:27   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:07:27 SQL> -----------------------
05:07:27 SQL> -- PREPARE SCORING DATA
05:07:27 SQL> --
05:07:27 SQL> -- If the data for model creation has been prepared, then the data
05:07:27 SQL> -- to be scored using the model must be prepared in the same manner
05:07:27 SQL> -- in order to obtain meaningful results.
05:07:27 SQL> --
05:07:27 SQL> -- 1. Missing Value treatment for all Predictors and
05:07:27 SQL> -- 2. Normalization
05:07:27 SQL> -- No outlier treatment will be performed during test and apply. The
05:07:27 SQL> -- normalization step is sufficient, since the normalization parameters
05:07:27 SQL> -- already capture the effects of outlier treatment done with build data.
05:07:27 SQL> --
05:07:27 SQL> BEGIN
05:07:27   2  	-- Xform Test data to replace missing values
05:07:27   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:07:27   4  	  miss_table_name => 'svmc_miss_num',
05:07:27   5  	  data_table_name => '&scoretable',
05:07:27   6  	  xform_view_name => 'xformed_apply_miss_num');
05:07:27   7  
05:07:27   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:07:27   9  	  miss_table_name => 'svmc_miss_cat',
05:07:27  10  	  data_table_name => '&scoretable',
05:07:27  11  	  xform_view_name => 'xformed_apply_miss_cat');
05:07:27  12  
05:07:27  13  	-- Normalize the data to be scored
05:07:27  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:07:27  15  	  norm_table_name => 'svmc_norm',
05:07:27  16  	  data_table_name => '&scoretable',
05:07:27  17  	  xform_view_name => 'svmc_apply_prep');
05:07:27  18  END;
05:07:27  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
05:07:28 SQL> 
05:07:28 SQL> -- Use same model_name used in score.sql
05:07:28 SQL> DEFINE model_name = 'forex14'
05:07:28 SQL> 
05:07:28 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
05:07:28 SQL> 
05:07:28 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
05:07:28 SQL> 
05:07:28 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
05:07:28   2  SELECT
05:07:28   3  prdate
05:07:28   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
05:07:28   5  ,sysdate
05:07:28   6  ,SUBSTR(prdate,1,3)pair
05:07:28   7  ,SUBSTR(prdate,4,19)ydate
05:07:28   8  FROM svmc_apply_prep
05:07:28   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
05:07:28 SQL> @aud_score1day_gattn.sql	2010-12-30 04:45:00
05:07:28 SQL> --
05:07:28 SQL> -- aud_score1day_gattn.sql
05:07:28 SQL> --
05:07:28 SQL> 
05:07:28 SQL> CREATE OR REPLACE VIEW sme AS
05:07:28   2  SELECT
05:07:28   3  'aud'||m.ydate prdate
05:07:28   4  ,NULL gattn
05:07:28   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:07:28   6  ,eur_g00
05:07:28   7  ,eur_g01
05:07:28   8  ,eur_g02
05:07:28   9  ,eur_g03
05:07:28  10  ,eur_g04
05:07:28  11  ,eur_g05
05:07:28  12  ,eur_g06
05:07:28  13  ,eur_g07
05:07:28  14  ,eur_g08
05:07:28  15  ,eur_g09
05:07:28  16  ,eur_g10
05:07:28  17  ,eur_g11
05:07:28  18  ,eur_g12
05:07:28  19  ,eur_g13
05:07:28  20  ,eur_g14
05:07:28  21  ,eur_g15
05:07:28  22  ,eur_g16
05:07:28  23  ,eur_g17
05:07:28  24  ,eur_g18
05:07:28  25  ,eur_g19
05:07:28  26  ,eur_g20
05:07:28  27  ,eur_g21
05:07:28  28  ,eur_g22
05:07:28  29  ,eur_g23
05:07:28  30  ,eur_g24
05:07:28  31  ,eur_g25
05:07:28  32  ,eur_g26
05:07:28  33  ,eur_g27
05:07:28  34  ,eur_g28
05:07:28  35  ,eur_g29
05:07:28  36  ,eur_g30
05:07:28  37  ,eur_g31
05:07:28  38  ,eur_g32
05:07:28  39  ,eur_g33
05:07:28  40  ,eur_g34
05:07:28  41  ,eur_g35
05:07:28  42  ,eur_g36
05:07:28  43  ,eur_g37
05:07:28  44  ,eur_g38
05:07:28  45  ,eur_g39
05:07:28  46  ,eur_g40
05:07:28  47  ,eur_g41
05:07:28  48  ,aud_g00
05:07:28  49  ,aud_g01
05:07:28  50  ,aud_g02
05:07:28  51  ,aud_g03
05:07:28  52  ,aud_g04
05:07:28  53  ,aud_g05
05:07:28  54  ,aud_g06
05:07:28  55  ,aud_g07
05:07:28  56  ,aud_g08
05:07:28  57  ,aud_g09
05:07:28  58  ,aud_g10
05:07:28  59  ,aud_g11
05:07:28  60  ,aud_g12
05:07:28  61  ,aud_g13
05:07:28  62  ,aud_g14
05:07:28  63  ,aud_g15
05:07:28  64  ,aud_g16
05:07:28  65  ,aud_g17
05:07:28  66  ,aud_g18
05:07:28  67  ,aud_g19
05:07:28  68  ,aud_g20
05:07:28  69  ,aud_g21
05:07:28  70  ,aud_g22
05:07:28  71  ,aud_g23
05:07:28  72  ,aud_g24
05:07:28  73  ,aud_g25
05:07:28  74  ,aud_g26
05:07:28  75  ,aud_g27
05:07:28  76  ,aud_g28
05:07:28  77  ,aud_g29
05:07:28  78  ,aud_g30
05:07:28  79  ,aud_g31
05:07:28  80  ,aud_g32
05:07:28  81  ,aud_g33
05:07:28  82  ,aud_g34
05:07:28  83  ,aud_g35
05:07:28  84  ,aud_g36
05:07:28  85  ,aud_g37
05:07:28  86  ,aud_g38
05:07:28  87  ,aud_g39
05:07:28  88  ,aud_g40
05:07:28  89  ,aud_g41
05:07:28  90  ,gbp_g00
05:07:28  91  ,gbp_g01
05:07:28  92  ,gbp_g02
05:07:28  93  ,gbp_g03
05:07:28  94  ,gbp_g04
05:07:28  95  ,gbp_g05
05:07:28  96  ,gbp_g06
05:07:28  97  ,gbp_g07
05:07:28  98  ,gbp_g08
05:07:28  99  ,gbp_g09
05:07:28 100  ,gbp_g10
05:07:28 101  ,gbp_g11
05:07:28 102  ,gbp_g12
05:07:28 103  ,gbp_g13
05:07:28 104  ,gbp_g14
05:07:28 105  ,gbp_g15
05:07:28 106  ,gbp_g16
05:07:28 107  ,gbp_g17
05:07:28 108  ,gbp_g18
05:07:28 109  ,gbp_g19
05:07:28 110  ,gbp_g20
05:07:28 111  ,gbp_g21
05:07:28 112  ,gbp_g22
05:07:28 113  ,gbp_g23
05:07:28 114  ,gbp_g24
05:07:28 115  ,gbp_g25
05:07:28 116  ,gbp_g26
05:07:28 117  ,gbp_g27
05:07:28 118  ,gbp_g28
05:07:28 119  ,gbp_g29
05:07:28 120  ,gbp_g30
05:07:28 121  ,gbp_g31
05:07:28 122  ,gbp_g32
05:07:28 123  ,gbp_g33
05:07:28 124  ,gbp_g34
05:07:28 125  ,gbp_g35
05:07:28 126  ,gbp_g36
05:07:28 127  ,gbp_g37
05:07:28 128  ,gbp_g38
05:07:28 129  ,gbp_g39
05:07:28 130  ,gbp_g40
05:07:28 131  ,gbp_g41
05:07:28 132  ,jpy_g00
05:07:28 133  ,jpy_g01
05:07:28 134  ,jpy_g02
05:07:28 135  ,jpy_g03
05:07:28 136  ,jpy_g04
05:07:28 137  ,jpy_g05
05:07:28 138  ,jpy_g06
05:07:28 139  ,jpy_g07
05:07:28 140  ,jpy_g08
05:07:28 141  ,jpy_g09
05:07:28 142  ,jpy_g10
05:07:28 143  ,jpy_g11
05:07:28 144  ,jpy_g12
05:07:28 145  ,jpy_g13
05:07:28 146  ,jpy_g14
05:07:28 147  ,jpy_g15
05:07:28 148  ,jpy_g16
05:07:28 149  ,jpy_g17
05:07:28 150  ,jpy_g18
05:07:28 151  ,jpy_g19
05:07:28 152  ,jpy_g20
05:07:28 153  ,jpy_g21
05:07:28 154  ,jpy_g22
05:07:28 155  ,jpy_g23
05:07:28 156  ,jpy_g24
05:07:28 157  ,jpy_g25
05:07:28 158  ,jpy_g26
05:07:28 159  ,jpy_g27
05:07:28 160  ,jpy_g28
05:07:28 161  ,jpy_g29
05:07:28 162  ,jpy_g30
05:07:28 163  ,jpy_g31
05:07:28 164  ,jpy_g32
05:07:28 165  ,jpy_g33
05:07:28 166  ,jpy_g34
05:07:28 167  ,jpy_g35
05:07:28 168  ,jpy_g36
05:07:28 169  ,jpy_g37
05:07:28 170  ,jpy_g38
05:07:28 171  ,jpy_g39
05:07:28 172  ,jpy_g40
05:07:28 173  ,jpy_g41
05:07:28 174  ,cad_g00
05:07:28 175  ,cad_g01
05:07:28 176  ,cad_g02
05:07:28 177  ,cad_g03
05:07:28 178  ,cad_g04
05:07:28 179  ,cad_g05
05:07:28 180  ,cad_g06
05:07:28 181  ,cad_g07
05:07:28 182  ,cad_g08
05:07:28 183  ,cad_g09
05:07:28 184  ,cad_g10
05:07:28 185  ,cad_g11
05:07:28 186  ,cad_g12
05:07:28 187  ,cad_g13
05:07:28 188  ,cad_g14
05:07:28 189  ,cad_g15
05:07:28 190  ,cad_g16
05:07:28 191  ,cad_g17
05:07:28 192  ,cad_g18
05:07:28 193  ,cad_g19
05:07:28 194  ,cad_g20
05:07:28 195  ,cad_g21
05:07:28 196  ,cad_g22
05:07:28 197  ,cad_g23
05:07:28 198  ,cad_g24
05:07:28 199  ,cad_g25
05:07:28 200  ,cad_g26
05:07:28 201  ,cad_g27
05:07:28 202  ,cad_g28
05:07:28 203  ,cad_g29
05:07:28 204  ,cad_g30
05:07:28 205  ,cad_g31
05:07:28 206  ,cad_g32
05:07:28 207  ,cad_g33
05:07:28 208  ,cad_g34
05:07:28 209  ,cad_g35
05:07:28 210  ,cad_g36
05:07:28 211  ,cad_g37
05:07:28 212  ,cad_g38
05:07:28 213  ,cad_g39
05:07:28 214  ,cad_g40
05:07:28 215  ,cad_g41
05:07:28 216  ,chf_g00
05:07:28 217  ,chf_g01
05:07:28 218  ,chf_g02
05:07:28 219  ,chf_g03
05:07:28 220  ,chf_g04
05:07:28 221  ,chf_g05
05:07:28 222  ,chf_g06
05:07:28 223  ,chf_g07
05:07:28 224  ,chf_g08
05:07:28 225  ,chf_g09
05:07:28 226  ,chf_g10
05:07:28 227  ,chf_g11
05:07:28 228  ,chf_g12
05:07:28 229  ,chf_g13
05:07:28 230  ,chf_g14
05:07:28 231  ,chf_g15
05:07:28 232  ,chf_g16
05:07:28 233  ,chf_g17
05:07:28 234  ,chf_g18
05:07:28 235  ,chf_g19
05:07:28 236  ,chf_g20
05:07:28 237  ,chf_g21
05:07:28 238  ,chf_g22
05:07:28 239  ,chf_g23
05:07:28 240  ,chf_g24
05:07:28 241  ,chf_g25
05:07:28 242  ,chf_g26
05:07:28 243  ,chf_g27
05:07:28 244  ,chf_g28
05:07:28 245  ,chf_g29
05:07:28 246  ,chf_g30
05:07:28 247  ,chf_g31
05:07:28 248  ,chf_g32
05:07:28 249  ,chf_g33
05:07:28 250  ,chf_g34
05:07:28 251  ,chf_g35
05:07:28 252  ,chf_g36
05:07:28 253  ,chf_g37
05:07:28 254  ,chf_g38
05:07:28 255  ,chf_g39
05:07:28 256  ,chf_g40
05:07:28 257  ,chf_g41
05:07:28 258  FROM aud_ms6 m
05:07:28 259  WHERE m.ydate = '&1'||' '||'&2'
05:07:28 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'04:45:00'

View created.

Elapsed: 00:00:00.12
05:07:29 SQL> 
05:07:29 SQL> -- rpt
05:07:29 SQL> -- We should see just 1 row:
05:07:29 SQL> 
05:07:29 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
05:07:29 SQL> 
05:07:29 SQL> -- Build the model:
05:07:29 SQL> CREATE OR REPLACE VIEW bme AS
05:07:29   2  SELECT
05:07:29   3  'aud'||m.ydate prdate
05:07:29   4  ,gattn
05:07:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
05:07:29   6  ,eur_g00
05:07:29   7  ,eur_g01
05:07:29   8  ,eur_g02
05:07:29   9  ,eur_g03
05:07:29  10  ,eur_g04
05:07:29  11  ,eur_g05
05:07:29  12  ,eur_g06
05:07:29  13  ,eur_g07
05:07:29  14  ,eur_g08
05:07:29  15  ,eur_g09
05:07:29  16  ,eur_g10
05:07:29  17  ,eur_g11
05:07:29  18  ,eur_g12
05:07:29  19  ,eur_g13
05:07:29  20  ,eur_g14
05:07:29  21  ,eur_g15
05:07:29  22  ,eur_g16
05:07:29  23  ,eur_g17
05:07:29  24  ,eur_g18
05:07:29  25  ,eur_g19
05:07:29  26  ,eur_g20
05:07:29  27  ,eur_g21
05:07:29  28  ,eur_g22
05:07:29  29  ,eur_g23
05:07:29  30  ,eur_g24
05:07:29  31  ,eur_g25
05:07:29  32  ,eur_g26
05:07:29  33  ,eur_g27
05:07:29  34  ,eur_g28
05:07:29  35  ,eur_g29
05:07:29  36  ,eur_g30
05:07:29  37  ,eur_g31
05:07:29  38  ,eur_g32
05:07:29  39  ,eur_g33
05:07:29  40  ,eur_g34
05:07:29  41  ,eur_g35
05:07:29  42  ,eur_g36
05:07:29  43  ,eur_g37
05:07:29  44  ,eur_g38
05:07:29  45  ,eur_g39
05:07:29  46  ,eur_g40
05:07:29  47  ,eur_g41
05:07:29  48  ,aud_g00
05:07:29  49  ,aud_g01
05:07:29  50  ,aud_g02
05:07:29  51  ,aud_g03
05:07:29  52  ,aud_g04
05:07:29  53  ,aud_g05
05:07:29  54  ,aud_g06
05:07:29  55  ,aud_g07
05:07:29  56  ,aud_g08
05:07:29  57  ,aud_g09
05:07:29  58  ,aud_g10
05:07:29  59  ,aud_g11
05:07:29  60  ,aud_g12
05:07:29  61  ,aud_g13
05:07:29  62  ,aud_g14
05:07:29  63  ,aud_g15
05:07:29  64  ,aud_g16
05:07:29  65  ,aud_g17
05:07:29  66  ,aud_g18
05:07:29  67  ,aud_g19
05:07:29  68  ,aud_g20
05:07:29  69  ,aud_g21
05:07:29  70  ,aud_g22
05:07:29  71  ,aud_g23
05:07:29  72  ,aud_g24
05:07:29  73  ,aud_g25
05:07:29  74  ,aud_g26
05:07:29  75  ,aud_g27
05:07:29  76  ,aud_g28
05:07:29  77  ,aud_g29
05:07:29  78  ,aud_g30
05:07:29  79  ,aud_g31
05:07:29  80  ,aud_g32
05:07:29  81  ,aud_g33
05:07:29  82  ,aud_g34
05:07:29  83  ,aud_g35
05:07:29  84  ,aud_g36
05:07:29  85  ,aud_g37
05:07:29  86  ,aud_g38
05:07:29  87  ,aud_g39
05:07:29  88  ,aud_g40
05:07:29  89  ,aud_g41
05:07:29  90  ,gbp_g00
05:07:29  91  ,gbp_g01
05:07:29  92  ,gbp_g02
05:07:29  93  ,gbp_g03
05:07:29  94  ,gbp_g04
05:07:29  95  ,gbp_g05
05:07:29  96  ,gbp_g06
05:07:29  97  ,gbp_g07
05:07:29  98  ,gbp_g08
05:07:29  99  ,gbp_g09
05:07:29 100  ,gbp_g10
05:07:29 101  ,gbp_g11
05:07:29 102  ,gbp_g12
05:07:29 103  ,gbp_g13
05:07:29 104  ,gbp_g14
05:07:29 105  ,gbp_g15
05:07:29 106  ,gbp_g16
05:07:29 107  ,gbp_g17
05:07:29 108  ,gbp_g18
05:07:29 109  ,gbp_g19
05:07:29 110  ,gbp_g20
05:07:29 111  ,gbp_g21
05:07:29 112  ,gbp_g22
05:07:29 113  ,gbp_g23
05:07:29 114  ,gbp_g24
05:07:29 115  ,gbp_g25
05:07:29 116  ,gbp_g26
05:07:29 117  ,gbp_g27
05:07:29 118  ,gbp_g28
05:07:29 119  ,gbp_g29
05:07:29 120  ,gbp_g30
05:07:29 121  ,gbp_g31
05:07:29 122  ,gbp_g32
05:07:29 123  ,gbp_g33
05:07:29 124  ,gbp_g34
05:07:29 125  ,gbp_g35
05:07:29 126  ,gbp_g36
05:07:29 127  ,gbp_g37
05:07:29 128  ,gbp_g38
05:07:29 129  ,gbp_g39
05:07:29 130  ,gbp_g40
05:07:29 131  ,gbp_g41
05:07:29 132  ,jpy_g00
05:07:29 133  ,jpy_g01
05:07:29 134  ,jpy_g02
05:07:29 135  ,jpy_g03
05:07:29 136  ,jpy_g04
05:07:29 137  ,jpy_g05
05:07:29 138  ,jpy_g06
05:07:29 139  ,jpy_g07
05:07:29 140  ,jpy_g08
05:07:29 141  ,jpy_g09
05:07:29 142  ,jpy_g10
05:07:29 143  ,jpy_g11
05:07:29 144  ,jpy_g12
05:07:29 145  ,jpy_g13
05:07:29 146  ,jpy_g14
05:07:29 147  ,jpy_g15
05:07:29 148  ,jpy_g16
05:07:29 149  ,jpy_g17
05:07:29 150  ,jpy_g18
05:07:29 151  ,jpy_g19
05:07:29 152  ,jpy_g20
05:07:29 153  ,jpy_g21
05:07:29 154  ,jpy_g22
05:07:29 155  ,jpy_g23
05:07:29 156  ,jpy_g24
05:07:29 157  ,jpy_g25
05:07:29 158  ,jpy_g26
05:07:29 159  ,jpy_g27
05:07:29 160  ,jpy_g28
05:07:29 161  ,jpy_g29
05:07:29 162  ,jpy_g30
05:07:29 163  ,jpy_g31
05:07:29 164  ,jpy_g32
05:07:29 165  ,jpy_g33
05:07:29 166  ,jpy_g34
05:07:29 167  ,jpy_g35
05:07:29 168  ,jpy_g36
05:07:29 169  ,jpy_g37
05:07:29 170  ,jpy_g38
05:07:29 171  ,jpy_g39
05:07:29 172  ,jpy_g40
05:07:29 173  ,jpy_g41
05:07:29 174  ,cad_g00
05:07:29 175  ,cad_g01
05:07:29 176  ,cad_g02
05:07:29 177  ,cad_g03
05:07:29 178  ,cad_g04
05:07:29 179  ,cad_g05
05:07:29 180  ,cad_g06
05:07:29 181  ,cad_g07
05:07:29 182  ,cad_g08
05:07:29 183  ,cad_g09
05:07:29 184  ,cad_g10
05:07:29 185  ,cad_g11
05:07:29 186  ,cad_g12
05:07:29 187  ,cad_g13
05:07:29 188  ,cad_g14
05:07:29 189  ,cad_g15
05:07:29 190  ,cad_g16
05:07:29 191  ,cad_g17
05:07:29 192  ,cad_g18
05:07:29 193  ,cad_g19
05:07:29 194  ,cad_g20
05:07:29 195  ,cad_g21
05:07:29 196  ,cad_g22
05:07:29 197  ,cad_g23
05:07:29 198  ,cad_g24
05:07:29 199  ,cad_g25
05:07:29 200  ,cad_g26
05:07:29 201  ,cad_g27
05:07:29 202  ,cad_g28
05:07:29 203  ,cad_g29
05:07:29 204  ,cad_g30
05:07:29 205  ,cad_g31
05:07:29 206  ,cad_g32
05:07:29 207  ,cad_g33
05:07:29 208  ,cad_g34
05:07:29 209  ,cad_g35
05:07:29 210  ,cad_g36
05:07:29 211  ,cad_g37
05:07:29 212  ,cad_g38
05:07:29 213  ,cad_g39
05:07:29 214  ,cad_g40
05:07:29 215  ,cad_g41
05:07:29 216  ,chf_g00
05:07:29 217  ,chf_g01
05:07:29 218  ,chf_g02
05:07:29 219  ,chf_g03
05:07:29 220  ,chf_g04
05:07:29 221  ,chf_g05
05:07:29 222  ,chf_g06
05:07:29 223  ,chf_g07
05:07:29 224  ,chf_g08
05:07:29 225  ,chf_g09
05:07:29 226  ,chf_g10
05:07:29 227  ,chf_g11
05:07:29 228  ,chf_g12
05:07:29 229  ,chf_g13
05:07:29 230  ,chf_g14
05:07:29 231  ,chf_g15
05:07:29 232  ,chf_g16
05:07:29 233  ,chf_g17
05:07:29 234  ,chf_g18
05:07:29 235  ,chf_g19
05:07:29 236  ,chf_g20
05:07:29 237  ,chf_g21
05:07:29 238  ,chf_g22
05:07:29 239  ,chf_g23
05:07:29 240  ,chf_g24
05:07:29 241  ,chf_g25
05:07:29 242  ,chf_g26
05:07:29 243  ,chf_g27
05:07:29 244  ,chf_g28
05:07:29 245  ,chf_g29
05:07:29 246  ,chf_g30
05:07:29 247  ,chf_g31
05:07:29 248  ,chf_g32
05:07:29 249  ,chf_g33
05:07:29 250  ,chf_g34
05:07:29 251  ,chf_g35
05:07:29 252  ,chf_g36
05:07:29 253  ,chf_g37
05:07:29 254  ,chf_g38
05:07:29 255  ,chf_g39
05:07:29 256  ,chf_g40
05:07:29 257  ,chf_g41
05:07:29 258  FROM aud_ms6 m
05:07:29 259  WHERE gattn IN('nup','up')
05:07:29 260  AND 1+m.ydate < '&1'||' '||'&2'
05:07:29 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'04:45:00'

View created.

Elapsed: 00:00:00.15
05:07:29 SQL> 
05:07:29 SQL> -- rpt
05:07:29 SQL> 
05:07:29 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12955
up	     6397

Elapsed: 00:00:00.04
05:07:29 SQL> 
05:07:29 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 04:40:00

Elapsed: 00:00:00.04
05:07:29 SQL> 
05:07:29 SQL> -- Now build model from bme and score sme
05:07:29 SQL> @score1gattn.sql
05:07:29 SQL> -- score1gattn.sql
05:07:29 SQL> 
05:07:29 SQL> -- Does the 1st SVM score
05:07:29 SQL> 
05:07:29 SQL> -- Fill up svmc_apply_prep
05:07:29 SQL> @score_gattn.sql
05:07:29 SQL> --
05:07:29 SQL> -- score_gattn.sql
05:07:29 SQL> --
05:07:29 SQL> 
05:07:29 SQL> -- usage: score_gattn.sql
05:07:29 SQL> 
05:07:29 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
05:07:29 SQL> 
05:07:29 SQL> DEFINE target	= 'gattn'
05:07:29 SQL> DEFINE model_name = 'forex14'
05:07:29 SQL> DEFINE bldtable	= 'bme'
05:07:29 SQL> DEFINE scoretable = 'sme'
05:07:29 SQL> DEFINE case_id	= 'prdate'
05:07:29 SQL> 
05:07:29 SQL> -- Define a variable to help me exclude some columns from some data mining calls
05:07:29 SQL> DEFINE exclude1 = "'&target','&case_id'"
05:07:29 SQL> 
05:07:29 SQL> -- Builds an SVM model using pl/sql.
05:07:29 SQL> 
05:07:29 SQL> -----------------------------------------------------------------------
05:07:29 SQL> --			    BUILD THE MODEL
05:07:29 SQL> -----------------------------------------------------------------------
05:07:29 SQL> 
05:07:29 SQL> -- Cleanup old build data preparation objects for repeat runs
05:07:29 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
05:07:29 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
05:07:29 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
05:07:29 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
05:07:29 SQL> 
05:07:29 SQL> 
05:07:29 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
05:07:29 SQL> --
05:07:29 SQL> -- DROP	TABLE svmc_settings ;
05:07:29 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
05:07:29 SQL> -- DELETE svmc_settings;
05:07:29 SQL> 
05:07:29 SQL> -- The default classification algorithm is Naive Bayes. So override
05:07:29 SQL> -- this choice to SVM using a settings table.
05:07:29 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
05:07:29 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
05:07:29 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
05:07:29 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
05:07:29 SQL> -- models.
05:07:29 SQL> --
05:07:29 SQL> 
05:07:29 SQL> -- Do this once and then comment it out.
05:07:29 SQL> -- That makes script go faster.
05:07:29 SQL> -- BEGIN
05:07:29 SQL> -- -- Populate settings table
05:07:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:07:29 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
05:07:29 SQL> --
05:07:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:07:29 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
05:07:29 SQL> --
05:07:29 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
05:07:29 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
05:07:29 SQL> --   COMMIT;
05:07:29 SQL> -- END;
05:07:29 SQL> -- /
05:07:29 SQL> 
05:07:29 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
05:07:29 SQL> 
05:07:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
05:07:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:07:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:07:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
05:07:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:07:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:07:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
05:07:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:07:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:07:29 SQL> 
05:07:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
05:07:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:07:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:07:29 SQL> 
05:07:29 SQL> --------------------------------
05:07:29 SQL> -- PREPARE BUILD (TRAINING) DATA
05:07:29 SQL> --
05:07:29 SQL> 
05:07:29 SQL> -- 1. Missing Value treatment for all Predictors and
05:07:29 SQL> -- 2. Outlier Treatment and
05:07:29 SQL> -- 3. Normalization are performed below.
05:07:29 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
05:07:29 SQL> --    normalized here.
05:07:29 SQL> 
05:07:29 SQL> BEGIN
05:07:29   2  	-- Perform missing value treatment for all predictors
05:07:29   3  	-- create miss tables
05:07:29   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
05:07:29   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
05:07:29   6  
05:07:29   7  	-- populate miss tables
05:07:29   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
05:07:29   9  	  miss_table_name => 'svmc_miss_num',
05:07:29  10  	  data_table_name => '&bldtable',
05:07:29  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:07:29  12  
05:07:29  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
05:07:29  14  	  miss_table_name => 'svmc_miss_cat',
05:07:29  15  	  data_table_name => '&bldtable',
05:07:29  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:07:29  17  
05:07:29  18  	-- xform input data to replace missing values
05:07:29  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:07:29  20  	  miss_table_name => 'svmc_miss_num',
05:07:29  21  	  data_table_name => '&bldtable',
05:07:29  22  	  xform_view_name => 'xformed_build_miss_num');
05:07:29  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:07:29  24  	  miss_table_name => 'svmc_miss_cat',
05:07:29  25  	  data_table_name => '&bldtable',
05:07:29  26  	  xform_view_name => 'xformed_build_miss_cat');
05:07:29  27  
05:07:29  28  	-- Perform outlier treatment.
05:07:29  29  	-- create clip table
05:07:29  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
05:07:29  31  
05:07:29  32  	-- populate clip table
05:07:29  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
05:07:29  34  	  clip_table_name => 'svmc_clip',
05:07:29  35  	  data_table_name => '&bldtable',
05:07:29  36  	  tail_frac	  => 0.025,
05:07:29  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:07:29  38  
05:07:29  39  	-- xform input data to winsorized data
05:07:29  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
05:07:29  41  	  clip_table_name => 'svmc_clip',
05:07:29  42  	  data_table_name => '&bldtable',
05:07:29  43  	  xform_view_name => 'svmc_winsor');
05:07:29  44  
05:07:29  45  	-- create normalization table
05:07:29  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
05:07:29  47  
05:07:29  48  	-- populate normalization table based on winsorized data
05:07:29  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
05:07:29  50  	  norm_table_name => 'svmc_norm',
05:07:29  51  	  data_table_name => 'svmc_winsor',
05:07:29  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
05:07:29  53  
05:07:29  54  	-- normalize the original data
05:07:29  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:07:29  56  	  norm_table_name => 'svmc_norm',
05:07:29  57  	  data_table_name => '&bldtable',
05:07:29  58  	  xform_view_name => 'svmc_build_prep');
05:07:29  59  END;
05:07:29  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.71
05:07:48 SQL> 
05:07:48 SQL> ---------------------
05:07:48 SQL> -- CREATE A NEW MODEL
05:07:48 SQL> --
05:07:48 SQL> -- Cleanup old model with the same name for repeat runs
05:07:48 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
05:07:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:07:48   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.98
05:07:49 SQL> 
05:07:49 SQL> -- Build a new SVM Model
05:07:49 SQL> BEGIN
05:07:49   2  	DBMS_DATA_MINING.CREATE_MODEL(
05:07:49   3  	  model_name	      => '&model_name',
05:07:49   4  	  mining_function     => dbms_data_mining.classification,
05:07:49   5  	  data_table_name     => 'svmc_build_prep',
05:07:49   6  	  case_id_column_name => '&case_id',
05:07:49   7  	  target_column_name  => '&target',
05:07:49   8  	  settings_table_name => 'svmc_settings');
05:07:49   9  END;
05:07:49  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.33
05:08:17 SQL> 
05:08:17 SQL> -----------------------------------------------------------------------
05:08:17 SQL> --			       APPLY/score THE MODEL
05:08:17 SQL> -----------------------------------------------------------------------
05:08:17 SQL> 
05:08:17 SQL> -- Cleanup old scoring data preparation objects for repeat runs
05:08:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
05:08:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:08:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
05:08:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
05:08:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:08:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
05:08:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
05:08:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
05:08:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
05:08:17 SQL> -----------------------
05:08:17 SQL> -- PREPARE SCORING DATA
05:08:17 SQL> --
05:08:17 SQL> -- If the data for model creation has been prepared, then the data
05:08:17 SQL> -- to be scored using the model must be prepared in the same manner
05:08:17 SQL> -- in order to obtain meaningful results.
05:08:17 SQL> --
05:08:17 SQL> -- 1. Missing Value treatment for all Predictors and
05:08:17 SQL> -- 2. Normalization
05:08:17 SQL> -- No outlier treatment will be performed during test and apply. The
05:08:17 SQL> -- normalization step is sufficient, since the normalization parameters
05:08:17 SQL> -- already capture the effects of outlier treatment done with build data.
05:08:17 SQL> --
05:08:17 SQL> BEGIN
05:08:17   2  	-- Xform Test data to replace missing values
05:08:17   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
05:08:17   4  	  miss_table_name => 'svmc_miss_num',
05:08:17   5  	  data_table_name => '&scoretable',
05:08:17   6  	  xform_view_name => 'xformed_apply_miss_num');
05:08:17   7  
05:08:17   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
05:08:17   9  	  miss_table_name => 'svmc_miss_cat',
05:08:17  10  	  data_table_name => '&scoretable',
05:08:17  11  	  xform_view_name => 'xformed_apply_miss_cat');
05:08:17  12  
05:08:17  13  	-- Normalize the data to be scored
05:08:17  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
05:08:17  15  	  norm_table_name => 'svmc_norm',
05:08:17  16  	  data_table_name => '&scoretable',
05:08:17  17  	  xform_view_name => 'svmc_apply_prep');
05:08:17  18  END;
05:08:17  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
05:08:19 SQL> 
05:08:19 SQL> -- Use same model_name used in score_gattn.sql
05:08:19 SQL> DEFINE model_name = 'forex14'
05:08:19 SQL> 
05:08:19 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
05:08:19 SQL> 
05:08:19 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
05:08:19   2  SELECT
05:08:19   3  prdate
05:08:19   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
05:08:19   5  ,sysdate
05:08:19   6  ,SUBSTR(prdate,1,3)pair
05:08:19   7  ,SUBSTR(prdate,4,19)ydate
05:08:19   8  FROM svmc_apply_prep
05:08:19   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
05:08:19 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
