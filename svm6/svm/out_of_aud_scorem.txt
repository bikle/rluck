
SQL*Plus: Release 11.2.0.1.0 Production on Mon Jan 3 21:05:21 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

21:05:21 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
21:05:21 SQL> 21:05:21 SQL> @aud_score1day.sql  2011-01-03 20:45:00
21:05:21 SQL> --
21:05:21 SQL> -- aud_score1day.sql
21:05:21 SQL> --
21:05:21 SQL> 
21:05:21 SQL> CREATE OR REPLACE VIEW sme AS
21:05:21   2  SELECT
21:05:21   3  'aud'||m.ydate prdate
21:05:21   4  ,NULL gatt
21:05:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:05:21   6  ,eur_g00
21:05:21   7  ,eur_g01
21:05:21   8  ,eur_g02
21:05:21   9  ,eur_g03
21:05:21  10  ,eur_g04
21:05:21  11  ,eur_g05
21:05:21  12  ,eur_g06
21:05:21  13  ,eur_g07
21:05:21  14  ,eur_g08
21:05:21  15  ,eur_g09
21:05:21  16  ,eur_g10
21:05:21  17  ,eur_g11
21:05:21  18  ,eur_g12
21:05:21  19  ,eur_g13
21:05:21  20  ,eur_g14
21:05:21  21  ,eur_g15
21:05:21  22  ,eur_g16
21:05:21  23  ,eur_g17
21:05:21  24  ,eur_g18
21:05:21  25  ,eur_g19
21:05:21  26  ,eur_g20
21:05:21  27  ,eur_g21
21:05:21  28  ,eur_g22
21:05:21  29  ,eur_g23
21:05:21  30  ,eur_g24
21:05:21  31  ,eur_g25
21:05:21  32  ,eur_g26
21:05:21  33  ,eur_g27
21:05:21  34  ,eur_g28
21:05:21  35  ,eur_g29
21:05:21  36  ,eur_g30
21:05:21  37  ,eur_g31
21:05:21  38  ,eur_g32
21:05:21  39  ,eur_g33
21:05:21  40  ,eur_g34
21:05:21  41  ,eur_g35
21:05:21  42  ,eur_g36
21:05:21  43  ,eur_g37
21:05:21  44  ,eur_g38
21:05:21  45  ,eur_g39
21:05:21  46  ,eur_g40
21:05:21  47  ,eur_g41
21:05:21  48  ,aud_g00
21:05:21  49  ,aud_g01
21:05:21  50  ,aud_g02
21:05:21  51  ,aud_g03
21:05:21  52  ,aud_g04
21:05:21  53  ,aud_g05
21:05:21  54  ,aud_g06
21:05:21  55  ,aud_g07
21:05:21  56  ,aud_g08
21:05:21  57  ,aud_g09
21:05:21  58  ,aud_g10
21:05:21  59  ,aud_g11
21:05:21  60  ,aud_g12
21:05:21  61  ,aud_g13
21:05:21  62  ,aud_g14
21:05:21  63  ,aud_g15
21:05:21  64  ,aud_g16
21:05:21  65  ,aud_g17
21:05:21  66  ,aud_g18
21:05:21  67  ,aud_g19
21:05:21  68  ,aud_g20
21:05:21  69  ,aud_g21
21:05:21  70  ,aud_g22
21:05:21  71  ,aud_g23
21:05:21  72  ,aud_g24
21:05:21  73  ,aud_g25
21:05:21  74  ,aud_g26
21:05:21  75  ,aud_g27
21:05:21  76  ,aud_g28
21:05:21  77  ,aud_g29
21:05:21  78  ,aud_g30
21:05:21  79  ,aud_g31
21:05:21  80  ,aud_g32
21:05:21  81  ,aud_g33
21:05:21  82  ,aud_g34
21:05:21  83  ,aud_g35
21:05:21  84  ,aud_g36
21:05:21  85  ,aud_g37
21:05:21  86  ,aud_g38
21:05:21  87  ,aud_g39
21:05:21  88  ,aud_g40
21:05:21  89  ,aud_g41
21:05:21  90  ,gbp_g00
21:05:21  91  ,gbp_g01
21:05:21  92  ,gbp_g02
21:05:21  93  ,gbp_g03
21:05:21  94  ,gbp_g04
21:05:21  95  ,gbp_g05
21:05:21  96  ,gbp_g06
21:05:21  97  ,gbp_g07
21:05:21  98  ,gbp_g08
21:05:21  99  ,gbp_g09
21:05:21 100  ,gbp_g10
21:05:21 101  ,gbp_g11
21:05:21 102  ,gbp_g12
21:05:21 103  ,gbp_g13
21:05:21 104  ,gbp_g14
21:05:21 105  ,gbp_g15
21:05:21 106  ,gbp_g16
21:05:21 107  ,gbp_g17
21:05:21 108  ,gbp_g18
21:05:21 109  ,gbp_g19
21:05:21 110  ,gbp_g20
21:05:21 111  ,gbp_g21
21:05:21 112  ,gbp_g22
21:05:21 113  ,gbp_g23
21:05:21 114  ,gbp_g24
21:05:21 115  ,gbp_g25
21:05:21 116  ,gbp_g26
21:05:21 117  ,gbp_g27
21:05:21 118  ,gbp_g28
21:05:21 119  ,gbp_g29
21:05:21 120  ,gbp_g30
21:05:21 121  ,gbp_g31
21:05:21 122  ,gbp_g32
21:05:21 123  ,gbp_g33
21:05:21 124  ,gbp_g34
21:05:21 125  ,gbp_g35
21:05:21 126  ,gbp_g36
21:05:21 127  ,gbp_g37
21:05:21 128  ,gbp_g38
21:05:21 129  ,gbp_g39
21:05:21 130  ,gbp_g40
21:05:21 131  ,gbp_g41
21:05:21 132  ,jpy_g00
21:05:21 133  ,jpy_g01
21:05:21 134  ,jpy_g02
21:05:21 135  ,jpy_g03
21:05:21 136  ,jpy_g04
21:05:21 137  ,jpy_g05
21:05:21 138  ,jpy_g06
21:05:21 139  ,jpy_g07
21:05:21 140  ,jpy_g08
21:05:21 141  ,jpy_g09
21:05:21 142  ,jpy_g10
21:05:21 143  ,jpy_g11
21:05:21 144  ,jpy_g12
21:05:21 145  ,jpy_g13
21:05:21 146  ,jpy_g14
21:05:21 147  ,jpy_g15
21:05:21 148  ,jpy_g16
21:05:21 149  ,jpy_g17
21:05:21 150  ,jpy_g18
21:05:21 151  ,jpy_g19
21:05:21 152  ,jpy_g20
21:05:21 153  ,jpy_g21
21:05:21 154  ,jpy_g22
21:05:21 155  ,jpy_g23
21:05:21 156  ,jpy_g24
21:05:21 157  ,jpy_g25
21:05:21 158  ,jpy_g26
21:05:21 159  ,jpy_g27
21:05:21 160  ,jpy_g28
21:05:21 161  ,jpy_g29
21:05:21 162  ,jpy_g30
21:05:21 163  ,jpy_g31
21:05:21 164  ,jpy_g32
21:05:21 165  ,jpy_g33
21:05:21 166  ,jpy_g34
21:05:21 167  ,jpy_g35
21:05:21 168  ,jpy_g36
21:05:21 169  ,jpy_g37
21:05:21 170  ,jpy_g38
21:05:21 171  ,jpy_g39
21:05:21 172  ,jpy_g40
21:05:21 173  ,jpy_g41
21:05:21 174  ,cad_g00
21:05:21 175  ,cad_g01
21:05:21 176  ,cad_g02
21:05:21 177  ,cad_g03
21:05:21 178  ,cad_g04
21:05:21 179  ,cad_g05
21:05:21 180  ,cad_g06
21:05:21 181  ,cad_g07
21:05:21 182  ,cad_g08
21:05:21 183  ,cad_g09
21:05:21 184  ,cad_g10
21:05:21 185  ,cad_g11
21:05:21 186  ,cad_g12
21:05:21 187  ,cad_g13
21:05:21 188  ,cad_g14
21:05:21 189  ,cad_g15
21:05:21 190  ,cad_g16
21:05:21 191  ,cad_g17
21:05:21 192  ,cad_g18
21:05:21 193  ,cad_g19
21:05:21 194  ,cad_g20
21:05:21 195  ,cad_g21
21:05:21 196  ,cad_g22
21:05:21 197  ,cad_g23
21:05:21 198  ,cad_g24
21:05:21 199  ,cad_g25
21:05:21 200  ,cad_g26
21:05:21 201  ,cad_g27
21:05:21 202  ,cad_g28
21:05:21 203  ,cad_g29
21:05:21 204  ,cad_g30
21:05:21 205  ,cad_g31
21:05:21 206  ,cad_g32
21:05:21 207  ,cad_g33
21:05:21 208  ,cad_g34
21:05:21 209  ,cad_g35
21:05:21 210  ,cad_g36
21:05:21 211  ,cad_g37
21:05:21 212  ,cad_g38
21:05:21 213  ,cad_g39
21:05:21 214  ,cad_g40
21:05:21 215  ,cad_g41
21:05:21 216  ,chf_g00
21:05:21 217  ,chf_g01
21:05:21 218  ,chf_g02
21:05:21 219  ,chf_g03
21:05:21 220  ,chf_g04
21:05:21 221  ,chf_g05
21:05:21 222  ,chf_g06
21:05:21 223  ,chf_g07
21:05:21 224  ,chf_g08
21:05:21 225  ,chf_g09
21:05:21 226  ,chf_g10
21:05:21 227  ,chf_g11
21:05:21 228  ,chf_g12
21:05:21 229  ,chf_g13
21:05:21 230  ,chf_g14
21:05:21 231  ,chf_g15
21:05:21 232  ,chf_g16
21:05:21 233  ,chf_g17
21:05:21 234  ,chf_g18
21:05:21 235  ,chf_g19
21:05:21 236  ,chf_g20
21:05:21 237  ,chf_g21
21:05:21 238  ,chf_g22
21:05:21 239  ,chf_g23
21:05:21 240  ,chf_g24
21:05:21 241  ,chf_g25
21:05:21 242  ,chf_g26
21:05:21 243  ,chf_g27
21:05:21 244  ,chf_g28
21:05:21 245  ,chf_g29
21:05:21 246  ,chf_g30
21:05:21 247  ,chf_g31
21:05:21 248  ,chf_g32
21:05:21 249  ,chf_g33
21:05:21 250  ,chf_g34
21:05:21 251  ,chf_g35
21:05:21 252  ,chf_g36
21:05:21 253  ,chf_g37
21:05:21 254  ,chf_g38
21:05:21 255  ,chf_g39
21:05:21 256  ,chf_g40
21:05:21 257  ,chf_g41
21:05:21 258  FROM aud_ms6 m
21:05:21 259  WHERE m.ydate = '&1'||' '||'&2'
21:05:21 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'20:45:00'

View created.

Elapsed: 00:00:00.25
21:05:22 SQL> 
21:05:22 SQL> -- rpt
21:05:22 SQL> -- We should see just 1 row:
21:05:22 SQL> 
21:05:22 SQL> SELECT COUNT(prdate) FROM sme
21:05:22   2  
21:05:22 SQL> -- Build the model:
21:05:22 SQL> CREATE OR REPLACE VIEW bme AS
21:05:22   2  SELECT
21:05:22   3  'aud'||m.ydate prdate
21:05:22   4  ,gatt
21:05:22   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:05:22   6  ,eur_g00
21:05:22   7  ,eur_g01
21:05:22   8  ,eur_g02
21:05:22   9  ,eur_g03
21:05:22  10  ,eur_g04
21:05:22  11  ,eur_g05
21:05:22  12  ,eur_g06
21:05:22  13  ,eur_g07
21:05:22  14  ,eur_g08
21:05:22  15  ,eur_g09
21:05:22  16  ,eur_g10
21:05:22  17  ,eur_g11
21:05:22  18  ,eur_g12
21:05:22  19  ,eur_g13
21:05:22  20  ,eur_g14
21:05:22  21  ,eur_g15
21:05:22  22  ,eur_g16
21:05:22  23  ,eur_g17
21:05:22  24  ,eur_g18
21:05:22  25  ,eur_g19
21:05:22  26  ,eur_g20
21:05:22  27  ,eur_g21
21:05:22  28  ,eur_g22
21:05:22  29  ,eur_g23
21:05:22  30  ,eur_g24
21:05:22  31  ,eur_g25
21:05:22  32  ,eur_g26
21:05:22  33  ,eur_g27
21:05:22  34  ,eur_g28
21:05:22  35  ,eur_g29
21:05:22  36  ,eur_g30
21:05:22  37  ,eur_g31
21:05:22  38  ,eur_g32
21:05:22  39  ,eur_g33
21:05:22  40  ,eur_g34
21:05:22  41  ,eur_g35
21:05:22  42  ,eur_g36
21:05:22  43  ,eur_g37
21:05:22  44  ,eur_g38
21:05:22  45  ,eur_g39
21:05:22  46  ,eur_g40
21:05:22  47  ,eur_g41
21:05:22  48  ,aud_g00
21:05:22  49  ,aud_g01
21:05:22  50  ,aud_g02
21:05:22  51  ,aud_g03
21:05:22  52  ,aud_g04
21:05:22  53  ,aud_g05
21:05:22  54  ,aud_g06
21:05:22  55  ,aud_g07
21:05:22  56  ,aud_g08
21:05:22  57  ,aud_g09
21:05:22  58  ,aud_g10
21:05:22  59  ,aud_g11
21:05:22  60  ,aud_g12
21:05:22  61  ,aud_g13
21:05:22  62  ,aud_g14
21:05:22  63  ,aud_g15
21:05:22  64  ,aud_g16
21:05:22  65  ,aud_g17
21:05:22  66  ,aud_g18
21:05:22  67  ,aud_g19
21:05:22  68  ,aud_g20
21:05:22  69  ,aud_g21
21:05:22  70  ,aud_g22
21:05:22  71  ,aud_g23
21:05:22  72  ,aud_g24
21:05:22  73  ,aud_g25
21:05:22  74  ,aud_g26
21:05:22  75  ,aud_g27
21:05:22  76  ,aud_g28
21:05:22  77  ,aud_g29
21:05:22  78  ,aud_g30
21:05:22  79  ,aud_g31
21:05:22  80  ,aud_g32
21:05:22  81  ,aud_g33
21:05:22  82  ,aud_g34
21:05:22  83  ,aud_g35
21:05:22  84  ,aud_g36
21:05:22  85  ,aud_g37
21:05:22  86  ,aud_g38
21:05:22  87  ,aud_g39
21:05:22  88  ,aud_g40
21:05:22  89  ,aud_g41
21:05:22  90  ,gbp_g00
21:05:22  91  ,gbp_g01
21:05:22  92  ,gbp_g02
21:05:22  93  ,gbp_g03
21:05:22  94  ,gbp_g04
21:05:22  95  ,gbp_g05
21:05:22  96  ,gbp_g06
21:05:22  97  ,gbp_g07
21:05:22  98  ,gbp_g08
21:05:22  99  ,gbp_g09
21:05:22 100  ,gbp_g10
21:05:22 101  ,gbp_g11
21:05:22 102  ,gbp_g12
21:05:22 103  ,gbp_g13
21:05:22 104  ,gbp_g14
21:05:22 105  ,gbp_g15
21:05:22 106  ,gbp_g16
21:05:22 107  ,gbp_g17
21:05:22 108  ,gbp_g18
21:05:22 109  ,gbp_g19
21:05:22 110  ,gbp_g20
21:05:22 111  ,gbp_g21
21:05:22 112  ,gbp_g22
21:05:22 113  ,gbp_g23
21:05:22 114  ,gbp_g24
21:05:22 115  ,gbp_g25
21:05:22 116  ,gbp_g26
21:05:22 117  ,gbp_g27
21:05:22 118  ,gbp_g28
21:05:22 119  ,gbp_g29
21:05:22 120  ,gbp_g30
21:05:22 121  ,gbp_g31
21:05:22 122  ,gbp_g32
21:05:22 123  ,gbp_g33
21:05:22 124  ,gbp_g34
21:05:22 125  ,gbp_g35
21:05:22 126  ,gbp_g36
21:05:22 127  ,gbp_g37
21:05:22 128  ,gbp_g38
21:05:22 129  ,gbp_g39
21:05:22 130  ,gbp_g40
21:05:22 131  ,gbp_g41
21:05:22 132  ,jpy_g00
21:05:22 133  ,jpy_g01
21:05:22 134  ,jpy_g02
21:05:22 135  ,jpy_g03
21:05:22 136  ,jpy_g04
21:05:22 137  ,jpy_g05
21:05:22 138  ,jpy_g06
21:05:22 139  ,jpy_g07
21:05:22 140  ,jpy_g08
21:05:22 141  ,jpy_g09
21:05:22 142  ,jpy_g10
21:05:22 143  ,jpy_g11
21:05:22 144  ,jpy_g12
21:05:22 145  ,jpy_g13
21:05:22 146  ,jpy_g14
21:05:22 147  ,jpy_g15
21:05:22 148  ,jpy_g16
21:05:22 149  ,jpy_g17
21:05:22 150  ,jpy_g18
21:05:22 151  ,jpy_g19
21:05:22 152  ,jpy_g20
21:05:22 153  ,jpy_g21
21:05:22 154  ,jpy_g22
21:05:22 155  ,jpy_g23
21:05:22 156  ,jpy_g24
21:05:22 157  ,jpy_g25
21:05:22 158  ,jpy_g26
21:05:22 159  ,jpy_g27
21:05:22 160  ,jpy_g28
21:05:22 161  ,jpy_g29
21:05:22 162  ,jpy_g30
21:05:22 163  ,jpy_g31
21:05:22 164  ,jpy_g32
21:05:22 165  ,jpy_g33
21:05:22 166  ,jpy_g34
21:05:22 167  ,jpy_g35
21:05:22 168  ,jpy_g36
21:05:22 169  ,jpy_g37
21:05:22 170  ,jpy_g38
21:05:22 171  ,jpy_g39
21:05:22 172  ,jpy_g40
21:05:22 173  ,jpy_g41
21:05:22 174  ,cad_g00
21:05:22 175  ,cad_g01
21:05:22 176  ,cad_g02
21:05:22 177  ,cad_g03
21:05:22 178  ,cad_g04
21:05:22 179  ,cad_g05
21:05:22 180  ,cad_g06
21:05:22 181  ,cad_g07
21:05:22 182  ,cad_g08
21:05:22 183  ,cad_g09
21:05:22 184  ,cad_g10
21:05:22 185  ,cad_g11
21:05:22 186  ,cad_g12
21:05:22 187  ,cad_g13
21:05:22 188  ,cad_g14
21:05:22 189  ,cad_g15
21:05:22 190  ,cad_g16
21:05:22 191  ,cad_g17
21:05:22 192  ,cad_g18
21:05:22 193  ,cad_g19
21:05:22 194  ,cad_g20
21:05:22 195  ,cad_g21
21:05:22 196  ,cad_g22
21:05:22 197  ,cad_g23
21:05:22 198  ,cad_g24
21:05:22 199  ,cad_g25
21:05:22 200  ,cad_g26
21:05:22 201  ,cad_g27
21:05:22 202  ,cad_g28
21:05:22 203  ,cad_g29
21:05:22 204  ,cad_g30
21:05:22 205  ,cad_g31
21:05:22 206  ,cad_g32
21:05:22 207  ,cad_g33
21:05:22 208  ,cad_g34
21:05:22 209  ,cad_g35
21:05:22 210  ,cad_g36
21:05:22 211  ,cad_g37
21:05:22 212  ,cad_g38
21:05:22 213  ,cad_g39
21:05:22 214  ,cad_g40
21:05:22 215  ,cad_g41
21:05:22 216  ,chf_g00
21:05:22 217  ,chf_g01
21:05:22 218  ,chf_g02
21:05:22 219  ,chf_g03
21:05:22 220  ,chf_g04
21:05:22 221  ,chf_g05
21:05:22 222  ,chf_g06
21:05:22 223  ,chf_g07
21:05:22 224  ,chf_g08
21:05:22 225  ,chf_g09
21:05:22 226  ,chf_g10
21:05:22 227  ,chf_g11
21:05:22 228  ,chf_g12
21:05:22 229  ,chf_g13
21:05:22 230  ,chf_g14
21:05:22 231  ,chf_g15
21:05:22 232  ,chf_g16
21:05:22 233  ,chf_g17
21:05:22 234  ,chf_g18
21:05:22 235  ,chf_g19
21:05:22 236  ,chf_g20
21:05:22 237  ,chf_g21
21:05:22 238  ,chf_g22
21:05:22 239  ,chf_g23
21:05:22 240  ,chf_g24
21:05:22 241  ,chf_g25
21:05:22 242  ,chf_g26
21:05:22 243  ,chf_g27
21:05:22 244  ,chf_g28
21:05:22 245  ,chf_g29
21:05:22 246  ,chf_g30
21:05:22 247  ,chf_g31
21:05:22 248  ,chf_g32
21:05:22 249  ,chf_g33
21:05:22 250  ,chf_g34
21:05:22 251  ,chf_g35
21:05:22 252  ,chf_g36
21:05:22 253  ,chf_g37
21:05:22 254  ,chf_g38
21:05:22 255  ,chf_g39
21:05:22 256  ,chf_g40
21:05:22 257  ,chf_g41
21:05:22 258  FROM aud_ms6 m
21:05:22 259  WHERE gatt IN('nup','up')
21:05:22 260  AND 1+m.ydate < '&1'||' '||'&2'
21:05:22 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'20:45:00'

View created.

Elapsed: 00:00:00.20
21:05:22 SQL> 
21:05:22 SQL> -- rpt
21:05:22 SQL> 
21:05:22 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
21:05:22   2  
21:05:22 SQL> SELECT MAX(prdate) FROM bme
21:05:22   2  
21:05:22 SQL> -- Now build model from bme and score sme
21:05:22 SQL> @score1.sql
21:05:22 SQL> -- score1.sql
21:05:22 SQL> 
21:05:22 SQL> -- Does the 1st SVM score
21:05:22 SQL> 
21:05:22 SQL> -- Fill up svmc_apply_prep
21:05:22 SQL> @score.sql
21:05:22 SQL> --
21:05:22 SQL> -- score.sql
21:05:22 SQL> --
21:05:22 SQL> 
21:05:22 SQL> -- usage: score.sql
21:05:22 SQL> 
21:05:22 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:05:22 SQL> 
21:05:22 SQL> DEFINE target	= 'gatt'
21:05:22 SQL> DEFINE model_name = 'forex14'
21:05:22 SQL> DEFINE bldtable	= 'bme'
21:05:22 SQL> DEFINE scoretable = 'sme'
21:05:22 SQL> DEFINE case_id	= 'prdate'
21:05:22 SQL> 
21:05:22 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:05:22 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:05:22 SQL> 
21:05:22 SQL> -- Builds an SVM model using pl/sql.
21:05:22 SQL> 
21:05:22 SQL> -----------------------------------------------------------------------
21:05:22 SQL> --			    BUILD THE MODEL
21:05:22 SQL> -----------------------------------------------------------------------
21:05:22 SQL> 
21:05:22 SQL> -- Cleanup old build data preparation objects for repeat runs
21:05:22 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
21:05:22 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:05:22 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
21:05:22 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
21:05:22 SQL> 
21:05:22 SQL> 
21:05:22 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:05:22 SQL> --
21:05:22 SQL> -- DROP	TABLE svmc_settings ;
21:05:22 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:05:22 SQL> -- DELETE svmc_settings;
21:05:22 SQL> 
21:05:22 SQL> -- The default classification algorithm is Naive Bayes. So override
21:05:22 SQL> -- this choice to SVM using a settings table.
21:05:22 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:05:22 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:05:22 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:05:22 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:05:22 SQL> -- models.
21:05:22 SQL> --
21:05:22 SQL> 
21:05:22 SQL> -- Do this once and then comment it out.
21:05:22 SQL> -- That makes script go faster.
21:05:22 SQL> -- BEGIN
21:05:22 SQL> -- -- Populate settings table
21:05:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:05:22 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:05:22 SQL> --
21:05:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:05:22 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:05:22 SQL> --
21:05:22 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:05:22 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:05:22 SQL> --   COMMIT;
21:05:22 SQL> -- END;
21:05:22 SQL> -- /
21:05:22 SQL> 
21:05:22 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
21:05:22 SQL> 
21:05:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:05:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:05:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
21:05:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:05:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:05:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:05:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:05:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:05:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
21:05:22 SQL> 
21:05:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:05:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:05:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:05:22 SQL> 
21:05:22 SQL> --------------------------------
21:05:22 SQL> -- PREPARE BUILD (TRAINING) DATA
21:05:22 SQL> --
21:05:22 SQL> 
21:05:22 SQL> -- 1. Missing Value treatment for all Predictors and
21:05:22 SQL> -- 2. Outlier Treatment and
21:05:22 SQL> -- 3. Normalization are performed below.
21:05:22 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:05:22 SQL> --    normalized here.
21:05:22 SQL> 
21:05:22 SQL> BEGIN
21:05:22   2  	-- Perform missing value treatment for all predictors
21:05:22   3  	-- create miss tables
21:05:22   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:05:22   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:05:22   6  
21:05:22   7  	-- populate miss tables
21:05:22   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:05:22   9  	  miss_table_name => 'svmc_miss_num',
21:05:22  10  	  data_table_name => '&bldtable',
21:05:22  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:05:22  12  
21:05:22  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:05:22  14  	  miss_table_name => 'svmc_miss_cat',
21:05:22  15  	  data_table_name => '&bldtable',
21:05:22  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:05:22  17  
21:05:22  18  	-- xform input data to replace missing values
21:05:22  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:05:22  20  	  miss_table_name => 'svmc_miss_num',
21:05:22  21  	  data_table_name => '&bldtable',
21:05:22  22  	  xform_view_name => 'xformed_build_miss_num');
21:05:22  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:05:22  24  	  miss_table_name => 'svmc_miss_cat',
21:05:22  25  	  data_table_name => '&bldtable',
21:05:22  26  	  xform_view_name => 'xformed_build_miss_cat');
21:05:22  27  
21:05:22  28  	-- Perform outlier treatment.
21:05:22  29  	-- create clip table
21:05:22  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:05:22  31  
21:05:22  32  	-- populate clip table
21:05:22  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:05:22  34  	  clip_table_name => 'svmc_clip',
21:05:22  35  	  data_table_name => '&bldtable',
21:05:22  36  	  tail_frac	  => 0.025,
21:05:22  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:05:22  38  
21:05:22  39  	-- xform input data to winsorized data
21:05:22  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:05:22  41  	  clip_table_name => 'svmc_clip',
21:05:22  42  	  data_table_name => '&bldtable',
21:05:22  43  	  xform_view_name => 'svmc_winsor');
21:05:22  44  
21:05:22  45  	-- create normalization table
21:05:22  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:05:22  47  
21:05:22  48  	-- populate normalization table based on winsorized data
21:05:22  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:05:22  50  	  norm_table_name => 'svmc_norm',
21:05:22  51  	  data_table_name => 'svmc_winsor',
21:05:22  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:05:22  53  
21:05:22  54  	-- normalize the original data
21:05:22  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:05:22  56  	  norm_table_name => 'svmc_norm',
21:05:22  57  	  data_table_name => '&bldtable',
21:05:22  58  	  xform_view_name => 'svmc_build_prep');
21:05:22  59  END;
21:05:22  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:19.65
21:05:42 SQL> 
21:05:42 SQL> ---------------------
21:05:42 SQL> -- CREATE A NEW MODEL
21:05:42 SQL> --
21:05:42 SQL> -- Cleanup old model with the same name for repeat runs
21:05:42 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:05:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:05:42   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.92
21:05:43 SQL> 
21:05:43 SQL> -- Build a new SVM Model
21:05:43 SQL> BEGIN
21:05:43   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:05:43   3  	  model_name	      => '&model_name',
21:05:43   4  	  mining_function     => dbms_data_mining.classification,
21:05:43   5  	  data_table_name     => 'svmc_build_prep',
21:05:43   6  	  case_id_column_name => '&case_id',
21:05:43   7  	  target_column_name  => '&target',
21:05:43   8  	  settings_table_name => 'svmc_settings');
21:05:43   9  END;
21:05:43  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.46
21:06:12 SQL> 
21:06:12 SQL> -----------------------------------------------------------------------
21:06:12 SQL> --			       APPLY/score THE MODEL
21:06:12 SQL> -----------------------------------------------------------------------
21:06:12 SQL> 
21:06:12 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:06:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:06:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:06:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.11
21:06:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:06:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:06:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:06:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:06:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:06:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.10
21:06:12 SQL> -----------------------
21:06:12 SQL> -- PREPARE SCORING DATA
21:06:12 SQL> --
21:06:12 SQL> -- If the data for model creation has been prepared, then the data
21:06:12 SQL> -- to be scored using the model must be prepared in the same manner
21:06:12 SQL> -- in order to obtain meaningful results.
21:06:12 SQL> --
21:06:12 SQL> -- 1. Missing Value treatment for all Predictors and
21:06:12 SQL> -- 2. Normalization
21:06:12 SQL> -- No outlier treatment will be performed during test and apply. The
21:06:12 SQL> -- normalization step is sufficient, since the normalization parameters
21:06:12 SQL> -- already capture the effects of outlier treatment done with build data.
21:06:12 SQL> --
21:06:12 SQL> BEGIN
21:06:12   2  	-- Xform Test data to replace missing values
21:06:12   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:06:12   4  	  miss_table_name => 'svmc_miss_num',
21:06:12   5  	  data_table_name => '&scoretable',
21:06:12   6  	  xform_view_name => 'xformed_apply_miss_num');
21:06:12   7  
21:06:12   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:06:12   9  	  miss_table_name => 'svmc_miss_cat',
21:06:12  10  	  data_table_name => '&scoretable',
21:06:12  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:06:12  12  
21:06:12  13  	-- Normalize the data to be scored
21:06:12  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:06:12  15  	  norm_table_name => 'svmc_norm',
21:06:12  16  	  data_table_name => '&scoretable',
21:06:12  17  	  xform_view_name => 'svmc_apply_prep');
21:06:12  18  END;
21:06:12  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.61
21:06:14 SQL> 
21:06:14 SQL> -- Use same model_name used in score.sql
21:06:14 SQL> DEFINE model_name = 'forex14'
21:06:14 SQL> 
21:06:14 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
21:06:14 SQL> 
21:06:14 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.05
21:06:14 SQL> 
21:06:14 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
21:06:14   2  SELECT
21:06:14   3  prdate
21:06:14   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:06:14   5  ,sysdate
21:06:14   6  ,SUBSTR(prdate,1,3)pair
21:06:14   7  ,SUBSTR(prdate,4,19)ydate
21:06:14   8  FROM svmc_apply_prep
21:06:14   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.24
21:06:14 SQL> @aud_score1day.sql  2011-01-03 20:50:00
21:06:14 SQL> --
21:06:14 SQL> -- aud_score1day.sql
21:06:14 SQL> --
21:06:14 SQL> 
21:06:14 SQL> CREATE OR REPLACE VIEW sme AS
21:06:14   2  SELECT
21:06:14   3  'aud'||m.ydate prdate
21:06:14   4  ,NULL gatt
21:06:14   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:06:14   6  ,eur_g00
21:06:14   7  ,eur_g01
21:06:14   8  ,eur_g02
21:06:14   9  ,eur_g03
21:06:14  10  ,eur_g04
21:06:14  11  ,eur_g05
21:06:14  12  ,eur_g06
21:06:14  13  ,eur_g07
21:06:14  14  ,eur_g08
21:06:14  15  ,eur_g09
21:06:14  16  ,eur_g10
21:06:14  17  ,eur_g11
21:06:14  18  ,eur_g12
21:06:14  19  ,eur_g13
21:06:14  20  ,eur_g14
21:06:14  21  ,eur_g15
21:06:14  22  ,eur_g16
21:06:14  23  ,eur_g17
21:06:14  24  ,eur_g18
21:06:14  25  ,eur_g19
21:06:14  26  ,eur_g20
21:06:14  27  ,eur_g21
21:06:14  28  ,eur_g22
21:06:14  29  ,eur_g23
21:06:14  30  ,eur_g24
21:06:14  31  ,eur_g25
21:06:14  32  ,eur_g26
21:06:14  33  ,eur_g27
21:06:14  34  ,eur_g28
21:06:14  35  ,eur_g29
21:06:14  36  ,eur_g30
21:06:14  37  ,eur_g31
21:06:14  38  ,eur_g32
21:06:14  39  ,eur_g33
21:06:14  40  ,eur_g34
21:06:14  41  ,eur_g35
21:06:14  42  ,eur_g36
21:06:14  43  ,eur_g37
21:06:14  44  ,eur_g38
21:06:14  45  ,eur_g39
21:06:14  46  ,eur_g40
21:06:14  47  ,eur_g41
21:06:14  48  ,aud_g00
21:06:14  49  ,aud_g01
21:06:14  50  ,aud_g02
21:06:14  51  ,aud_g03
21:06:14  52  ,aud_g04
21:06:14  53  ,aud_g05
21:06:14  54  ,aud_g06
21:06:14  55  ,aud_g07
21:06:14  56  ,aud_g08
21:06:14  57  ,aud_g09
21:06:14  58  ,aud_g10
21:06:14  59  ,aud_g11
21:06:14  60  ,aud_g12
21:06:14  61  ,aud_g13
21:06:14  62  ,aud_g14
21:06:14  63  ,aud_g15
21:06:14  64  ,aud_g16
21:06:14  65  ,aud_g17
21:06:14  66  ,aud_g18
21:06:14  67  ,aud_g19
21:06:14  68  ,aud_g20
21:06:14  69  ,aud_g21
21:06:14  70  ,aud_g22
21:06:14  71  ,aud_g23
21:06:14  72  ,aud_g24
21:06:14  73  ,aud_g25
21:06:14  74  ,aud_g26
21:06:14  75  ,aud_g27
21:06:14  76  ,aud_g28
21:06:14  77  ,aud_g29
21:06:14  78  ,aud_g30
21:06:14  79  ,aud_g31
21:06:14  80  ,aud_g32
21:06:14  81  ,aud_g33
21:06:14  82  ,aud_g34
21:06:14  83  ,aud_g35
21:06:14  84  ,aud_g36
21:06:14  85  ,aud_g37
21:06:14  86  ,aud_g38
21:06:14  87  ,aud_g39
21:06:14  88  ,aud_g40
21:06:14  89  ,aud_g41
21:06:14  90  ,gbp_g00
21:06:14  91  ,gbp_g01
21:06:14  92  ,gbp_g02
21:06:14  93  ,gbp_g03
21:06:14  94  ,gbp_g04
21:06:14  95  ,gbp_g05
21:06:14  96  ,gbp_g06
21:06:14  97  ,gbp_g07
21:06:14  98  ,gbp_g08
21:06:14  99  ,gbp_g09
21:06:14 100  ,gbp_g10
21:06:14 101  ,gbp_g11
21:06:14 102  ,gbp_g12
21:06:14 103  ,gbp_g13
21:06:14 104  ,gbp_g14
21:06:14 105  ,gbp_g15
21:06:14 106  ,gbp_g16
21:06:14 107  ,gbp_g17
21:06:14 108  ,gbp_g18
21:06:14 109  ,gbp_g19
21:06:14 110  ,gbp_g20
21:06:14 111  ,gbp_g21
21:06:14 112  ,gbp_g22
21:06:14 113  ,gbp_g23
21:06:14 114  ,gbp_g24
21:06:14 115  ,gbp_g25
21:06:14 116  ,gbp_g26
21:06:14 117  ,gbp_g27
21:06:14 118  ,gbp_g28
21:06:14 119  ,gbp_g29
21:06:14 120  ,gbp_g30
21:06:14 121  ,gbp_g31
21:06:14 122  ,gbp_g32
21:06:14 123  ,gbp_g33
21:06:14 124  ,gbp_g34
21:06:14 125  ,gbp_g35
21:06:14 126  ,gbp_g36
21:06:14 127  ,gbp_g37
21:06:14 128  ,gbp_g38
21:06:14 129  ,gbp_g39
21:06:14 130  ,gbp_g40
21:06:14 131  ,gbp_g41
21:06:14 132  ,jpy_g00
21:06:14 133  ,jpy_g01
21:06:14 134  ,jpy_g02
21:06:14 135  ,jpy_g03
21:06:14 136  ,jpy_g04
21:06:14 137  ,jpy_g05
21:06:14 138  ,jpy_g06
21:06:14 139  ,jpy_g07
21:06:14 140  ,jpy_g08
21:06:14 141  ,jpy_g09
21:06:14 142  ,jpy_g10
21:06:14 143  ,jpy_g11
21:06:14 144  ,jpy_g12
21:06:14 145  ,jpy_g13
21:06:14 146  ,jpy_g14
21:06:14 147  ,jpy_g15
21:06:14 148  ,jpy_g16
21:06:14 149  ,jpy_g17
21:06:14 150  ,jpy_g18
21:06:14 151  ,jpy_g19
21:06:14 152  ,jpy_g20
21:06:14 153  ,jpy_g21
21:06:14 154  ,jpy_g22
21:06:14 155  ,jpy_g23
21:06:14 156  ,jpy_g24
21:06:14 157  ,jpy_g25
21:06:14 158  ,jpy_g26
21:06:14 159  ,jpy_g27
21:06:14 160  ,jpy_g28
21:06:14 161  ,jpy_g29
21:06:14 162  ,jpy_g30
21:06:14 163  ,jpy_g31
21:06:14 164  ,jpy_g32
21:06:14 165  ,jpy_g33
21:06:14 166  ,jpy_g34
21:06:14 167  ,jpy_g35
21:06:14 168  ,jpy_g36
21:06:14 169  ,jpy_g37
21:06:14 170  ,jpy_g38
21:06:14 171  ,jpy_g39
21:06:14 172  ,jpy_g40
21:06:14 173  ,jpy_g41
21:06:14 174  ,cad_g00
21:06:14 175  ,cad_g01
21:06:14 176  ,cad_g02
21:06:14 177  ,cad_g03
21:06:14 178  ,cad_g04
21:06:14 179  ,cad_g05
21:06:14 180  ,cad_g06
21:06:14 181  ,cad_g07
21:06:14 182  ,cad_g08
21:06:14 183  ,cad_g09
21:06:14 184  ,cad_g10
21:06:14 185  ,cad_g11
21:06:14 186  ,cad_g12
21:06:14 187  ,cad_g13
21:06:14 188  ,cad_g14
21:06:14 189  ,cad_g15
21:06:14 190  ,cad_g16
21:06:14 191  ,cad_g17
21:06:14 192  ,cad_g18
21:06:14 193  ,cad_g19
21:06:14 194  ,cad_g20
21:06:14 195  ,cad_g21
21:06:14 196  ,cad_g22
21:06:14 197  ,cad_g23
21:06:14 198  ,cad_g24
21:06:14 199  ,cad_g25
21:06:14 200  ,cad_g26
21:06:14 201  ,cad_g27
21:06:14 202  ,cad_g28
21:06:14 203  ,cad_g29
21:06:14 204  ,cad_g30
21:06:14 205  ,cad_g31
21:06:14 206  ,cad_g32
21:06:14 207  ,cad_g33
21:06:14 208  ,cad_g34
21:06:14 209  ,cad_g35
21:06:14 210  ,cad_g36
21:06:14 211  ,cad_g37
21:06:14 212  ,cad_g38
21:06:14 213  ,cad_g39
21:06:14 214  ,cad_g40
21:06:14 215  ,cad_g41
21:06:14 216  ,chf_g00
21:06:14 217  ,chf_g01
21:06:14 218  ,chf_g02
21:06:14 219  ,chf_g03
21:06:14 220  ,chf_g04
21:06:14 221  ,chf_g05
21:06:14 222  ,chf_g06
21:06:14 223  ,chf_g07
21:06:14 224  ,chf_g08
21:06:14 225  ,chf_g09
21:06:14 226  ,chf_g10
21:06:14 227  ,chf_g11
21:06:14 228  ,chf_g12
21:06:14 229  ,chf_g13
21:06:14 230  ,chf_g14
21:06:14 231  ,chf_g15
21:06:14 232  ,chf_g16
21:06:14 233  ,chf_g17
21:06:14 234  ,chf_g18
21:06:14 235  ,chf_g19
21:06:14 236  ,chf_g20
21:06:14 237  ,chf_g21
21:06:14 238  ,chf_g22
21:06:14 239  ,chf_g23
21:06:14 240  ,chf_g24
21:06:14 241  ,chf_g25
21:06:14 242  ,chf_g26
21:06:14 243  ,chf_g27
21:06:14 244  ,chf_g28
21:06:14 245  ,chf_g29
21:06:14 246  ,chf_g30
21:06:14 247  ,chf_g31
21:06:14 248  ,chf_g32
21:06:14 249  ,chf_g33
21:06:14 250  ,chf_g34
21:06:14 251  ,chf_g35
21:06:14 252  ,chf_g36
21:06:14 253  ,chf_g37
21:06:14 254  ,chf_g38
21:06:14 255  ,chf_g39
21:06:14 256  ,chf_g40
21:06:14 257  ,chf_g41
21:06:14 258  FROM aud_ms6 m
21:06:14 259  WHERE m.ydate = '&1'||' '||'&2'
21:06:14 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'20:50:00'

View created.

Elapsed: 00:00:00.12
21:06:14 SQL> 
21:06:14 SQL> -- rpt
21:06:14 SQL> -- We should see just 1 row:
21:06:14 SQL> 
21:06:14 SQL> SELECT COUNT(prdate) FROM sme
21:06:14   2  
21:06:14 SQL> -- Build the model:
21:06:14 SQL> CREATE OR REPLACE VIEW bme AS
21:06:14   2  SELECT
21:06:14   3  'aud'||m.ydate prdate
21:06:14   4  ,gatt
21:06:14   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:06:14   6  ,eur_g00
21:06:14   7  ,eur_g01
21:06:14   8  ,eur_g02
21:06:14   9  ,eur_g03
21:06:14  10  ,eur_g04
21:06:14  11  ,eur_g05
21:06:14  12  ,eur_g06
21:06:14  13  ,eur_g07
21:06:14  14  ,eur_g08
21:06:14  15  ,eur_g09
21:06:14  16  ,eur_g10
21:06:14  17  ,eur_g11
21:06:14  18  ,eur_g12
21:06:14  19  ,eur_g13
21:06:14  20  ,eur_g14
21:06:14  21  ,eur_g15
21:06:14  22  ,eur_g16
21:06:14  23  ,eur_g17
21:06:14  24  ,eur_g18
21:06:14  25  ,eur_g19
21:06:14  26  ,eur_g20
21:06:14  27  ,eur_g21
21:06:14  28  ,eur_g22
21:06:14  29  ,eur_g23
21:06:14  30  ,eur_g24
21:06:14  31  ,eur_g25
21:06:14  32  ,eur_g26
21:06:14  33  ,eur_g27
21:06:14  34  ,eur_g28
21:06:14  35  ,eur_g29
21:06:14  36  ,eur_g30
21:06:14  37  ,eur_g31
21:06:14  38  ,eur_g32
21:06:14  39  ,eur_g33
21:06:14  40  ,eur_g34
21:06:14  41  ,eur_g35
21:06:14  42  ,eur_g36
21:06:14  43  ,eur_g37
21:06:14  44  ,eur_g38
21:06:14  45  ,eur_g39
21:06:14  46  ,eur_g40
21:06:14  47  ,eur_g41
21:06:14  48  ,aud_g00
21:06:14  49  ,aud_g01
21:06:14  50  ,aud_g02
21:06:14  51  ,aud_g03
21:06:14  52  ,aud_g04
21:06:14  53  ,aud_g05
21:06:14  54  ,aud_g06
21:06:14  55  ,aud_g07
21:06:14  56  ,aud_g08
21:06:14  57  ,aud_g09
21:06:14  58  ,aud_g10
21:06:14  59  ,aud_g11
21:06:14  60  ,aud_g12
21:06:14  61  ,aud_g13
21:06:14  62  ,aud_g14
21:06:14  63  ,aud_g15
21:06:14  64  ,aud_g16
21:06:14  65  ,aud_g17
21:06:14  66  ,aud_g18
21:06:14  67  ,aud_g19
21:06:14  68  ,aud_g20
21:06:14  69  ,aud_g21
21:06:14  70  ,aud_g22
21:06:14  71  ,aud_g23
21:06:14  72  ,aud_g24
21:06:14  73  ,aud_g25
21:06:14  74  ,aud_g26
21:06:14  75  ,aud_g27
21:06:14  76  ,aud_g28
21:06:14  77  ,aud_g29
21:06:14  78  ,aud_g30
21:06:14  79  ,aud_g31
21:06:14  80  ,aud_g32
21:06:14  81  ,aud_g33
21:06:14  82  ,aud_g34
21:06:14  83  ,aud_g35
21:06:14  84  ,aud_g36
21:06:14  85  ,aud_g37
21:06:14  86  ,aud_g38
21:06:14  87  ,aud_g39
21:06:14  88  ,aud_g40
21:06:14  89  ,aud_g41
21:06:14  90  ,gbp_g00
21:06:14  91  ,gbp_g01
21:06:14  92  ,gbp_g02
21:06:14  93  ,gbp_g03
21:06:14  94  ,gbp_g04
21:06:14  95  ,gbp_g05
21:06:14  96  ,gbp_g06
21:06:14  97  ,gbp_g07
21:06:14  98  ,gbp_g08
21:06:14  99  ,gbp_g09
21:06:14 100  ,gbp_g10
21:06:14 101  ,gbp_g11
21:06:14 102  ,gbp_g12
21:06:14 103  ,gbp_g13
21:06:14 104  ,gbp_g14
21:06:14 105  ,gbp_g15
21:06:14 106  ,gbp_g16
21:06:14 107  ,gbp_g17
21:06:14 108  ,gbp_g18
21:06:14 109  ,gbp_g19
21:06:14 110  ,gbp_g20
21:06:14 111  ,gbp_g21
21:06:14 112  ,gbp_g22
21:06:14 113  ,gbp_g23
21:06:14 114  ,gbp_g24
21:06:14 115  ,gbp_g25
21:06:14 116  ,gbp_g26
21:06:14 117  ,gbp_g27
21:06:14 118  ,gbp_g28
21:06:14 119  ,gbp_g29
21:06:14 120  ,gbp_g30
21:06:14 121  ,gbp_g31
21:06:14 122  ,gbp_g32
21:06:14 123  ,gbp_g33
21:06:14 124  ,gbp_g34
21:06:14 125  ,gbp_g35
21:06:14 126  ,gbp_g36
21:06:14 127  ,gbp_g37
21:06:14 128  ,gbp_g38
21:06:14 129  ,gbp_g39
21:06:14 130  ,gbp_g40
21:06:14 131  ,gbp_g41
21:06:14 132  ,jpy_g00
21:06:14 133  ,jpy_g01
21:06:14 134  ,jpy_g02
21:06:14 135  ,jpy_g03
21:06:14 136  ,jpy_g04
21:06:14 137  ,jpy_g05
21:06:14 138  ,jpy_g06
21:06:14 139  ,jpy_g07
21:06:14 140  ,jpy_g08
21:06:14 141  ,jpy_g09
21:06:14 142  ,jpy_g10
21:06:14 143  ,jpy_g11
21:06:14 144  ,jpy_g12
21:06:14 145  ,jpy_g13
21:06:14 146  ,jpy_g14
21:06:14 147  ,jpy_g15
21:06:14 148  ,jpy_g16
21:06:14 149  ,jpy_g17
21:06:14 150  ,jpy_g18
21:06:14 151  ,jpy_g19
21:06:14 152  ,jpy_g20
21:06:14 153  ,jpy_g21
21:06:14 154  ,jpy_g22
21:06:14 155  ,jpy_g23
21:06:14 156  ,jpy_g24
21:06:14 157  ,jpy_g25
21:06:14 158  ,jpy_g26
21:06:14 159  ,jpy_g27
21:06:14 160  ,jpy_g28
21:06:14 161  ,jpy_g29
21:06:14 162  ,jpy_g30
21:06:14 163  ,jpy_g31
21:06:14 164  ,jpy_g32
21:06:14 165  ,jpy_g33
21:06:14 166  ,jpy_g34
21:06:14 167  ,jpy_g35
21:06:14 168  ,jpy_g36
21:06:14 169  ,jpy_g37
21:06:14 170  ,jpy_g38
21:06:14 171  ,jpy_g39
21:06:14 172  ,jpy_g40
21:06:14 173  ,jpy_g41
21:06:14 174  ,cad_g00
21:06:14 175  ,cad_g01
21:06:14 176  ,cad_g02
21:06:14 177  ,cad_g03
21:06:14 178  ,cad_g04
21:06:14 179  ,cad_g05
21:06:14 180  ,cad_g06
21:06:14 181  ,cad_g07
21:06:14 182  ,cad_g08
21:06:14 183  ,cad_g09
21:06:14 184  ,cad_g10
21:06:14 185  ,cad_g11
21:06:14 186  ,cad_g12
21:06:14 187  ,cad_g13
21:06:14 188  ,cad_g14
21:06:14 189  ,cad_g15
21:06:14 190  ,cad_g16
21:06:14 191  ,cad_g17
21:06:14 192  ,cad_g18
21:06:14 193  ,cad_g19
21:06:14 194  ,cad_g20
21:06:14 195  ,cad_g21
21:06:14 196  ,cad_g22
21:06:14 197  ,cad_g23
21:06:14 198  ,cad_g24
21:06:14 199  ,cad_g25
21:06:14 200  ,cad_g26
21:06:14 201  ,cad_g27
21:06:14 202  ,cad_g28
21:06:14 203  ,cad_g29
21:06:14 204  ,cad_g30
21:06:14 205  ,cad_g31
21:06:14 206  ,cad_g32
21:06:14 207  ,cad_g33
21:06:14 208  ,cad_g34
21:06:14 209  ,cad_g35
21:06:14 210  ,cad_g36
21:06:14 211  ,cad_g37
21:06:14 212  ,cad_g38
21:06:14 213  ,cad_g39
21:06:14 214  ,cad_g40
21:06:14 215  ,cad_g41
21:06:14 216  ,chf_g00
21:06:14 217  ,chf_g01
21:06:14 218  ,chf_g02
21:06:14 219  ,chf_g03
21:06:14 220  ,chf_g04
21:06:14 221  ,chf_g05
21:06:14 222  ,chf_g06
21:06:14 223  ,chf_g07
21:06:14 224  ,chf_g08
21:06:14 225  ,chf_g09
21:06:14 226  ,chf_g10
21:06:14 227  ,chf_g11
21:06:14 228  ,chf_g12
21:06:14 229  ,chf_g13
21:06:14 230  ,chf_g14
21:06:14 231  ,chf_g15
21:06:14 232  ,chf_g16
21:06:14 233  ,chf_g17
21:06:14 234  ,chf_g18
21:06:14 235  ,chf_g19
21:06:14 236  ,chf_g20
21:06:14 237  ,chf_g21
21:06:14 238  ,chf_g22
21:06:14 239  ,chf_g23
21:06:14 240  ,chf_g24
21:06:14 241  ,chf_g25
21:06:14 242  ,chf_g26
21:06:14 243  ,chf_g27
21:06:14 244  ,chf_g28
21:06:14 245  ,chf_g29
21:06:14 246  ,chf_g30
21:06:14 247  ,chf_g31
21:06:14 248  ,chf_g32
21:06:14 249  ,chf_g33
21:06:14 250  ,chf_g34
21:06:14 251  ,chf_g35
21:06:14 252  ,chf_g36
21:06:14 253  ,chf_g37
21:06:14 254  ,chf_g38
21:06:14 255  ,chf_g39
21:06:14 256  ,chf_g40
21:06:14 257  ,chf_g41
21:06:14 258  FROM aud_ms6 m
21:06:14 259  WHERE gatt IN('nup','up')
21:06:14 260  AND 1+m.ydate < '&1'||' '||'&2'
21:06:14 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'20:50:00'

View created.

Elapsed: 00:00:00.12
21:06:15 SQL> 
21:06:15 SQL> -- rpt
21:06:15 SQL> 
21:06:15 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
21:06:15   2  
21:06:15 SQL> SELECT MAX(prdate) FROM bme
21:06:15   2  
21:06:15 SQL> -- Now build model from bme and score sme
21:06:15 SQL> @score1.sql
21:06:15 SQL> -- score1.sql
21:06:15 SQL> 
21:06:15 SQL> -- Does the 1st SVM score
21:06:15 SQL> 
21:06:15 SQL> -- Fill up svmc_apply_prep
21:06:15 SQL> @score.sql
21:06:15 SQL> --
21:06:15 SQL> -- score.sql
21:06:15 SQL> --
21:06:15 SQL> 
21:06:15 SQL> -- usage: score.sql
21:06:15 SQL> 
21:06:15 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:06:15 SQL> 
21:06:15 SQL> DEFINE target	= 'gatt'
21:06:15 SQL> DEFINE model_name = 'forex14'
21:06:15 SQL> DEFINE bldtable	= 'bme'
21:06:15 SQL> DEFINE scoretable = 'sme'
21:06:15 SQL> DEFINE case_id	= 'prdate'
21:06:15 SQL> 
21:06:15 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:06:15 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:06:15 SQL> 
21:06:15 SQL> -- Builds an SVM model using pl/sql.
21:06:15 SQL> 
21:06:15 SQL> -----------------------------------------------------------------------
21:06:15 SQL> --			    BUILD THE MODEL
21:06:15 SQL> -----------------------------------------------------------------------
21:06:15 SQL> 
21:06:15 SQL> -- Cleanup old build data preparation objects for repeat runs
21:06:15 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
21:06:15 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:06:15 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
21:06:15 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
21:06:15 SQL> 
21:06:15 SQL> 
21:06:15 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:06:15 SQL> --
21:06:15 SQL> -- DROP	TABLE svmc_settings ;
21:06:15 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:06:15 SQL> -- DELETE svmc_settings;
21:06:15 SQL> 
21:06:15 SQL> -- The default classification algorithm is Naive Bayes. So override
21:06:15 SQL> -- this choice to SVM using a settings table.
21:06:15 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:06:15 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:06:15 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:06:15 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:06:15 SQL> -- models.
21:06:15 SQL> --
21:06:15 SQL> 
21:06:15 SQL> -- Do this once and then comment it out.
21:06:15 SQL> -- That makes script go faster.
21:06:15 SQL> -- BEGIN
21:06:15 SQL> -- -- Populate settings table
21:06:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:06:15 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:06:15 SQL> --
21:06:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:06:15 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:06:15 SQL> --
21:06:15 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:06:15 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:06:15 SQL> --   COMMIT;
21:06:15 SQL> -- END;
21:06:15 SQL> -- /
21:06:15 SQL> 
21:06:15 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:06:15 SQL> 
21:06:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:06:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:06:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:06:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:06:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:06:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
21:06:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:06:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:06:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:06:15 SQL> 
21:06:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:06:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:06:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
21:06:15 SQL> 
21:06:15 SQL> --------------------------------
21:06:15 SQL> -- PREPARE BUILD (TRAINING) DATA
21:06:15 SQL> --
21:06:15 SQL> 
21:06:15 SQL> -- 1. Missing Value treatment for all Predictors and
21:06:15 SQL> -- 2. Outlier Treatment and
21:06:15 SQL> -- 3. Normalization are performed below.
21:06:15 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:06:15 SQL> --    normalized here.
21:06:15 SQL> 
21:06:15 SQL> BEGIN
21:06:15   2  	-- Perform missing value treatment for all predictors
21:06:15   3  	-- create miss tables
21:06:15   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:06:15   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:06:15   6  
21:06:15   7  	-- populate miss tables
21:06:15   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:06:15   9  	  miss_table_name => 'svmc_miss_num',
21:06:15  10  	  data_table_name => '&bldtable',
21:06:15  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:06:15  12  
21:06:15  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:06:15  14  	  miss_table_name => 'svmc_miss_cat',
21:06:15  15  	  data_table_name => '&bldtable',
21:06:15  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:06:15  17  
21:06:15  18  	-- xform input data to replace missing values
21:06:15  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:06:15  20  	  miss_table_name => 'svmc_miss_num',
21:06:15  21  	  data_table_name => '&bldtable',
21:06:15  22  	  xform_view_name => 'xformed_build_miss_num');
21:06:15  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:06:15  24  	  miss_table_name => 'svmc_miss_cat',
21:06:15  25  	  data_table_name => '&bldtable',
21:06:15  26  	  xform_view_name => 'xformed_build_miss_cat');
21:06:15  27  
21:06:15  28  	-- Perform outlier treatment.
21:06:15  29  	-- create clip table
21:06:15  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:06:15  31  
21:06:15  32  	-- populate clip table
21:06:15  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:06:15  34  	  clip_table_name => 'svmc_clip',
21:06:15  35  	  data_table_name => '&bldtable',
21:06:15  36  	  tail_frac	  => 0.025,
21:06:15  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:06:15  38  
21:06:15  39  	-- xform input data to winsorized data
21:06:15  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:06:15  41  	  clip_table_name => 'svmc_clip',
21:06:15  42  	  data_table_name => '&bldtable',
21:06:15  43  	  xform_view_name => 'svmc_winsor');
21:06:15  44  
21:06:15  45  	-- create normalization table
21:06:15  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:06:15  47  
21:06:15  48  	-- populate normalization table based on winsorized data
21:06:15  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:06:15  50  	  norm_table_name => 'svmc_norm',
21:06:15  51  	  data_table_name => 'svmc_winsor',
21:06:15  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:06:15  53  
21:06:15  54  	-- normalize the original data
21:06:15  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:06:15  56  	  norm_table_name => 'svmc_norm',
21:06:15  57  	  data_table_name => '&bldtable',
21:06:15  58  	  xform_view_name => 'svmc_build_prep');
21:06:15  59  END;
21:06:15  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.23
21:06:33 SQL> 
21:06:33 SQL> ---------------------
21:06:33 SQL> -- CREATE A NEW MODEL
21:06:33 SQL> --
21:06:33 SQL> -- Cleanup old model with the same name for repeat runs
21:06:33 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:06:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:06:33   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
21:06:34 SQL> 
21:06:34 SQL> -- Build a new SVM Model
21:06:34 SQL> BEGIN
21:06:34   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:06:34   3  	  model_name	      => '&model_name',
21:06:34   4  	  mining_function     => dbms_data_mining.classification,
21:06:34   5  	  data_table_name     => 'svmc_build_prep',
21:06:34   6  	  case_id_column_name => '&case_id',
21:06:34   7  	  target_column_name  => '&target',
21:06:34   8  	  settings_table_name => 'svmc_settings');
21:06:34   9  END;
21:06:34  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:32.13
21:07:06 SQL> 
21:07:06 SQL> -----------------------------------------------------------------------
21:07:06 SQL> --			       APPLY/score THE MODEL
21:07:06 SQL> -----------------------------------------------------------------------
21:07:06 SQL> 
21:07:06 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:07:06 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:07:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:06   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:07:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:07:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:07:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:07:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:07:07 SQL> -----------------------
21:07:07 SQL> -- PREPARE SCORING DATA
21:07:07 SQL> --
21:07:07 SQL> -- If the data for model creation has been prepared, then the data
21:07:07 SQL> -- to be scored using the model must be prepared in the same manner
21:07:07 SQL> -- in order to obtain meaningful results.
21:07:07 SQL> --
21:07:07 SQL> -- 1. Missing Value treatment for all Predictors and
21:07:07 SQL> -- 2. Normalization
21:07:07 SQL> -- No outlier treatment will be performed during test and apply. The
21:07:07 SQL> -- normalization step is sufficient, since the normalization parameters
21:07:07 SQL> -- already capture the effects of outlier treatment done with build data.
21:07:07 SQL> --
21:07:07 SQL> BEGIN
21:07:07   2  	-- Xform Test data to replace missing values
21:07:07   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:07:07   4  	  miss_table_name => 'svmc_miss_num',
21:07:07   5  	  data_table_name => '&scoretable',
21:07:07   6  	  xform_view_name => 'xformed_apply_miss_num');
21:07:07   7  
21:07:07   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:07:07   9  	  miss_table_name => 'svmc_miss_cat',
21:07:07  10  	  data_table_name => '&scoretable',
21:07:07  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:07:07  12  
21:07:07  13  	-- Normalize the data to be scored
21:07:07  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:07:07  15  	  norm_table_name => 'svmc_norm',
21:07:07  16  	  data_table_name => '&scoretable',
21:07:07  17  	  xform_view_name => 'svmc_apply_prep');
21:07:07  18  END;
21:07:07  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.33
21:07:08 SQL> 
21:07:08 SQL> -- Use same model_name used in score.sql
21:07:08 SQL> DEFINE model_name = 'forex14'
21:07:08 SQL> 
21:07:08 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
21:07:08 SQL> 
21:07:08 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.07
21:07:08 SQL> 
21:07:08 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
21:07:08   2  SELECT
21:07:08   3  prdate
21:07:08   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:07:08   5  ,sysdate
21:07:08   6  ,SUBSTR(prdate,1,3)pair
21:07:08   7  ,SUBSTR(prdate,4,19)ydate
21:07:08   8  FROM svmc_apply_prep
21:07:08   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
21:07:08 SQL> @aud_score1day_gattn.sql	2011-01-03 20:45:00
21:07:08 SQL> --
21:07:08 SQL> -- aud_score1day_gattn.sql
21:07:08 SQL> --
21:07:08 SQL> 
21:07:08 SQL> CREATE OR REPLACE VIEW sme AS
21:07:08   2  SELECT
21:07:08   3  'aud'||m.ydate prdate
21:07:08   4  ,NULL gattn
21:07:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:07:08   6  ,eur_g00
21:07:08   7  ,eur_g01
21:07:08   8  ,eur_g02
21:07:08   9  ,eur_g03
21:07:08  10  ,eur_g04
21:07:08  11  ,eur_g05
21:07:08  12  ,eur_g06
21:07:08  13  ,eur_g07
21:07:08  14  ,eur_g08
21:07:08  15  ,eur_g09
21:07:08  16  ,eur_g10
21:07:08  17  ,eur_g11
21:07:08  18  ,eur_g12
21:07:08  19  ,eur_g13
21:07:08  20  ,eur_g14
21:07:08  21  ,eur_g15
21:07:08  22  ,eur_g16
21:07:08  23  ,eur_g17
21:07:08  24  ,eur_g18
21:07:08  25  ,eur_g19
21:07:08  26  ,eur_g20
21:07:08  27  ,eur_g21
21:07:08  28  ,eur_g22
21:07:08  29  ,eur_g23
21:07:08  30  ,eur_g24
21:07:08  31  ,eur_g25
21:07:08  32  ,eur_g26
21:07:08  33  ,eur_g27
21:07:08  34  ,eur_g28
21:07:08  35  ,eur_g29
21:07:08  36  ,eur_g30
21:07:08  37  ,eur_g31
21:07:08  38  ,eur_g32
21:07:08  39  ,eur_g33
21:07:08  40  ,eur_g34
21:07:08  41  ,eur_g35
21:07:08  42  ,eur_g36
21:07:08  43  ,eur_g37
21:07:08  44  ,eur_g38
21:07:08  45  ,eur_g39
21:07:08  46  ,eur_g40
21:07:08  47  ,eur_g41
21:07:08  48  ,aud_g00
21:07:08  49  ,aud_g01
21:07:08  50  ,aud_g02
21:07:08  51  ,aud_g03
21:07:08  52  ,aud_g04
21:07:08  53  ,aud_g05
21:07:08  54  ,aud_g06
21:07:08  55  ,aud_g07
21:07:08  56  ,aud_g08
21:07:08  57  ,aud_g09
21:07:08  58  ,aud_g10
21:07:08  59  ,aud_g11
21:07:08  60  ,aud_g12
21:07:08  61  ,aud_g13
21:07:08  62  ,aud_g14
21:07:08  63  ,aud_g15
21:07:08  64  ,aud_g16
21:07:08  65  ,aud_g17
21:07:08  66  ,aud_g18
21:07:08  67  ,aud_g19
21:07:08  68  ,aud_g20
21:07:08  69  ,aud_g21
21:07:08  70  ,aud_g22
21:07:08  71  ,aud_g23
21:07:08  72  ,aud_g24
21:07:08  73  ,aud_g25
21:07:08  74  ,aud_g26
21:07:08  75  ,aud_g27
21:07:08  76  ,aud_g28
21:07:08  77  ,aud_g29
21:07:08  78  ,aud_g30
21:07:08  79  ,aud_g31
21:07:08  80  ,aud_g32
21:07:08  81  ,aud_g33
21:07:08  82  ,aud_g34
21:07:08  83  ,aud_g35
21:07:08  84  ,aud_g36
21:07:08  85  ,aud_g37
21:07:08  86  ,aud_g38
21:07:08  87  ,aud_g39
21:07:08  88  ,aud_g40
21:07:08  89  ,aud_g41
21:07:08  90  ,gbp_g00
21:07:08  91  ,gbp_g01
21:07:08  92  ,gbp_g02
21:07:08  93  ,gbp_g03
21:07:08  94  ,gbp_g04
21:07:08  95  ,gbp_g05
21:07:08  96  ,gbp_g06
21:07:08  97  ,gbp_g07
21:07:08  98  ,gbp_g08
21:07:08  99  ,gbp_g09
21:07:08 100  ,gbp_g10
21:07:08 101  ,gbp_g11
21:07:08 102  ,gbp_g12
21:07:08 103  ,gbp_g13
21:07:08 104  ,gbp_g14
21:07:08 105  ,gbp_g15
21:07:08 106  ,gbp_g16
21:07:08 107  ,gbp_g17
21:07:08 108  ,gbp_g18
21:07:08 109  ,gbp_g19
21:07:08 110  ,gbp_g20
21:07:08 111  ,gbp_g21
21:07:08 112  ,gbp_g22
21:07:08 113  ,gbp_g23
21:07:08 114  ,gbp_g24
21:07:08 115  ,gbp_g25
21:07:08 116  ,gbp_g26
21:07:08 117  ,gbp_g27
21:07:08 118  ,gbp_g28
21:07:08 119  ,gbp_g29
21:07:08 120  ,gbp_g30
21:07:08 121  ,gbp_g31
21:07:08 122  ,gbp_g32
21:07:08 123  ,gbp_g33
21:07:08 124  ,gbp_g34
21:07:08 125  ,gbp_g35
21:07:08 126  ,gbp_g36
21:07:08 127  ,gbp_g37
21:07:08 128  ,gbp_g38
21:07:08 129  ,gbp_g39
21:07:08 130  ,gbp_g40
21:07:08 131  ,gbp_g41
21:07:08 132  ,jpy_g00
21:07:08 133  ,jpy_g01
21:07:08 134  ,jpy_g02
21:07:08 135  ,jpy_g03
21:07:08 136  ,jpy_g04
21:07:08 137  ,jpy_g05
21:07:08 138  ,jpy_g06
21:07:08 139  ,jpy_g07
21:07:08 140  ,jpy_g08
21:07:08 141  ,jpy_g09
21:07:08 142  ,jpy_g10
21:07:08 143  ,jpy_g11
21:07:08 144  ,jpy_g12
21:07:08 145  ,jpy_g13
21:07:08 146  ,jpy_g14
21:07:08 147  ,jpy_g15
21:07:08 148  ,jpy_g16
21:07:08 149  ,jpy_g17
21:07:08 150  ,jpy_g18
21:07:08 151  ,jpy_g19
21:07:08 152  ,jpy_g20
21:07:08 153  ,jpy_g21
21:07:08 154  ,jpy_g22
21:07:08 155  ,jpy_g23
21:07:08 156  ,jpy_g24
21:07:08 157  ,jpy_g25
21:07:08 158  ,jpy_g26
21:07:08 159  ,jpy_g27
21:07:08 160  ,jpy_g28
21:07:08 161  ,jpy_g29
21:07:08 162  ,jpy_g30
21:07:08 163  ,jpy_g31
21:07:08 164  ,jpy_g32
21:07:08 165  ,jpy_g33
21:07:08 166  ,jpy_g34
21:07:08 167  ,jpy_g35
21:07:08 168  ,jpy_g36
21:07:08 169  ,jpy_g37
21:07:08 170  ,jpy_g38
21:07:08 171  ,jpy_g39
21:07:08 172  ,jpy_g40
21:07:08 173  ,jpy_g41
21:07:08 174  ,cad_g00
21:07:08 175  ,cad_g01
21:07:08 176  ,cad_g02
21:07:08 177  ,cad_g03
21:07:08 178  ,cad_g04
21:07:08 179  ,cad_g05
21:07:08 180  ,cad_g06
21:07:08 181  ,cad_g07
21:07:08 182  ,cad_g08
21:07:08 183  ,cad_g09
21:07:08 184  ,cad_g10
21:07:08 185  ,cad_g11
21:07:08 186  ,cad_g12
21:07:08 187  ,cad_g13
21:07:08 188  ,cad_g14
21:07:08 189  ,cad_g15
21:07:08 190  ,cad_g16
21:07:08 191  ,cad_g17
21:07:08 192  ,cad_g18
21:07:08 193  ,cad_g19
21:07:08 194  ,cad_g20
21:07:08 195  ,cad_g21
21:07:08 196  ,cad_g22
21:07:08 197  ,cad_g23
21:07:08 198  ,cad_g24
21:07:08 199  ,cad_g25
21:07:08 200  ,cad_g26
21:07:08 201  ,cad_g27
21:07:08 202  ,cad_g28
21:07:08 203  ,cad_g29
21:07:08 204  ,cad_g30
21:07:08 205  ,cad_g31
21:07:08 206  ,cad_g32
21:07:08 207  ,cad_g33
21:07:08 208  ,cad_g34
21:07:08 209  ,cad_g35
21:07:08 210  ,cad_g36
21:07:08 211  ,cad_g37
21:07:08 212  ,cad_g38
21:07:08 213  ,cad_g39
21:07:08 214  ,cad_g40
21:07:08 215  ,cad_g41
21:07:08 216  ,chf_g00
21:07:08 217  ,chf_g01
21:07:08 218  ,chf_g02
21:07:08 219  ,chf_g03
21:07:08 220  ,chf_g04
21:07:08 221  ,chf_g05
21:07:08 222  ,chf_g06
21:07:08 223  ,chf_g07
21:07:08 224  ,chf_g08
21:07:08 225  ,chf_g09
21:07:08 226  ,chf_g10
21:07:08 227  ,chf_g11
21:07:08 228  ,chf_g12
21:07:08 229  ,chf_g13
21:07:08 230  ,chf_g14
21:07:08 231  ,chf_g15
21:07:08 232  ,chf_g16
21:07:08 233  ,chf_g17
21:07:08 234  ,chf_g18
21:07:08 235  ,chf_g19
21:07:08 236  ,chf_g20
21:07:08 237  ,chf_g21
21:07:08 238  ,chf_g22
21:07:08 239  ,chf_g23
21:07:08 240  ,chf_g24
21:07:08 241  ,chf_g25
21:07:08 242  ,chf_g26
21:07:08 243  ,chf_g27
21:07:08 244  ,chf_g28
21:07:08 245  ,chf_g29
21:07:08 246  ,chf_g30
21:07:08 247  ,chf_g31
21:07:08 248  ,chf_g32
21:07:08 249  ,chf_g33
21:07:08 250  ,chf_g34
21:07:08 251  ,chf_g35
21:07:08 252  ,chf_g36
21:07:08 253  ,chf_g37
21:07:08 254  ,chf_g38
21:07:08 255  ,chf_g39
21:07:08 256  ,chf_g40
21:07:08 257  ,chf_g41
21:07:08 258  FROM aud_ms6 m
21:07:08 259  WHERE m.ydate = '&1'||' '||'&2'
21:07:08 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'20:45:00'

View created.

Elapsed: 00:00:00.13
21:07:08 SQL> 
21:07:08 SQL> -- rpt
21:07:08 SQL> -- We should see just 1 row:
21:07:08 SQL> 
21:07:08 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
21:07:08 SQL> 
21:07:08 SQL> -- Build the model:
21:07:08 SQL> CREATE OR REPLACE VIEW bme AS
21:07:08   2  SELECT
21:07:08   3  'aud'||m.ydate prdate
21:07:08   4  ,gattn
21:07:08   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:07:08   6  ,eur_g00
21:07:08   7  ,eur_g01
21:07:08   8  ,eur_g02
21:07:08   9  ,eur_g03
21:07:08  10  ,eur_g04
21:07:08  11  ,eur_g05
21:07:08  12  ,eur_g06
21:07:08  13  ,eur_g07
21:07:08  14  ,eur_g08
21:07:08  15  ,eur_g09
21:07:08  16  ,eur_g10
21:07:08  17  ,eur_g11
21:07:08  18  ,eur_g12
21:07:08  19  ,eur_g13
21:07:08  20  ,eur_g14
21:07:08  21  ,eur_g15
21:07:08  22  ,eur_g16
21:07:08  23  ,eur_g17
21:07:08  24  ,eur_g18
21:07:08  25  ,eur_g19
21:07:08  26  ,eur_g20
21:07:08  27  ,eur_g21
21:07:08  28  ,eur_g22
21:07:08  29  ,eur_g23
21:07:08  30  ,eur_g24
21:07:08  31  ,eur_g25
21:07:08  32  ,eur_g26
21:07:08  33  ,eur_g27
21:07:08  34  ,eur_g28
21:07:08  35  ,eur_g29
21:07:08  36  ,eur_g30
21:07:08  37  ,eur_g31
21:07:08  38  ,eur_g32
21:07:08  39  ,eur_g33
21:07:08  40  ,eur_g34
21:07:08  41  ,eur_g35
21:07:08  42  ,eur_g36
21:07:08  43  ,eur_g37
21:07:08  44  ,eur_g38
21:07:08  45  ,eur_g39
21:07:08  46  ,eur_g40
21:07:08  47  ,eur_g41
21:07:08  48  ,aud_g00
21:07:08  49  ,aud_g01
21:07:08  50  ,aud_g02
21:07:08  51  ,aud_g03
21:07:08  52  ,aud_g04
21:07:08  53  ,aud_g05
21:07:08  54  ,aud_g06
21:07:08  55  ,aud_g07
21:07:08  56  ,aud_g08
21:07:08  57  ,aud_g09
21:07:08  58  ,aud_g10
21:07:08  59  ,aud_g11
21:07:08  60  ,aud_g12
21:07:08  61  ,aud_g13
21:07:08  62  ,aud_g14
21:07:08  63  ,aud_g15
21:07:08  64  ,aud_g16
21:07:08  65  ,aud_g17
21:07:08  66  ,aud_g18
21:07:08  67  ,aud_g19
21:07:08  68  ,aud_g20
21:07:08  69  ,aud_g21
21:07:08  70  ,aud_g22
21:07:08  71  ,aud_g23
21:07:08  72  ,aud_g24
21:07:08  73  ,aud_g25
21:07:08  74  ,aud_g26
21:07:08  75  ,aud_g27
21:07:08  76  ,aud_g28
21:07:08  77  ,aud_g29
21:07:08  78  ,aud_g30
21:07:08  79  ,aud_g31
21:07:08  80  ,aud_g32
21:07:08  81  ,aud_g33
21:07:08  82  ,aud_g34
21:07:08  83  ,aud_g35
21:07:08  84  ,aud_g36
21:07:08  85  ,aud_g37
21:07:08  86  ,aud_g38
21:07:08  87  ,aud_g39
21:07:08  88  ,aud_g40
21:07:08  89  ,aud_g41
21:07:08  90  ,gbp_g00
21:07:08  91  ,gbp_g01
21:07:08  92  ,gbp_g02
21:07:08  93  ,gbp_g03
21:07:08  94  ,gbp_g04
21:07:08  95  ,gbp_g05
21:07:08  96  ,gbp_g06
21:07:08  97  ,gbp_g07
21:07:08  98  ,gbp_g08
21:07:08  99  ,gbp_g09
21:07:08 100  ,gbp_g10
21:07:08 101  ,gbp_g11
21:07:08 102  ,gbp_g12
21:07:08 103  ,gbp_g13
21:07:08 104  ,gbp_g14
21:07:08 105  ,gbp_g15
21:07:08 106  ,gbp_g16
21:07:08 107  ,gbp_g17
21:07:08 108  ,gbp_g18
21:07:08 109  ,gbp_g19
21:07:08 110  ,gbp_g20
21:07:08 111  ,gbp_g21
21:07:08 112  ,gbp_g22
21:07:08 113  ,gbp_g23
21:07:08 114  ,gbp_g24
21:07:08 115  ,gbp_g25
21:07:08 116  ,gbp_g26
21:07:08 117  ,gbp_g27
21:07:08 118  ,gbp_g28
21:07:08 119  ,gbp_g29
21:07:08 120  ,gbp_g30
21:07:08 121  ,gbp_g31
21:07:08 122  ,gbp_g32
21:07:08 123  ,gbp_g33
21:07:08 124  ,gbp_g34
21:07:08 125  ,gbp_g35
21:07:08 126  ,gbp_g36
21:07:08 127  ,gbp_g37
21:07:08 128  ,gbp_g38
21:07:08 129  ,gbp_g39
21:07:08 130  ,gbp_g40
21:07:08 131  ,gbp_g41
21:07:08 132  ,jpy_g00
21:07:08 133  ,jpy_g01
21:07:08 134  ,jpy_g02
21:07:08 135  ,jpy_g03
21:07:08 136  ,jpy_g04
21:07:08 137  ,jpy_g05
21:07:08 138  ,jpy_g06
21:07:08 139  ,jpy_g07
21:07:08 140  ,jpy_g08
21:07:08 141  ,jpy_g09
21:07:08 142  ,jpy_g10
21:07:08 143  ,jpy_g11
21:07:08 144  ,jpy_g12
21:07:08 145  ,jpy_g13
21:07:08 146  ,jpy_g14
21:07:08 147  ,jpy_g15
21:07:08 148  ,jpy_g16
21:07:08 149  ,jpy_g17
21:07:08 150  ,jpy_g18
21:07:08 151  ,jpy_g19
21:07:08 152  ,jpy_g20
21:07:08 153  ,jpy_g21
21:07:08 154  ,jpy_g22
21:07:08 155  ,jpy_g23
21:07:08 156  ,jpy_g24
21:07:08 157  ,jpy_g25
21:07:08 158  ,jpy_g26
21:07:08 159  ,jpy_g27
21:07:08 160  ,jpy_g28
21:07:08 161  ,jpy_g29
21:07:08 162  ,jpy_g30
21:07:08 163  ,jpy_g31
21:07:08 164  ,jpy_g32
21:07:08 165  ,jpy_g33
21:07:08 166  ,jpy_g34
21:07:08 167  ,jpy_g35
21:07:08 168  ,jpy_g36
21:07:08 169  ,jpy_g37
21:07:08 170  ,jpy_g38
21:07:08 171  ,jpy_g39
21:07:08 172  ,jpy_g40
21:07:08 173  ,jpy_g41
21:07:08 174  ,cad_g00
21:07:08 175  ,cad_g01
21:07:08 176  ,cad_g02
21:07:08 177  ,cad_g03
21:07:08 178  ,cad_g04
21:07:08 179  ,cad_g05
21:07:08 180  ,cad_g06
21:07:08 181  ,cad_g07
21:07:08 182  ,cad_g08
21:07:08 183  ,cad_g09
21:07:08 184  ,cad_g10
21:07:08 185  ,cad_g11
21:07:08 186  ,cad_g12
21:07:08 187  ,cad_g13
21:07:08 188  ,cad_g14
21:07:08 189  ,cad_g15
21:07:08 190  ,cad_g16
21:07:08 191  ,cad_g17
21:07:08 192  ,cad_g18
21:07:08 193  ,cad_g19
21:07:08 194  ,cad_g20
21:07:08 195  ,cad_g21
21:07:08 196  ,cad_g22
21:07:08 197  ,cad_g23
21:07:08 198  ,cad_g24
21:07:08 199  ,cad_g25
21:07:08 200  ,cad_g26
21:07:08 201  ,cad_g27
21:07:08 202  ,cad_g28
21:07:08 203  ,cad_g29
21:07:08 204  ,cad_g30
21:07:08 205  ,cad_g31
21:07:08 206  ,cad_g32
21:07:08 207  ,cad_g33
21:07:08 208  ,cad_g34
21:07:08 209  ,cad_g35
21:07:08 210  ,cad_g36
21:07:08 211  ,cad_g37
21:07:08 212  ,cad_g38
21:07:08 213  ,cad_g39
21:07:08 214  ,cad_g40
21:07:08 215  ,cad_g41
21:07:08 216  ,chf_g00
21:07:08 217  ,chf_g01
21:07:08 218  ,chf_g02
21:07:08 219  ,chf_g03
21:07:08 220  ,chf_g04
21:07:08 221  ,chf_g05
21:07:08 222  ,chf_g06
21:07:08 223  ,chf_g07
21:07:08 224  ,chf_g08
21:07:08 225  ,chf_g09
21:07:08 226  ,chf_g10
21:07:08 227  ,chf_g11
21:07:08 228  ,chf_g12
21:07:08 229  ,chf_g13
21:07:08 230  ,chf_g14
21:07:08 231  ,chf_g15
21:07:08 232  ,chf_g16
21:07:08 233  ,chf_g17
21:07:08 234  ,chf_g18
21:07:08 235  ,chf_g19
21:07:08 236  ,chf_g20
21:07:08 237  ,chf_g21
21:07:08 238  ,chf_g22
21:07:08 239  ,chf_g23
21:07:08 240  ,chf_g24
21:07:08 241  ,chf_g25
21:07:08 242  ,chf_g26
21:07:08 243  ,chf_g27
21:07:08 244  ,chf_g28
21:07:08 245  ,chf_g29
21:07:08 246  ,chf_g30
21:07:08 247  ,chf_g31
21:07:08 248  ,chf_g32
21:07:08 249  ,chf_g33
21:07:08 250  ,chf_g34
21:07:08 251  ,chf_g35
21:07:08 252  ,chf_g36
21:07:08 253  ,chf_g37
21:07:08 254  ,chf_g38
21:07:08 255  ,chf_g39
21:07:08 256  ,chf_g40
21:07:08 257  ,chf_g41
21:07:08 258  FROM aud_ms6 m
21:07:08 259  WHERE gattn IN('nup','up')
21:07:08 260  AND 1+m.ydate < '&1'||' '||'&2'
21:07:08 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'20:45:00'

View created.

Elapsed: 00:00:00.21
21:07:09 SQL> 
21:07:09 SQL> -- rpt
21:07:09 SQL> 
21:07:09 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12714
up	     6258

Elapsed: 00:00:00.05
21:07:09 SQL> 
21:07:09 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 21:55:00

Elapsed: 00:00:00.03
21:07:09 SQL> 
21:07:09 SQL> -- Now build model from bme and score sme
21:07:09 SQL> @score1gattn.sql
21:07:09 SQL> -- score1gattn.sql
21:07:09 SQL> 
21:07:09 SQL> -- Does the 1st SVM score
21:07:09 SQL> 
21:07:09 SQL> -- Fill up svmc_apply_prep
21:07:09 SQL> @score_gattn.sql
21:07:09 SQL> --
21:07:09 SQL> -- score_gattn.sql
21:07:09 SQL> --
21:07:09 SQL> 
21:07:09 SQL> -- usage: score_gattn.sql
21:07:09 SQL> 
21:07:09 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:07:09 SQL> 
21:07:09 SQL> DEFINE target	= 'gattn'
21:07:09 SQL> DEFINE model_name = 'forex14'
21:07:09 SQL> DEFINE bldtable	= 'bme'
21:07:09 SQL> DEFINE scoretable = 'sme'
21:07:09 SQL> DEFINE case_id	= 'prdate'
21:07:09 SQL> 
21:07:09 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:07:09 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:07:09 SQL> 
21:07:09 SQL> -- Builds an SVM model using pl/sql.
21:07:09 SQL> 
21:07:09 SQL> -----------------------------------------------------------------------
21:07:09 SQL> --			    BUILD THE MODEL
21:07:09 SQL> -----------------------------------------------------------------------
21:07:09 SQL> 
21:07:09 SQL> -- Cleanup old build data preparation objects for repeat runs
21:07:09 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
21:07:09 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:07:09 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
21:07:09 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
21:07:09 SQL> 
21:07:09 SQL> 
21:07:09 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:07:09 SQL> --
21:07:09 SQL> -- DROP	TABLE svmc_settings ;
21:07:09 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:07:09 SQL> -- DELETE svmc_settings;
21:07:09 SQL> 
21:07:09 SQL> -- The default classification algorithm is Naive Bayes. So override
21:07:09 SQL> -- this choice to SVM using a settings table.
21:07:09 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:07:09 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:07:09 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:07:09 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:07:09 SQL> -- models.
21:07:09 SQL> --
21:07:09 SQL> 
21:07:09 SQL> -- Do this once and then comment it out.
21:07:09 SQL> -- That makes script go faster.
21:07:09 SQL> -- BEGIN
21:07:09 SQL> -- -- Populate settings table
21:07:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:07:09 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:07:09 SQL> --
21:07:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:07:09 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:07:09 SQL> --
21:07:09 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:07:09 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:07:09 SQL> --   COMMIT;
21:07:09 SQL> -- END;
21:07:09 SQL> -- /
21:07:09 SQL> 
21:07:09 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:07:09 SQL> 
21:07:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:07:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
21:07:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:07:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:07:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:07:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:07:09 SQL> 
21:07:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:07:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
21:07:09 SQL> 
21:07:09 SQL> --------------------------------
21:07:09 SQL> -- PREPARE BUILD (TRAINING) DATA
21:07:09 SQL> --
21:07:09 SQL> 
21:07:09 SQL> -- 1. Missing Value treatment for all Predictors and
21:07:09 SQL> -- 2. Outlier Treatment and
21:07:09 SQL> -- 3. Normalization are performed below.
21:07:09 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:07:09 SQL> --    normalized here.
21:07:09 SQL> 
21:07:09 SQL> BEGIN
21:07:09   2  	-- Perform missing value treatment for all predictors
21:07:09   3  	-- create miss tables
21:07:09   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:07:09   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:07:09   6  
21:07:09   7  	-- populate miss tables
21:07:09   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:07:09   9  	  miss_table_name => 'svmc_miss_num',
21:07:09  10  	  data_table_name => '&bldtable',
21:07:09  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:07:09  12  
21:07:09  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:07:09  14  	  miss_table_name => 'svmc_miss_cat',
21:07:09  15  	  data_table_name => '&bldtable',
21:07:09  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:07:09  17  
21:07:09  18  	-- xform input data to replace missing values
21:07:09  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:07:09  20  	  miss_table_name => 'svmc_miss_num',
21:07:09  21  	  data_table_name => '&bldtable',
21:07:09  22  	  xform_view_name => 'xformed_build_miss_num');
21:07:09  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:07:09  24  	  miss_table_name => 'svmc_miss_cat',
21:07:09  25  	  data_table_name => '&bldtable',
21:07:09  26  	  xform_view_name => 'xformed_build_miss_cat');
21:07:09  27  
21:07:09  28  	-- Perform outlier treatment.
21:07:09  29  	-- create clip table
21:07:09  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:07:09  31  
21:07:09  32  	-- populate clip table
21:07:09  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:07:09  34  	  clip_table_name => 'svmc_clip',
21:07:09  35  	  data_table_name => '&bldtable',
21:07:09  36  	  tail_frac	  => 0.025,
21:07:09  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:07:09  38  
21:07:09  39  	-- xform input data to winsorized data
21:07:09  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:07:09  41  	  clip_table_name => 'svmc_clip',
21:07:09  42  	  data_table_name => '&bldtable',
21:07:09  43  	  xform_view_name => 'svmc_winsor');
21:07:09  44  
21:07:09  45  	-- create normalization table
21:07:09  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:07:09  47  
21:07:09  48  	-- populate normalization table based on winsorized data
21:07:09  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:07:09  50  	  norm_table_name => 'svmc_norm',
21:07:09  51  	  data_table_name => 'svmc_winsor',
21:07:09  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:07:09  53  
21:07:09  54  	-- normalize the original data
21:07:09  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:07:09  56  	  norm_table_name => 'svmc_norm',
21:07:09  57  	  data_table_name => '&bldtable',
21:07:09  58  	  xform_view_name => 'svmc_build_prep');
21:07:09  59  END;
21:07:09  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.65
21:07:28 SQL> 
21:07:28 SQL> ---------------------
21:07:28 SQL> -- CREATE A NEW MODEL
21:07:28 SQL> --
21:07:28 SQL> -- Cleanup old model with the same name for repeat runs
21:07:28 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:07:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:28   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.92
21:07:29 SQL> 
21:07:29 SQL> -- Build a new SVM Model
21:07:29 SQL> BEGIN
21:07:29   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:07:29   3  	  model_name	      => '&model_name',
21:07:29   4  	  mining_function     => dbms_data_mining.classification,
21:07:29   5  	  data_table_name     => 'svmc_build_prep',
21:07:29   6  	  case_id_column_name => '&case_id',
21:07:29   7  	  target_column_name  => '&target',
21:07:29   8  	  settings_table_name => 'svmc_settings');
21:07:29   9  END;
21:07:29  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.50
21:07:56 SQL> 
21:07:56 SQL> -----------------------------------------------------------------------
21:07:56 SQL> --			       APPLY/score THE MODEL
21:07:56 SQL> -----------------------------------------------------------------------
21:07:56 SQL> 
21:07:56 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:07:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:07:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:07:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:07:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:07:56 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:07:56   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:56   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:07:56 SQL> -----------------------
21:07:56 SQL> -- PREPARE SCORING DATA
21:07:56 SQL> --
21:07:56 SQL> -- If the data for model creation has been prepared, then the data
21:07:56 SQL> -- to be scored using the model must be prepared in the same manner
21:07:56 SQL> -- in order to obtain meaningful results.
21:07:56 SQL> --
21:07:56 SQL> -- 1. Missing Value treatment for all Predictors and
21:07:56 SQL> -- 2. Normalization
21:07:56 SQL> -- No outlier treatment will be performed during test and apply. The
21:07:56 SQL> -- normalization step is sufficient, since the normalization parameters
21:07:56 SQL> -- already capture the effects of outlier treatment done with build data.
21:07:56 SQL> --
21:07:56 SQL> BEGIN
21:07:56   2  	-- Xform Test data to replace missing values
21:07:56   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:07:56   4  	  miss_table_name => 'svmc_miss_num',
21:07:56   5  	  data_table_name => '&scoretable',
21:07:56   6  	  xform_view_name => 'xformed_apply_miss_num');
21:07:56   7  
21:07:56   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:07:56   9  	  miss_table_name => 'svmc_miss_cat',
21:07:56  10  	  data_table_name => '&scoretable',
21:07:56  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:07:56  12  
21:07:56  13  	-- Normalize the data to be scored
21:07:56  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:07:56  15  	  norm_table_name => 'svmc_norm',
21:07:56  16  	  data_table_name => '&scoretable',
21:07:56  17  	  xform_view_name => 'svmc_apply_prep');
21:07:56  18  END;
21:07:56  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
21:07:58 SQL> 
21:07:58 SQL> -- Use same model_name used in score_gattn.sql
21:07:58 SQL> DEFINE model_name = 'forex14'
21:07:58 SQL> 
21:07:58 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
21:07:58 SQL> 
21:07:58 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
21:07:58   2  SELECT
21:07:58   3  prdate
21:07:58   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:07:58   5  ,sysdate
21:07:58   6  ,SUBSTR(prdate,1,3)pair
21:07:58   7  ,SUBSTR(prdate,4,19)ydate
21:07:58   8  FROM svmc_apply_prep
21:07:58   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
21:07:58 SQL> @aud_score1day_gattn.sql	2011-01-03 20:50:00
21:07:58 SQL> --
21:07:58 SQL> -- aud_score1day_gattn.sql
21:07:58 SQL> --
21:07:58 SQL> 
21:07:58 SQL> CREATE OR REPLACE VIEW sme AS
21:07:58   2  SELECT
21:07:58   3  'aud'||m.ydate prdate
21:07:58   4  ,NULL gattn
21:07:58   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:07:58   6  ,eur_g00
21:07:58   7  ,eur_g01
21:07:58   8  ,eur_g02
21:07:58   9  ,eur_g03
21:07:58  10  ,eur_g04
21:07:58  11  ,eur_g05
21:07:58  12  ,eur_g06
21:07:58  13  ,eur_g07
21:07:58  14  ,eur_g08
21:07:58  15  ,eur_g09
21:07:58  16  ,eur_g10
21:07:58  17  ,eur_g11
21:07:58  18  ,eur_g12
21:07:58  19  ,eur_g13
21:07:58  20  ,eur_g14
21:07:58  21  ,eur_g15
21:07:58  22  ,eur_g16
21:07:58  23  ,eur_g17
21:07:58  24  ,eur_g18
21:07:58  25  ,eur_g19
21:07:58  26  ,eur_g20
21:07:58  27  ,eur_g21
21:07:58  28  ,eur_g22
21:07:58  29  ,eur_g23
21:07:58  30  ,eur_g24
21:07:58  31  ,eur_g25
21:07:58  32  ,eur_g26
21:07:58  33  ,eur_g27
21:07:58  34  ,eur_g28
21:07:58  35  ,eur_g29
21:07:58  36  ,eur_g30
21:07:58  37  ,eur_g31
21:07:58  38  ,eur_g32
21:07:58  39  ,eur_g33
21:07:58  40  ,eur_g34
21:07:58  41  ,eur_g35
21:07:58  42  ,eur_g36
21:07:58  43  ,eur_g37
21:07:58  44  ,eur_g38
21:07:58  45  ,eur_g39
21:07:58  46  ,eur_g40
21:07:58  47  ,eur_g41
21:07:58  48  ,aud_g00
21:07:58  49  ,aud_g01
21:07:58  50  ,aud_g02
21:07:58  51  ,aud_g03
21:07:58  52  ,aud_g04
21:07:58  53  ,aud_g05
21:07:58  54  ,aud_g06
21:07:58  55  ,aud_g07
21:07:58  56  ,aud_g08
21:07:58  57  ,aud_g09
21:07:58  58  ,aud_g10
21:07:58  59  ,aud_g11
21:07:58  60  ,aud_g12
21:07:58  61  ,aud_g13
21:07:58  62  ,aud_g14
21:07:58  63  ,aud_g15
21:07:58  64  ,aud_g16
21:07:58  65  ,aud_g17
21:07:58  66  ,aud_g18
21:07:58  67  ,aud_g19
21:07:58  68  ,aud_g20
21:07:58  69  ,aud_g21
21:07:58  70  ,aud_g22
21:07:58  71  ,aud_g23
21:07:58  72  ,aud_g24
21:07:58  73  ,aud_g25
21:07:58  74  ,aud_g26
21:07:58  75  ,aud_g27
21:07:58  76  ,aud_g28
21:07:58  77  ,aud_g29
21:07:58  78  ,aud_g30
21:07:58  79  ,aud_g31
21:07:58  80  ,aud_g32
21:07:58  81  ,aud_g33
21:07:58  82  ,aud_g34
21:07:58  83  ,aud_g35
21:07:58  84  ,aud_g36
21:07:58  85  ,aud_g37
21:07:58  86  ,aud_g38
21:07:58  87  ,aud_g39
21:07:58  88  ,aud_g40
21:07:58  89  ,aud_g41
21:07:58  90  ,gbp_g00
21:07:58  91  ,gbp_g01
21:07:58  92  ,gbp_g02
21:07:58  93  ,gbp_g03
21:07:58  94  ,gbp_g04
21:07:58  95  ,gbp_g05
21:07:58  96  ,gbp_g06
21:07:58  97  ,gbp_g07
21:07:58  98  ,gbp_g08
21:07:58  99  ,gbp_g09
21:07:58 100  ,gbp_g10
21:07:58 101  ,gbp_g11
21:07:58 102  ,gbp_g12
21:07:58 103  ,gbp_g13
21:07:58 104  ,gbp_g14
21:07:58 105  ,gbp_g15
21:07:58 106  ,gbp_g16
21:07:58 107  ,gbp_g17
21:07:58 108  ,gbp_g18
21:07:58 109  ,gbp_g19
21:07:58 110  ,gbp_g20
21:07:58 111  ,gbp_g21
21:07:58 112  ,gbp_g22
21:07:58 113  ,gbp_g23
21:07:58 114  ,gbp_g24
21:07:58 115  ,gbp_g25
21:07:58 116  ,gbp_g26
21:07:58 117  ,gbp_g27
21:07:58 118  ,gbp_g28
21:07:58 119  ,gbp_g29
21:07:58 120  ,gbp_g30
21:07:58 121  ,gbp_g31
21:07:58 122  ,gbp_g32
21:07:58 123  ,gbp_g33
21:07:58 124  ,gbp_g34
21:07:58 125  ,gbp_g35
21:07:58 126  ,gbp_g36
21:07:58 127  ,gbp_g37
21:07:58 128  ,gbp_g38
21:07:58 129  ,gbp_g39
21:07:58 130  ,gbp_g40
21:07:58 131  ,gbp_g41
21:07:58 132  ,jpy_g00
21:07:58 133  ,jpy_g01
21:07:58 134  ,jpy_g02
21:07:58 135  ,jpy_g03
21:07:58 136  ,jpy_g04
21:07:58 137  ,jpy_g05
21:07:58 138  ,jpy_g06
21:07:58 139  ,jpy_g07
21:07:58 140  ,jpy_g08
21:07:58 141  ,jpy_g09
21:07:58 142  ,jpy_g10
21:07:58 143  ,jpy_g11
21:07:58 144  ,jpy_g12
21:07:58 145  ,jpy_g13
21:07:58 146  ,jpy_g14
21:07:58 147  ,jpy_g15
21:07:58 148  ,jpy_g16
21:07:58 149  ,jpy_g17
21:07:58 150  ,jpy_g18
21:07:58 151  ,jpy_g19
21:07:58 152  ,jpy_g20
21:07:58 153  ,jpy_g21
21:07:58 154  ,jpy_g22
21:07:58 155  ,jpy_g23
21:07:58 156  ,jpy_g24
21:07:58 157  ,jpy_g25
21:07:58 158  ,jpy_g26
21:07:58 159  ,jpy_g27
21:07:58 160  ,jpy_g28
21:07:58 161  ,jpy_g29
21:07:58 162  ,jpy_g30
21:07:58 163  ,jpy_g31
21:07:58 164  ,jpy_g32
21:07:58 165  ,jpy_g33
21:07:58 166  ,jpy_g34
21:07:58 167  ,jpy_g35
21:07:58 168  ,jpy_g36
21:07:58 169  ,jpy_g37
21:07:58 170  ,jpy_g38
21:07:58 171  ,jpy_g39
21:07:58 172  ,jpy_g40
21:07:58 173  ,jpy_g41
21:07:58 174  ,cad_g00
21:07:58 175  ,cad_g01
21:07:58 176  ,cad_g02
21:07:58 177  ,cad_g03
21:07:58 178  ,cad_g04
21:07:58 179  ,cad_g05
21:07:58 180  ,cad_g06
21:07:58 181  ,cad_g07
21:07:58 182  ,cad_g08
21:07:58 183  ,cad_g09
21:07:58 184  ,cad_g10
21:07:58 185  ,cad_g11
21:07:58 186  ,cad_g12
21:07:58 187  ,cad_g13
21:07:58 188  ,cad_g14
21:07:58 189  ,cad_g15
21:07:58 190  ,cad_g16
21:07:58 191  ,cad_g17
21:07:58 192  ,cad_g18
21:07:58 193  ,cad_g19
21:07:58 194  ,cad_g20
21:07:58 195  ,cad_g21
21:07:58 196  ,cad_g22
21:07:58 197  ,cad_g23
21:07:58 198  ,cad_g24
21:07:58 199  ,cad_g25
21:07:58 200  ,cad_g26
21:07:58 201  ,cad_g27
21:07:58 202  ,cad_g28
21:07:58 203  ,cad_g29
21:07:58 204  ,cad_g30
21:07:58 205  ,cad_g31
21:07:58 206  ,cad_g32
21:07:58 207  ,cad_g33
21:07:58 208  ,cad_g34
21:07:58 209  ,cad_g35
21:07:58 210  ,cad_g36
21:07:58 211  ,cad_g37
21:07:58 212  ,cad_g38
21:07:58 213  ,cad_g39
21:07:58 214  ,cad_g40
21:07:58 215  ,cad_g41
21:07:58 216  ,chf_g00
21:07:58 217  ,chf_g01
21:07:58 218  ,chf_g02
21:07:58 219  ,chf_g03
21:07:58 220  ,chf_g04
21:07:58 221  ,chf_g05
21:07:58 222  ,chf_g06
21:07:58 223  ,chf_g07
21:07:58 224  ,chf_g08
21:07:58 225  ,chf_g09
21:07:58 226  ,chf_g10
21:07:58 227  ,chf_g11
21:07:58 228  ,chf_g12
21:07:58 229  ,chf_g13
21:07:58 230  ,chf_g14
21:07:58 231  ,chf_g15
21:07:58 232  ,chf_g16
21:07:58 233  ,chf_g17
21:07:58 234  ,chf_g18
21:07:58 235  ,chf_g19
21:07:58 236  ,chf_g20
21:07:58 237  ,chf_g21
21:07:58 238  ,chf_g22
21:07:58 239  ,chf_g23
21:07:58 240  ,chf_g24
21:07:58 241  ,chf_g25
21:07:58 242  ,chf_g26
21:07:58 243  ,chf_g27
21:07:58 244  ,chf_g28
21:07:58 245  ,chf_g29
21:07:58 246  ,chf_g30
21:07:58 247  ,chf_g31
21:07:58 248  ,chf_g32
21:07:58 249  ,chf_g33
21:07:58 250  ,chf_g34
21:07:58 251  ,chf_g35
21:07:58 252  ,chf_g36
21:07:58 253  ,chf_g37
21:07:58 254  ,chf_g38
21:07:58 255  ,chf_g39
21:07:58 256  ,chf_g40
21:07:58 257  ,chf_g41
21:07:58 258  FROM aud_ms6 m
21:07:58 259  WHERE m.ydate = '&1'||' '||'&2'
21:07:58 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2011-01-03'||' '||'20:50:00'

View created.

Elapsed: 00:00:00.21
21:07:58 SQL> 
21:07:58 SQL> -- rpt
21:07:58 SQL> -- We should see just 1 row:
21:07:58 SQL> 
21:07:58 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
21:07:58 SQL> 
21:07:58 SQL> -- Build the model:
21:07:58 SQL> CREATE OR REPLACE VIEW bme AS
21:07:58   2  SELECT
21:07:58   3  'aud'||m.ydate prdate
21:07:58   4  ,gattn
21:07:58   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
21:07:58   6  ,eur_g00
21:07:58   7  ,eur_g01
21:07:58   8  ,eur_g02
21:07:58   9  ,eur_g03
21:07:58  10  ,eur_g04
21:07:58  11  ,eur_g05
21:07:58  12  ,eur_g06
21:07:58  13  ,eur_g07
21:07:58  14  ,eur_g08
21:07:58  15  ,eur_g09
21:07:58  16  ,eur_g10
21:07:58  17  ,eur_g11
21:07:58  18  ,eur_g12
21:07:58  19  ,eur_g13
21:07:58  20  ,eur_g14
21:07:58  21  ,eur_g15
21:07:58  22  ,eur_g16
21:07:58  23  ,eur_g17
21:07:58  24  ,eur_g18
21:07:58  25  ,eur_g19
21:07:58  26  ,eur_g20
21:07:58  27  ,eur_g21
21:07:58  28  ,eur_g22
21:07:58  29  ,eur_g23
21:07:58  30  ,eur_g24
21:07:58  31  ,eur_g25
21:07:58  32  ,eur_g26
21:07:58  33  ,eur_g27
21:07:58  34  ,eur_g28
21:07:58  35  ,eur_g29
21:07:58  36  ,eur_g30
21:07:58  37  ,eur_g31
21:07:58  38  ,eur_g32
21:07:58  39  ,eur_g33
21:07:58  40  ,eur_g34
21:07:58  41  ,eur_g35
21:07:58  42  ,eur_g36
21:07:58  43  ,eur_g37
21:07:58  44  ,eur_g38
21:07:58  45  ,eur_g39
21:07:58  46  ,eur_g40
21:07:58  47  ,eur_g41
21:07:58  48  ,aud_g00
21:07:58  49  ,aud_g01
21:07:58  50  ,aud_g02
21:07:58  51  ,aud_g03
21:07:58  52  ,aud_g04
21:07:58  53  ,aud_g05
21:07:58  54  ,aud_g06
21:07:58  55  ,aud_g07
21:07:58  56  ,aud_g08
21:07:58  57  ,aud_g09
21:07:58  58  ,aud_g10
21:07:58  59  ,aud_g11
21:07:58  60  ,aud_g12
21:07:58  61  ,aud_g13
21:07:58  62  ,aud_g14
21:07:58  63  ,aud_g15
21:07:58  64  ,aud_g16
21:07:58  65  ,aud_g17
21:07:58  66  ,aud_g18
21:07:58  67  ,aud_g19
21:07:58  68  ,aud_g20
21:07:58  69  ,aud_g21
21:07:58  70  ,aud_g22
21:07:58  71  ,aud_g23
21:07:58  72  ,aud_g24
21:07:58  73  ,aud_g25
21:07:58  74  ,aud_g26
21:07:58  75  ,aud_g27
21:07:58  76  ,aud_g28
21:07:58  77  ,aud_g29
21:07:58  78  ,aud_g30
21:07:58  79  ,aud_g31
21:07:58  80  ,aud_g32
21:07:58  81  ,aud_g33
21:07:58  82  ,aud_g34
21:07:58  83  ,aud_g35
21:07:58  84  ,aud_g36
21:07:58  85  ,aud_g37
21:07:58  86  ,aud_g38
21:07:58  87  ,aud_g39
21:07:58  88  ,aud_g40
21:07:58  89  ,aud_g41
21:07:58  90  ,gbp_g00
21:07:58  91  ,gbp_g01
21:07:58  92  ,gbp_g02
21:07:58  93  ,gbp_g03
21:07:58  94  ,gbp_g04
21:07:58  95  ,gbp_g05
21:07:58  96  ,gbp_g06
21:07:58  97  ,gbp_g07
21:07:58  98  ,gbp_g08
21:07:58  99  ,gbp_g09
21:07:58 100  ,gbp_g10
21:07:58 101  ,gbp_g11
21:07:58 102  ,gbp_g12
21:07:58 103  ,gbp_g13
21:07:58 104  ,gbp_g14
21:07:58 105  ,gbp_g15
21:07:58 106  ,gbp_g16
21:07:58 107  ,gbp_g17
21:07:58 108  ,gbp_g18
21:07:58 109  ,gbp_g19
21:07:58 110  ,gbp_g20
21:07:58 111  ,gbp_g21
21:07:58 112  ,gbp_g22
21:07:58 113  ,gbp_g23
21:07:58 114  ,gbp_g24
21:07:58 115  ,gbp_g25
21:07:58 116  ,gbp_g26
21:07:58 117  ,gbp_g27
21:07:58 118  ,gbp_g28
21:07:58 119  ,gbp_g29
21:07:58 120  ,gbp_g30
21:07:58 121  ,gbp_g31
21:07:58 122  ,gbp_g32
21:07:58 123  ,gbp_g33
21:07:58 124  ,gbp_g34
21:07:58 125  ,gbp_g35
21:07:58 126  ,gbp_g36
21:07:58 127  ,gbp_g37
21:07:58 128  ,gbp_g38
21:07:58 129  ,gbp_g39
21:07:58 130  ,gbp_g40
21:07:58 131  ,gbp_g41
21:07:58 132  ,jpy_g00
21:07:58 133  ,jpy_g01
21:07:58 134  ,jpy_g02
21:07:58 135  ,jpy_g03
21:07:58 136  ,jpy_g04
21:07:58 137  ,jpy_g05
21:07:58 138  ,jpy_g06
21:07:58 139  ,jpy_g07
21:07:58 140  ,jpy_g08
21:07:58 141  ,jpy_g09
21:07:58 142  ,jpy_g10
21:07:58 143  ,jpy_g11
21:07:58 144  ,jpy_g12
21:07:58 145  ,jpy_g13
21:07:58 146  ,jpy_g14
21:07:58 147  ,jpy_g15
21:07:58 148  ,jpy_g16
21:07:58 149  ,jpy_g17
21:07:58 150  ,jpy_g18
21:07:58 151  ,jpy_g19
21:07:58 152  ,jpy_g20
21:07:58 153  ,jpy_g21
21:07:58 154  ,jpy_g22
21:07:58 155  ,jpy_g23
21:07:58 156  ,jpy_g24
21:07:58 157  ,jpy_g25
21:07:58 158  ,jpy_g26
21:07:58 159  ,jpy_g27
21:07:58 160  ,jpy_g28
21:07:58 161  ,jpy_g29
21:07:58 162  ,jpy_g30
21:07:58 163  ,jpy_g31
21:07:58 164  ,jpy_g32
21:07:58 165  ,jpy_g33
21:07:58 166  ,jpy_g34
21:07:58 167  ,jpy_g35
21:07:58 168  ,jpy_g36
21:07:58 169  ,jpy_g37
21:07:58 170  ,jpy_g38
21:07:58 171  ,jpy_g39
21:07:58 172  ,jpy_g40
21:07:58 173  ,jpy_g41
21:07:58 174  ,cad_g00
21:07:58 175  ,cad_g01
21:07:58 176  ,cad_g02
21:07:58 177  ,cad_g03
21:07:58 178  ,cad_g04
21:07:58 179  ,cad_g05
21:07:58 180  ,cad_g06
21:07:58 181  ,cad_g07
21:07:58 182  ,cad_g08
21:07:58 183  ,cad_g09
21:07:58 184  ,cad_g10
21:07:58 185  ,cad_g11
21:07:58 186  ,cad_g12
21:07:58 187  ,cad_g13
21:07:58 188  ,cad_g14
21:07:58 189  ,cad_g15
21:07:58 190  ,cad_g16
21:07:58 191  ,cad_g17
21:07:58 192  ,cad_g18
21:07:58 193  ,cad_g19
21:07:58 194  ,cad_g20
21:07:58 195  ,cad_g21
21:07:58 196  ,cad_g22
21:07:58 197  ,cad_g23
21:07:58 198  ,cad_g24
21:07:58 199  ,cad_g25
21:07:58 200  ,cad_g26
21:07:58 201  ,cad_g27
21:07:58 202  ,cad_g28
21:07:58 203  ,cad_g29
21:07:58 204  ,cad_g30
21:07:58 205  ,cad_g31
21:07:58 206  ,cad_g32
21:07:58 207  ,cad_g33
21:07:58 208  ,cad_g34
21:07:58 209  ,cad_g35
21:07:58 210  ,cad_g36
21:07:58 211  ,cad_g37
21:07:58 212  ,cad_g38
21:07:58 213  ,cad_g39
21:07:58 214  ,cad_g40
21:07:58 215  ,cad_g41
21:07:58 216  ,chf_g00
21:07:58 217  ,chf_g01
21:07:58 218  ,chf_g02
21:07:58 219  ,chf_g03
21:07:58 220  ,chf_g04
21:07:58 221  ,chf_g05
21:07:58 222  ,chf_g06
21:07:58 223  ,chf_g07
21:07:58 224  ,chf_g08
21:07:58 225  ,chf_g09
21:07:58 226  ,chf_g10
21:07:58 227  ,chf_g11
21:07:58 228  ,chf_g12
21:07:58 229  ,chf_g13
21:07:58 230  ,chf_g14
21:07:58 231  ,chf_g15
21:07:58 232  ,chf_g16
21:07:58 233  ,chf_g17
21:07:58 234  ,chf_g18
21:07:58 235  ,chf_g19
21:07:58 236  ,chf_g20
21:07:58 237  ,chf_g21
21:07:58 238  ,chf_g22
21:07:58 239  ,chf_g23
21:07:58 240  ,chf_g24
21:07:58 241  ,chf_g25
21:07:58 242  ,chf_g26
21:07:58 243  ,chf_g27
21:07:58 244  ,chf_g28
21:07:58 245  ,chf_g29
21:07:58 246  ,chf_g30
21:07:58 247  ,chf_g31
21:07:58 248  ,chf_g32
21:07:58 249  ,chf_g33
21:07:58 250  ,chf_g34
21:07:58 251  ,chf_g35
21:07:58 252  ,chf_g36
21:07:58 253  ,chf_g37
21:07:58 254  ,chf_g38
21:07:58 255  ,chf_g39
21:07:58 256  ,chf_g40
21:07:58 257  ,chf_g41
21:07:58 258  FROM aud_ms6 m
21:07:58 259  WHERE gattn IN('nup','up')
21:07:58 260  AND 1+m.ydate < '&1'||' '||'&2'
21:07:58 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2011-01-03'||' '||'20:50:00'

View created.

Elapsed: 00:00:00.26
21:07:58 SQL> 
21:07:58 SQL> -- rpt
21:07:58 SQL> 
21:07:58 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12714
up	     6258

Elapsed: 00:00:00.06
21:07:58 SQL> 
21:07:58 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-31 21:55:00

Elapsed: 00:00:00.04
21:07:58 SQL> 
21:07:58 SQL> -- Now build model from bme and score sme
21:07:58 SQL> @score1gattn.sql
21:07:58 SQL> -- score1gattn.sql
21:07:58 SQL> 
21:07:58 SQL> -- Does the 1st SVM score
21:07:58 SQL> 
21:07:58 SQL> -- Fill up svmc_apply_prep
21:07:58 SQL> @score_gattn.sql
21:07:58 SQL> --
21:07:58 SQL> -- score_gattn.sql
21:07:58 SQL> --
21:07:58 SQL> 
21:07:58 SQL> -- usage: score_gattn.sql
21:07:58 SQL> 
21:07:58 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
21:07:58 SQL> 
21:07:58 SQL> DEFINE target	= 'gattn'
21:07:58 SQL> DEFINE model_name = 'forex14'
21:07:58 SQL> DEFINE bldtable	= 'bme'
21:07:58 SQL> DEFINE scoretable = 'sme'
21:07:58 SQL> DEFINE case_id	= 'prdate'
21:07:58 SQL> 
21:07:58 SQL> -- Define a variable to help me exclude some columns from some data mining calls
21:07:58 SQL> DEFINE exclude1 = "'&target','&case_id'"
21:07:58 SQL> 
21:07:58 SQL> -- Builds an SVM model using pl/sql.
21:07:58 SQL> 
21:07:58 SQL> -----------------------------------------------------------------------
21:07:58 SQL> --			    BUILD THE MODEL
21:07:58 SQL> -----------------------------------------------------------------------
21:07:58 SQL> 
21:07:58 SQL> -- Cleanup old build data preparation objects for repeat runs
21:07:58 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
21:07:58 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
21:07:58 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
21:07:58 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
21:07:58 SQL> 
21:07:58 SQL> 
21:07:58 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
21:07:58 SQL> --
21:07:58 SQL> -- DROP	TABLE svmc_settings ;
21:07:58 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
21:07:58 SQL> -- DELETE svmc_settings;
21:07:58 SQL> 
21:07:58 SQL> -- The default classification algorithm is Naive Bayes. So override
21:07:58 SQL> -- this choice to SVM using a settings table.
21:07:58 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
21:07:58 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
21:07:58 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
21:07:58 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
21:07:58 SQL> -- models.
21:07:58 SQL> --
21:07:58 SQL> 
21:07:58 SQL> -- Do this once and then comment it out.
21:07:58 SQL> -- That makes script go faster.
21:07:58 SQL> -- BEGIN
21:07:58 SQL> -- -- Populate settings table
21:07:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:07:58 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
21:07:58 SQL> --
21:07:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:07:58 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
21:07:58 SQL> --
21:07:58 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
21:07:58 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
21:07:58 SQL> --   COMMIT;
21:07:58 SQL> -- END;
21:07:58 SQL> -- /
21:07:58 SQL> 
21:07:58 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
21:07:58 SQL> 
21:07:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
21:07:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.15
21:07:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
21:07:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
21:07:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
21:07:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:07:59 SQL> 
21:07:59 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
21:07:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:07:59   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:07:59 SQL> 
21:07:59 SQL> --------------------------------
21:07:59 SQL> -- PREPARE BUILD (TRAINING) DATA
21:07:59 SQL> --
21:07:59 SQL> 
21:07:59 SQL> -- 1. Missing Value treatment for all Predictors and
21:07:59 SQL> -- 2. Outlier Treatment and
21:07:59 SQL> -- 3. Normalization are performed below.
21:07:59 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
21:07:59 SQL> --    normalized here.
21:07:59 SQL> 
21:07:59 SQL> BEGIN
21:07:59   2  	-- Perform missing value treatment for all predictors
21:07:59   3  	-- create miss tables
21:07:59   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
21:07:59   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
21:07:59   6  
21:07:59   7  	-- populate miss tables
21:07:59   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
21:07:59   9  	  miss_table_name => 'svmc_miss_num',
21:07:59  10  	  data_table_name => '&bldtable',
21:07:59  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:07:59  12  
21:07:59  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
21:07:59  14  	  miss_table_name => 'svmc_miss_cat',
21:07:59  15  	  data_table_name => '&bldtable',
21:07:59  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:07:59  17  
21:07:59  18  	-- xform input data to replace missing values
21:07:59  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:07:59  20  	  miss_table_name => 'svmc_miss_num',
21:07:59  21  	  data_table_name => '&bldtable',
21:07:59  22  	  xform_view_name => 'xformed_build_miss_num');
21:07:59  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:07:59  24  	  miss_table_name => 'svmc_miss_cat',
21:07:59  25  	  data_table_name => '&bldtable',
21:07:59  26  	  xform_view_name => 'xformed_build_miss_cat');
21:07:59  27  
21:07:59  28  	-- Perform outlier treatment.
21:07:59  29  	-- create clip table
21:07:59  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
21:07:59  31  
21:07:59  32  	-- populate clip table
21:07:59  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
21:07:59  34  	  clip_table_name => 'svmc_clip',
21:07:59  35  	  data_table_name => '&bldtable',
21:07:59  36  	  tail_frac	  => 0.025,
21:07:59  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:07:59  38  
21:07:59  39  	-- xform input data to winsorized data
21:07:59  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
21:07:59  41  	  clip_table_name => 'svmc_clip',
21:07:59  42  	  data_table_name => '&bldtable',
21:07:59  43  	  xform_view_name => 'svmc_winsor');
21:07:59  44  
21:07:59  45  	-- create normalization table
21:07:59  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
21:07:59  47  
21:07:59  48  	-- populate normalization table based on winsorized data
21:07:59  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
21:07:59  50  	  norm_table_name => 'svmc_norm',
21:07:59  51  	  data_table_name => 'svmc_winsor',
21:07:59  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
21:07:59  53  
21:07:59  54  	-- normalize the original data
21:07:59  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:07:59  56  	  norm_table_name => 'svmc_norm',
21:07:59  57  	  data_table_name => '&bldtable',
21:07:59  58  	  xform_view_name => 'svmc_build_prep');
21:07:59  59  END;
21:07:59  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.13
21:08:17 SQL> 
21:08:17 SQL> ---------------------
21:08:17 SQL> -- CREATE A NEW MODEL
21:08:17 SQL> --
21:08:17 SQL> -- Cleanup old model with the same name for repeat runs
21:08:17 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
21:08:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:08:17   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
21:08:18 SQL> 
21:08:18 SQL> -- Build a new SVM Model
21:08:18 SQL> BEGIN
21:08:18   2  	DBMS_DATA_MINING.CREATE_MODEL(
21:08:18   3  	  model_name	      => '&model_name',
21:08:18   4  	  mining_function     => dbms_data_mining.classification,
21:08:18   5  	  data_table_name     => 'svmc_build_prep',
21:08:18   6  	  case_id_column_name => '&case_id',
21:08:18   7  	  target_column_name  => '&target',
21:08:18   8  	  settings_table_name => 'svmc_settings');
21:08:18   9  END;
21:08:18  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:39.38
21:08:57 SQL> 
21:08:57 SQL> -----------------------------------------------------------------------
21:08:57 SQL> --			       APPLY/score THE MODEL
21:08:57 SQL> -----------------------------------------------------------------------
21:08:57 SQL> 
21:08:57 SQL> -- Cleanup old scoring data preparation objects for repeat runs
21:08:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
21:08:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:08:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
21:08:57 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
21:08:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:08:57   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:08:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
21:08:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
21:08:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
21:08:58 SQL> -----------------------
21:08:58 SQL> -- PREPARE SCORING DATA
21:08:58 SQL> --
21:08:58 SQL> -- If the data for model creation has been prepared, then the data
21:08:58 SQL> -- to be scored using the model must be prepared in the same manner
21:08:58 SQL> -- in order to obtain meaningful results.
21:08:58 SQL> --
21:08:58 SQL> -- 1. Missing Value treatment for all Predictors and
21:08:58 SQL> -- 2. Normalization
21:08:58 SQL> -- No outlier treatment will be performed during test and apply. The
21:08:58 SQL> -- normalization step is sufficient, since the normalization parameters
21:08:58 SQL> -- already capture the effects of outlier treatment done with build data.
21:08:58 SQL> --
21:08:58 SQL> BEGIN
21:08:58   2  	-- Xform Test data to replace missing values
21:08:58   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
21:08:58   4  	  miss_table_name => 'svmc_miss_num',
21:08:58   5  	  data_table_name => '&scoretable',
21:08:58   6  	  xform_view_name => 'xformed_apply_miss_num');
21:08:58   7  
21:08:58   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
21:08:58   9  	  miss_table_name => 'svmc_miss_cat',
21:08:58  10  	  data_table_name => '&scoretable',
21:08:58  11  	  xform_view_name => 'xformed_apply_miss_cat');
21:08:58  12  
21:08:58  13  	-- Normalize the data to be scored
21:08:58  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
21:08:58  15  	  norm_table_name => 'svmc_norm',
21:08:58  16  	  data_table_name => '&scoretable',
21:08:58  17  	  xform_view_name => 'svmc_apply_prep');
21:08:58  18  END;
21:08:58  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
21:08:59 SQL> 
21:08:59 SQL> -- Use same model_name used in score_gattn.sql
21:08:59 SQL> DEFINE model_name = 'forex14'
21:08:59 SQL> 
21:08:59 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.08
21:08:59 SQL> 
21:08:59 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
21:08:59   2  SELECT
21:08:59   3  prdate
21:08:59   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
21:08:59   5  ,sysdate
21:08:59   6  ,SUBSTR(prdate,1,3)pair
21:08:59   7  ,SUBSTR(prdate,4,19)ydate
21:08:59   8  FROM svmc_apply_prep
21:08:59   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
21:08:59 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
