
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 30 12:18:02 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

12:18:02 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
12:18:02 SQL> 12:18:02 SQL> @aud_score1day.sql  2010-12-30 11:55:00
12:18:02 SQL> --
12:18:02 SQL> -- aud_score1day.sql
12:18:02 SQL> --
12:18:02 SQL> 
12:18:02 SQL> CREATE OR REPLACE VIEW sme AS
12:18:02   2  SELECT
12:18:02   3  'aud'||m.ydate prdate
12:18:02   4  ,NULL gatt
12:18:02   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:18:02   6  ,eur_g00
12:18:02   7  ,eur_g01
12:18:02   8  ,eur_g02
12:18:02   9  ,eur_g03
12:18:02  10  ,eur_g04
12:18:02  11  ,eur_g05
12:18:02  12  ,eur_g06
12:18:02  13  ,eur_g07
12:18:02  14  ,eur_g08
12:18:02  15  ,eur_g09
12:18:02  16  ,eur_g10
12:18:02  17  ,eur_g11
12:18:02  18  ,eur_g12
12:18:02  19  ,eur_g13
12:18:02  20  ,eur_g14
12:18:02  21  ,eur_g15
12:18:02  22  ,eur_g16
12:18:02  23  ,eur_g17
12:18:02  24  ,eur_g18
12:18:02  25  ,eur_g19
12:18:02  26  ,eur_g20
12:18:02  27  ,eur_g21
12:18:02  28  ,eur_g22
12:18:02  29  ,eur_g23
12:18:02  30  ,eur_g24
12:18:02  31  ,eur_g25
12:18:02  32  ,eur_g26
12:18:02  33  ,eur_g27
12:18:02  34  ,eur_g28
12:18:02  35  ,eur_g29
12:18:02  36  ,eur_g30
12:18:02  37  ,eur_g31
12:18:02  38  ,eur_g32
12:18:02  39  ,eur_g33
12:18:02  40  ,eur_g34
12:18:02  41  ,eur_g35
12:18:02  42  ,eur_g36
12:18:02  43  ,eur_g37
12:18:02  44  ,eur_g38
12:18:02  45  ,eur_g39
12:18:02  46  ,eur_g40
12:18:02  47  ,eur_g41
12:18:02  48  ,aud_g00
12:18:02  49  ,aud_g01
12:18:02  50  ,aud_g02
12:18:02  51  ,aud_g03
12:18:02  52  ,aud_g04
12:18:02  53  ,aud_g05
12:18:02  54  ,aud_g06
12:18:02  55  ,aud_g07
12:18:02  56  ,aud_g08
12:18:02  57  ,aud_g09
12:18:02  58  ,aud_g10
12:18:02  59  ,aud_g11
12:18:02  60  ,aud_g12
12:18:02  61  ,aud_g13
12:18:02  62  ,aud_g14
12:18:02  63  ,aud_g15
12:18:02  64  ,aud_g16
12:18:02  65  ,aud_g17
12:18:02  66  ,aud_g18
12:18:02  67  ,aud_g19
12:18:02  68  ,aud_g20
12:18:02  69  ,aud_g21
12:18:02  70  ,aud_g22
12:18:02  71  ,aud_g23
12:18:02  72  ,aud_g24
12:18:02  73  ,aud_g25
12:18:02  74  ,aud_g26
12:18:02  75  ,aud_g27
12:18:02  76  ,aud_g28
12:18:02  77  ,aud_g29
12:18:02  78  ,aud_g30
12:18:02  79  ,aud_g31
12:18:02  80  ,aud_g32
12:18:02  81  ,aud_g33
12:18:02  82  ,aud_g34
12:18:02  83  ,aud_g35
12:18:02  84  ,aud_g36
12:18:02  85  ,aud_g37
12:18:02  86  ,aud_g38
12:18:02  87  ,aud_g39
12:18:02  88  ,aud_g40
12:18:02  89  ,aud_g41
12:18:02  90  ,gbp_g00
12:18:02  91  ,gbp_g01
12:18:02  92  ,gbp_g02
12:18:02  93  ,gbp_g03
12:18:02  94  ,gbp_g04
12:18:02  95  ,gbp_g05
12:18:02  96  ,gbp_g06
12:18:02  97  ,gbp_g07
12:18:02  98  ,gbp_g08
12:18:02  99  ,gbp_g09
12:18:02 100  ,gbp_g10
12:18:02 101  ,gbp_g11
12:18:02 102  ,gbp_g12
12:18:02 103  ,gbp_g13
12:18:02 104  ,gbp_g14
12:18:02 105  ,gbp_g15
12:18:02 106  ,gbp_g16
12:18:02 107  ,gbp_g17
12:18:02 108  ,gbp_g18
12:18:02 109  ,gbp_g19
12:18:02 110  ,gbp_g20
12:18:02 111  ,gbp_g21
12:18:02 112  ,gbp_g22
12:18:02 113  ,gbp_g23
12:18:02 114  ,gbp_g24
12:18:02 115  ,gbp_g25
12:18:02 116  ,gbp_g26
12:18:02 117  ,gbp_g27
12:18:02 118  ,gbp_g28
12:18:02 119  ,gbp_g29
12:18:02 120  ,gbp_g30
12:18:02 121  ,gbp_g31
12:18:02 122  ,gbp_g32
12:18:02 123  ,gbp_g33
12:18:02 124  ,gbp_g34
12:18:02 125  ,gbp_g35
12:18:02 126  ,gbp_g36
12:18:02 127  ,gbp_g37
12:18:02 128  ,gbp_g38
12:18:02 129  ,gbp_g39
12:18:02 130  ,gbp_g40
12:18:02 131  ,gbp_g41
12:18:02 132  ,jpy_g00
12:18:02 133  ,jpy_g01
12:18:02 134  ,jpy_g02
12:18:02 135  ,jpy_g03
12:18:02 136  ,jpy_g04
12:18:02 137  ,jpy_g05
12:18:02 138  ,jpy_g06
12:18:02 139  ,jpy_g07
12:18:02 140  ,jpy_g08
12:18:02 141  ,jpy_g09
12:18:02 142  ,jpy_g10
12:18:02 143  ,jpy_g11
12:18:02 144  ,jpy_g12
12:18:02 145  ,jpy_g13
12:18:02 146  ,jpy_g14
12:18:02 147  ,jpy_g15
12:18:02 148  ,jpy_g16
12:18:02 149  ,jpy_g17
12:18:02 150  ,jpy_g18
12:18:02 151  ,jpy_g19
12:18:02 152  ,jpy_g20
12:18:02 153  ,jpy_g21
12:18:02 154  ,jpy_g22
12:18:02 155  ,jpy_g23
12:18:02 156  ,jpy_g24
12:18:02 157  ,jpy_g25
12:18:02 158  ,jpy_g26
12:18:02 159  ,jpy_g27
12:18:02 160  ,jpy_g28
12:18:02 161  ,jpy_g29
12:18:02 162  ,jpy_g30
12:18:02 163  ,jpy_g31
12:18:02 164  ,jpy_g32
12:18:02 165  ,jpy_g33
12:18:02 166  ,jpy_g34
12:18:02 167  ,jpy_g35
12:18:02 168  ,jpy_g36
12:18:02 169  ,jpy_g37
12:18:02 170  ,jpy_g38
12:18:02 171  ,jpy_g39
12:18:02 172  ,jpy_g40
12:18:02 173  ,jpy_g41
12:18:02 174  ,cad_g00
12:18:02 175  ,cad_g01
12:18:02 176  ,cad_g02
12:18:02 177  ,cad_g03
12:18:02 178  ,cad_g04
12:18:02 179  ,cad_g05
12:18:02 180  ,cad_g06
12:18:02 181  ,cad_g07
12:18:02 182  ,cad_g08
12:18:02 183  ,cad_g09
12:18:02 184  ,cad_g10
12:18:02 185  ,cad_g11
12:18:02 186  ,cad_g12
12:18:02 187  ,cad_g13
12:18:02 188  ,cad_g14
12:18:02 189  ,cad_g15
12:18:02 190  ,cad_g16
12:18:02 191  ,cad_g17
12:18:02 192  ,cad_g18
12:18:02 193  ,cad_g19
12:18:02 194  ,cad_g20
12:18:02 195  ,cad_g21
12:18:02 196  ,cad_g22
12:18:02 197  ,cad_g23
12:18:02 198  ,cad_g24
12:18:02 199  ,cad_g25
12:18:02 200  ,cad_g26
12:18:02 201  ,cad_g27
12:18:02 202  ,cad_g28
12:18:02 203  ,cad_g29
12:18:02 204  ,cad_g30
12:18:02 205  ,cad_g31
12:18:02 206  ,cad_g32
12:18:02 207  ,cad_g33
12:18:02 208  ,cad_g34
12:18:02 209  ,cad_g35
12:18:02 210  ,cad_g36
12:18:02 211  ,cad_g37
12:18:02 212  ,cad_g38
12:18:02 213  ,cad_g39
12:18:02 214  ,cad_g40
12:18:02 215  ,cad_g41
12:18:02 216  ,chf_g00
12:18:02 217  ,chf_g01
12:18:02 218  ,chf_g02
12:18:02 219  ,chf_g03
12:18:02 220  ,chf_g04
12:18:02 221  ,chf_g05
12:18:02 222  ,chf_g06
12:18:02 223  ,chf_g07
12:18:02 224  ,chf_g08
12:18:02 225  ,chf_g09
12:18:02 226  ,chf_g10
12:18:02 227  ,chf_g11
12:18:02 228  ,chf_g12
12:18:02 229  ,chf_g13
12:18:02 230  ,chf_g14
12:18:02 231  ,chf_g15
12:18:02 232  ,chf_g16
12:18:02 233  ,chf_g17
12:18:02 234  ,chf_g18
12:18:02 235  ,chf_g19
12:18:02 236  ,chf_g20
12:18:02 237  ,chf_g21
12:18:02 238  ,chf_g22
12:18:02 239  ,chf_g23
12:18:02 240  ,chf_g24
12:18:02 241  ,chf_g25
12:18:02 242  ,chf_g26
12:18:02 243  ,chf_g27
12:18:02 244  ,chf_g28
12:18:02 245  ,chf_g29
12:18:02 246  ,chf_g30
12:18:02 247  ,chf_g31
12:18:02 248  ,chf_g32
12:18:02 249  ,chf_g33
12:18:02 250  ,chf_g34
12:18:02 251  ,chf_g35
12:18:02 252  ,chf_g36
12:18:02 253  ,chf_g37
12:18:02 254  ,chf_g38
12:18:02 255  ,chf_g39
12:18:02 256  ,chf_g40
12:18:02 257  ,chf_g41
12:18:02 258  FROM aud_ms6 m
12:18:02 259  WHERE m.ydate = '&1'||' '||'&2'
12:18:02 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'11:55:00'

View created.

Elapsed: 00:00:00.16
12:18:02 SQL> 
12:18:02 SQL> -- rpt
12:18:02 SQL> -- We should see just 1 row:
12:18:02 SQL> 
12:18:02 SQL> SELECT COUNT(prdate) FROM sme
12:18:02   2  
12:18:02 SQL> -- Build the model:
12:18:02 SQL> CREATE OR REPLACE VIEW bme AS
12:18:02   2  SELECT
12:18:02   3  'aud'||m.ydate prdate
12:18:02   4  ,gatt
12:18:02   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:18:02   6  ,eur_g00
12:18:02   7  ,eur_g01
12:18:02   8  ,eur_g02
12:18:02   9  ,eur_g03
12:18:02  10  ,eur_g04
12:18:02  11  ,eur_g05
12:18:02  12  ,eur_g06
12:18:02  13  ,eur_g07
12:18:02  14  ,eur_g08
12:18:02  15  ,eur_g09
12:18:02  16  ,eur_g10
12:18:02  17  ,eur_g11
12:18:02  18  ,eur_g12
12:18:02  19  ,eur_g13
12:18:02  20  ,eur_g14
12:18:02  21  ,eur_g15
12:18:02  22  ,eur_g16
12:18:02  23  ,eur_g17
12:18:02  24  ,eur_g18
12:18:02  25  ,eur_g19
12:18:02  26  ,eur_g20
12:18:02  27  ,eur_g21
12:18:02  28  ,eur_g22
12:18:02  29  ,eur_g23
12:18:02  30  ,eur_g24
12:18:02  31  ,eur_g25
12:18:02  32  ,eur_g26
12:18:02  33  ,eur_g27
12:18:02  34  ,eur_g28
12:18:02  35  ,eur_g29
12:18:02  36  ,eur_g30
12:18:02  37  ,eur_g31
12:18:02  38  ,eur_g32
12:18:02  39  ,eur_g33
12:18:02  40  ,eur_g34
12:18:02  41  ,eur_g35
12:18:02  42  ,eur_g36
12:18:02  43  ,eur_g37
12:18:02  44  ,eur_g38
12:18:02  45  ,eur_g39
12:18:02  46  ,eur_g40
12:18:02  47  ,eur_g41
12:18:02  48  ,aud_g00
12:18:02  49  ,aud_g01
12:18:02  50  ,aud_g02
12:18:02  51  ,aud_g03
12:18:02  52  ,aud_g04
12:18:02  53  ,aud_g05
12:18:02  54  ,aud_g06
12:18:02  55  ,aud_g07
12:18:02  56  ,aud_g08
12:18:02  57  ,aud_g09
12:18:02  58  ,aud_g10
12:18:02  59  ,aud_g11
12:18:02  60  ,aud_g12
12:18:02  61  ,aud_g13
12:18:02  62  ,aud_g14
12:18:02  63  ,aud_g15
12:18:02  64  ,aud_g16
12:18:02  65  ,aud_g17
12:18:02  66  ,aud_g18
12:18:02  67  ,aud_g19
12:18:02  68  ,aud_g20
12:18:02  69  ,aud_g21
12:18:02  70  ,aud_g22
12:18:02  71  ,aud_g23
12:18:02  72  ,aud_g24
12:18:02  73  ,aud_g25
12:18:02  74  ,aud_g26
12:18:02  75  ,aud_g27
12:18:02  76  ,aud_g28
12:18:02  77  ,aud_g29
12:18:02  78  ,aud_g30
12:18:02  79  ,aud_g31
12:18:02  80  ,aud_g32
12:18:02  81  ,aud_g33
12:18:02  82  ,aud_g34
12:18:02  83  ,aud_g35
12:18:02  84  ,aud_g36
12:18:02  85  ,aud_g37
12:18:02  86  ,aud_g38
12:18:02  87  ,aud_g39
12:18:02  88  ,aud_g40
12:18:02  89  ,aud_g41
12:18:02  90  ,gbp_g00
12:18:02  91  ,gbp_g01
12:18:02  92  ,gbp_g02
12:18:02  93  ,gbp_g03
12:18:02  94  ,gbp_g04
12:18:02  95  ,gbp_g05
12:18:02  96  ,gbp_g06
12:18:02  97  ,gbp_g07
12:18:02  98  ,gbp_g08
12:18:02  99  ,gbp_g09
12:18:02 100  ,gbp_g10
12:18:02 101  ,gbp_g11
12:18:02 102  ,gbp_g12
12:18:02 103  ,gbp_g13
12:18:02 104  ,gbp_g14
12:18:02 105  ,gbp_g15
12:18:02 106  ,gbp_g16
12:18:02 107  ,gbp_g17
12:18:02 108  ,gbp_g18
12:18:02 109  ,gbp_g19
12:18:02 110  ,gbp_g20
12:18:02 111  ,gbp_g21
12:18:02 112  ,gbp_g22
12:18:02 113  ,gbp_g23
12:18:02 114  ,gbp_g24
12:18:02 115  ,gbp_g25
12:18:02 116  ,gbp_g26
12:18:02 117  ,gbp_g27
12:18:02 118  ,gbp_g28
12:18:02 119  ,gbp_g29
12:18:02 120  ,gbp_g30
12:18:02 121  ,gbp_g31
12:18:02 122  ,gbp_g32
12:18:02 123  ,gbp_g33
12:18:02 124  ,gbp_g34
12:18:02 125  ,gbp_g35
12:18:02 126  ,gbp_g36
12:18:02 127  ,gbp_g37
12:18:02 128  ,gbp_g38
12:18:02 129  ,gbp_g39
12:18:02 130  ,gbp_g40
12:18:02 131  ,gbp_g41
12:18:02 132  ,jpy_g00
12:18:02 133  ,jpy_g01
12:18:02 134  ,jpy_g02
12:18:02 135  ,jpy_g03
12:18:02 136  ,jpy_g04
12:18:02 137  ,jpy_g05
12:18:02 138  ,jpy_g06
12:18:02 139  ,jpy_g07
12:18:02 140  ,jpy_g08
12:18:02 141  ,jpy_g09
12:18:02 142  ,jpy_g10
12:18:02 143  ,jpy_g11
12:18:02 144  ,jpy_g12
12:18:02 145  ,jpy_g13
12:18:02 146  ,jpy_g14
12:18:02 147  ,jpy_g15
12:18:02 148  ,jpy_g16
12:18:02 149  ,jpy_g17
12:18:02 150  ,jpy_g18
12:18:02 151  ,jpy_g19
12:18:02 152  ,jpy_g20
12:18:02 153  ,jpy_g21
12:18:02 154  ,jpy_g22
12:18:02 155  ,jpy_g23
12:18:02 156  ,jpy_g24
12:18:02 157  ,jpy_g25
12:18:02 158  ,jpy_g26
12:18:02 159  ,jpy_g27
12:18:02 160  ,jpy_g28
12:18:02 161  ,jpy_g29
12:18:02 162  ,jpy_g30
12:18:02 163  ,jpy_g31
12:18:02 164  ,jpy_g32
12:18:02 165  ,jpy_g33
12:18:02 166  ,jpy_g34
12:18:02 167  ,jpy_g35
12:18:02 168  ,jpy_g36
12:18:02 169  ,jpy_g37
12:18:02 170  ,jpy_g38
12:18:02 171  ,jpy_g39
12:18:02 172  ,jpy_g40
12:18:02 173  ,jpy_g41
12:18:02 174  ,cad_g00
12:18:02 175  ,cad_g01
12:18:02 176  ,cad_g02
12:18:02 177  ,cad_g03
12:18:02 178  ,cad_g04
12:18:02 179  ,cad_g05
12:18:02 180  ,cad_g06
12:18:02 181  ,cad_g07
12:18:02 182  ,cad_g08
12:18:02 183  ,cad_g09
12:18:02 184  ,cad_g10
12:18:02 185  ,cad_g11
12:18:02 186  ,cad_g12
12:18:02 187  ,cad_g13
12:18:02 188  ,cad_g14
12:18:02 189  ,cad_g15
12:18:02 190  ,cad_g16
12:18:02 191  ,cad_g17
12:18:02 192  ,cad_g18
12:18:02 193  ,cad_g19
12:18:02 194  ,cad_g20
12:18:02 195  ,cad_g21
12:18:02 196  ,cad_g22
12:18:02 197  ,cad_g23
12:18:02 198  ,cad_g24
12:18:02 199  ,cad_g25
12:18:02 200  ,cad_g26
12:18:02 201  ,cad_g27
12:18:02 202  ,cad_g28
12:18:02 203  ,cad_g29
12:18:02 204  ,cad_g30
12:18:02 205  ,cad_g31
12:18:02 206  ,cad_g32
12:18:02 207  ,cad_g33
12:18:02 208  ,cad_g34
12:18:02 209  ,cad_g35
12:18:02 210  ,cad_g36
12:18:02 211  ,cad_g37
12:18:02 212  ,cad_g38
12:18:02 213  ,cad_g39
12:18:02 214  ,cad_g40
12:18:02 215  ,cad_g41
12:18:02 216  ,chf_g00
12:18:02 217  ,chf_g01
12:18:02 218  ,chf_g02
12:18:02 219  ,chf_g03
12:18:02 220  ,chf_g04
12:18:02 221  ,chf_g05
12:18:02 222  ,chf_g06
12:18:02 223  ,chf_g07
12:18:02 224  ,chf_g08
12:18:02 225  ,chf_g09
12:18:02 226  ,chf_g10
12:18:02 227  ,chf_g11
12:18:02 228  ,chf_g12
12:18:02 229  ,chf_g13
12:18:02 230  ,chf_g14
12:18:02 231  ,chf_g15
12:18:02 232  ,chf_g16
12:18:02 233  ,chf_g17
12:18:02 234  ,chf_g18
12:18:02 235  ,chf_g19
12:18:02 236  ,chf_g20
12:18:02 237  ,chf_g21
12:18:02 238  ,chf_g22
12:18:02 239  ,chf_g23
12:18:02 240  ,chf_g24
12:18:02 241  ,chf_g25
12:18:02 242  ,chf_g26
12:18:02 243  ,chf_g27
12:18:02 244  ,chf_g28
12:18:02 245  ,chf_g29
12:18:02 246  ,chf_g30
12:18:02 247  ,chf_g31
12:18:02 248  ,chf_g32
12:18:02 249  ,chf_g33
12:18:02 250  ,chf_g34
12:18:02 251  ,chf_g35
12:18:02 252  ,chf_g36
12:18:02 253  ,chf_g37
12:18:02 254  ,chf_g38
12:18:02 255  ,chf_g39
12:18:02 256  ,chf_g40
12:18:02 257  ,chf_g41
12:18:02 258  FROM aud_ms6 m
12:18:02 259  WHERE gatt IN('nup','up')
12:18:02 260  AND 1+m.ydate < '&1'||' '||'&2'
12:18:02 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'11:55:00'

View created.

Elapsed: 00:00:00.13
12:18:02 SQL> 
12:18:02 SQL> -- rpt
12:18:02 SQL> 
12:18:02 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
12:18:02   2  
12:18:02 SQL> SELECT MAX(prdate) FROM bme
12:18:02   2  
12:18:02 SQL> -- Now build model from bme and score sme
12:18:02 SQL> @score1.sql
12:18:02 SQL> -- score1.sql
12:18:02 SQL> 
12:18:02 SQL> -- Does the 1st SVM score
12:18:02 SQL> 
12:18:02 SQL> -- Fill up svmc_apply_prep
12:18:02 SQL> @score.sql
12:18:02 SQL> --
12:18:02 SQL> -- score.sql
12:18:02 SQL> --
12:18:02 SQL> 
12:18:02 SQL> -- usage: score.sql
12:18:02 SQL> 
12:18:02 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
12:18:02 SQL> 
12:18:02 SQL> DEFINE target	= 'gatt'
12:18:02 SQL> DEFINE model_name = 'forex14'
12:18:02 SQL> DEFINE bldtable	= 'bme'
12:18:02 SQL> DEFINE scoretable = 'sme'
12:18:02 SQL> DEFINE case_id	= 'prdate'
12:18:02 SQL> 
12:18:02 SQL> -- Define a variable to help me exclude some columns from some data mining calls
12:18:02 SQL> DEFINE exclude1 = "'&target','&case_id'"
12:18:02 SQL> 
12:18:02 SQL> -- Builds an SVM model using pl/sql.
12:18:02 SQL> 
12:18:02 SQL> -----------------------------------------------------------------------
12:18:02 SQL> --			    BUILD THE MODEL
12:18:02 SQL> -----------------------------------------------------------------------
12:18:02 SQL> 
12:18:02 SQL> -- Cleanup old build data preparation objects for repeat runs
12:18:02 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
12:18:02 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
12:18:02 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
12:18:02 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
12:18:02 SQL> 
12:18:02 SQL> 
12:18:02 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
12:18:02 SQL> --
12:18:02 SQL> -- DROP	TABLE svmc_settings ;
12:18:02 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
12:18:02 SQL> -- DELETE svmc_settings;
12:18:02 SQL> 
12:18:02 SQL> -- The default classification algorithm is Naive Bayes. So override
12:18:02 SQL> -- this choice to SVM using a settings table.
12:18:02 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
12:18:02 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
12:18:02 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
12:18:02 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
12:18:02 SQL> -- models.
12:18:02 SQL> --
12:18:02 SQL> 
12:18:02 SQL> -- Do this once and then comment it out.
12:18:02 SQL> -- That makes script go faster.
12:18:02 SQL> -- BEGIN
12:18:02 SQL> -- -- Populate settings table
12:18:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:18:02 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
12:18:02 SQL> --
12:18:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:18:02 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
12:18:02 SQL> --
12:18:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:18:02 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
12:18:02 SQL> --   COMMIT;
12:18:02 SQL> -- END;
12:18:02 SQL> -- /
12:18:02 SQL> 
12:18:02 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
12:18:02 SQL> 
12:18:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
12:18:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:18:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
12:18:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
12:18:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:18:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:18:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
12:18:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:18:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:18:02 SQL> 
12:18:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
12:18:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:18:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:18:02 SQL> 
12:18:02 SQL> --------------------------------
12:18:02 SQL> -- PREPARE BUILD (TRAINING) DATA
12:18:02 SQL> --
12:18:02 SQL> 
12:18:02 SQL> -- 1. Missing Value treatment for all Predictors and
12:18:02 SQL> -- 2. Outlier Treatment and
12:18:02 SQL> -- 3. Normalization are performed below.
12:18:02 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
12:18:02 SQL> --    normalized here.
12:18:02 SQL> 
12:18:02 SQL> BEGIN
12:18:02   2  	-- Perform missing value treatment for all predictors
12:18:02   3  	-- create miss tables
12:18:02   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
12:18:02   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
12:18:02   6  
12:18:02   7  	-- populate miss tables
12:18:02   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
12:18:02   9  	  miss_table_name => 'svmc_miss_num',
12:18:02  10  	  data_table_name => '&bldtable',
12:18:02  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:18:02  12  
12:18:02  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
12:18:02  14  	  miss_table_name => 'svmc_miss_cat',
12:18:02  15  	  data_table_name => '&bldtable',
12:18:02  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:18:02  17  
12:18:02  18  	-- xform input data to replace missing values
12:18:02  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:18:02  20  	  miss_table_name => 'svmc_miss_num',
12:18:02  21  	  data_table_name => '&bldtable',
12:18:02  22  	  xform_view_name => 'xformed_build_miss_num');
12:18:02  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:18:02  24  	  miss_table_name => 'svmc_miss_cat',
12:18:02  25  	  data_table_name => '&bldtable',
12:18:02  26  	  xform_view_name => 'xformed_build_miss_cat');
12:18:02  27  
12:18:02  28  	-- Perform outlier treatment.
12:18:02  29  	-- create clip table
12:18:02  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
12:18:02  31  
12:18:02  32  	-- populate clip table
12:18:02  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
12:18:02  34  	  clip_table_name => 'svmc_clip',
12:18:02  35  	  data_table_name => '&bldtable',
12:18:02  36  	  tail_frac	  => 0.025,
12:18:02  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:18:02  38  
12:18:02  39  	-- xform input data to winsorized data
12:18:02  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
12:18:02  41  	  clip_table_name => 'svmc_clip',
12:18:02  42  	  data_table_name => '&bldtable',
12:18:02  43  	  xform_view_name => 'svmc_winsor');
12:18:02  44  
12:18:02  45  	-- create normalization table
12:18:02  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
12:18:02  47  
12:18:02  48  	-- populate normalization table based on winsorized data
12:18:02  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
12:18:02  50  	  norm_table_name => 'svmc_norm',
12:18:02  51  	  data_table_name => 'svmc_winsor',
12:18:02  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:18:02  53  
12:18:02  54  	-- normalize the original data
12:18:02  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:18:02  56  	  norm_table_name => 'svmc_norm',
12:18:02  57  	  data_table_name => '&bldtable',
12:18:02  58  	  xform_view_name => 'svmc_build_prep');
12:18:02  59  END;
12:18:02  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.24
12:18:21 SQL> 
12:18:21 SQL> ---------------------
12:18:21 SQL> -- CREATE A NEW MODEL
12:18:21 SQL> --
12:18:21 SQL> -- Cleanup old model with the same name for repeat runs
12:18:21 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
12:18:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:18:21   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.78
12:18:21 SQL> 
12:18:21 SQL> -- Build a new SVM Model
12:18:21 SQL> BEGIN
12:18:21   2  	DBMS_DATA_MINING.CREATE_MODEL(
12:18:21   3  	  model_name	      => '&model_name',
12:18:21   4  	  mining_function     => dbms_data_mining.classification,
12:18:21   5  	  data_table_name     => 'svmc_build_prep',
12:18:21   6  	  case_id_column_name => '&case_id',
12:18:21   7  	  target_column_name  => '&target',
12:18:21   8  	  settings_table_name => 'svmc_settings');
12:18:21   9  END;
12:18:21  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:31.64
12:18:53 SQL> 
12:18:53 SQL> -----------------------------------------------------------------------
12:18:53 SQL> --			       APPLY/score THE MODEL
12:18:53 SQL> -----------------------------------------------------------------------
12:18:53 SQL> 
12:18:53 SQL> -- Cleanup old scoring data preparation objects for repeat runs
12:18:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
12:18:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:18:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:18:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
12:18:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:18:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
12:18:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
12:18:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:18:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:18:53 SQL> -----------------------
12:18:53 SQL> -- PREPARE SCORING DATA
12:18:53 SQL> --
12:18:53 SQL> -- If the data for model creation has been prepared, then the data
12:18:53 SQL> -- to be scored using the model must be prepared in the same manner
12:18:53 SQL> -- in order to obtain meaningful results.
12:18:53 SQL> --
12:18:53 SQL> -- 1. Missing Value treatment for all Predictors and
12:18:53 SQL> -- 2. Normalization
12:18:53 SQL> -- No outlier treatment will be performed during test and apply. The
12:18:53 SQL> -- normalization step is sufficient, since the normalization parameters
12:18:53 SQL> -- already capture the effects of outlier treatment done with build data.
12:18:53 SQL> --
12:18:53 SQL> BEGIN
12:18:53   2  	-- Xform Test data to replace missing values
12:18:53   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:18:53   4  	  miss_table_name => 'svmc_miss_num',
12:18:53   5  	  data_table_name => '&scoretable',
12:18:53   6  	  xform_view_name => 'xformed_apply_miss_num');
12:18:53   7  
12:18:53   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:18:53   9  	  miss_table_name => 'svmc_miss_cat',
12:18:53  10  	  data_table_name => '&scoretable',
12:18:53  11  	  xform_view_name => 'xformed_apply_miss_cat');
12:18:53  12  
12:18:53  13  	-- Normalize the data to be scored
12:18:53  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:18:53  15  	  norm_table_name => 'svmc_norm',
12:18:53  16  	  data_table_name => '&scoretable',
12:18:53  17  	  xform_view_name => 'svmc_apply_prep');
12:18:53  18  END;
12:18:53  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
12:18:54 SQL> 
12:18:54 SQL> -- Use same model_name used in score.sql
12:18:54 SQL> DEFINE model_name = 'forex14'
12:18:54 SQL> 
12:18:54 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
12:18:54 SQL> 
12:18:54 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
12:18:54 SQL> 
12:18:54 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
12:18:54   2  SELECT
12:18:54   3  prdate
12:18:54   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
12:18:54   5  ,sysdate
12:18:54   6  ,SUBSTR(prdate,1,3)pair
12:18:54   7  ,SUBSTR(prdate,4,19)ydate
12:18:54   8  FROM svmc_apply_prep
12:18:54   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
12:18:55 SQL> @aud_score1day.sql  2010-12-30 12:00:00
12:18:55 SQL> --
12:18:55 SQL> -- aud_score1day.sql
12:18:55 SQL> --
12:18:55 SQL> 
12:18:55 SQL> CREATE OR REPLACE VIEW sme AS
12:18:55   2  SELECT
12:18:55   3  'aud'||m.ydate prdate
12:18:55   4  ,NULL gatt
12:18:55   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:18:55   6  ,eur_g00
12:18:55   7  ,eur_g01
12:18:55   8  ,eur_g02
12:18:55   9  ,eur_g03
12:18:55  10  ,eur_g04
12:18:55  11  ,eur_g05
12:18:55  12  ,eur_g06
12:18:55  13  ,eur_g07
12:18:55  14  ,eur_g08
12:18:55  15  ,eur_g09
12:18:55  16  ,eur_g10
12:18:55  17  ,eur_g11
12:18:55  18  ,eur_g12
12:18:55  19  ,eur_g13
12:18:55  20  ,eur_g14
12:18:55  21  ,eur_g15
12:18:55  22  ,eur_g16
12:18:55  23  ,eur_g17
12:18:55  24  ,eur_g18
12:18:55  25  ,eur_g19
12:18:55  26  ,eur_g20
12:18:55  27  ,eur_g21
12:18:55  28  ,eur_g22
12:18:55  29  ,eur_g23
12:18:55  30  ,eur_g24
12:18:55  31  ,eur_g25
12:18:55  32  ,eur_g26
12:18:55  33  ,eur_g27
12:18:55  34  ,eur_g28
12:18:55  35  ,eur_g29
12:18:55  36  ,eur_g30
12:18:55  37  ,eur_g31
12:18:55  38  ,eur_g32
12:18:55  39  ,eur_g33
12:18:55  40  ,eur_g34
12:18:55  41  ,eur_g35
12:18:55  42  ,eur_g36
12:18:55  43  ,eur_g37
12:18:55  44  ,eur_g38
12:18:55  45  ,eur_g39
12:18:55  46  ,eur_g40
12:18:55  47  ,eur_g41
12:18:55  48  ,aud_g00
12:18:55  49  ,aud_g01
12:18:55  50  ,aud_g02
12:18:55  51  ,aud_g03
12:18:55  52  ,aud_g04
12:18:55  53  ,aud_g05
12:18:55  54  ,aud_g06
12:18:55  55  ,aud_g07
12:18:55  56  ,aud_g08
12:18:55  57  ,aud_g09
12:18:55  58  ,aud_g10
12:18:55  59  ,aud_g11
12:18:55  60  ,aud_g12
12:18:55  61  ,aud_g13
12:18:55  62  ,aud_g14
12:18:55  63  ,aud_g15
12:18:55  64  ,aud_g16
12:18:55  65  ,aud_g17
12:18:55  66  ,aud_g18
12:18:55  67  ,aud_g19
12:18:55  68  ,aud_g20
12:18:55  69  ,aud_g21
12:18:55  70  ,aud_g22
12:18:55  71  ,aud_g23
12:18:55  72  ,aud_g24
12:18:55  73  ,aud_g25
12:18:55  74  ,aud_g26
12:18:55  75  ,aud_g27
12:18:55  76  ,aud_g28
12:18:55  77  ,aud_g29
12:18:55  78  ,aud_g30
12:18:55  79  ,aud_g31
12:18:55  80  ,aud_g32
12:18:55  81  ,aud_g33
12:18:55  82  ,aud_g34
12:18:55  83  ,aud_g35
12:18:55  84  ,aud_g36
12:18:55  85  ,aud_g37
12:18:55  86  ,aud_g38
12:18:55  87  ,aud_g39
12:18:55  88  ,aud_g40
12:18:55  89  ,aud_g41
12:18:55  90  ,gbp_g00
12:18:55  91  ,gbp_g01
12:18:55  92  ,gbp_g02
12:18:55  93  ,gbp_g03
12:18:55  94  ,gbp_g04
12:18:55  95  ,gbp_g05
12:18:55  96  ,gbp_g06
12:18:55  97  ,gbp_g07
12:18:55  98  ,gbp_g08
12:18:55  99  ,gbp_g09
12:18:55 100  ,gbp_g10
12:18:55 101  ,gbp_g11
12:18:55 102  ,gbp_g12
12:18:55 103  ,gbp_g13
12:18:55 104  ,gbp_g14
12:18:55 105  ,gbp_g15
12:18:55 106  ,gbp_g16
12:18:55 107  ,gbp_g17
12:18:55 108  ,gbp_g18
12:18:55 109  ,gbp_g19
12:18:55 110  ,gbp_g20
12:18:55 111  ,gbp_g21
12:18:55 112  ,gbp_g22
12:18:55 113  ,gbp_g23
12:18:55 114  ,gbp_g24
12:18:55 115  ,gbp_g25
12:18:55 116  ,gbp_g26
12:18:55 117  ,gbp_g27
12:18:55 118  ,gbp_g28
12:18:55 119  ,gbp_g29
12:18:55 120  ,gbp_g30
12:18:55 121  ,gbp_g31
12:18:55 122  ,gbp_g32
12:18:55 123  ,gbp_g33
12:18:55 124  ,gbp_g34
12:18:55 125  ,gbp_g35
12:18:55 126  ,gbp_g36
12:18:55 127  ,gbp_g37
12:18:55 128  ,gbp_g38
12:18:55 129  ,gbp_g39
12:18:55 130  ,gbp_g40
12:18:55 131  ,gbp_g41
12:18:55 132  ,jpy_g00
12:18:55 133  ,jpy_g01
12:18:55 134  ,jpy_g02
12:18:55 135  ,jpy_g03
12:18:55 136  ,jpy_g04
12:18:55 137  ,jpy_g05
12:18:55 138  ,jpy_g06
12:18:55 139  ,jpy_g07
12:18:55 140  ,jpy_g08
12:18:55 141  ,jpy_g09
12:18:55 142  ,jpy_g10
12:18:55 143  ,jpy_g11
12:18:55 144  ,jpy_g12
12:18:55 145  ,jpy_g13
12:18:55 146  ,jpy_g14
12:18:55 147  ,jpy_g15
12:18:55 148  ,jpy_g16
12:18:55 149  ,jpy_g17
12:18:55 150  ,jpy_g18
12:18:55 151  ,jpy_g19
12:18:55 152  ,jpy_g20
12:18:55 153  ,jpy_g21
12:18:55 154  ,jpy_g22
12:18:55 155  ,jpy_g23
12:18:55 156  ,jpy_g24
12:18:55 157  ,jpy_g25
12:18:55 158  ,jpy_g26
12:18:55 159  ,jpy_g27
12:18:55 160  ,jpy_g28
12:18:55 161  ,jpy_g29
12:18:55 162  ,jpy_g30
12:18:55 163  ,jpy_g31
12:18:55 164  ,jpy_g32
12:18:55 165  ,jpy_g33
12:18:55 166  ,jpy_g34
12:18:55 167  ,jpy_g35
12:18:55 168  ,jpy_g36
12:18:55 169  ,jpy_g37
12:18:55 170  ,jpy_g38
12:18:55 171  ,jpy_g39
12:18:55 172  ,jpy_g40
12:18:55 173  ,jpy_g41
12:18:55 174  ,cad_g00
12:18:55 175  ,cad_g01
12:18:55 176  ,cad_g02
12:18:55 177  ,cad_g03
12:18:55 178  ,cad_g04
12:18:55 179  ,cad_g05
12:18:55 180  ,cad_g06
12:18:55 181  ,cad_g07
12:18:55 182  ,cad_g08
12:18:55 183  ,cad_g09
12:18:55 184  ,cad_g10
12:18:55 185  ,cad_g11
12:18:55 186  ,cad_g12
12:18:55 187  ,cad_g13
12:18:55 188  ,cad_g14
12:18:55 189  ,cad_g15
12:18:55 190  ,cad_g16
12:18:55 191  ,cad_g17
12:18:55 192  ,cad_g18
12:18:55 193  ,cad_g19
12:18:55 194  ,cad_g20
12:18:55 195  ,cad_g21
12:18:55 196  ,cad_g22
12:18:55 197  ,cad_g23
12:18:55 198  ,cad_g24
12:18:55 199  ,cad_g25
12:18:55 200  ,cad_g26
12:18:55 201  ,cad_g27
12:18:55 202  ,cad_g28
12:18:55 203  ,cad_g29
12:18:55 204  ,cad_g30
12:18:55 205  ,cad_g31
12:18:55 206  ,cad_g32
12:18:55 207  ,cad_g33
12:18:55 208  ,cad_g34
12:18:55 209  ,cad_g35
12:18:55 210  ,cad_g36
12:18:55 211  ,cad_g37
12:18:55 212  ,cad_g38
12:18:55 213  ,cad_g39
12:18:55 214  ,cad_g40
12:18:55 215  ,cad_g41
12:18:55 216  ,chf_g00
12:18:55 217  ,chf_g01
12:18:55 218  ,chf_g02
12:18:55 219  ,chf_g03
12:18:55 220  ,chf_g04
12:18:55 221  ,chf_g05
12:18:55 222  ,chf_g06
12:18:55 223  ,chf_g07
12:18:55 224  ,chf_g08
12:18:55 225  ,chf_g09
12:18:55 226  ,chf_g10
12:18:55 227  ,chf_g11
12:18:55 228  ,chf_g12
12:18:55 229  ,chf_g13
12:18:55 230  ,chf_g14
12:18:55 231  ,chf_g15
12:18:55 232  ,chf_g16
12:18:55 233  ,chf_g17
12:18:55 234  ,chf_g18
12:18:55 235  ,chf_g19
12:18:55 236  ,chf_g20
12:18:55 237  ,chf_g21
12:18:55 238  ,chf_g22
12:18:55 239  ,chf_g23
12:18:55 240  ,chf_g24
12:18:55 241  ,chf_g25
12:18:55 242  ,chf_g26
12:18:55 243  ,chf_g27
12:18:55 244  ,chf_g28
12:18:55 245  ,chf_g29
12:18:55 246  ,chf_g30
12:18:55 247  ,chf_g31
12:18:55 248  ,chf_g32
12:18:55 249  ,chf_g33
12:18:55 250  ,chf_g34
12:18:55 251  ,chf_g35
12:18:55 252  ,chf_g36
12:18:55 253  ,chf_g37
12:18:55 254  ,chf_g38
12:18:55 255  ,chf_g39
12:18:55 256  ,chf_g40
12:18:55 257  ,chf_g41
12:18:55 258  FROM aud_ms6 m
12:18:55 259  WHERE m.ydate = '&1'||' '||'&2'
12:18:55 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'12:00:00'

View created.

Elapsed: 00:00:00.12
12:18:55 SQL> 
12:18:55 SQL> -- rpt
12:18:55 SQL> -- We should see just 1 row:
12:18:55 SQL> 
12:18:55 SQL> SELECT COUNT(prdate) FROM sme
12:18:55   2  
12:18:55 SQL> -- Build the model:
12:18:55 SQL> CREATE OR REPLACE VIEW bme AS
12:18:55   2  SELECT
12:18:55   3  'aud'||m.ydate prdate
12:18:55   4  ,gatt
12:18:55   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:18:55   6  ,eur_g00
12:18:55   7  ,eur_g01
12:18:55   8  ,eur_g02
12:18:55   9  ,eur_g03
12:18:55  10  ,eur_g04
12:18:55  11  ,eur_g05
12:18:55  12  ,eur_g06
12:18:55  13  ,eur_g07
12:18:55  14  ,eur_g08
12:18:55  15  ,eur_g09
12:18:55  16  ,eur_g10
12:18:55  17  ,eur_g11
12:18:55  18  ,eur_g12
12:18:55  19  ,eur_g13
12:18:55  20  ,eur_g14
12:18:55  21  ,eur_g15
12:18:55  22  ,eur_g16
12:18:55  23  ,eur_g17
12:18:55  24  ,eur_g18
12:18:55  25  ,eur_g19
12:18:55  26  ,eur_g20
12:18:55  27  ,eur_g21
12:18:55  28  ,eur_g22
12:18:55  29  ,eur_g23
12:18:55  30  ,eur_g24
12:18:55  31  ,eur_g25
12:18:55  32  ,eur_g26
12:18:55  33  ,eur_g27
12:18:55  34  ,eur_g28
12:18:55  35  ,eur_g29
12:18:55  36  ,eur_g30
12:18:55  37  ,eur_g31
12:18:55  38  ,eur_g32
12:18:55  39  ,eur_g33
12:18:55  40  ,eur_g34
12:18:55  41  ,eur_g35
12:18:55  42  ,eur_g36
12:18:55  43  ,eur_g37
12:18:55  44  ,eur_g38
12:18:55  45  ,eur_g39
12:18:55  46  ,eur_g40
12:18:55  47  ,eur_g41
12:18:55  48  ,aud_g00
12:18:55  49  ,aud_g01
12:18:55  50  ,aud_g02
12:18:55  51  ,aud_g03
12:18:55  52  ,aud_g04
12:18:55  53  ,aud_g05
12:18:55  54  ,aud_g06
12:18:55  55  ,aud_g07
12:18:55  56  ,aud_g08
12:18:55  57  ,aud_g09
12:18:55  58  ,aud_g10
12:18:55  59  ,aud_g11
12:18:55  60  ,aud_g12
12:18:55  61  ,aud_g13
12:18:55  62  ,aud_g14
12:18:55  63  ,aud_g15
12:18:55  64  ,aud_g16
12:18:55  65  ,aud_g17
12:18:55  66  ,aud_g18
12:18:55  67  ,aud_g19
12:18:55  68  ,aud_g20
12:18:55  69  ,aud_g21
12:18:55  70  ,aud_g22
12:18:55  71  ,aud_g23
12:18:55  72  ,aud_g24
12:18:55  73  ,aud_g25
12:18:55  74  ,aud_g26
12:18:55  75  ,aud_g27
12:18:55  76  ,aud_g28
12:18:55  77  ,aud_g29
12:18:55  78  ,aud_g30
12:18:55  79  ,aud_g31
12:18:55  80  ,aud_g32
12:18:55  81  ,aud_g33
12:18:55  82  ,aud_g34
12:18:55  83  ,aud_g35
12:18:55  84  ,aud_g36
12:18:55  85  ,aud_g37
12:18:55  86  ,aud_g38
12:18:55  87  ,aud_g39
12:18:55  88  ,aud_g40
12:18:55  89  ,aud_g41
12:18:55  90  ,gbp_g00
12:18:55  91  ,gbp_g01
12:18:55  92  ,gbp_g02
12:18:55  93  ,gbp_g03
12:18:55  94  ,gbp_g04
12:18:55  95  ,gbp_g05
12:18:55  96  ,gbp_g06
12:18:55  97  ,gbp_g07
12:18:55  98  ,gbp_g08
12:18:55  99  ,gbp_g09
12:18:55 100  ,gbp_g10
12:18:55 101  ,gbp_g11
12:18:55 102  ,gbp_g12
12:18:55 103  ,gbp_g13
12:18:55 104  ,gbp_g14
12:18:55 105  ,gbp_g15
12:18:55 106  ,gbp_g16
12:18:55 107  ,gbp_g17
12:18:55 108  ,gbp_g18
12:18:55 109  ,gbp_g19
12:18:55 110  ,gbp_g20
12:18:55 111  ,gbp_g21
12:18:55 112  ,gbp_g22
12:18:55 113  ,gbp_g23
12:18:55 114  ,gbp_g24
12:18:55 115  ,gbp_g25
12:18:55 116  ,gbp_g26
12:18:55 117  ,gbp_g27
12:18:55 118  ,gbp_g28
12:18:55 119  ,gbp_g29
12:18:55 120  ,gbp_g30
12:18:55 121  ,gbp_g31
12:18:55 122  ,gbp_g32
12:18:55 123  ,gbp_g33
12:18:55 124  ,gbp_g34
12:18:55 125  ,gbp_g35
12:18:55 126  ,gbp_g36
12:18:55 127  ,gbp_g37
12:18:55 128  ,gbp_g38
12:18:55 129  ,gbp_g39
12:18:55 130  ,gbp_g40
12:18:55 131  ,gbp_g41
12:18:55 132  ,jpy_g00
12:18:55 133  ,jpy_g01
12:18:55 134  ,jpy_g02
12:18:55 135  ,jpy_g03
12:18:55 136  ,jpy_g04
12:18:55 137  ,jpy_g05
12:18:55 138  ,jpy_g06
12:18:55 139  ,jpy_g07
12:18:55 140  ,jpy_g08
12:18:55 141  ,jpy_g09
12:18:55 142  ,jpy_g10
12:18:55 143  ,jpy_g11
12:18:55 144  ,jpy_g12
12:18:55 145  ,jpy_g13
12:18:55 146  ,jpy_g14
12:18:55 147  ,jpy_g15
12:18:55 148  ,jpy_g16
12:18:55 149  ,jpy_g17
12:18:55 150  ,jpy_g18
12:18:55 151  ,jpy_g19
12:18:55 152  ,jpy_g20
12:18:55 153  ,jpy_g21
12:18:55 154  ,jpy_g22
12:18:55 155  ,jpy_g23
12:18:55 156  ,jpy_g24
12:18:55 157  ,jpy_g25
12:18:55 158  ,jpy_g26
12:18:55 159  ,jpy_g27
12:18:55 160  ,jpy_g28
12:18:55 161  ,jpy_g29
12:18:55 162  ,jpy_g30
12:18:55 163  ,jpy_g31
12:18:55 164  ,jpy_g32
12:18:55 165  ,jpy_g33
12:18:55 166  ,jpy_g34
12:18:55 167  ,jpy_g35
12:18:55 168  ,jpy_g36
12:18:55 169  ,jpy_g37
12:18:55 170  ,jpy_g38
12:18:55 171  ,jpy_g39
12:18:55 172  ,jpy_g40
12:18:55 173  ,jpy_g41
12:18:55 174  ,cad_g00
12:18:55 175  ,cad_g01
12:18:55 176  ,cad_g02
12:18:55 177  ,cad_g03
12:18:55 178  ,cad_g04
12:18:55 179  ,cad_g05
12:18:55 180  ,cad_g06
12:18:55 181  ,cad_g07
12:18:55 182  ,cad_g08
12:18:55 183  ,cad_g09
12:18:55 184  ,cad_g10
12:18:55 185  ,cad_g11
12:18:55 186  ,cad_g12
12:18:55 187  ,cad_g13
12:18:55 188  ,cad_g14
12:18:55 189  ,cad_g15
12:18:55 190  ,cad_g16
12:18:55 191  ,cad_g17
12:18:55 192  ,cad_g18
12:18:55 193  ,cad_g19
12:18:55 194  ,cad_g20
12:18:55 195  ,cad_g21
12:18:55 196  ,cad_g22
12:18:55 197  ,cad_g23
12:18:55 198  ,cad_g24
12:18:55 199  ,cad_g25
12:18:55 200  ,cad_g26
12:18:55 201  ,cad_g27
12:18:55 202  ,cad_g28
12:18:55 203  ,cad_g29
12:18:55 204  ,cad_g30
12:18:55 205  ,cad_g31
12:18:55 206  ,cad_g32
12:18:55 207  ,cad_g33
12:18:55 208  ,cad_g34
12:18:55 209  ,cad_g35
12:18:55 210  ,cad_g36
12:18:55 211  ,cad_g37
12:18:55 212  ,cad_g38
12:18:55 213  ,cad_g39
12:18:55 214  ,cad_g40
12:18:55 215  ,cad_g41
12:18:55 216  ,chf_g00
12:18:55 217  ,chf_g01
12:18:55 218  ,chf_g02
12:18:55 219  ,chf_g03
12:18:55 220  ,chf_g04
12:18:55 221  ,chf_g05
12:18:55 222  ,chf_g06
12:18:55 223  ,chf_g07
12:18:55 224  ,chf_g08
12:18:55 225  ,chf_g09
12:18:55 226  ,chf_g10
12:18:55 227  ,chf_g11
12:18:55 228  ,chf_g12
12:18:55 229  ,chf_g13
12:18:55 230  ,chf_g14
12:18:55 231  ,chf_g15
12:18:55 232  ,chf_g16
12:18:55 233  ,chf_g17
12:18:55 234  ,chf_g18
12:18:55 235  ,chf_g19
12:18:55 236  ,chf_g20
12:18:55 237  ,chf_g21
12:18:55 238  ,chf_g22
12:18:55 239  ,chf_g23
12:18:55 240  ,chf_g24
12:18:55 241  ,chf_g25
12:18:55 242  ,chf_g26
12:18:55 243  ,chf_g27
12:18:55 244  ,chf_g28
12:18:55 245  ,chf_g29
12:18:55 246  ,chf_g30
12:18:55 247  ,chf_g31
12:18:55 248  ,chf_g32
12:18:55 249  ,chf_g33
12:18:55 250  ,chf_g34
12:18:55 251  ,chf_g35
12:18:55 252  ,chf_g36
12:18:55 253  ,chf_g37
12:18:55 254  ,chf_g38
12:18:55 255  ,chf_g39
12:18:55 256  ,chf_g40
12:18:55 257  ,chf_g41
12:18:55 258  FROM aud_ms6 m
12:18:55 259  WHERE gatt IN('nup','up')
12:18:55 260  AND 1+m.ydate < '&1'||' '||'&2'
12:18:55 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'12:00:00'

View created.

Elapsed: 00:00:00.12
12:18:55 SQL> 
12:18:55 SQL> -- rpt
12:18:55 SQL> 
12:18:55 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
12:18:55   2  
12:18:55 SQL> SELECT MAX(prdate) FROM bme
12:18:55   2  
12:18:55 SQL> -- Now build model from bme and score sme
12:18:55 SQL> @score1.sql
12:18:55 SQL> -- score1.sql
12:18:55 SQL> 
12:18:55 SQL> -- Does the 1st SVM score
12:18:55 SQL> 
12:18:55 SQL> -- Fill up svmc_apply_prep
12:18:55 SQL> @score.sql
12:18:55 SQL> --
12:18:55 SQL> -- score.sql
12:18:55 SQL> --
12:18:55 SQL> 
12:18:55 SQL> -- usage: score.sql
12:18:55 SQL> 
12:18:55 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
12:18:55 SQL> 
12:18:55 SQL> DEFINE target	= 'gatt'
12:18:55 SQL> DEFINE model_name = 'forex14'
12:18:55 SQL> DEFINE bldtable	= 'bme'
12:18:55 SQL> DEFINE scoretable = 'sme'
12:18:55 SQL> DEFINE case_id	= 'prdate'
12:18:55 SQL> 
12:18:55 SQL> -- Define a variable to help me exclude some columns from some data mining calls
12:18:55 SQL> DEFINE exclude1 = "'&target','&case_id'"
12:18:55 SQL> 
12:18:55 SQL> -- Builds an SVM model using pl/sql.
12:18:55 SQL> 
12:18:55 SQL> -----------------------------------------------------------------------
12:18:55 SQL> --			    BUILD THE MODEL
12:18:55 SQL> -----------------------------------------------------------------------
12:18:55 SQL> 
12:18:55 SQL> -- Cleanup old build data preparation objects for repeat runs
12:18:55 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
12:18:55 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
12:18:55 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
12:18:55 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
12:18:55 SQL> 
12:18:55 SQL> 
12:18:55 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
12:18:55 SQL> --
12:18:55 SQL> -- DROP	TABLE svmc_settings ;
12:18:55 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
12:18:55 SQL> -- DELETE svmc_settings;
12:18:55 SQL> 
12:18:55 SQL> -- The default classification algorithm is Naive Bayes. So override
12:18:55 SQL> -- this choice to SVM using a settings table.
12:18:55 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
12:18:55 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
12:18:55 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
12:18:55 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
12:18:55 SQL> -- models.
12:18:55 SQL> --
12:18:55 SQL> 
12:18:55 SQL> -- Do this once and then comment it out.
12:18:55 SQL> -- That makes script go faster.
12:18:55 SQL> -- BEGIN
12:18:55 SQL> -- -- Populate settings table
12:18:55 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:18:55 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
12:18:55 SQL> --
12:18:55 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:18:55 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
12:18:55 SQL> --
12:18:55 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:18:55 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
12:18:55 SQL> --   COMMIT;
12:18:55 SQL> -- END;
12:18:55 SQL> -- /
12:18:55 SQL> 
12:18:55 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
12:18:55 SQL> 
12:18:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
12:18:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:18:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:18:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
12:18:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:18:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
12:18:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
12:18:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:18:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:18:55 SQL> 
12:18:55 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
12:18:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:18:55   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:18:55 SQL> 
12:18:55 SQL> --------------------------------
12:18:55 SQL> -- PREPARE BUILD (TRAINING) DATA
12:18:55 SQL> --
12:18:55 SQL> 
12:18:55 SQL> -- 1. Missing Value treatment for all Predictors and
12:18:55 SQL> -- 2. Outlier Treatment and
12:18:55 SQL> -- 3. Normalization are performed below.
12:18:55 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
12:18:55 SQL> --    normalized here.
12:18:55 SQL> 
12:18:55 SQL> BEGIN
12:18:55   2  	-- Perform missing value treatment for all predictors
12:18:55   3  	-- create miss tables
12:18:55   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
12:18:55   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
12:18:55   6  
12:18:55   7  	-- populate miss tables
12:18:55   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
12:18:55   9  	  miss_table_name => 'svmc_miss_num',
12:18:55  10  	  data_table_name => '&bldtable',
12:18:55  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:18:55  12  
12:18:55  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
12:18:55  14  	  miss_table_name => 'svmc_miss_cat',
12:18:55  15  	  data_table_name => '&bldtable',
12:18:55  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:18:55  17  
12:18:55  18  	-- xform input data to replace missing values
12:18:55  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:18:55  20  	  miss_table_name => 'svmc_miss_num',
12:18:55  21  	  data_table_name => '&bldtable',
12:18:55  22  	  xform_view_name => 'xformed_build_miss_num');
12:18:55  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:18:55  24  	  miss_table_name => 'svmc_miss_cat',
12:18:55  25  	  data_table_name => '&bldtable',
12:18:55  26  	  xform_view_name => 'xformed_build_miss_cat');
12:18:55  27  
12:18:55  28  	-- Perform outlier treatment.
12:18:55  29  	-- create clip table
12:18:55  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
12:18:55  31  
12:18:55  32  	-- populate clip table
12:18:55  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
12:18:55  34  	  clip_table_name => 'svmc_clip',
12:18:55  35  	  data_table_name => '&bldtable',
12:18:55  36  	  tail_frac	  => 0.025,
12:18:55  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:18:55  38  
12:18:55  39  	-- xform input data to winsorized data
12:18:55  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
12:18:55  41  	  clip_table_name => 'svmc_clip',
12:18:55  42  	  data_table_name => '&bldtable',
12:18:55  43  	  xform_view_name => 'svmc_winsor');
12:18:55  44  
12:18:55  45  	-- create normalization table
12:18:55  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
12:18:55  47  
12:18:55  48  	-- populate normalization table based on winsorized data
12:18:55  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
12:18:55  50  	  norm_table_name => 'svmc_norm',
12:18:55  51  	  data_table_name => 'svmc_winsor',
12:18:55  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:18:55  53  
12:18:55  54  	-- normalize the original data
12:18:55  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:18:55  56  	  norm_table_name => 'svmc_norm',
12:18:55  57  	  data_table_name => '&bldtable',
12:18:55  58  	  xform_view_name => 'svmc_build_prep');
12:18:55  59  END;
12:18:55  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.86
12:19:13 SQL> 
12:19:13 SQL> ---------------------
12:19:13 SQL> -- CREATE A NEW MODEL
12:19:13 SQL> --
12:19:13 SQL> -- Cleanup old model with the same name for repeat runs
12:19:13 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
12:19:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:19:13   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.13
12:19:14 SQL> 
12:19:14 SQL> -- Build a new SVM Model
12:19:14 SQL> BEGIN
12:19:14   2  	DBMS_DATA_MINING.CREATE_MODEL(
12:19:14   3  	  model_name	      => '&model_name',
12:19:14   4  	  mining_function     => dbms_data_mining.classification,
12:19:14   5  	  data_table_name     => 'svmc_build_prep',
12:19:14   6  	  case_id_column_name => '&case_id',
12:19:14   7  	  target_column_name  => '&target',
12:19:14   8  	  settings_table_name => 'svmc_settings');
12:19:14   9  END;
12:19:14  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.53
12:19:43 SQL> 
12:19:43 SQL> -----------------------------------------------------------------------
12:19:43 SQL> --			       APPLY/score THE MODEL
12:19:43 SQL> -----------------------------------------------------------------------
12:19:43 SQL> 
12:19:43 SQL> -- Cleanup old scoring data preparation objects for repeat runs
12:19:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
12:19:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:19:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:19:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
12:19:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:19:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:19:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
12:19:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:19:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:19:43 SQL> -----------------------
12:19:43 SQL> -- PREPARE SCORING DATA
12:19:43 SQL> --
12:19:43 SQL> -- If the data for model creation has been prepared, then the data
12:19:43 SQL> -- to be scored using the model must be prepared in the same manner
12:19:43 SQL> -- in order to obtain meaningful results.
12:19:43 SQL> --
12:19:43 SQL> -- 1. Missing Value treatment for all Predictors and
12:19:43 SQL> -- 2. Normalization
12:19:43 SQL> -- No outlier treatment will be performed during test and apply. The
12:19:43 SQL> -- normalization step is sufficient, since the normalization parameters
12:19:43 SQL> -- already capture the effects of outlier treatment done with build data.
12:19:43 SQL> --
12:19:43 SQL> BEGIN
12:19:43   2  	-- Xform Test data to replace missing values
12:19:43   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:19:43   4  	  miss_table_name => 'svmc_miss_num',
12:19:43   5  	  data_table_name => '&scoretable',
12:19:43   6  	  xform_view_name => 'xformed_apply_miss_num');
12:19:43   7  
12:19:43   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:19:43   9  	  miss_table_name => 'svmc_miss_cat',
12:19:43  10  	  data_table_name => '&scoretable',
12:19:43  11  	  xform_view_name => 'xformed_apply_miss_cat');
12:19:43  12  
12:19:43  13  	-- Normalize the data to be scored
12:19:43  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:19:43  15  	  norm_table_name => 'svmc_norm',
12:19:43  16  	  data_table_name => '&scoretable',
12:19:43  17  	  xform_view_name => 'svmc_apply_prep');
12:19:43  18  END;
12:19:43  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
12:19:44 SQL> 
12:19:44 SQL> -- Use same model_name used in score.sql
12:19:44 SQL> DEFINE model_name = 'forex14'
12:19:44 SQL> 
12:19:44 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
12:19:44 SQL> 
12:19:44 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
12:19:44 SQL> 
12:19:44 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
12:19:44   2  SELECT
12:19:44   3  prdate
12:19:44   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
12:19:44   5  ,sysdate
12:19:44   6  ,SUBSTR(prdate,1,3)pair
12:19:44   7  ,SUBSTR(prdate,4,19)ydate
12:19:44   8  FROM svmc_apply_prep
12:19:44   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
12:19:44 SQL> @aud_score1day.sql  2010-12-30 12:05:00
12:19:44 SQL> --
12:19:44 SQL> -- aud_score1day.sql
12:19:44 SQL> --
12:19:44 SQL> 
12:19:44 SQL> CREATE OR REPLACE VIEW sme AS
12:19:44   2  SELECT
12:19:44   3  'aud'||m.ydate prdate
12:19:44   4  ,NULL gatt
12:19:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:19:44   6  ,eur_g00
12:19:44   7  ,eur_g01
12:19:44   8  ,eur_g02
12:19:44   9  ,eur_g03
12:19:44  10  ,eur_g04
12:19:44  11  ,eur_g05
12:19:44  12  ,eur_g06
12:19:44  13  ,eur_g07
12:19:44  14  ,eur_g08
12:19:44  15  ,eur_g09
12:19:44  16  ,eur_g10
12:19:44  17  ,eur_g11
12:19:44  18  ,eur_g12
12:19:44  19  ,eur_g13
12:19:44  20  ,eur_g14
12:19:44  21  ,eur_g15
12:19:44  22  ,eur_g16
12:19:44  23  ,eur_g17
12:19:44  24  ,eur_g18
12:19:44  25  ,eur_g19
12:19:44  26  ,eur_g20
12:19:44  27  ,eur_g21
12:19:44  28  ,eur_g22
12:19:44  29  ,eur_g23
12:19:44  30  ,eur_g24
12:19:44  31  ,eur_g25
12:19:44  32  ,eur_g26
12:19:44  33  ,eur_g27
12:19:44  34  ,eur_g28
12:19:44  35  ,eur_g29
12:19:44  36  ,eur_g30
12:19:44  37  ,eur_g31
12:19:44  38  ,eur_g32
12:19:44  39  ,eur_g33
12:19:44  40  ,eur_g34
12:19:44  41  ,eur_g35
12:19:44  42  ,eur_g36
12:19:44  43  ,eur_g37
12:19:44  44  ,eur_g38
12:19:44  45  ,eur_g39
12:19:44  46  ,eur_g40
12:19:44  47  ,eur_g41
12:19:44  48  ,aud_g00
12:19:44  49  ,aud_g01
12:19:44  50  ,aud_g02
12:19:44  51  ,aud_g03
12:19:44  52  ,aud_g04
12:19:44  53  ,aud_g05
12:19:44  54  ,aud_g06
12:19:44  55  ,aud_g07
12:19:44  56  ,aud_g08
12:19:44  57  ,aud_g09
12:19:44  58  ,aud_g10
12:19:44  59  ,aud_g11
12:19:44  60  ,aud_g12
12:19:44  61  ,aud_g13
12:19:44  62  ,aud_g14
12:19:44  63  ,aud_g15
12:19:44  64  ,aud_g16
12:19:44  65  ,aud_g17
12:19:44  66  ,aud_g18
12:19:44  67  ,aud_g19
12:19:44  68  ,aud_g20
12:19:44  69  ,aud_g21
12:19:44  70  ,aud_g22
12:19:44  71  ,aud_g23
12:19:44  72  ,aud_g24
12:19:44  73  ,aud_g25
12:19:44  74  ,aud_g26
12:19:44  75  ,aud_g27
12:19:44  76  ,aud_g28
12:19:44  77  ,aud_g29
12:19:44  78  ,aud_g30
12:19:44  79  ,aud_g31
12:19:44  80  ,aud_g32
12:19:44  81  ,aud_g33
12:19:44  82  ,aud_g34
12:19:44  83  ,aud_g35
12:19:44  84  ,aud_g36
12:19:44  85  ,aud_g37
12:19:44  86  ,aud_g38
12:19:44  87  ,aud_g39
12:19:44  88  ,aud_g40
12:19:44  89  ,aud_g41
12:19:44  90  ,gbp_g00
12:19:44  91  ,gbp_g01
12:19:44  92  ,gbp_g02
12:19:44  93  ,gbp_g03
12:19:44  94  ,gbp_g04
12:19:44  95  ,gbp_g05
12:19:44  96  ,gbp_g06
12:19:44  97  ,gbp_g07
12:19:44  98  ,gbp_g08
12:19:44  99  ,gbp_g09
12:19:44 100  ,gbp_g10
12:19:44 101  ,gbp_g11
12:19:44 102  ,gbp_g12
12:19:44 103  ,gbp_g13
12:19:44 104  ,gbp_g14
12:19:44 105  ,gbp_g15
12:19:44 106  ,gbp_g16
12:19:44 107  ,gbp_g17
12:19:44 108  ,gbp_g18
12:19:44 109  ,gbp_g19
12:19:44 110  ,gbp_g20
12:19:44 111  ,gbp_g21
12:19:44 112  ,gbp_g22
12:19:44 113  ,gbp_g23
12:19:44 114  ,gbp_g24
12:19:44 115  ,gbp_g25
12:19:44 116  ,gbp_g26
12:19:44 117  ,gbp_g27
12:19:44 118  ,gbp_g28
12:19:44 119  ,gbp_g29
12:19:44 120  ,gbp_g30
12:19:44 121  ,gbp_g31
12:19:44 122  ,gbp_g32
12:19:44 123  ,gbp_g33
12:19:44 124  ,gbp_g34
12:19:44 125  ,gbp_g35
12:19:44 126  ,gbp_g36
12:19:44 127  ,gbp_g37
12:19:44 128  ,gbp_g38
12:19:44 129  ,gbp_g39
12:19:44 130  ,gbp_g40
12:19:44 131  ,gbp_g41
12:19:44 132  ,jpy_g00
12:19:44 133  ,jpy_g01
12:19:44 134  ,jpy_g02
12:19:44 135  ,jpy_g03
12:19:44 136  ,jpy_g04
12:19:44 137  ,jpy_g05
12:19:44 138  ,jpy_g06
12:19:44 139  ,jpy_g07
12:19:44 140  ,jpy_g08
12:19:44 141  ,jpy_g09
12:19:44 142  ,jpy_g10
12:19:44 143  ,jpy_g11
12:19:44 144  ,jpy_g12
12:19:44 145  ,jpy_g13
12:19:44 146  ,jpy_g14
12:19:44 147  ,jpy_g15
12:19:44 148  ,jpy_g16
12:19:44 149  ,jpy_g17
12:19:44 150  ,jpy_g18
12:19:44 151  ,jpy_g19
12:19:44 152  ,jpy_g20
12:19:44 153  ,jpy_g21
12:19:44 154  ,jpy_g22
12:19:44 155  ,jpy_g23
12:19:44 156  ,jpy_g24
12:19:44 157  ,jpy_g25
12:19:44 158  ,jpy_g26
12:19:44 159  ,jpy_g27
12:19:44 160  ,jpy_g28
12:19:44 161  ,jpy_g29
12:19:44 162  ,jpy_g30
12:19:44 163  ,jpy_g31
12:19:44 164  ,jpy_g32
12:19:44 165  ,jpy_g33
12:19:44 166  ,jpy_g34
12:19:44 167  ,jpy_g35
12:19:44 168  ,jpy_g36
12:19:44 169  ,jpy_g37
12:19:44 170  ,jpy_g38
12:19:44 171  ,jpy_g39
12:19:44 172  ,jpy_g40
12:19:44 173  ,jpy_g41
12:19:44 174  ,cad_g00
12:19:44 175  ,cad_g01
12:19:44 176  ,cad_g02
12:19:44 177  ,cad_g03
12:19:44 178  ,cad_g04
12:19:44 179  ,cad_g05
12:19:44 180  ,cad_g06
12:19:44 181  ,cad_g07
12:19:44 182  ,cad_g08
12:19:44 183  ,cad_g09
12:19:44 184  ,cad_g10
12:19:44 185  ,cad_g11
12:19:44 186  ,cad_g12
12:19:44 187  ,cad_g13
12:19:44 188  ,cad_g14
12:19:44 189  ,cad_g15
12:19:44 190  ,cad_g16
12:19:44 191  ,cad_g17
12:19:44 192  ,cad_g18
12:19:44 193  ,cad_g19
12:19:44 194  ,cad_g20
12:19:44 195  ,cad_g21
12:19:44 196  ,cad_g22
12:19:44 197  ,cad_g23
12:19:44 198  ,cad_g24
12:19:44 199  ,cad_g25
12:19:44 200  ,cad_g26
12:19:44 201  ,cad_g27
12:19:44 202  ,cad_g28
12:19:44 203  ,cad_g29
12:19:44 204  ,cad_g30
12:19:44 205  ,cad_g31
12:19:44 206  ,cad_g32
12:19:44 207  ,cad_g33
12:19:44 208  ,cad_g34
12:19:44 209  ,cad_g35
12:19:44 210  ,cad_g36
12:19:44 211  ,cad_g37
12:19:44 212  ,cad_g38
12:19:44 213  ,cad_g39
12:19:44 214  ,cad_g40
12:19:44 215  ,cad_g41
12:19:44 216  ,chf_g00
12:19:44 217  ,chf_g01
12:19:44 218  ,chf_g02
12:19:44 219  ,chf_g03
12:19:44 220  ,chf_g04
12:19:44 221  ,chf_g05
12:19:44 222  ,chf_g06
12:19:44 223  ,chf_g07
12:19:44 224  ,chf_g08
12:19:44 225  ,chf_g09
12:19:44 226  ,chf_g10
12:19:44 227  ,chf_g11
12:19:44 228  ,chf_g12
12:19:44 229  ,chf_g13
12:19:44 230  ,chf_g14
12:19:44 231  ,chf_g15
12:19:44 232  ,chf_g16
12:19:44 233  ,chf_g17
12:19:44 234  ,chf_g18
12:19:44 235  ,chf_g19
12:19:44 236  ,chf_g20
12:19:44 237  ,chf_g21
12:19:44 238  ,chf_g22
12:19:44 239  ,chf_g23
12:19:44 240  ,chf_g24
12:19:44 241  ,chf_g25
12:19:44 242  ,chf_g26
12:19:44 243  ,chf_g27
12:19:44 244  ,chf_g28
12:19:44 245  ,chf_g29
12:19:44 246  ,chf_g30
12:19:44 247  ,chf_g31
12:19:44 248  ,chf_g32
12:19:44 249  ,chf_g33
12:19:44 250  ,chf_g34
12:19:44 251  ,chf_g35
12:19:44 252  ,chf_g36
12:19:44 253  ,chf_g37
12:19:44 254  ,chf_g38
12:19:44 255  ,chf_g39
12:19:44 256  ,chf_g40
12:19:44 257  ,chf_g41
12:19:44 258  FROM aud_ms6 m
12:19:44 259  WHERE m.ydate = '&1'||' '||'&2'
12:19:44 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'12:05:00'

View created.

Elapsed: 00:00:00.13
12:19:44 SQL> 
12:19:44 SQL> -- rpt
12:19:44 SQL> -- We should see just 1 row:
12:19:44 SQL> 
12:19:44 SQL> SELECT COUNT(prdate) FROM sme
12:19:44   2  
12:19:44 SQL> -- Build the model:
12:19:44 SQL> CREATE OR REPLACE VIEW bme AS
12:19:44   2  SELECT
12:19:44   3  'aud'||m.ydate prdate
12:19:44   4  ,gatt
12:19:44   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:19:44   6  ,eur_g00
12:19:44   7  ,eur_g01
12:19:44   8  ,eur_g02
12:19:44   9  ,eur_g03
12:19:44  10  ,eur_g04
12:19:44  11  ,eur_g05
12:19:44  12  ,eur_g06
12:19:44  13  ,eur_g07
12:19:44  14  ,eur_g08
12:19:44  15  ,eur_g09
12:19:44  16  ,eur_g10
12:19:44  17  ,eur_g11
12:19:44  18  ,eur_g12
12:19:44  19  ,eur_g13
12:19:44  20  ,eur_g14
12:19:44  21  ,eur_g15
12:19:44  22  ,eur_g16
12:19:44  23  ,eur_g17
12:19:44  24  ,eur_g18
12:19:44  25  ,eur_g19
12:19:44  26  ,eur_g20
12:19:44  27  ,eur_g21
12:19:44  28  ,eur_g22
12:19:44  29  ,eur_g23
12:19:44  30  ,eur_g24
12:19:44  31  ,eur_g25
12:19:44  32  ,eur_g26
12:19:44  33  ,eur_g27
12:19:44  34  ,eur_g28
12:19:44  35  ,eur_g29
12:19:44  36  ,eur_g30
12:19:44  37  ,eur_g31
12:19:44  38  ,eur_g32
12:19:44  39  ,eur_g33
12:19:44  40  ,eur_g34
12:19:44  41  ,eur_g35
12:19:44  42  ,eur_g36
12:19:44  43  ,eur_g37
12:19:44  44  ,eur_g38
12:19:44  45  ,eur_g39
12:19:44  46  ,eur_g40
12:19:44  47  ,eur_g41
12:19:44  48  ,aud_g00
12:19:44  49  ,aud_g01
12:19:44  50  ,aud_g02
12:19:44  51  ,aud_g03
12:19:44  52  ,aud_g04
12:19:44  53  ,aud_g05
12:19:44  54  ,aud_g06
12:19:44  55  ,aud_g07
12:19:44  56  ,aud_g08
12:19:44  57  ,aud_g09
12:19:44  58  ,aud_g10
12:19:44  59  ,aud_g11
12:19:44  60  ,aud_g12
12:19:44  61  ,aud_g13
12:19:44  62  ,aud_g14
12:19:44  63  ,aud_g15
12:19:44  64  ,aud_g16
12:19:44  65  ,aud_g17
12:19:44  66  ,aud_g18
12:19:44  67  ,aud_g19
12:19:44  68  ,aud_g20
12:19:44  69  ,aud_g21
12:19:44  70  ,aud_g22
12:19:44  71  ,aud_g23
12:19:44  72  ,aud_g24
12:19:44  73  ,aud_g25
12:19:44  74  ,aud_g26
12:19:44  75  ,aud_g27
12:19:44  76  ,aud_g28
12:19:44  77  ,aud_g29
12:19:44  78  ,aud_g30
12:19:44  79  ,aud_g31
12:19:44  80  ,aud_g32
12:19:44  81  ,aud_g33
12:19:44  82  ,aud_g34
12:19:44  83  ,aud_g35
12:19:44  84  ,aud_g36
12:19:44  85  ,aud_g37
12:19:44  86  ,aud_g38
12:19:44  87  ,aud_g39
12:19:44  88  ,aud_g40
12:19:44  89  ,aud_g41
12:19:44  90  ,gbp_g00
12:19:44  91  ,gbp_g01
12:19:44  92  ,gbp_g02
12:19:44  93  ,gbp_g03
12:19:44  94  ,gbp_g04
12:19:44  95  ,gbp_g05
12:19:44  96  ,gbp_g06
12:19:44  97  ,gbp_g07
12:19:44  98  ,gbp_g08
12:19:44  99  ,gbp_g09
12:19:44 100  ,gbp_g10
12:19:44 101  ,gbp_g11
12:19:44 102  ,gbp_g12
12:19:44 103  ,gbp_g13
12:19:44 104  ,gbp_g14
12:19:44 105  ,gbp_g15
12:19:44 106  ,gbp_g16
12:19:44 107  ,gbp_g17
12:19:44 108  ,gbp_g18
12:19:44 109  ,gbp_g19
12:19:44 110  ,gbp_g20
12:19:44 111  ,gbp_g21
12:19:44 112  ,gbp_g22
12:19:44 113  ,gbp_g23
12:19:44 114  ,gbp_g24
12:19:44 115  ,gbp_g25
12:19:44 116  ,gbp_g26
12:19:44 117  ,gbp_g27
12:19:44 118  ,gbp_g28
12:19:44 119  ,gbp_g29
12:19:44 120  ,gbp_g30
12:19:44 121  ,gbp_g31
12:19:44 122  ,gbp_g32
12:19:44 123  ,gbp_g33
12:19:44 124  ,gbp_g34
12:19:44 125  ,gbp_g35
12:19:44 126  ,gbp_g36
12:19:44 127  ,gbp_g37
12:19:44 128  ,gbp_g38
12:19:44 129  ,gbp_g39
12:19:44 130  ,gbp_g40
12:19:44 131  ,gbp_g41
12:19:44 132  ,jpy_g00
12:19:44 133  ,jpy_g01
12:19:44 134  ,jpy_g02
12:19:44 135  ,jpy_g03
12:19:44 136  ,jpy_g04
12:19:44 137  ,jpy_g05
12:19:44 138  ,jpy_g06
12:19:44 139  ,jpy_g07
12:19:44 140  ,jpy_g08
12:19:44 141  ,jpy_g09
12:19:44 142  ,jpy_g10
12:19:44 143  ,jpy_g11
12:19:44 144  ,jpy_g12
12:19:44 145  ,jpy_g13
12:19:44 146  ,jpy_g14
12:19:44 147  ,jpy_g15
12:19:44 148  ,jpy_g16
12:19:44 149  ,jpy_g17
12:19:44 150  ,jpy_g18
12:19:44 151  ,jpy_g19
12:19:44 152  ,jpy_g20
12:19:44 153  ,jpy_g21
12:19:44 154  ,jpy_g22
12:19:44 155  ,jpy_g23
12:19:44 156  ,jpy_g24
12:19:44 157  ,jpy_g25
12:19:44 158  ,jpy_g26
12:19:44 159  ,jpy_g27
12:19:44 160  ,jpy_g28
12:19:44 161  ,jpy_g29
12:19:44 162  ,jpy_g30
12:19:44 163  ,jpy_g31
12:19:44 164  ,jpy_g32
12:19:44 165  ,jpy_g33
12:19:44 166  ,jpy_g34
12:19:44 167  ,jpy_g35
12:19:44 168  ,jpy_g36
12:19:44 169  ,jpy_g37
12:19:44 170  ,jpy_g38
12:19:44 171  ,jpy_g39
12:19:44 172  ,jpy_g40
12:19:44 173  ,jpy_g41
12:19:44 174  ,cad_g00
12:19:44 175  ,cad_g01
12:19:44 176  ,cad_g02
12:19:44 177  ,cad_g03
12:19:44 178  ,cad_g04
12:19:44 179  ,cad_g05
12:19:44 180  ,cad_g06
12:19:44 181  ,cad_g07
12:19:44 182  ,cad_g08
12:19:44 183  ,cad_g09
12:19:44 184  ,cad_g10
12:19:44 185  ,cad_g11
12:19:44 186  ,cad_g12
12:19:44 187  ,cad_g13
12:19:44 188  ,cad_g14
12:19:44 189  ,cad_g15
12:19:44 190  ,cad_g16
12:19:44 191  ,cad_g17
12:19:44 192  ,cad_g18
12:19:44 193  ,cad_g19
12:19:44 194  ,cad_g20
12:19:44 195  ,cad_g21
12:19:44 196  ,cad_g22
12:19:44 197  ,cad_g23
12:19:44 198  ,cad_g24
12:19:44 199  ,cad_g25
12:19:44 200  ,cad_g26
12:19:44 201  ,cad_g27
12:19:44 202  ,cad_g28
12:19:44 203  ,cad_g29
12:19:44 204  ,cad_g30
12:19:44 205  ,cad_g31
12:19:44 206  ,cad_g32
12:19:44 207  ,cad_g33
12:19:44 208  ,cad_g34
12:19:44 209  ,cad_g35
12:19:44 210  ,cad_g36
12:19:44 211  ,cad_g37
12:19:44 212  ,cad_g38
12:19:44 213  ,cad_g39
12:19:44 214  ,cad_g40
12:19:44 215  ,cad_g41
12:19:44 216  ,chf_g00
12:19:44 217  ,chf_g01
12:19:44 218  ,chf_g02
12:19:44 219  ,chf_g03
12:19:44 220  ,chf_g04
12:19:44 221  ,chf_g05
12:19:44 222  ,chf_g06
12:19:44 223  ,chf_g07
12:19:44 224  ,chf_g08
12:19:44 225  ,chf_g09
12:19:44 226  ,chf_g10
12:19:44 227  ,chf_g11
12:19:44 228  ,chf_g12
12:19:44 229  ,chf_g13
12:19:44 230  ,chf_g14
12:19:44 231  ,chf_g15
12:19:44 232  ,chf_g16
12:19:44 233  ,chf_g17
12:19:44 234  ,chf_g18
12:19:44 235  ,chf_g19
12:19:44 236  ,chf_g20
12:19:44 237  ,chf_g21
12:19:44 238  ,chf_g22
12:19:44 239  ,chf_g23
12:19:44 240  ,chf_g24
12:19:44 241  ,chf_g25
12:19:44 242  ,chf_g26
12:19:44 243  ,chf_g27
12:19:44 244  ,chf_g28
12:19:44 245  ,chf_g29
12:19:44 246  ,chf_g30
12:19:44 247  ,chf_g31
12:19:44 248  ,chf_g32
12:19:44 249  ,chf_g33
12:19:44 250  ,chf_g34
12:19:44 251  ,chf_g35
12:19:44 252  ,chf_g36
12:19:44 253  ,chf_g37
12:19:44 254  ,chf_g38
12:19:44 255  ,chf_g39
12:19:44 256  ,chf_g40
12:19:44 257  ,chf_g41
12:19:44 258  FROM aud_ms6 m
12:19:44 259  WHERE gatt IN('nup','up')
12:19:44 260  AND 1+m.ydate < '&1'||' '||'&2'
12:19:44 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'12:05:00'

View created.

Elapsed: 00:00:00.12
12:19:45 SQL> 
12:19:45 SQL> -- rpt
12:19:45 SQL> 
12:19:45 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
12:19:45   2  
12:19:45 SQL> SELECT MAX(prdate) FROM bme
12:19:45   2  
12:19:45 SQL> -- Now build model from bme and score sme
12:19:45 SQL> @score1.sql
12:19:45 SQL> -- score1.sql
12:19:45 SQL> 
12:19:45 SQL> -- Does the 1st SVM score
12:19:45 SQL> 
12:19:45 SQL> -- Fill up svmc_apply_prep
12:19:45 SQL> @score.sql
12:19:45 SQL> --
12:19:45 SQL> -- score.sql
12:19:45 SQL> --
12:19:45 SQL> 
12:19:45 SQL> -- usage: score.sql
12:19:45 SQL> 
12:19:45 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
12:19:45 SQL> 
12:19:45 SQL> DEFINE target	= 'gatt'
12:19:45 SQL> DEFINE model_name = 'forex14'
12:19:45 SQL> DEFINE bldtable	= 'bme'
12:19:45 SQL> DEFINE scoretable = 'sme'
12:19:45 SQL> DEFINE case_id	= 'prdate'
12:19:45 SQL> 
12:19:45 SQL> -- Define a variable to help me exclude some columns from some data mining calls
12:19:45 SQL> DEFINE exclude1 = "'&target','&case_id'"
12:19:45 SQL> 
12:19:45 SQL> -- Builds an SVM model using pl/sql.
12:19:45 SQL> 
12:19:45 SQL> -----------------------------------------------------------------------
12:19:45 SQL> --			    BUILD THE MODEL
12:19:45 SQL> -----------------------------------------------------------------------
12:19:45 SQL> 
12:19:45 SQL> -- Cleanup old build data preparation objects for repeat runs
12:19:45 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
12:19:45 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
12:19:45 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
12:19:45 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
12:19:45 SQL> 
12:19:45 SQL> 
12:19:45 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
12:19:45 SQL> --
12:19:45 SQL> -- DROP	TABLE svmc_settings ;
12:19:45 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
12:19:45 SQL> -- DELETE svmc_settings;
12:19:45 SQL> 
12:19:45 SQL> -- The default classification algorithm is Naive Bayes. So override
12:19:45 SQL> -- this choice to SVM using a settings table.
12:19:45 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
12:19:45 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
12:19:45 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
12:19:45 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
12:19:45 SQL> -- models.
12:19:45 SQL> --
12:19:45 SQL> 
12:19:45 SQL> -- Do this once and then comment it out.
12:19:45 SQL> -- That makes script go faster.
12:19:45 SQL> -- BEGIN
12:19:45 SQL> -- -- Populate settings table
12:19:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:19:45 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
12:19:45 SQL> --
12:19:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:19:45 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
12:19:45 SQL> --
12:19:45 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:19:45 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
12:19:45 SQL> --   COMMIT;
12:19:45 SQL> -- END;
12:19:45 SQL> -- /
12:19:45 SQL> 
12:19:45 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
12:19:45 SQL> 
12:19:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
12:19:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:19:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
12:19:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
12:19:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:19:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:19:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
12:19:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:19:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
12:19:45 SQL> 
12:19:45 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
12:19:45   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:19:45   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:19:45 SQL> 
12:19:45 SQL> --------------------------------
12:19:45 SQL> -- PREPARE BUILD (TRAINING) DATA
12:19:45 SQL> --
12:19:45 SQL> 
12:19:45 SQL> -- 1. Missing Value treatment for all Predictors and
12:19:45 SQL> -- 2. Outlier Treatment and
12:19:45 SQL> -- 3. Normalization are performed below.
12:19:45 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
12:19:45 SQL> --    normalized here.
12:19:45 SQL> 
12:19:45 SQL> BEGIN
12:19:45   2  	-- Perform missing value treatment for all predictors
12:19:45   3  	-- create miss tables
12:19:45   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
12:19:45   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
12:19:45   6  
12:19:45   7  	-- populate miss tables
12:19:45   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
12:19:45   9  	  miss_table_name => 'svmc_miss_num',
12:19:45  10  	  data_table_name => '&bldtable',
12:19:45  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:19:45  12  
12:19:45  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
12:19:45  14  	  miss_table_name => 'svmc_miss_cat',
12:19:45  15  	  data_table_name => '&bldtable',
12:19:45  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:19:45  17  
12:19:45  18  	-- xform input data to replace missing values
12:19:45  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:19:45  20  	  miss_table_name => 'svmc_miss_num',
12:19:45  21  	  data_table_name => '&bldtable',
12:19:45  22  	  xform_view_name => 'xformed_build_miss_num');
12:19:45  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:19:45  24  	  miss_table_name => 'svmc_miss_cat',
12:19:45  25  	  data_table_name => '&bldtable',
12:19:45  26  	  xform_view_name => 'xformed_build_miss_cat');
12:19:45  27  
12:19:45  28  	-- Perform outlier treatment.
12:19:45  29  	-- create clip table
12:19:45  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
12:19:45  31  
12:19:45  32  	-- populate clip table
12:19:45  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
12:19:45  34  	  clip_table_name => 'svmc_clip',
12:19:45  35  	  data_table_name => '&bldtable',
12:19:45  36  	  tail_frac	  => 0.025,
12:19:45  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:19:45  38  
12:19:45  39  	-- xform input data to winsorized data
12:19:45  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
12:19:45  41  	  clip_table_name => 'svmc_clip',
12:19:45  42  	  data_table_name => '&bldtable',
12:19:45  43  	  xform_view_name => 'svmc_winsor');
12:19:45  44  
12:19:45  45  	-- create normalization table
12:19:45  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
12:19:45  47  
12:19:45  48  	-- populate normalization table based on winsorized data
12:19:45  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
12:19:45  50  	  norm_table_name => 'svmc_norm',
12:19:45  51  	  data_table_name => 'svmc_winsor',
12:19:45  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:19:45  53  
12:19:45  54  	-- normalize the original data
12:19:45  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:19:45  56  	  norm_table_name => 'svmc_norm',
12:19:45  57  	  data_table_name => '&bldtable',
12:19:45  58  	  xform_view_name => 'svmc_build_prep');
12:19:45  59  END;
12:19:45  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.37
12:20:03 SQL> 
12:20:03 SQL> ---------------------
12:20:03 SQL> -- CREATE A NEW MODEL
12:20:03 SQL> --
12:20:03 SQL> -- Cleanup old model with the same name for repeat runs
12:20:03 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
12:20:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:20:03   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.51
12:20:05 SQL> 
12:20:05 SQL> -- Build a new SVM Model
12:20:05 SQL> BEGIN
12:20:05   2  	DBMS_DATA_MINING.CREATE_MODEL(
12:20:05   3  	  model_name	      => '&model_name',
12:20:05   4  	  mining_function     => dbms_data_mining.classification,
12:20:05   5  	  data_table_name     => 'svmc_build_prep',
12:20:05   6  	  case_id_column_name => '&case_id',
12:20:05   7  	  target_column_name  => '&target',
12:20:05   8  	  settings_table_name => 'svmc_settings');
12:20:05   9  END;
12:20:05  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.57
12:20:33 SQL> 
12:20:33 SQL> -----------------------------------------------------------------------
12:20:33 SQL> --			       APPLY/score THE MODEL
12:20:33 SQL> -----------------------------------------------------------------------
12:20:33 SQL> 
12:20:33 SQL> -- Cleanup old scoring data preparation objects for repeat runs
12:20:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
12:20:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:20:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:20:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
12:20:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:20:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:20:33 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
12:20:33   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:20:33   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:20:33 SQL> -----------------------
12:20:33 SQL> -- PREPARE SCORING DATA
12:20:33 SQL> --
12:20:33 SQL> -- If the data for model creation has been prepared, then the data
12:20:33 SQL> -- to be scored using the model must be prepared in the same manner
12:20:33 SQL> -- in order to obtain meaningful results.
12:20:33 SQL> --
12:20:33 SQL> -- 1. Missing Value treatment for all Predictors and
12:20:33 SQL> -- 2. Normalization
12:20:33 SQL> -- No outlier treatment will be performed during test and apply. The
12:20:33 SQL> -- normalization step is sufficient, since the normalization parameters
12:20:33 SQL> -- already capture the effects of outlier treatment done with build data.
12:20:33 SQL> --
12:20:33 SQL> BEGIN
12:20:33   2  	-- Xform Test data to replace missing values
12:20:33   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:20:33   4  	  miss_table_name => 'svmc_miss_num',
12:20:33   5  	  data_table_name => '&scoretable',
12:20:33   6  	  xform_view_name => 'xformed_apply_miss_num');
12:20:33   7  
12:20:33   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:20:33   9  	  miss_table_name => 'svmc_miss_cat',
12:20:33  10  	  data_table_name => '&scoretable',
12:20:33  11  	  xform_view_name => 'xformed_apply_miss_cat');
12:20:33  12  
12:20:33  13  	-- Normalize the data to be scored
12:20:33  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:20:33  15  	  norm_table_name => 'svmc_norm',
12:20:33  16  	  data_table_name => '&scoretable',
12:20:33  17  	  xform_view_name => 'svmc_apply_prep');
12:20:33  18  END;
12:20:33  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
12:20:35 SQL> 
12:20:35 SQL> -- Use same model_name used in score.sql
12:20:35 SQL> DEFINE model_name = 'forex14'
12:20:35 SQL> 
12:20:35 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
12:20:35 SQL> 
12:20:35 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
12:20:35 SQL> 
12:20:35 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
12:20:35   2  SELECT
12:20:35   3  prdate
12:20:35   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
12:20:35   5  ,sysdate
12:20:35   6  ,SUBSTR(prdate,1,3)pair
12:20:35   7  ,SUBSTR(prdate,4,19)ydate
12:20:35   8  FROM svmc_apply_prep
12:20:35   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
12:20:35 SQL> @aud_score1day.sql  2010-12-30 12:10:00
12:20:35 SQL> --
12:20:35 SQL> -- aud_score1day.sql
12:20:35 SQL> --
12:20:35 SQL> 
12:20:35 SQL> CREATE OR REPLACE VIEW sme AS
12:20:35   2  SELECT
12:20:35   3  'aud'||m.ydate prdate
12:20:35   4  ,NULL gatt
12:20:35   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:20:35   6  ,eur_g00
12:20:35   7  ,eur_g01
12:20:35   8  ,eur_g02
12:20:35   9  ,eur_g03
12:20:35  10  ,eur_g04
12:20:35  11  ,eur_g05
12:20:35  12  ,eur_g06
12:20:35  13  ,eur_g07
12:20:35  14  ,eur_g08
12:20:35  15  ,eur_g09
12:20:35  16  ,eur_g10
12:20:35  17  ,eur_g11
12:20:35  18  ,eur_g12
12:20:35  19  ,eur_g13
12:20:35  20  ,eur_g14
12:20:35  21  ,eur_g15
12:20:35  22  ,eur_g16
12:20:35  23  ,eur_g17
12:20:35  24  ,eur_g18
12:20:35  25  ,eur_g19
12:20:35  26  ,eur_g20
12:20:35  27  ,eur_g21
12:20:35  28  ,eur_g22
12:20:35  29  ,eur_g23
12:20:35  30  ,eur_g24
12:20:35  31  ,eur_g25
12:20:35  32  ,eur_g26
12:20:35  33  ,eur_g27
12:20:35  34  ,eur_g28
12:20:35  35  ,eur_g29
12:20:35  36  ,eur_g30
12:20:35  37  ,eur_g31
12:20:35  38  ,eur_g32
12:20:35  39  ,eur_g33
12:20:35  40  ,eur_g34
12:20:35  41  ,eur_g35
12:20:35  42  ,eur_g36
12:20:35  43  ,eur_g37
12:20:35  44  ,eur_g38
12:20:35  45  ,eur_g39
12:20:35  46  ,eur_g40
12:20:35  47  ,eur_g41
12:20:35  48  ,aud_g00
12:20:35  49  ,aud_g01
12:20:35  50  ,aud_g02
12:20:35  51  ,aud_g03
12:20:35  52  ,aud_g04
12:20:35  53  ,aud_g05
12:20:35  54  ,aud_g06
12:20:35  55  ,aud_g07
12:20:35  56  ,aud_g08
12:20:35  57  ,aud_g09
12:20:35  58  ,aud_g10
12:20:35  59  ,aud_g11
12:20:35  60  ,aud_g12
12:20:35  61  ,aud_g13
12:20:35  62  ,aud_g14
12:20:35  63  ,aud_g15
12:20:35  64  ,aud_g16
12:20:35  65  ,aud_g17
12:20:35  66  ,aud_g18
12:20:35  67  ,aud_g19
12:20:35  68  ,aud_g20
12:20:35  69  ,aud_g21
12:20:35  70  ,aud_g22
12:20:35  71  ,aud_g23
12:20:35  72  ,aud_g24
12:20:35  73  ,aud_g25
12:20:35  74  ,aud_g26
12:20:35  75  ,aud_g27
12:20:35  76  ,aud_g28
12:20:35  77  ,aud_g29
12:20:35  78  ,aud_g30
12:20:35  79  ,aud_g31
12:20:35  80  ,aud_g32
12:20:35  81  ,aud_g33
12:20:35  82  ,aud_g34
12:20:35  83  ,aud_g35
12:20:35  84  ,aud_g36
12:20:35  85  ,aud_g37
12:20:35  86  ,aud_g38
12:20:35  87  ,aud_g39
12:20:35  88  ,aud_g40
12:20:35  89  ,aud_g41
12:20:35  90  ,gbp_g00
12:20:35  91  ,gbp_g01
12:20:35  92  ,gbp_g02
12:20:35  93  ,gbp_g03
12:20:35  94  ,gbp_g04
12:20:35  95  ,gbp_g05
12:20:35  96  ,gbp_g06
12:20:35  97  ,gbp_g07
12:20:35  98  ,gbp_g08
12:20:35  99  ,gbp_g09
12:20:35 100  ,gbp_g10
12:20:35 101  ,gbp_g11
12:20:35 102  ,gbp_g12
12:20:35 103  ,gbp_g13
12:20:35 104  ,gbp_g14
12:20:35 105  ,gbp_g15
12:20:35 106  ,gbp_g16
12:20:35 107  ,gbp_g17
12:20:35 108  ,gbp_g18
12:20:35 109  ,gbp_g19
12:20:35 110  ,gbp_g20
12:20:35 111  ,gbp_g21
12:20:35 112  ,gbp_g22
12:20:35 113  ,gbp_g23
12:20:35 114  ,gbp_g24
12:20:35 115  ,gbp_g25
12:20:35 116  ,gbp_g26
12:20:35 117  ,gbp_g27
12:20:35 118  ,gbp_g28
12:20:35 119  ,gbp_g29
12:20:35 120  ,gbp_g30
12:20:35 121  ,gbp_g31
12:20:35 122  ,gbp_g32
12:20:35 123  ,gbp_g33
12:20:35 124  ,gbp_g34
12:20:35 125  ,gbp_g35
12:20:35 126  ,gbp_g36
12:20:35 127  ,gbp_g37
12:20:35 128  ,gbp_g38
12:20:35 129  ,gbp_g39
12:20:35 130  ,gbp_g40
12:20:35 131  ,gbp_g41
12:20:35 132  ,jpy_g00
12:20:35 133  ,jpy_g01
12:20:35 134  ,jpy_g02
12:20:35 135  ,jpy_g03
12:20:35 136  ,jpy_g04
12:20:35 137  ,jpy_g05
12:20:35 138  ,jpy_g06
12:20:35 139  ,jpy_g07
12:20:35 140  ,jpy_g08
12:20:35 141  ,jpy_g09
12:20:35 142  ,jpy_g10
12:20:35 143  ,jpy_g11
12:20:35 144  ,jpy_g12
12:20:35 145  ,jpy_g13
12:20:35 146  ,jpy_g14
12:20:35 147  ,jpy_g15
12:20:35 148  ,jpy_g16
12:20:35 149  ,jpy_g17
12:20:35 150  ,jpy_g18
12:20:35 151  ,jpy_g19
12:20:35 152  ,jpy_g20
12:20:35 153  ,jpy_g21
12:20:35 154  ,jpy_g22
12:20:35 155  ,jpy_g23
12:20:35 156  ,jpy_g24
12:20:35 157  ,jpy_g25
12:20:35 158  ,jpy_g26
12:20:35 159  ,jpy_g27
12:20:35 160  ,jpy_g28
12:20:35 161  ,jpy_g29
12:20:35 162  ,jpy_g30
12:20:35 163  ,jpy_g31
12:20:35 164  ,jpy_g32
12:20:35 165  ,jpy_g33
12:20:35 166  ,jpy_g34
12:20:35 167  ,jpy_g35
12:20:35 168  ,jpy_g36
12:20:35 169  ,jpy_g37
12:20:35 170  ,jpy_g38
12:20:35 171  ,jpy_g39
12:20:35 172  ,jpy_g40
12:20:35 173  ,jpy_g41
12:20:35 174  ,cad_g00
12:20:35 175  ,cad_g01
12:20:35 176  ,cad_g02
12:20:35 177  ,cad_g03
12:20:35 178  ,cad_g04
12:20:35 179  ,cad_g05
12:20:35 180  ,cad_g06
12:20:35 181  ,cad_g07
12:20:35 182  ,cad_g08
12:20:35 183  ,cad_g09
12:20:35 184  ,cad_g10
12:20:35 185  ,cad_g11
12:20:35 186  ,cad_g12
12:20:35 187  ,cad_g13
12:20:35 188  ,cad_g14
12:20:35 189  ,cad_g15
12:20:35 190  ,cad_g16
12:20:35 191  ,cad_g17
12:20:35 192  ,cad_g18
12:20:35 193  ,cad_g19
12:20:35 194  ,cad_g20
12:20:35 195  ,cad_g21
12:20:35 196  ,cad_g22
12:20:35 197  ,cad_g23
12:20:35 198  ,cad_g24
12:20:35 199  ,cad_g25
12:20:35 200  ,cad_g26
12:20:35 201  ,cad_g27
12:20:35 202  ,cad_g28
12:20:35 203  ,cad_g29
12:20:35 204  ,cad_g30
12:20:35 205  ,cad_g31
12:20:35 206  ,cad_g32
12:20:35 207  ,cad_g33
12:20:35 208  ,cad_g34
12:20:35 209  ,cad_g35
12:20:35 210  ,cad_g36
12:20:35 211  ,cad_g37
12:20:35 212  ,cad_g38
12:20:35 213  ,cad_g39
12:20:35 214  ,cad_g40
12:20:35 215  ,cad_g41
12:20:35 216  ,chf_g00
12:20:35 217  ,chf_g01
12:20:35 218  ,chf_g02
12:20:35 219  ,chf_g03
12:20:35 220  ,chf_g04
12:20:35 221  ,chf_g05
12:20:35 222  ,chf_g06
12:20:35 223  ,chf_g07
12:20:35 224  ,chf_g08
12:20:35 225  ,chf_g09
12:20:35 226  ,chf_g10
12:20:35 227  ,chf_g11
12:20:35 228  ,chf_g12
12:20:35 229  ,chf_g13
12:20:35 230  ,chf_g14
12:20:35 231  ,chf_g15
12:20:35 232  ,chf_g16
12:20:35 233  ,chf_g17
12:20:35 234  ,chf_g18
12:20:35 235  ,chf_g19
12:20:35 236  ,chf_g20
12:20:35 237  ,chf_g21
12:20:35 238  ,chf_g22
12:20:35 239  ,chf_g23
12:20:35 240  ,chf_g24
12:20:35 241  ,chf_g25
12:20:35 242  ,chf_g26
12:20:35 243  ,chf_g27
12:20:35 244  ,chf_g28
12:20:35 245  ,chf_g29
12:20:35 246  ,chf_g30
12:20:35 247  ,chf_g31
12:20:35 248  ,chf_g32
12:20:35 249  ,chf_g33
12:20:35 250  ,chf_g34
12:20:35 251  ,chf_g35
12:20:35 252  ,chf_g36
12:20:35 253  ,chf_g37
12:20:35 254  ,chf_g38
12:20:35 255  ,chf_g39
12:20:35 256  ,chf_g40
12:20:35 257  ,chf_g41
12:20:35 258  FROM aud_ms6 m
12:20:35 259  WHERE m.ydate = '&1'||' '||'&2'
12:20:35 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'12:10:00'

View created.

Elapsed: 00:00:00.12
12:20:35 SQL> 
12:20:35 SQL> -- rpt
12:20:35 SQL> -- We should see just 1 row:
12:20:35 SQL> 
12:20:35 SQL> SELECT COUNT(prdate) FROM sme
12:20:35   2  
12:20:35 SQL> -- Build the model:
12:20:35 SQL> CREATE OR REPLACE VIEW bme AS
12:20:35   2  SELECT
12:20:35   3  'aud'||m.ydate prdate
12:20:35   4  ,gatt
12:20:35   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:20:35   6  ,eur_g00
12:20:35   7  ,eur_g01
12:20:35   8  ,eur_g02
12:20:35   9  ,eur_g03
12:20:35  10  ,eur_g04
12:20:35  11  ,eur_g05
12:20:35  12  ,eur_g06
12:20:35  13  ,eur_g07
12:20:35  14  ,eur_g08
12:20:35  15  ,eur_g09
12:20:35  16  ,eur_g10
12:20:35  17  ,eur_g11
12:20:35  18  ,eur_g12
12:20:35  19  ,eur_g13
12:20:35  20  ,eur_g14
12:20:35  21  ,eur_g15
12:20:35  22  ,eur_g16
12:20:35  23  ,eur_g17
12:20:35  24  ,eur_g18
12:20:35  25  ,eur_g19
12:20:35  26  ,eur_g20
12:20:35  27  ,eur_g21
12:20:35  28  ,eur_g22
12:20:35  29  ,eur_g23
12:20:35  30  ,eur_g24
12:20:35  31  ,eur_g25
12:20:35  32  ,eur_g26
12:20:35  33  ,eur_g27
12:20:35  34  ,eur_g28
12:20:35  35  ,eur_g29
12:20:35  36  ,eur_g30
12:20:35  37  ,eur_g31
12:20:35  38  ,eur_g32
12:20:35  39  ,eur_g33
12:20:35  40  ,eur_g34
12:20:35  41  ,eur_g35
12:20:35  42  ,eur_g36
12:20:35  43  ,eur_g37
12:20:35  44  ,eur_g38
12:20:35  45  ,eur_g39
12:20:35  46  ,eur_g40
12:20:35  47  ,eur_g41
12:20:35  48  ,aud_g00
12:20:35  49  ,aud_g01
12:20:35  50  ,aud_g02
12:20:35  51  ,aud_g03
12:20:35  52  ,aud_g04
12:20:35  53  ,aud_g05
12:20:35  54  ,aud_g06
12:20:35  55  ,aud_g07
12:20:35  56  ,aud_g08
12:20:35  57  ,aud_g09
12:20:35  58  ,aud_g10
12:20:35  59  ,aud_g11
12:20:35  60  ,aud_g12
12:20:35  61  ,aud_g13
12:20:35  62  ,aud_g14
12:20:35  63  ,aud_g15
12:20:35  64  ,aud_g16
12:20:35  65  ,aud_g17
12:20:35  66  ,aud_g18
12:20:35  67  ,aud_g19
12:20:35  68  ,aud_g20
12:20:35  69  ,aud_g21
12:20:35  70  ,aud_g22
12:20:35  71  ,aud_g23
12:20:35  72  ,aud_g24
12:20:35  73  ,aud_g25
12:20:35  74  ,aud_g26
12:20:35  75  ,aud_g27
12:20:35  76  ,aud_g28
12:20:35  77  ,aud_g29
12:20:35  78  ,aud_g30
12:20:35  79  ,aud_g31
12:20:35  80  ,aud_g32
12:20:35  81  ,aud_g33
12:20:35  82  ,aud_g34
12:20:35  83  ,aud_g35
12:20:35  84  ,aud_g36
12:20:35  85  ,aud_g37
12:20:35  86  ,aud_g38
12:20:35  87  ,aud_g39
12:20:35  88  ,aud_g40
12:20:35  89  ,aud_g41
12:20:35  90  ,gbp_g00
12:20:35  91  ,gbp_g01
12:20:35  92  ,gbp_g02
12:20:35  93  ,gbp_g03
12:20:35  94  ,gbp_g04
12:20:35  95  ,gbp_g05
12:20:35  96  ,gbp_g06
12:20:35  97  ,gbp_g07
12:20:35  98  ,gbp_g08
12:20:35  99  ,gbp_g09
12:20:35 100  ,gbp_g10
12:20:35 101  ,gbp_g11
12:20:35 102  ,gbp_g12
12:20:35 103  ,gbp_g13
12:20:35 104  ,gbp_g14
12:20:35 105  ,gbp_g15
12:20:35 106  ,gbp_g16
12:20:35 107  ,gbp_g17
12:20:35 108  ,gbp_g18
12:20:35 109  ,gbp_g19
12:20:35 110  ,gbp_g20
12:20:35 111  ,gbp_g21
12:20:35 112  ,gbp_g22
12:20:35 113  ,gbp_g23
12:20:35 114  ,gbp_g24
12:20:35 115  ,gbp_g25
12:20:35 116  ,gbp_g26
12:20:35 117  ,gbp_g27
12:20:35 118  ,gbp_g28
12:20:35 119  ,gbp_g29
12:20:35 120  ,gbp_g30
12:20:35 121  ,gbp_g31
12:20:35 122  ,gbp_g32
12:20:35 123  ,gbp_g33
12:20:35 124  ,gbp_g34
12:20:35 125  ,gbp_g35
12:20:35 126  ,gbp_g36
12:20:35 127  ,gbp_g37
12:20:35 128  ,gbp_g38
12:20:35 129  ,gbp_g39
12:20:35 130  ,gbp_g40
12:20:35 131  ,gbp_g41
12:20:35 132  ,jpy_g00
12:20:35 133  ,jpy_g01
12:20:35 134  ,jpy_g02
12:20:35 135  ,jpy_g03
12:20:35 136  ,jpy_g04
12:20:35 137  ,jpy_g05
12:20:35 138  ,jpy_g06
12:20:35 139  ,jpy_g07
12:20:35 140  ,jpy_g08
12:20:35 141  ,jpy_g09
12:20:35 142  ,jpy_g10
12:20:35 143  ,jpy_g11
12:20:35 144  ,jpy_g12
12:20:35 145  ,jpy_g13
12:20:35 146  ,jpy_g14
12:20:35 147  ,jpy_g15
12:20:35 148  ,jpy_g16
12:20:35 149  ,jpy_g17
12:20:35 150  ,jpy_g18
12:20:35 151  ,jpy_g19
12:20:35 152  ,jpy_g20
12:20:35 153  ,jpy_g21
12:20:35 154  ,jpy_g22
12:20:35 155  ,jpy_g23
12:20:35 156  ,jpy_g24
12:20:35 157  ,jpy_g25
12:20:35 158  ,jpy_g26
12:20:35 159  ,jpy_g27
12:20:35 160  ,jpy_g28
12:20:35 161  ,jpy_g29
12:20:35 162  ,jpy_g30
12:20:35 163  ,jpy_g31
12:20:35 164  ,jpy_g32
12:20:35 165  ,jpy_g33
12:20:35 166  ,jpy_g34
12:20:35 167  ,jpy_g35
12:20:35 168  ,jpy_g36
12:20:35 169  ,jpy_g37
12:20:35 170  ,jpy_g38
12:20:35 171  ,jpy_g39
12:20:35 172  ,jpy_g40
12:20:35 173  ,jpy_g41
12:20:35 174  ,cad_g00
12:20:35 175  ,cad_g01
12:20:35 176  ,cad_g02
12:20:35 177  ,cad_g03
12:20:35 178  ,cad_g04
12:20:35 179  ,cad_g05
12:20:35 180  ,cad_g06
12:20:35 181  ,cad_g07
12:20:35 182  ,cad_g08
12:20:35 183  ,cad_g09
12:20:35 184  ,cad_g10
12:20:35 185  ,cad_g11
12:20:35 186  ,cad_g12
12:20:35 187  ,cad_g13
12:20:35 188  ,cad_g14
12:20:35 189  ,cad_g15
12:20:35 190  ,cad_g16
12:20:35 191  ,cad_g17
12:20:35 192  ,cad_g18
12:20:35 193  ,cad_g19
12:20:35 194  ,cad_g20
12:20:35 195  ,cad_g21
12:20:35 196  ,cad_g22
12:20:35 197  ,cad_g23
12:20:35 198  ,cad_g24
12:20:35 199  ,cad_g25
12:20:35 200  ,cad_g26
12:20:35 201  ,cad_g27
12:20:35 202  ,cad_g28
12:20:35 203  ,cad_g29
12:20:35 204  ,cad_g30
12:20:35 205  ,cad_g31
12:20:35 206  ,cad_g32
12:20:35 207  ,cad_g33
12:20:35 208  ,cad_g34
12:20:35 209  ,cad_g35
12:20:35 210  ,cad_g36
12:20:35 211  ,cad_g37
12:20:35 212  ,cad_g38
12:20:35 213  ,cad_g39
12:20:35 214  ,cad_g40
12:20:35 215  ,cad_g41
12:20:35 216  ,chf_g00
12:20:35 217  ,chf_g01
12:20:35 218  ,chf_g02
12:20:35 219  ,chf_g03
12:20:35 220  ,chf_g04
12:20:35 221  ,chf_g05
12:20:35 222  ,chf_g06
12:20:35 223  ,chf_g07
12:20:35 224  ,chf_g08
12:20:35 225  ,chf_g09
12:20:35 226  ,chf_g10
12:20:35 227  ,chf_g11
12:20:35 228  ,chf_g12
12:20:35 229  ,chf_g13
12:20:35 230  ,chf_g14
12:20:35 231  ,chf_g15
12:20:35 232  ,chf_g16
12:20:35 233  ,chf_g17
12:20:35 234  ,chf_g18
12:20:35 235  ,chf_g19
12:20:35 236  ,chf_g20
12:20:35 237  ,chf_g21
12:20:35 238  ,chf_g22
12:20:35 239  ,chf_g23
12:20:35 240  ,chf_g24
12:20:35 241  ,chf_g25
12:20:35 242  ,chf_g26
12:20:35 243  ,chf_g27
12:20:35 244  ,chf_g28
12:20:35 245  ,chf_g29
12:20:35 246  ,chf_g30
12:20:35 247  ,chf_g31
12:20:35 248  ,chf_g32
12:20:35 249  ,chf_g33
12:20:35 250  ,chf_g34
12:20:35 251  ,chf_g35
12:20:35 252  ,chf_g36
12:20:35 253  ,chf_g37
12:20:35 254  ,chf_g38
12:20:35 255  ,chf_g39
12:20:35 256  ,chf_g40
12:20:35 257  ,chf_g41
12:20:35 258  FROM aud_ms6 m
12:20:35 259  WHERE gatt IN('nup','up')
12:20:35 260  AND 1+m.ydate < '&1'||' '||'&2'
12:20:35 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'12:10:00'

View created.

Elapsed: 00:00:00.12
12:20:35 SQL> 
12:20:35 SQL> -- rpt
12:20:35 SQL> 
12:20:35 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
12:20:35   2  
12:20:35 SQL> SELECT MAX(prdate) FROM bme
12:20:35   2  
12:20:35 SQL> -- Now build model from bme and score sme
12:20:35 SQL> @score1.sql
12:20:35 SQL> -- score1.sql
12:20:35 SQL> 
12:20:35 SQL> -- Does the 1st SVM score
12:20:35 SQL> 
12:20:35 SQL> -- Fill up svmc_apply_prep
12:20:35 SQL> @score.sql
12:20:35 SQL> --
12:20:35 SQL> -- score.sql
12:20:35 SQL> --
12:20:35 SQL> 
12:20:35 SQL> -- usage: score.sql
12:20:35 SQL> 
12:20:35 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
12:20:35 SQL> 
12:20:35 SQL> DEFINE target	= 'gatt'
12:20:35 SQL> DEFINE model_name = 'forex14'
12:20:35 SQL> DEFINE bldtable	= 'bme'
12:20:35 SQL> DEFINE scoretable = 'sme'
12:20:35 SQL> DEFINE case_id	= 'prdate'
12:20:35 SQL> 
12:20:35 SQL> -- Define a variable to help me exclude some columns from some data mining calls
12:20:35 SQL> DEFINE exclude1 = "'&target','&case_id'"
12:20:35 SQL> 
12:20:35 SQL> -- Builds an SVM model using pl/sql.
12:20:35 SQL> 
12:20:35 SQL> -----------------------------------------------------------------------
12:20:35 SQL> --			    BUILD THE MODEL
12:20:35 SQL> -----------------------------------------------------------------------
12:20:35 SQL> 
12:20:35 SQL> -- Cleanup old build data preparation objects for repeat runs
12:20:35 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
12:20:35 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
12:20:35 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
12:20:35 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
12:20:35 SQL> 
12:20:35 SQL> 
12:20:35 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
12:20:35 SQL> --
12:20:35 SQL> -- DROP	TABLE svmc_settings ;
12:20:35 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
12:20:35 SQL> -- DELETE svmc_settings;
12:20:35 SQL> 
12:20:35 SQL> -- The default classification algorithm is Naive Bayes. So override
12:20:35 SQL> -- this choice to SVM using a settings table.
12:20:35 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
12:20:35 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
12:20:35 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
12:20:35 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
12:20:35 SQL> -- models.
12:20:35 SQL> --
12:20:35 SQL> 
12:20:35 SQL> -- Do this once and then comment it out.
12:20:35 SQL> -- That makes script go faster.
12:20:35 SQL> -- BEGIN
12:20:35 SQL> -- -- Populate settings table
12:20:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:20:35 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
12:20:35 SQL> --
12:20:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:20:35 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
12:20:35 SQL> --
12:20:35 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:20:35 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
12:20:35 SQL> --   COMMIT;
12:20:35 SQL> -- END;
12:20:35 SQL> -- /
12:20:35 SQL> 
12:20:35 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
12:20:35 SQL> 
12:20:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
12:20:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:20:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
12:20:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
12:20:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:20:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:20:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
12:20:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:20:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:20:35 SQL> 
12:20:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
12:20:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:20:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:20:35 SQL> 
12:20:35 SQL> --------------------------------
12:20:35 SQL> -- PREPARE BUILD (TRAINING) DATA
12:20:35 SQL> --
12:20:35 SQL> 
12:20:35 SQL> -- 1. Missing Value treatment for all Predictors and
12:20:35 SQL> -- 2. Outlier Treatment and
12:20:35 SQL> -- 3. Normalization are performed below.
12:20:35 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
12:20:35 SQL> --    normalized here.
12:20:35 SQL> 
12:20:35 SQL> BEGIN
12:20:35   2  	-- Perform missing value treatment for all predictors
12:20:35   3  	-- create miss tables
12:20:35   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
12:20:35   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
12:20:35   6  
12:20:35   7  	-- populate miss tables
12:20:35   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
12:20:35   9  	  miss_table_name => 'svmc_miss_num',
12:20:35  10  	  data_table_name => '&bldtable',
12:20:35  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:20:35  12  
12:20:35  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
12:20:35  14  	  miss_table_name => 'svmc_miss_cat',
12:20:35  15  	  data_table_name => '&bldtable',
12:20:35  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:20:35  17  
12:20:35  18  	-- xform input data to replace missing values
12:20:35  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:20:35  20  	  miss_table_name => 'svmc_miss_num',
12:20:35  21  	  data_table_name => '&bldtable',
12:20:35  22  	  xform_view_name => 'xformed_build_miss_num');
12:20:35  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:20:35  24  	  miss_table_name => 'svmc_miss_cat',
12:20:35  25  	  data_table_name => '&bldtable',
12:20:35  26  	  xform_view_name => 'xformed_build_miss_cat');
12:20:35  27  
12:20:35  28  	-- Perform outlier treatment.
12:20:35  29  	-- create clip table
12:20:35  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
12:20:35  31  
12:20:35  32  	-- populate clip table
12:20:35  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
12:20:35  34  	  clip_table_name => 'svmc_clip',
12:20:35  35  	  data_table_name => '&bldtable',
12:20:35  36  	  tail_frac	  => 0.025,
12:20:35  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:20:35  38  
12:20:35  39  	-- xform input data to winsorized data
12:20:35  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
12:20:35  41  	  clip_table_name => 'svmc_clip',
12:20:35  42  	  data_table_name => '&bldtable',
12:20:35  43  	  xform_view_name => 'svmc_winsor');
12:20:35  44  
12:20:35  45  	-- create normalization table
12:20:35  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
12:20:35  47  
12:20:35  48  	-- populate normalization table based on winsorized data
12:20:35  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
12:20:35  50  	  norm_table_name => 'svmc_norm',
12:20:35  51  	  data_table_name => 'svmc_winsor',
12:20:35  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:20:35  53  
12:20:35  54  	-- normalize the original data
12:20:35  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:20:35  56  	  norm_table_name => 'svmc_norm',
12:20:35  57  	  data_table_name => '&bldtable',
12:20:35  58  	  xform_view_name => 'svmc_build_prep');
12:20:35  59  END;
12:20:35  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.73
12:20:53 SQL> 
12:20:53 SQL> ---------------------
12:20:53 SQL> -- CREATE A NEW MODEL
12:20:53 SQL> --
12:20:53 SQL> -- Cleanup old model with the same name for repeat runs
12:20:53 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
12:20:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:20:53   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.96
12:20:54 SQL> 
12:20:54 SQL> -- Build a new SVM Model
12:20:54 SQL> BEGIN
12:20:54   2  	DBMS_DATA_MINING.CREATE_MODEL(
12:20:54   3  	  model_name	      => '&model_name',
12:20:54   4  	  mining_function     => dbms_data_mining.classification,
12:20:54   5  	  data_table_name     => 'svmc_build_prep',
12:20:54   6  	  case_id_column_name => '&case_id',
12:20:54   7  	  target_column_name  => '&target',
12:20:54   8  	  settings_table_name => 'svmc_settings');
12:20:54   9  END;
12:20:54  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.18
12:21:22 SQL> 
12:21:22 SQL> -----------------------------------------------------------------------
12:21:22 SQL> --			       APPLY/score THE MODEL
12:21:22 SQL> -----------------------------------------------------------------------
12:21:22 SQL> 
12:21:22 SQL> -- Cleanup old scoring data preparation objects for repeat runs
12:21:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
12:21:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:21:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:21:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
12:21:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:21:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
12:21:22 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
12:21:22   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:21:22   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:21:22 SQL> -----------------------
12:21:22 SQL> -- PREPARE SCORING DATA
12:21:22 SQL> --
12:21:22 SQL> -- If the data for model creation has been prepared, then the data
12:21:22 SQL> -- to be scored using the model must be prepared in the same manner
12:21:22 SQL> -- in order to obtain meaningful results.
12:21:22 SQL> --
12:21:22 SQL> -- 1. Missing Value treatment for all Predictors and
12:21:22 SQL> -- 2. Normalization
12:21:22 SQL> -- No outlier treatment will be performed during test and apply. The
12:21:22 SQL> -- normalization step is sufficient, since the normalization parameters
12:21:22 SQL> -- already capture the effects of outlier treatment done with build data.
12:21:22 SQL> --
12:21:22 SQL> BEGIN
12:21:22   2  	-- Xform Test data to replace missing values
12:21:22   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:21:22   4  	  miss_table_name => 'svmc_miss_num',
12:21:22   5  	  data_table_name => '&scoretable',
12:21:22   6  	  xform_view_name => 'xformed_apply_miss_num');
12:21:22   7  
12:21:22   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:21:22   9  	  miss_table_name => 'svmc_miss_cat',
12:21:22  10  	  data_table_name => '&scoretable',
12:21:22  11  	  xform_view_name => 'xformed_apply_miss_cat');
12:21:22  12  
12:21:22  13  	-- Normalize the data to be scored
12:21:22  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:21:22  15  	  norm_table_name => 'svmc_norm',
12:21:22  16  	  data_table_name => '&scoretable',
12:21:22  17  	  xform_view_name => 'svmc_apply_prep');
12:21:22  18  END;
12:21:22  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
12:21:24 SQL> 
12:21:24 SQL> -- Use same model_name used in score.sql
12:21:24 SQL> DEFINE model_name = 'forex14'
12:21:24 SQL> 
12:21:24 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
12:21:24 SQL> 
12:21:24 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
12:21:24 SQL> 
12:21:24 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
12:21:24   2  SELECT
12:21:24   3  prdate
12:21:24   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
12:21:24   5  ,sysdate
12:21:24   6  ,SUBSTR(prdate,1,3)pair
12:21:24   7  ,SUBSTR(prdate,4,19)ydate
12:21:24   8  FROM svmc_apply_prep
12:21:24   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
12:21:24 SQL> @aud_score1day_gattn.sql	2010-12-30 11:55:00
12:21:24 SQL> --
12:21:24 SQL> -- aud_score1day_gattn.sql
12:21:24 SQL> --
12:21:24 SQL> 
12:21:24 SQL> CREATE OR REPLACE VIEW sme AS
12:21:24   2  SELECT
12:21:24   3  'aud'||m.ydate prdate
12:21:24   4  ,NULL gattn
12:21:24   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:21:24   6  ,eur_g00
12:21:24   7  ,eur_g01
12:21:24   8  ,eur_g02
12:21:24   9  ,eur_g03
12:21:24  10  ,eur_g04
12:21:24  11  ,eur_g05
12:21:24  12  ,eur_g06
12:21:24  13  ,eur_g07
12:21:24  14  ,eur_g08
12:21:24  15  ,eur_g09
12:21:24  16  ,eur_g10
12:21:24  17  ,eur_g11
12:21:24  18  ,eur_g12
12:21:24  19  ,eur_g13
12:21:24  20  ,eur_g14
12:21:24  21  ,eur_g15
12:21:24  22  ,eur_g16
12:21:24  23  ,eur_g17
12:21:24  24  ,eur_g18
12:21:24  25  ,eur_g19
12:21:24  26  ,eur_g20
12:21:24  27  ,eur_g21
12:21:24  28  ,eur_g22
12:21:24  29  ,eur_g23
12:21:24  30  ,eur_g24
12:21:24  31  ,eur_g25
12:21:24  32  ,eur_g26
12:21:24  33  ,eur_g27
12:21:24  34  ,eur_g28
12:21:24  35  ,eur_g29
12:21:24  36  ,eur_g30
12:21:24  37  ,eur_g31
12:21:24  38  ,eur_g32
12:21:24  39  ,eur_g33
12:21:24  40  ,eur_g34
12:21:24  41  ,eur_g35
12:21:24  42  ,eur_g36
12:21:24  43  ,eur_g37
12:21:24  44  ,eur_g38
12:21:24  45  ,eur_g39
12:21:24  46  ,eur_g40
12:21:24  47  ,eur_g41
12:21:24  48  ,aud_g00
12:21:24  49  ,aud_g01
12:21:24  50  ,aud_g02
12:21:24  51  ,aud_g03
12:21:24  52  ,aud_g04
12:21:24  53  ,aud_g05
12:21:24  54  ,aud_g06
12:21:24  55  ,aud_g07
12:21:24  56  ,aud_g08
12:21:24  57  ,aud_g09
12:21:24  58  ,aud_g10
12:21:24  59  ,aud_g11
12:21:24  60  ,aud_g12
12:21:24  61  ,aud_g13
12:21:24  62  ,aud_g14
12:21:24  63  ,aud_g15
12:21:24  64  ,aud_g16
12:21:24  65  ,aud_g17
12:21:24  66  ,aud_g18
12:21:24  67  ,aud_g19
12:21:24  68  ,aud_g20
12:21:24  69  ,aud_g21
12:21:24  70  ,aud_g22
12:21:24  71  ,aud_g23
12:21:24  72  ,aud_g24
12:21:24  73  ,aud_g25
12:21:24  74  ,aud_g26
12:21:24  75  ,aud_g27
12:21:24  76  ,aud_g28
12:21:24  77  ,aud_g29
12:21:24  78  ,aud_g30
12:21:24  79  ,aud_g31
12:21:24  80  ,aud_g32
12:21:24  81  ,aud_g33
12:21:24  82  ,aud_g34
12:21:24  83  ,aud_g35
12:21:24  84  ,aud_g36
12:21:24  85  ,aud_g37
12:21:24  86  ,aud_g38
12:21:24  87  ,aud_g39
12:21:24  88  ,aud_g40
12:21:24  89  ,aud_g41
12:21:24  90  ,gbp_g00
12:21:24  91  ,gbp_g01
12:21:24  92  ,gbp_g02
12:21:24  93  ,gbp_g03
12:21:24  94  ,gbp_g04
12:21:24  95  ,gbp_g05
12:21:24  96  ,gbp_g06
12:21:24  97  ,gbp_g07
12:21:24  98  ,gbp_g08
12:21:24  99  ,gbp_g09
12:21:24 100  ,gbp_g10
12:21:24 101  ,gbp_g11
12:21:24 102  ,gbp_g12
12:21:24 103  ,gbp_g13
12:21:24 104  ,gbp_g14
12:21:24 105  ,gbp_g15
12:21:24 106  ,gbp_g16
12:21:24 107  ,gbp_g17
12:21:24 108  ,gbp_g18
12:21:24 109  ,gbp_g19
12:21:24 110  ,gbp_g20
12:21:24 111  ,gbp_g21
12:21:24 112  ,gbp_g22
12:21:24 113  ,gbp_g23
12:21:24 114  ,gbp_g24
12:21:24 115  ,gbp_g25
12:21:24 116  ,gbp_g26
12:21:24 117  ,gbp_g27
12:21:24 118  ,gbp_g28
12:21:24 119  ,gbp_g29
12:21:24 120  ,gbp_g30
12:21:24 121  ,gbp_g31
12:21:24 122  ,gbp_g32
12:21:24 123  ,gbp_g33
12:21:24 124  ,gbp_g34
12:21:24 125  ,gbp_g35
12:21:24 126  ,gbp_g36
12:21:24 127  ,gbp_g37
12:21:24 128  ,gbp_g38
12:21:24 129  ,gbp_g39
12:21:24 130  ,gbp_g40
12:21:24 131  ,gbp_g41
12:21:24 132  ,jpy_g00
12:21:24 133  ,jpy_g01
12:21:24 134  ,jpy_g02
12:21:24 135  ,jpy_g03
12:21:24 136  ,jpy_g04
12:21:24 137  ,jpy_g05
12:21:24 138  ,jpy_g06
12:21:24 139  ,jpy_g07
12:21:24 140  ,jpy_g08
12:21:24 141  ,jpy_g09
12:21:24 142  ,jpy_g10
12:21:24 143  ,jpy_g11
12:21:24 144  ,jpy_g12
12:21:24 145  ,jpy_g13
12:21:24 146  ,jpy_g14
12:21:24 147  ,jpy_g15
12:21:24 148  ,jpy_g16
12:21:24 149  ,jpy_g17
12:21:24 150  ,jpy_g18
12:21:24 151  ,jpy_g19
12:21:24 152  ,jpy_g20
12:21:24 153  ,jpy_g21
12:21:24 154  ,jpy_g22
12:21:24 155  ,jpy_g23
12:21:24 156  ,jpy_g24
12:21:24 157  ,jpy_g25
12:21:24 158  ,jpy_g26
12:21:24 159  ,jpy_g27
12:21:24 160  ,jpy_g28
12:21:24 161  ,jpy_g29
12:21:24 162  ,jpy_g30
12:21:24 163  ,jpy_g31
12:21:24 164  ,jpy_g32
12:21:24 165  ,jpy_g33
12:21:24 166  ,jpy_g34
12:21:24 167  ,jpy_g35
12:21:24 168  ,jpy_g36
12:21:24 169  ,jpy_g37
12:21:24 170  ,jpy_g38
12:21:24 171  ,jpy_g39
12:21:24 172  ,jpy_g40
12:21:24 173  ,jpy_g41
12:21:24 174  ,cad_g00
12:21:24 175  ,cad_g01
12:21:24 176  ,cad_g02
12:21:24 177  ,cad_g03
12:21:24 178  ,cad_g04
12:21:24 179  ,cad_g05
12:21:24 180  ,cad_g06
12:21:24 181  ,cad_g07
12:21:24 182  ,cad_g08
12:21:24 183  ,cad_g09
12:21:24 184  ,cad_g10
12:21:24 185  ,cad_g11
12:21:24 186  ,cad_g12
12:21:24 187  ,cad_g13
12:21:24 188  ,cad_g14
12:21:24 189  ,cad_g15
12:21:24 190  ,cad_g16
12:21:24 191  ,cad_g17
12:21:24 192  ,cad_g18
12:21:24 193  ,cad_g19
12:21:24 194  ,cad_g20
12:21:24 195  ,cad_g21
12:21:24 196  ,cad_g22
12:21:24 197  ,cad_g23
12:21:24 198  ,cad_g24
12:21:24 199  ,cad_g25
12:21:24 200  ,cad_g26
12:21:24 201  ,cad_g27
12:21:24 202  ,cad_g28
12:21:24 203  ,cad_g29
12:21:24 204  ,cad_g30
12:21:24 205  ,cad_g31
12:21:24 206  ,cad_g32
12:21:24 207  ,cad_g33
12:21:24 208  ,cad_g34
12:21:24 209  ,cad_g35
12:21:24 210  ,cad_g36
12:21:24 211  ,cad_g37
12:21:24 212  ,cad_g38
12:21:24 213  ,cad_g39
12:21:24 214  ,cad_g40
12:21:24 215  ,cad_g41
12:21:24 216  ,chf_g00
12:21:24 217  ,chf_g01
12:21:24 218  ,chf_g02
12:21:24 219  ,chf_g03
12:21:24 220  ,chf_g04
12:21:24 221  ,chf_g05
12:21:24 222  ,chf_g06
12:21:24 223  ,chf_g07
12:21:24 224  ,chf_g08
12:21:24 225  ,chf_g09
12:21:24 226  ,chf_g10
12:21:24 227  ,chf_g11
12:21:24 228  ,chf_g12
12:21:24 229  ,chf_g13
12:21:24 230  ,chf_g14
12:21:24 231  ,chf_g15
12:21:24 232  ,chf_g16
12:21:24 233  ,chf_g17
12:21:24 234  ,chf_g18
12:21:24 235  ,chf_g19
12:21:24 236  ,chf_g20
12:21:24 237  ,chf_g21
12:21:24 238  ,chf_g22
12:21:24 239  ,chf_g23
12:21:24 240  ,chf_g24
12:21:24 241  ,chf_g25
12:21:24 242  ,chf_g26
12:21:24 243  ,chf_g27
12:21:24 244  ,chf_g28
12:21:24 245  ,chf_g29
12:21:24 246  ,chf_g30
12:21:24 247  ,chf_g31
12:21:24 248  ,chf_g32
12:21:24 249  ,chf_g33
12:21:24 250  ,chf_g34
12:21:24 251  ,chf_g35
12:21:24 252  ,chf_g36
12:21:24 253  ,chf_g37
12:21:24 254  ,chf_g38
12:21:24 255  ,chf_g39
12:21:24 256  ,chf_g40
12:21:24 257  ,chf_g41
12:21:24 258  FROM aud_ms6 m
12:21:24 259  WHERE m.ydate = '&1'||' '||'&2'
12:21:24 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'11:55:00'

View created.

Elapsed: 00:00:00.12
12:21:24 SQL> 
12:21:24 SQL> -- rpt
12:21:24 SQL> -- We should see just 1 row:
12:21:24 SQL> 
12:21:24 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
12:21:24 SQL> 
12:21:24 SQL> -- Build the model:
12:21:24 SQL> CREATE OR REPLACE VIEW bme AS
12:21:24   2  SELECT
12:21:24   3  'aud'||m.ydate prdate
12:21:24   4  ,gattn
12:21:24   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:21:24   6  ,eur_g00
12:21:24   7  ,eur_g01
12:21:24   8  ,eur_g02
12:21:24   9  ,eur_g03
12:21:24  10  ,eur_g04
12:21:24  11  ,eur_g05
12:21:24  12  ,eur_g06
12:21:24  13  ,eur_g07
12:21:24  14  ,eur_g08
12:21:24  15  ,eur_g09
12:21:24  16  ,eur_g10
12:21:24  17  ,eur_g11
12:21:24  18  ,eur_g12
12:21:24  19  ,eur_g13
12:21:24  20  ,eur_g14
12:21:24  21  ,eur_g15
12:21:24  22  ,eur_g16
12:21:24  23  ,eur_g17
12:21:24  24  ,eur_g18
12:21:24  25  ,eur_g19
12:21:24  26  ,eur_g20
12:21:24  27  ,eur_g21
12:21:24  28  ,eur_g22
12:21:24  29  ,eur_g23
12:21:24  30  ,eur_g24
12:21:24  31  ,eur_g25
12:21:24  32  ,eur_g26
12:21:24  33  ,eur_g27
12:21:24  34  ,eur_g28
12:21:24  35  ,eur_g29
12:21:24  36  ,eur_g30
12:21:24  37  ,eur_g31
12:21:24  38  ,eur_g32
12:21:24  39  ,eur_g33
12:21:24  40  ,eur_g34
12:21:24  41  ,eur_g35
12:21:24  42  ,eur_g36
12:21:24  43  ,eur_g37
12:21:24  44  ,eur_g38
12:21:24  45  ,eur_g39
12:21:24  46  ,eur_g40
12:21:24  47  ,eur_g41
12:21:24  48  ,aud_g00
12:21:24  49  ,aud_g01
12:21:24  50  ,aud_g02
12:21:24  51  ,aud_g03
12:21:24  52  ,aud_g04
12:21:24  53  ,aud_g05
12:21:24  54  ,aud_g06
12:21:24  55  ,aud_g07
12:21:24  56  ,aud_g08
12:21:24  57  ,aud_g09
12:21:24  58  ,aud_g10
12:21:24  59  ,aud_g11
12:21:24  60  ,aud_g12
12:21:24  61  ,aud_g13
12:21:24  62  ,aud_g14
12:21:24  63  ,aud_g15
12:21:24  64  ,aud_g16
12:21:24  65  ,aud_g17
12:21:24  66  ,aud_g18
12:21:24  67  ,aud_g19
12:21:24  68  ,aud_g20
12:21:24  69  ,aud_g21
12:21:24  70  ,aud_g22
12:21:24  71  ,aud_g23
12:21:24  72  ,aud_g24
12:21:24  73  ,aud_g25
12:21:24  74  ,aud_g26
12:21:24  75  ,aud_g27
12:21:24  76  ,aud_g28
12:21:24  77  ,aud_g29
12:21:24  78  ,aud_g30
12:21:24  79  ,aud_g31
12:21:24  80  ,aud_g32
12:21:24  81  ,aud_g33
12:21:24  82  ,aud_g34
12:21:24  83  ,aud_g35
12:21:24  84  ,aud_g36
12:21:24  85  ,aud_g37
12:21:24  86  ,aud_g38
12:21:24  87  ,aud_g39
12:21:24  88  ,aud_g40
12:21:24  89  ,aud_g41
12:21:24  90  ,gbp_g00
12:21:24  91  ,gbp_g01
12:21:24  92  ,gbp_g02
12:21:24  93  ,gbp_g03
12:21:24  94  ,gbp_g04
12:21:24  95  ,gbp_g05
12:21:24  96  ,gbp_g06
12:21:24  97  ,gbp_g07
12:21:24  98  ,gbp_g08
12:21:24  99  ,gbp_g09
12:21:24 100  ,gbp_g10
12:21:24 101  ,gbp_g11
12:21:24 102  ,gbp_g12
12:21:24 103  ,gbp_g13
12:21:24 104  ,gbp_g14
12:21:24 105  ,gbp_g15
12:21:24 106  ,gbp_g16
12:21:24 107  ,gbp_g17
12:21:24 108  ,gbp_g18
12:21:24 109  ,gbp_g19
12:21:24 110  ,gbp_g20
12:21:24 111  ,gbp_g21
12:21:24 112  ,gbp_g22
12:21:24 113  ,gbp_g23
12:21:24 114  ,gbp_g24
12:21:24 115  ,gbp_g25
12:21:24 116  ,gbp_g26
12:21:24 117  ,gbp_g27
12:21:24 118  ,gbp_g28
12:21:24 119  ,gbp_g29
12:21:24 120  ,gbp_g30
12:21:24 121  ,gbp_g31
12:21:24 122  ,gbp_g32
12:21:24 123  ,gbp_g33
12:21:24 124  ,gbp_g34
12:21:24 125  ,gbp_g35
12:21:24 126  ,gbp_g36
12:21:24 127  ,gbp_g37
12:21:24 128  ,gbp_g38
12:21:24 129  ,gbp_g39
12:21:24 130  ,gbp_g40
12:21:24 131  ,gbp_g41
12:21:24 132  ,jpy_g00
12:21:24 133  ,jpy_g01
12:21:24 134  ,jpy_g02
12:21:24 135  ,jpy_g03
12:21:24 136  ,jpy_g04
12:21:24 137  ,jpy_g05
12:21:24 138  ,jpy_g06
12:21:24 139  ,jpy_g07
12:21:24 140  ,jpy_g08
12:21:24 141  ,jpy_g09
12:21:24 142  ,jpy_g10
12:21:24 143  ,jpy_g11
12:21:24 144  ,jpy_g12
12:21:24 145  ,jpy_g13
12:21:24 146  ,jpy_g14
12:21:24 147  ,jpy_g15
12:21:24 148  ,jpy_g16
12:21:24 149  ,jpy_g17
12:21:24 150  ,jpy_g18
12:21:24 151  ,jpy_g19
12:21:24 152  ,jpy_g20
12:21:24 153  ,jpy_g21
12:21:24 154  ,jpy_g22
12:21:24 155  ,jpy_g23
12:21:24 156  ,jpy_g24
12:21:24 157  ,jpy_g25
12:21:24 158  ,jpy_g26
12:21:24 159  ,jpy_g27
12:21:24 160  ,jpy_g28
12:21:24 161  ,jpy_g29
12:21:24 162  ,jpy_g30
12:21:24 163  ,jpy_g31
12:21:24 164  ,jpy_g32
12:21:24 165  ,jpy_g33
12:21:24 166  ,jpy_g34
12:21:24 167  ,jpy_g35
12:21:24 168  ,jpy_g36
12:21:24 169  ,jpy_g37
12:21:24 170  ,jpy_g38
12:21:24 171  ,jpy_g39
12:21:24 172  ,jpy_g40
12:21:24 173  ,jpy_g41
12:21:24 174  ,cad_g00
12:21:24 175  ,cad_g01
12:21:24 176  ,cad_g02
12:21:24 177  ,cad_g03
12:21:24 178  ,cad_g04
12:21:24 179  ,cad_g05
12:21:24 180  ,cad_g06
12:21:24 181  ,cad_g07
12:21:24 182  ,cad_g08
12:21:24 183  ,cad_g09
12:21:24 184  ,cad_g10
12:21:24 185  ,cad_g11
12:21:24 186  ,cad_g12
12:21:24 187  ,cad_g13
12:21:24 188  ,cad_g14
12:21:24 189  ,cad_g15
12:21:24 190  ,cad_g16
12:21:24 191  ,cad_g17
12:21:24 192  ,cad_g18
12:21:24 193  ,cad_g19
12:21:24 194  ,cad_g20
12:21:24 195  ,cad_g21
12:21:24 196  ,cad_g22
12:21:24 197  ,cad_g23
12:21:24 198  ,cad_g24
12:21:24 199  ,cad_g25
12:21:24 200  ,cad_g26
12:21:24 201  ,cad_g27
12:21:24 202  ,cad_g28
12:21:24 203  ,cad_g29
12:21:24 204  ,cad_g30
12:21:24 205  ,cad_g31
12:21:24 206  ,cad_g32
12:21:24 207  ,cad_g33
12:21:24 208  ,cad_g34
12:21:24 209  ,cad_g35
12:21:24 210  ,cad_g36
12:21:24 211  ,cad_g37
12:21:24 212  ,cad_g38
12:21:24 213  ,cad_g39
12:21:24 214  ,cad_g40
12:21:24 215  ,cad_g41
12:21:24 216  ,chf_g00
12:21:24 217  ,chf_g01
12:21:24 218  ,chf_g02
12:21:24 219  ,chf_g03
12:21:24 220  ,chf_g04
12:21:24 221  ,chf_g05
12:21:24 222  ,chf_g06
12:21:24 223  ,chf_g07
12:21:24 224  ,chf_g08
12:21:24 225  ,chf_g09
12:21:24 226  ,chf_g10
12:21:24 227  ,chf_g11
12:21:24 228  ,chf_g12
12:21:24 229  ,chf_g13
12:21:24 230  ,chf_g14
12:21:24 231  ,chf_g15
12:21:24 232  ,chf_g16
12:21:24 233  ,chf_g17
12:21:24 234  ,chf_g18
12:21:24 235  ,chf_g19
12:21:24 236  ,chf_g20
12:21:24 237  ,chf_g21
12:21:24 238  ,chf_g22
12:21:24 239  ,chf_g23
12:21:24 240  ,chf_g24
12:21:24 241  ,chf_g25
12:21:24 242  ,chf_g26
12:21:24 243  ,chf_g27
12:21:24 244  ,chf_g28
12:21:24 245  ,chf_g29
12:21:24 246  ,chf_g30
12:21:24 247  ,chf_g31
12:21:24 248  ,chf_g32
12:21:24 249  ,chf_g33
12:21:24 250  ,chf_g34
12:21:24 251  ,chf_g35
12:21:24 252  ,chf_g36
12:21:24 253  ,chf_g37
12:21:24 254  ,chf_g38
12:21:24 255  ,chf_g39
12:21:24 256  ,chf_g40
12:21:24 257  ,chf_g41
12:21:24 258  FROM aud_ms6 m
12:21:24 259  WHERE gattn IN('nup','up')
12:21:24 260  AND 1+m.ydate < '&1'||' '||'&2'
12:21:24 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'11:55:00'

View created.

Elapsed: 00:00:00.11
12:21:24 SQL> 
12:21:24 SQL> -- rpt
12:21:24 SQL> 
12:21:24 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13041
up	     6397

Elapsed: 00:00:00.04
12:21:24 SQL> 
12:21:24 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 11:50:00

Elapsed: 00:00:00.03
12:21:24 SQL> 
12:21:24 SQL> -- Now build model from bme and score sme
12:21:24 SQL> @score1gattn.sql
12:21:24 SQL> -- score1gattn.sql
12:21:24 SQL> 
12:21:24 SQL> -- Does the 1st SVM score
12:21:24 SQL> 
12:21:24 SQL> -- Fill up svmc_apply_prep
12:21:24 SQL> @score_gattn.sql
12:21:24 SQL> --
12:21:24 SQL> -- score_gattn.sql
12:21:24 SQL> --
12:21:24 SQL> 
12:21:24 SQL> -- usage: score_gattn.sql
12:21:24 SQL> 
12:21:24 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
12:21:24 SQL> 
12:21:24 SQL> DEFINE target	= 'gattn'
12:21:24 SQL> DEFINE model_name = 'forex14'
12:21:24 SQL> DEFINE bldtable	= 'bme'
12:21:24 SQL> DEFINE scoretable = 'sme'
12:21:24 SQL> DEFINE case_id	= 'prdate'
12:21:24 SQL> 
12:21:24 SQL> -- Define a variable to help me exclude some columns from some data mining calls
12:21:24 SQL> DEFINE exclude1 = "'&target','&case_id'"
12:21:24 SQL> 
12:21:24 SQL> -- Builds an SVM model using pl/sql.
12:21:24 SQL> 
12:21:24 SQL> -----------------------------------------------------------------------
12:21:24 SQL> --			    BUILD THE MODEL
12:21:24 SQL> -----------------------------------------------------------------------
12:21:24 SQL> 
12:21:24 SQL> -- Cleanup old build data preparation objects for repeat runs
12:21:24 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
12:21:24 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
12:21:24 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
12:21:24 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
12:21:24 SQL> 
12:21:24 SQL> 
12:21:24 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
12:21:24 SQL> --
12:21:24 SQL> -- DROP	TABLE svmc_settings ;
12:21:24 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
12:21:24 SQL> -- DELETE svmc_settings;
12:21:24 SQL> 
12:21:24 SQL> -- The default classification algorithm is Naive Bayes. So override
12:21:24 SQL> -- this choice to SVM using a settings table.
12:21:24 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
12:21:24 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
12:21:24 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
12:21:24 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
12:21:24 SQL> -- models.
12:21:24 SQL> --
12:21:24 SQL> 
12:21:24 SQL> -- Do this once and then comment it out.
12:21:24 SQL> -- That makes script go faster.
12:21:24 SQL> -- BEGIN
12:21:24 SQL> -- -- Populate settings table
12:21:24 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:21:24 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
12:21:24 SQL> --
12:21:24 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:21:24 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
12:21:24 SQL> --
12:21:24 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:21:24 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
12:21:24 SQL> --   COMMIT;
12:21:24 SQL> -- END;
12:21:24 SQL> -- /
12:21:24 SQL> 
12:21:24 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
12:21:24 SQL> 
12:21:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
12:21:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:21:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:21:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
12:21:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:21:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:21:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
12:21:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:21:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:21:24 SQL> 
12:21:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
12:21:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:21:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:21:24 SQL> 
12:21:24 SQL> --------------------------------
12:21:24 SQL> -- PREPARE BUILD (TRAINING) DATA
12:21:24 SQL> --
12:21:24 SQL> 
12:21:24 SQL> -- 1. Missing Value treatment for all Predictors and
12:21:24 SQL> -- 2. Outlier Treatment and
12:21:24 SQL> -- 3. Normalization are performed below.
12:21:24 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
12:21:24 SQL> --    normalized here.
12:21:24 SQL> 
12:21:24 SQL> BEGIN
12:21:24   2  	-- Perform missing value treatment for all predictors
12:21:24   3  	-- create miss tables
12:21:24   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
12:21:24   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
12:21:24   6  
12:21:24   7  	-- populate miss tables
12:21:24   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
12:21:24   9  	  miss_table_name => 'svmc_miss_num',
12:21:24  10  	  data_table_name => '&bldtable',
12:21:24  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:21:24  12  
12:21:24  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
12:21:24  14  	  miss_table_name => 'svmc_miss_cat',
12:21:24  15  	  data_table_name => '&bldtable',
12:21:24  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:21:24  17  
12:21:24  18  	-- xform input data to replace missing values
12:21:24  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:21:24  20  	  miss_table_name => 'svmc_miss_num',
12:21:24  21  	  data_table_name => '&bldtable',
12:21:24  22  	  xform_view_name => 'xformed_build_miss_num');
12:21:24  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:21:24  24  	  miss_table_name => 'svmc_miss_cat',
12:21:24  25  	  data_table_name => '&bldtable',
12:21:24  26  	  xform_view_name => 'xformed_build_miss_cat');
12:21:24  27  
12:21:24  28  	-- Perform outlier treatment.
12:21:24  29  	-- create clip table
12:21:24  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
12:21:24  31  
12:21:24  32  	-- populate clip table
12:21:24  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
12:21:24  34  	  clip_table_name => 'svmc_clip',
12:21:24  35  	  data_table_name => '&bldtable',
12:21:24  36  	  tail_frac	  => 0.025,
12:21:24  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:21:24  38  
12:21:24  39  	-- xform input data to winsorized data
12:21:24  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
12:21:24  41  	  clip_table_name => 'svmc_clip',
12:21:24  42  	  data_table_name => '&bldtable',
12:21:24  43  	  xform_view_name => 'svmc_winsor');
12:21:24  44  
12:21:24  45  	-- create normalization table
12:21:24  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
12:21:24  47  
12:21:24  48  	-- populate normalization table based on winsorized data
12:21:24  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
12:21:24  50  	  norm_table_name => 'svmc_norm',
12:21:24  51  	  data_table_name => 'svmc_winsor',
12:21:24  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:21:24  53  
12:21:24  54  	-- normalize the original data
12:21:24  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:21:24  56  	  norm_table_name => 'svmc_norm',
12:21:24  57  	  data_table_name => '&bldtable',
12:21:24  58  	  xform_view_name => 'svmc_build_prep');
12:21:24  59  END;
12:21:24  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.04
12:21:42 SQL> 
12:21:42 SQL> ---------------------
12:21:42 SQL> -- CREATE A NEW MODEL
12:21:42 SQL> --
12:21:42 SQL> -- Cleanup old model with the same name for repeat runs
12:21:42 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
12:21:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:21:42   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.97
12:21:43 SQL> 
12:21:43 SQL> -- Build a new SVM Model
12:21:43 SQL> BEGIN
12:21:43   2  	DBMS_DATA_MINING.CREATE_MODEL(
12:21:43   3  	  model_name	      => '&model_name',
12:21:43   4  	  mining_function     => dbms_data_mining.classification,
12:21:43   5  	  data_table_name     => 'svmc_build_prep',
12:21:43   6  	  case_id_column_name => '&case_id',
12:21:43   7  	  target_column_name  => '&target',
12:21:43   8  	  settings_table_name => 'svmc_settings');
12:21:43   9  END;
12:21:43  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.64
12:22:11 SQL> 
12:22:11 SQL> -----------------------------------------------------------------------
12:22:11 SQL> --			       APPLY/score THE MODEL
12:22:11 SQL> -----------------------------------------------------------------------
12:22:11 SQL> 
12:22:11 SQL> -- Cleanup old scoring data preparation objects for repeat runs
12:22:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
12:22:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:22:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:22:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
12:22:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:22:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:22:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
12:22:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:22:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:22:11 SQL> -----------------------
12:22:11 SQL> -- PREPARE SCORING DATA
12:22:11 SQL> --
12:22:11 SQL> -- If the data for model creation has been prepared, then the data
12:22:11 SQL> -- to be scored using the model must be prepared in the same manner
12:22:11 SQL> -- in order to obtain meaningful results.
12:22:11 SQL> --
12:22:11 SQL> -- 1. Missing Value treatment for all Predictors and
12:22:11 SQL> -- 2. Normalization
12:22:11 SQL> -- No outlier treatment will be performed during test and apply. The
12:22:11 SQL> -- normalization step is sufficient, since the normalization parameters
12:22:11 SQL> -- already capture the effects of outlier treatment done with build data.
12:22:11 SQL> --
12:22:11 SQL> BEGIN
12:22:11   2  	-- Xform Test data to replace missing values
12:22:11   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:22:11   4  	  miss_table_name => 'svmc_miss_num',
12:22:11   5  	  data_table_name => '&scoretable',
12:22:11   6  	  xform_view_name => 'xformed_apply_miss_num');
12:22:11   7  
12:22:11   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:22:11   9  	  miss_table_name => 'svmc_miss_cat',
12:22:11  10  	  data_table_name => '&scoretable',
12:22:11  11  	  xform_view_name => 'xformed_apply_miss_cat');
12:22:11  12  
12:22:11  13  	-- Normalize the data to be scored
12:22:11  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:22:11  15  	  norm_table_name => 'svmc_norm',
12:22:11  16  	  data_table_name => '&scoretable',
12:22:11  17  	  xform_view_name => 'svmc_apply_prep');
12:22:11  18  END;
12:22:11  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
12:22:12 SQL> 
12:22:12 SQL> -- Use same model_name used in score_gattn.sql
12:22:12 SQL> DEFINE model_name = 'forex14'
12:22:12 SQL> 
12:22:12 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
12:22:12 SQL> 
12:22:12 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
12:22:12   2  SELECT
12:22:12   3  prdate
12:22:12   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
12:22:12   5  ,sysdate
12:22:12   6  ,SUBSTR(prdate,1,3)pair
12:22:12   7  ,SUBSTR(prdate,4,19)ydate
12:22:12   8  FROM svmc_apply_prep
12:22:12   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
12:22:13 SQL> @aud_score1day_gattn.sql	2010-12-30 12:00:00
12:22:13 SQL> --
12:22:13 SQL> -- aud_score1day_gattn.sql
12:22:13 SQL> --
12:22:13 SQL> 
12:22:13 SQL> CREATE OR REPLACE VIEW sme AS
12:22:13   2  SELECT
12:22:13   3  'aud'||m.ydate prdate
12:22:13   4  ,NULL gattn
12:22:13   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:22:13   6  ,eur_g00
12:22:13   7  ,eur_g01
12:22:13   8  ,eur_g02
12:22:13   9  ,eur_g03
12:22:13  10  ,eur_g04
12:22:13  11  ,eur_g05
12:22:13  12  ,eur_g06
12:22:13  13  ,eur_g07
12:22:13  14  ,eur_g08
12:22:13  15  ,eur_g09
12:22:13  16  ,eur_g10
12:22:13  17  ,eur_g11
12:22:13  18  ,eur_g12
12:22:13  19  ,eur_g13
12:22:13  20  ,eur_g14
12:22:13  21  ,eur_g15
12:22:13  22  ,eur_g16
12:22:13  23  ,eur_g17
12:22:13  24  ,eur_g18
12:22:13  25  ,eur_g19
12:22:13  26  ,eur_g20
12:22:13  27  ,eur_g21
12:22:13  28  ,eur_g22
12:22:13  29  ,eur_g23
12:22:13  30  ,eur_g24
12:22:13  31  ,eur_g25
12:22:13  32  ,eur_g26
12:22:13  33  ,eur_g27
12:22:13  34  ,eur_g28
12:22:13  35  ,eur_g29
12:22:13  36  ,eur_g30
12:22:13  37  ,eur_g31
12:22:13  38  ,eur_g32
12:22:13  39  ,eur_g33
12:22:13  40  ,eur_g34
12:22:13  41  ,eur_g35
12:22:13  42  ,eur_g36
12:22:13  43  ,eur_g37
12:22:13  44  ,eur_g38
12:22:13  45  ,eur_g39
12:22:13  46  ,eur_g40
12:22:13  47  ,eur_g41
12:22:13  48  ,aud_g00
12:22:13  49  ,aud_g01
12:22:13  50  ,aud_g02
12:22:13  51  ,aud_g03
12:22:13  52  ,aud_g04
12:22:13  53  ,aud_g05
12:22:13  54  ,aud_g06
12:22:13  55  ,aud_g07
12:22:13  56  ,aud_g08
12:22:13  57  ,aud_g09
12:22:13  58  ,aud_g10
12:22:13  59  ,aud_g11
12:22:13  60  ,aud_g12
12:22:13  61  ,aud_g13
12:22:13  62  ,aud_g14
12:22:13  63  ,aud_g15
12:22:13  64  ,aud_g16
12:22:13  65  ,aud_g17
12:22:13  66  ,aud_g18
12:22:13  67  ,aud_g19
12:22:13  68  ,aud_g20
12:22:13  69  ,aud_g21
12:22:13  70  ,aud_g22
12:22:13  71  ,aud_g23
12:22:13  72  ,aud_g24
12:22:13  73  ,aud_g25
12:22:13  74  ,aud_g26
12:22:13  75  ,aud_g27
12:22:13  76  ,aud_g28
12:22:13  77  ,aud_g29
12:22:13  78  ,aud_g30
12:22:13  79  ,aud_g31
12:22:13  80  ,aud_g32
12:22:13  81  ,aud_g33
12:22:13  82  ,aud_g34
12:22:13  83  ,aud_g35
12:22:13  84  ,aud_g36
12:22:13  85  ,aud_g37
12:22:13  86  ,aud_g38
12:22:13  87  ,aud_g39
12:22:13  88  ,aud_g40
12:22:13  89  ,aud_g41
12:22:13  90  ,gbp_g00
12:22:13  91  ,gbp_g01
12:22:13  92  ,gbp_g02
12:22:13  93  ,gbp_g03
12:22:13  94  ,gbp_g04
12:22:13  95  ,gbp_g05
12:22:13  96  ,gbp_g06
12:22:13  97  ,gbp_g07
12:22:13  98  ,gbp_g08
12:22:13  99  ,gbp_g09
12:22:13 100  ,gbp_g10
12:22:13 101  ,gbp_g11
12:22:13 102  ,gbp_g12
12:22:13 103  ,gbp_g13
12:22:13 104  ,gbp_g14
12:22:13 105  ,gbp_g15
12:22:13 106  ,gbp_g16
12:22:13 107  ,gbp_g17
12:22:13 108  ,gbp_g18
12:22:13 109  ,gbp_g19
12:22:13 110  ,gbp_g20
12:22:13 111  ,gbp_g21
12:22:13 112  ,gbp_g22
12:22:13 113  ,gbp_g23
12:22:13 114  ,gbp_g24
12:22:13 115  ,gbp_g25
12:22:13 116  ,gbp_g26
12:22:13 117  ,gbp_g27
12:22:13 118  ,gbp_g28
12:22:13 119  ,gbp_g29
12:22:13 120  ,gbp_g30
12:22:13 121  ,gbp_g31
12:22:13 122  ,gbp_g32
12:22:13 123  ,gbp_g33
12:22:13 124  ,gbp_g34
12:22:13 125  ,gbp_g35
12:22:13 126  ,gbp_g36
12:22:13 127  ,gbp_g37
12:22:13 128  ,gbp_g38
12:22:13 129  ,gbp_g39
12:22:13 130  ,gbp_g40
12:22:13 131  ,gbp_g41
12:22:13 132  ,jpy_g00
12:22:13 133  ,jpy_g01
12:22:13 134  ,jpy_g02
12:22:13 135  ,jpy_g03
12:22:13 136  ,jpy_g04
12:22:13 137  ,jpy_g05
12:22:13 138  ,jpy_g06
12:22:13 139  ,jpy_g07
12:22:13 140  ,jpy_g08
12:22:13 141  ,jpy_g09
12:22:13 142  ,jpy_g10
12:22:13 143  ,jpy_g11
12:22:13 144  ,jpy_g12
12:22:13 145  ,jpy_g13
12:22:13 146  ,jpy_g14
12:22:13 147  ,jpy_g15
12:22:13 148  ,jpy_g16
12:22:13 149  ,jpy_g17
12:22:13 150  ,jpy_g18
12:22:13 151  ,jpy_g19
12:22:13 152  ,jpy_g20
12:22:13 153  ,jpy_g21
12:22:13 154  ,jpy_g22
12:22:13 155  ,jpy_g23
12:22:13 156  ,jpy_g24
12:22:13 157  ,jpy_g25
12:22:13 158  ,jpy_g26
12:22:13 159  ,jpy_g27
12:22:13 160  ,jpy_g28
12:22:13 161  ,jpy_g29
12:22:13 162  ,jpy_g30
12:22:13 163  ,jpy_g31
12:22:13 164  ,jpy_g32
12:22:13 165  ,jpy_g33
12:22:13 166  ,jpy_g34
12:22:13 167  ,jpy_g35
12:22:13 168  ,jpy_g36
12:22:13 169  ,jpy_g37
12:22:13 170  ,jpy_g38
12:22:13 171  ,jpy_g39
12:22:13 172  ,jpy_g40
12:22:13 173  ,jpy_g41
12:22:13 174  ,cad_g00
12:22:13 175  ,cad_g01
12:22:13 176  ,cad_g02
12:22:13 177  ,cad_g03
12:22:13 178  ,cad_g04
12:22:13 179  ,cad_g05
12:22:13 180  ,cad_g06
12:22:13 181  ,cad_g07
12:22:13 182  ,cad_g08
12:22:13 183  ,cad_g09
12:22:13 184  ,cad_g10
12:22:13 185  ,cad_g11
12:22:13 186  ,cad_g12
12:22:13 187  ,cad_g13
12:22:13 188  ,cad_g14
12:22:13 189  ,cad_g15
12:22:13 190  ,cad_g16
12:22:13 191  ,cad_g17
12:22:13 192  ,cad_g18
12:22:13 193  ,cad_g19
12:22:13 194  ,cad_g20
12:22:13 195  ,cad_g21
12:22:13 196  ,cad_g22
12:22:13 197  ,cad_g23
12:22:13 198  ,cad_g24
12:22:13 199  ,cad_g25
12:22:13 200  ,cad_g26
12:22:13 201  ,cad_g27
12:22:13 202  ,cad_g28
12:22:13 203  ,cad_g29
12:22:13 204  ,cad_g30
12:22:13 205  ,cad_g31
12:22:13 206  ,cad_g32
12:22:13 207  ,cad_g33
12:22:13 208  ,cad_g34
12:22:13 209  ,cad_g35
12:22:13 210  ,cad_g36
12:22:13 211  ,cad_g37
12:22:13 212  ,cad_g38
12:22:13 213  ,cad_g39
12:22:13 214  ,cad_g40
12:22:13 215  ,cad_g41
12:22:13 216  ,chf_g00
12:22:13 217  ,chf_g01
12:22:13 218  ,chf_g02
12:22:13 219  ,chf_g03
12:22:13 220  ,chf_g04
12:22:13 221  ,chf_g05
12:22:13 222  ,chf_g06
12:22:13 223  ,chf_g07
12:22:13 224  ,chf_g08
12:22:13 225  ,chf_g09
12:22:13 226  ,chf_g10
12:22:13 227  ,chf_g11
12:22:13 228  ,chf_g12
12:22:13 229  ,chf_g13
12:22:13 230  ,chf_g14
12:22:13 231  ,chf_g15
12:22:13 232  ,chf_g16
12:22:13 233  ,chf_g17
12:22:13 234  ,chf_g18
12:22:13 235  ,chf_g19
12:22:13 236  ,chf_g20
12:22:13 237  ,chf_g21
12:22:13 238  ,chf_g22
12:22:13 239  ,chf_g23
12:22:13 240  ,chf_g24
12:22:13 241  ,chf_g25
12:22:13 242  ,chf_g26
12:22:13 243  ,chf_g27
12:22:13 244  ,chf_g28
12:22:13 245  ,chf_g29
12:22:13 246  ,chf_g30
12:22:13 247  ,chf_g31
12:22:13 248  ,chf_g32
12:22:13 249  ,chf_g33
12:22:13 250  ,chf_g34
12:22:13 251  ,chf_g35
12:22:13 252  ,chf_g36
12:22:13 253  ,chf_g37
12:22:13 254  ,chf_g38
12:22:13 255  ,chf_g39
12:22:13 256  ,chf_g40
12:22:13 257  ,chf_g41
12:22:13 258  FROM aud_ms6 m
12:22:13 259  WHERE m.ydate = '&1'||' '||'&2'
12:22:13 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'12:00:00'

View created.

Elapsed: 00:00:00.12
12:22:13 SQL> 
12:22:13 SQL> -- rpt
12:22:13 SQL> -- We should see just 1 row:
12:22:13 SQL> 
12:22:13 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
12:22:13 SQL> 
12:22:13 SQL> -- Build the model:
12:22:13 SQL> CREATE OR REPLACE VIEW bme AS
12:22:13   2  SELECT
12:22:13   3  'aud'||m.ydate prdate
12:22:13   4  ,gattn
12:22:13   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:22:13   6  ,eur_g00
12:22:13   7  ,eur_g01
12:22:13   8  ,eur_g02
12:22:13   9  ,eur_g03
12:22:13  10  ,eur_g04
12:22:13  11  ,eur_g05
12:22:13  12  ,eur_g06
12:22:13  13  ,eur_g07
12:22:13  14  ,eur_g08
12:22:13  15  ,eur_g09
12:22:13  16  ,eur_g10
12:22:13  17  ,eur_g11
12:22:13  18  ,eur_g12
12:22:13  19  ,eur_g13
12:22:13  20  ,eur_g14
12:22:13  21  ,eur_g15
12:22:13  22  ,eur_g16
12:22:13  23  ,eur_g17
12:22:13  24  ,eur_g18
12:22:13  25  ,eur_g19
12:22:13  26  ,eur_g20
12:22:13  27  ,eur_g21
12:22:13  28  ,eur_g22
12:22:13  29  ,eur_g23
12:22:13  30  ,eur_g24
12:22:13  31  ,eur_g25
12:22:13  32  ,eur_g26
12:22:13  33  ,eur_g27
12:22:13  34  ,eur_g28
12:22:13  35  ,eur_g29
12:22:13  36  ,eur_g30
12:22:13  37  ,eur_g31
12:22:13  38  ,eur_g32
12:22:13  39  ,eur_g33
12:22:13  40  ,eur_g34
12:22:13  41  ,eur_g35
12:22:13  42  ,eur_g36
12:22:13  43  ,eur_g37
12:22:13  44  ,eur_g38
12:22:13  45  ,eur_g39
12:22:13  46  ,eur_g40
12:22:13  47  ,eur_g41
12:22:13  48  ,aud_g00
12:22:13  49  ,aud_g01
12:22:13  50  ,aud_g02
12:22:13  51  ,aud_g03
12:22:13  52  ,aud_g04
12:22:13  53  ,aud_g05
12:22:13  54  ,aud_g06
12:22:13  55  ,aud_g07
12:22:13  56  ,aud_g08
12:22:13  57  ,aud_g09
12:22:13  58  ,aud_g10
12:22:13  59  ,aud_g11
12:22:13  60  ,aud_g12
12:22:13  61  ,aud_g13
12:22:13  62  ,aud_g14
12:22:13  63  ,aud_g15
12:22:13  64  ,aud_g16
12:22:13  65  ,aud_g17
12:22:13  66  ,aud_g18
12:22:13  67  ,aud_g19
12:22:13  68  ,aud_g20
12:22:13  69  ,aud_g21
12:22:13  70  ,aud_g22
12:22:13  71  ,aud_g23
12:22:13  72  ,aud_g24
12:22:13  73  ,aud_g25
12:22:13  74  ,aud_g26
12:22:13  75  ,aud_g27
12:22:13  76  ,aud_g28
12:22:13  77  ,aud_g29
12:22:13  78  ,aud_g30
12:22:13  79  ,aud_g31
12:22:13  80  ,aud_g32
12:22:13  81  ,aud_g33
12:22:13  82  ,aud_g34
12:22:13  83  ,aud_g35
12:22:13  84  ,aud_g36
12:22:13  85  ,aud_g37
12:22:13  86  ,aud_g38
12:22:13  87  ,aud_g39
12:22:13  88  ,aud_g40
12:22:13  89  ,aud_g41
12:22:13  90  ,gbp_g00
12:22:13  91  ,gbp_g01
12:22:13  92  ,gbp_g02
12:22:13  93  ,gbp_g03
12:22:13  94  ,gbp_g04
12:22:13  95  ,gbp_g05
12:22:13  96  ,gbp_g06
12:22:13  97  ,gbp_g07
12:22:13  98  ,gbp_g08
12:22:13  99  ,gbp_g09
12:22:13 100  ,gbp_g10
12:22:13 101  ,gbp_g11
12:22:13 102  ,gbp_g12
12:22:13 103  ,gbp_g13
12:22:13 104  ,gbp_g14
12:22:13 105  ,gbp_g15
12:22:13 106  ,gbp_g16
12:22:13 107  ,gbp_g17
12:22:13 108  ,gbp_g18
12:22:13 109  ,gbp_g19
12:22:13 110  ,gbp_g20
12:22:13 111  ,gbp_g21
12:22:13 112  ,gbp_g22
12:22:13 113  ,gbp_g23
12:22:13 114  ,gbp_g24
12:22:13 115  ,gbp_g25
12:22:13 116  ,gbp_g26
12:22:13 117  ,gbp_g27
12:22:13 118  ,gbp_g28
12:22:13 119  ,gbp_g29
12:22:13 120  ,gbp_g30
12:22:13 121  ,gbp_g31
12:22:13 122  ,gbp_g32
12:22:13 123  ,gbp_g33
12:22:13 124  ,gbp_g34
12:22:13 125  ,gbp_g35
12:22:13 126  ,gbp_g36
12:22:13 127  ,gbp_g37
12:22:13 128  ,gbp_g38
12:22:13 129  ,gbp_g39
12:22:13 130  ,gbp_g40
12:22:13 131  ,gbp_g41
12:22:13 132  ,jpy_g00
12:22:13 133  ,jpy_g01
12:22:13 134  ,jpy_g02
12:22:13 135  ,jpy_g03
12:22:13 136  ,jpy_g04
12:22:13 137  ,jpy_g05
12:22:13 138  ,jpy_g06
12:22:13 139  ,jpy_g07
12:22:13 140  ,jpy_g08
12:22:13 141  ,jpy_g09
12:22:13 142  ,jpy_g10
12:22:13 143  ,jpy_g11
12:22:13 144  ,jpy_g12
12:22:13 145  ,jpy_g13
12:22:13 146  ,jpy_g14
12:22:13 147  ,jpy_g15
12:22:13 148  ,jpy_g16
12:22:13 149  ,jpy_g17
12:22:13 150  ,jpy_g18
12:22:13 151  ,jpy_g19
12:22:13 152  ,jpy_g20
12:22:13 153  ,jpy_g21
12:22:13 154  ,jpy_g22
12:22:13 155  ,jpy_g23
12:22:13 156  ,jpy_g24
12:22:13 157  ,jpy_g25
12:22:13 158  ,jpy_g26
12:22:13 159  ,jpy_g27
12:22:13 160  ,jpy_g28
12:22:13 161  ,jpy_g29
12:22:13 162  ,jpy_g30
12:22:13 163  ,jpy_g31
12:22:13 164  ,jpy_g32
12:22:13 165  ,jpy_g33
12:22:13 166  ,jpy_g34
12:22:13 167  ,jpy_g35
12:22:13 168  ,jpy_g36
12:22:13 169  ,jpy_g37
12:22:13 170  ,jpy_g38
12:22:13 171  ,jpy_g39
12:22:13 172  ,jpy_g40
12:22:13 173  ,jpy_g41
12:22:13 174  ,cad_g00
12:22:13 175  ,cad_g01
12:22:13 176  ,cad_g02
12:22:13 177  ,cad_g03
12:22:13 178  ,cad_g04
12:22:13 179  ,cad_g05
12:22:13 180  ,cad_g06
12:22:13 181  ,cad_g07
12:22:13 182  ,cad_g08
12:22:13 183  ,cad_g09
12:22:13 184  ,cad_g10
12:22:13 185  ,cad_g11
12:22:13 186  ,cad_g12
12:22:13 187  ,cad_g13
12:22:13 188  ,cad_g14
12:22:13 189  ,cad_g15
12:22:13 190  ,cad_g16
12:22:13 191  ,cad_g17
12:22:13 192  ,cad_g18
12:22:13 193  ,cad_g19
12:22:13 194  ,cad_g20
12:22:13 195  ,cad_g21
12:22:13 196  ,cad_g22
12:22:13 197  ,cad_g23
12:22:13 198  ,cad_g24
12:22:13 199  ,cad_g25
12:22:13 200  ,cad_g26
12:22:13 201  ,cad_g27
12:22:13 202  ,cad_g28
12:22:13 203  ,cad_g29
12:22:13 204  ,cad_g30
12:22:13 205  ,cad_g31
12:22:13 206  ,cad_g32
12:22:13 207  ,cad_g33
12:22:13 208  ,cad_g34
12:22:13 209  ,cad_g35
12:22:13 210  ,cad_g36
12:22:13 211  ,cad_g37
12:22:13 212  ,cad_g38
12:22:13 213  ,cad_g39
12:22:13 214  ,cad_g40
12:22:13 215  ,cad_g41
12:22:13 216  ,chf_g00
12:22:13 217  ,chf_g01
12:22:13 218  ,chf_g02
12:22:13 219  ,chf_g03
12:22:13 220  ,chf_g04
12:22:13 221  ,chf_g05
12:22:13 222  ,chf_g06
12:22:13 223  ,chf_g07
12:22:13 224  ,chf_g08
12:22:13 225  ,chf_g09
12:22:13 226  ,chf_g10
12:22:13 227  ,chf_g11
12:22:13 228  ,chf_g12
12:22:13 229  ,chf_g13
12:22:13 230  ,chf_g14
12:22:13 231  ,chf_g15
12:22:13 232  ,chf_g16
12:22:13 233  ,chf_g17
12:22:13 234  ,chf_g18
12:22:13 235  ,chf_g19
12:22:13 236  ,chf_g20
12:22:13 237  ,chf_g21
12:22:13 238  ,chf_g22
12:22:13 239  ,chf_g23
12:22:13 240  ,chf_g24
12:22:13 241  ,chf_g25
12:22:13 242  ,chf_g26
12:22:13 243  ,chf_g27
12:22:13 244  ,chf_g28
12:22:13 245  ,chf_g29
12:22:13 246  ,chf_g30
12:22:13 247  ,chf_g31
12:22:13 248  ,chf_g32
12:22:13 249  ,chf_g33
12:22:13 250  ,chf_g34
12:22:13 251  ,chf_g35
12:22:13 252  ,chf_g36
12:22:13 253  ,chf_g37
12:22:13 254  ,chf_g38
12:22:13 255  ,chf_g39
12:22:13 256  ,chf_g40
12:22:13 257  ,chf_g41
12:22:13 258  FROM aud_ms6 m
12:22:13 259  WHERE gattn IN('nup','up')
12:22:13 260  AND 1+m.ydate < '&1'||' '||'&2'
12:22:13 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'12:00:00'

View created.

Elapsed: 00:00:00.12
12:22:13 SQL> 
12:22:13 SQL> -- rpt
12:22:13 SQL> 
12:22:13 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13042
up	     6397

Elapsed: 00:00:00.04
12:22:13 SQL> 
12:22:13 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 11:55:00

Elapsed: 00:00:00.03
12:22:13 SQL> 
12:22:13 SQL> -- Now build model from bme and score sme
12:22:13 SQL> @score1gattn.sql
12:22:13 SQL> -- score1gattn.sql
12:22:13 SQL> 
12:22:13 SQL> -- Does the 1st SVM score
12:22:13 SQL> 
12:22:13 SQL> -- Fill up svmc_apply_prep
12:22:13 SQL> @score_gattn.sql
12:22:13 SQL> --
12:22:13 SQL> -- score_gattn.sql
12:22:13 SQL> --
12:22:13 SQL> 
12:22:13 SQL> -- usage: score_gattn.sql
12:22:13 SQL> 
12:22:13 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
12:22:13 SQL> 
12:22:13 SQL> DEFINE target	= 'gattn'
12:22:13 SQL> DEFINE model_name = 'forex14'
12:22:13 SQL> DEFINE bldtable	= 'bme'
12:22:13 SQL> DEFINE scoretable = 'sme'
12:22:13 SQL> DEFINE case_id	= 'prdate'
12:22:13 SQL> 
12:22:13 SQL> -- Define a variable to help me exclude some columns from some data mining calls
12:22:13 SQL> DEFINE exclude1 = "'&target','&case_id'"
12:22:13 SQL> 
12:22:13 SQL> -- Builds an SVM model using pl/sql.
12:22:13 SQL> 
12:22:13 SQL> -----------------------------------------------------------------------
12:22:13 SQL> --			    BUILD THE MODEL
12:22:13 SQL> -----------------------------------------------------------------------
12:22:13 SQL> 
12:22:13 SQL> -- Cleanup old build data preparation objects for repeat runs
12:22:13 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
12:22:13 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
12:22:13 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
12:22:13 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
12:22:13 SQL> 
12:22:13 SQL> 
12:22:13 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
12:22:13 SQL> --
12:22:13 SQL> -- DROP	TABLE svmc_settings ;
12:22:13 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
12:22:13 SQL> -- DELETE svmc_settings;
12:22:13 SQL> 
12:22:13 SQL> -- The default classification algorithm is Naive Bayes. So override
12:22:13 SQL> -- this choice to SVM using a settings table.
12:22:13 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
12:22:13 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
12:22:13 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
12:22:13 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
12:22:13 SQL> -- models.
12:22:13 SQL> --
12:22:13 SQL> 
12:22:13 SQL> -- Do this once and then comment it out.
12:22:13 SQL> -- That makes script go faster.
12:22:13 SQL> -- BEGIN
12:22:13 SQL> -- -- Populate settings table
12:22:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:22:13 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
12:22:13 SQL> --
12:22:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:22:13 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
12:22:13 SQL> --
12:22:13 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:22:13 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
12:22:13 SQL> --   COMMIT;
12:22:13 SQL> -- END;
12:22:13 SQL> -- /
12:22:13 SQL> 
12:22:13 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
12:22:13 SQL> 
12:22:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
12:22:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:22:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:22:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
12:22:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:22:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
12:22:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
12:22:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:22:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:22:13 SQL> 
12:22:13 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
12:22:13   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:22:13   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.12
12:22:13 SQL> 
12:22:13 SQL> --------------------------------
12:22:13 SQL> -- PREPARE BUILD (TRAINING) DATA
12:22:13 SQL> --
12:22:13 SQL> 
12:22:13 SQL> -- 1. Missing Value treatment for all Predictors and
12:22:13 SQL> -- 2. Outlier Treatment and
12:22:13 SQL> -- 3. Normalization are performed below.
12:22:13 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
12:22:13 SQL> --    normalized here.
12:22:13 SQL> 
12:22:13 SQL> BEGIN
12:22:13   2  	-- Perform missing value treatment for all predictors
12:22:13   3  	-- create miss tables
12:22:13   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
12:22:13   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
12:22:13   6  
12:22:13   7  	-- populate miss tables
12:22:13   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
12:22:13   9  	  miss_table_name => 'svmc_miss_num',
12:22:13  10  	  data_table_name => '&bldtable',
12:22:13  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:22:13  12  
12:22:13  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
12:22:13  14  	  miss_table_name => 'svmc_miss_cat',
12:22:13  15  	  data_table_name => '&bldtable',
12:22:13  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:22:13  17  
12:22:13  18  	-- xform input data to replace missing values
12:22:13  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:22:13  20  	  miss_table_name => 'svmc_miss_num',
12:22:13  21  	  data_table_name => '&bldtable',
12:22:13  22  	  xform_view_name => 'xformed_build_miss_num');
12:22:13  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:22:13  24  	  miss_table_name => 'svmc_miss_cat',
12:22:13  25  	  data_table_name => '&bldtable',
12:22:13  26  	  xform_view_name => 'xformed_build_miss_cat');
12:22:13  27  
12:22:13  28  	-- Perform outlier treatment.
12:22:13  29  	-- create clip table
12:22:13  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
12:22:13  31  
12:22:13  32  	-- populate clip table
12:22:13  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
12:22:13  34  	  clip_table_name => 'svmc_clip',
12:22:13  35  	  data_table_name => '&bldtable',
12:22:13  36  	  tail_frac	  => 0.025,
12:22:13  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:22:13  38  
12:22:13  39  	-- xform input data to winsorized data
12:22:13  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
12:22:13  41  	  clip_table_name => 'svmc_clip',
12:22:13  42  	  data_table_name => '&bldtable',
12:22:13  43  	  xform_view_name => 'svmc_winsor');
12:22:13  44  
12:22:13  45  	-- create normalization table
12:22:13  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
12:22:13  47  
12:22:13  48  	-- populate normalization table based on winsorized data
12:22:13  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
12:22:13  50  	  norm_table_name => 'svmc_norm',
12:22:13  51  	  data_table_name => 'svmc_winsor',
12:22:13  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:22:13  53  
12:22:13  54  	-- normalize the original data
12:22:13  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:22:13  56  	  norm_table_name => 'svmc_norm',
12:22:13  57  	  data_table_name => '&bldtable',
12:22:13  58  	  xform_view_name => 'svmc_build_prep');
12:22:13  59  END;
12:22:13  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.67
12:22:31 SQL> 
12:22:31 SQL> ---------------------
12:22:31 SQL> -- CREATE A NEW MODEL
12:22:31 SQL> --
12:22:31 SQL> -- Cleanup old model with the same name for repeat runs
12:22:31 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
12:22:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:22:31   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.89
12:22:32 SQL> 
12:22:32 SQL> -- Build a new SVM Model
12:22:32 SQL> BEGIN
12:22:32   2  	DBMS_DATA_MINING.CREATE_MODEL(
12:22:32   3  	  model_name	      => '&model_name',
12:22:32   4  	  mining_function     => dbms_data_mining.classification,
12:22:32   5  	  data_table_name     => 'svmc_build_prep',
12:22:32   6  	  case_id_column_name => '&case_id',
12:22:32   7  	  target_column_name  => '&target',
12:22:32   8  	  settings_table_name => 'svmc_settings');
12:22:32   9  END;
12:22:32  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.72
12:23:00 SQL> 
12:23:00 SQL> -----------------------------------------------------------------------
12:23:00 SQL> --			       APPLY/score THE MODEL
12:23:00 SQL> -----------------------------------------------------------------------
12:23:00 SQL> 
12:23:00 SQL> -- Cleanup old scoring data preparation objects for repeat runs
12:23:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
12:23:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:23:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
12:23:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:23:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
12:23:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:23:00 SQL> -----------------------
12:23:00 SQL> -- PREPARE SCORING DATA
12:23:00 SQL> --
12:23:00 SQL> -- If the data for model creation has been prepared, then the data
12:23:00 SQL> -- to be scored using the model must be prepared in the same manner
12:23:00 SQL> -- in order to obtain meaningful results.
12:23:00 SQL> --
12:23:00 SQL> -- 1. Missing Value treatment for all Predictors and
12:23:00 SQL> -- 2. Normalization
12:23:00 SQL> -- No outlier treatment will be performed during test and apply. The
12:23:00 SQL> -- normalization step is sufficient, since the normalization parameters
12:23:00 SQL> -- already capture the effects of outlier treatment done with build data.
12:23:00 SQL> --
12:23:00 SQL> BEGIN
12:23:00   2  	-- Xform Test data to replace missing values
12:23:00   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:23:00   4  	  miss_table_name => 'svmc_miss_num',
12:23:00   5  	  data_table_name => '&scoretable',
12:23:00   6  	  xform_view_name => 'xformed_apply_miss_num');
12:23:00   7  
12:23:00   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:23:00   9  	  miss_table_name => 'svmc_miss_cat',
12:23:00  10  	  data_table_name => '&scoretable',
12:23:00  11  	  xform_view_name => 'xformed_apply_miss_cat');
12:23:00  12  
12:23:00  13  	-- Normalize the data to be scored
12:23:00  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:23:00  15  	  norm_table_name => 'svmc_norm',
12:23:00  16  	  data_table_name => '&scoretable',
12:23:00  17  	  xform_view_name => 'svmc_apply_prep');
12:23:00  18  END;
12:23:00  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.26
12:23:01 SQL> 
12:23:01 SQL> -- Use same model_name used in score_gattn.sql
12:23:01 SQL> DEFINE model_name = 'forex14'
12:23:01 SQL> 
12:23:01 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
12:23:01 SQL> 
12:23:01 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
12:23:01   2  SELECT
12:23:01   3  prdate
12:23:01   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
12:23:01   5  ,sysdate
12:23:01   6  ,SUBSTR(prdate,1,3)pair
12:23:01   7  ,SUBSTR(prdate,4,19)ydate
12:23:01   8  FROM svmc_apply_prep
12:23:01   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
12:23:01 SQL> @aud_score1day_gattn.sql	2010-12-30 12:05:00
12:23:01 SQL> --
12:23:01 SQL> -- aud_score1day_gattn.sql
12:23:01 SQL> --
12:23:01 SQL> 
12:23:01 SQL> CREATE OR REPLACE VIEW sme AS
12:23:01   2  SELECT
12:23:01   3  'aud'||m.ydate prdate
12:23:01   4  ,NULL gattn
12:23:01   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:23:01   6  ,eur_g00
12:23:01   7  ,eur_g01
12:23:01   8  ,eur_g02
12:23:01   9  ,eur_g03
12:23:01  10  ,eur_g04
12:23:01  11  ,eur_g05
12:23:01  12  ,eur_g06
12:23:01  13  ,eur_g07
12:23:01  14  ,eur_g08
12:23:01  15  ,eur_g09
12:23:01  16  ,eur_g10
12:23:01  17  ,eur_g11
12:23:01  18  ,eur_g12
12:23:01  19  ,eur_g13
12:23:01  20  ,eur_g14
12:23:01  21  ,eur_g15
12:23:01  22  ,eur_g16
12:23:01  23  ,eur_g17
12:23:01  24  ,eur_g18
12:23:01  25  ,eur_g19
12:23:01  26  ,eur_g20
12:23:01  27  ,eur_g21
12:23:01  28  ,eur_g22
12:23:01  29  ,eur_g23
12:23:01  30  ,eur_g24
12:23:01  31  ,eur_g25
12:23:01  32  ,eur_g26
12:23:01  33  ,eur_g27
12:23:01  34  ,eur_g28
12:23:01  35  ,eur_g29
12:23:01  36  ,eur_g30
12:23:01  37  ,eur_g31
12:23:01  38  ,eur_g32
12:23:01  39  ,eur_g33
12:23:01  40  ,eur_g34
12:23:01  41  ,eur_g35
12:23:01  42  ,eur_g36
12:23:01  43  ,eur_g37
12:23:01  44  ,eur_g38
12:23:01  45  ,eur_g39
12:23:01  46  ,eur_g40
12:23:01  47  ,eur_g41
12:23:01  48  ,aud_g00
12:23:01  49  ,aud_g01
12:23:01  50  ,aud_g02
12:23:01  51  ,aud_g03
12:23:01  52  ,aud_g04
12:23:01  53  ,aud_g05
12:23:01  54  ,aud_g06
12:23:01  55  ,aud_g07
12:23:01  56  ,aud_g08
12:23:01  57  ,aud_g09
12:23:01  58  ,aud_g10
12:23:01  59  ,aud_g11
12:23:01  60  ,aud_g12
12:23:01  61  ,aud_g13
12:23:01  62  ,aud_g14
12:23:01  63  ,aud_g15
12:23:01  64  ,aud_g16
12:23:01  65  ,aud_g17
12:23:01  66  ,aud_g18
12:23:01  67  ,aud_g19
12:23:01  68  ,aud_g20
12:23:01  69  ,aud_g21
12:23:01  70  ,aud_g22
12:23:01  71  ,aud_g23
12:23:01  72  ,aud_g24
12:23:01  73  ,aud_g25
12:23:01  74  ,aud_g26
12:23:01  75  ,aud_g27
12:23:01  76  ,aud_g28
12:23:01  77  ,aud_g29
12:23:01  78  ,aud_g30
12:23:01  79  ,aud_g31
12:23:01  80  ,aud_g32
12:23:01  81  ,aud_g33
12:23:01  82  ,aud_g34
12:23:01  83  ,aud_g35
12:23:01  84  ,aud_g36
12:23:01  85  ,aud_g37
12:23:01  86  ,aud_g38
12:23:01  87  ,aud_g39
12:23:01  88  ,aud_g40
12:23:01  89  ,aud_g41
12:23:01  90  ,gbp_g00
12:23:01  91  ,gbp_g01
12:23:01  92  ,gbp_g02
12:23:01  93  ,gbp_g03
12:23:01  94  ,gbp_g04
12:23:01  95  ,gbp_g05
12:23:01  96  ,gbp_g06
12:23:01  97  ,gbp_g07
12:23:01  98  ,gbp_g08
12:23:01  99  ,gbp_g09
12:23:01 100  ,gbp_g10
12:23:01 101  ,gbp_g11
12:23:01 102  ,gbp_g12
12:23:01 103  ,gbp_g13
12:23:01 104  ,gbp_g14
12:23:01 105  ,gbp_g15
12:23:01 106  ,gbp_g16
12:23:01 107  ,gbp_g17
12:23:01 108  ,gbp_g18
12:23:01 109  ,gbp_g19
12:23:01 110  ,gbp_g20
12:23:01 111  ,gbp_g21
12:23:01 112  ,gbp_g22
12:23:01 113  ,gbp_g23
12:23:01 114  ,gbp_g24
12:23:01 115  ,gbp_g25
12:23:01 116  ,gbp_g26
12:23:01 117  ,gbp_g27
12:23:01 118  ,gbp_g28
12:23:01 119  ,gbp_g29
12:23:01 120  ,gbp_g30
12:23:01 121  ,gbp_g31
12:23:01 122  ,gbp_g32
12:23:01 123  ,gbp_g33
12:23:01 124  ,gbp_g34
12:23:01 125  ,gbp_g35
12:23:01 126  ,gbp_g36
12:23:01 127  ,gbp_g37
12:23:01 128  ,gbp_g38
12:23:01 129  ,gbp_g39
12:23:01 130  ,gbp_g40
12:23:01 131  ,gbp_g41
12:23:01 132  ,jpy_g00
12:23:01 133  ,jpy_g01
12:23:01 134  ,jpy_g02
12:23:01 135  ,jpy_g03
12:23:01 136  ,jpy_g04
12:23:01 137  ,jpy_g05
12:23:01 138  ,jpy_g06
12:23:01 139  ,jpy_g07
12:23:01 140  ,jpy_g08
12:23:01 141  ,jpy_g09
12:23:01 142  ,jpy_g10
12:23:01 143  ,jpy_g11
12:23:01 144  ,jpy_g12
12:23:01 145  ,jpy_g13
12:23:01 146  ,jpy_g14
12:23:01 147  ,jpy_g15
12:23:01 148  ,jpy_g16
12:23:01 149  ,jpy_g17
12:23:01 150  ,jpy_g18
12:23:01 151  ,jpy_g19
12:23:01 152  ,jpy_g20
12:23:01 153  ,jpy_g21
12:23:01 154  ,jpy_g22
12:23:01 155  ,jpy_g23
12:23:01 156  ,jpy_g24
12:23:01 157  ,jpy_g25
12:23:01 158  ,jpy_g26
12:23:01 159  ,jpy_g27
12:23:01 160  ,jpy_g28
12:23:01 161  ,jpy_g29
12:23:01 162  ,jpy_g30
12:23:01 163  ,jpy_g31
12:23:01 164  ,jpy_g32
12:23:01 165  ,jpy_g33
12:23:01 166  ,jpy_g34
12:23:01 167  ,jpy_g35
12:23:01 168  ,jpy_g36
12:23:01 169  ,jpy_g37
12:23:01 170  ,jpy_g38
12:23:01 171  ,jpy_g39
12:23:01 172  ,jpy_g40
12:23:01 173  ,jpy_g41
12:23:01 174  ,cad_g00
12:23:01 175  ,cad_g01
12:23:01 176  ,cad_g02
12:23:01 177  ,cad_g03
12:23:01 178  ,cad_g04
12:23:01 179  ,cad_g05
12:23:01 180  ,cad_g06
12:23:01 181  ,cad_g07
12:23:01 182  ,cad_g08
12:23:01 183  ,cad_g09
12:23:01 184  ,cad_g10
12:23:01 185  ,cad_g11
12:23:01 186  ,cad_g12
12:23:01 187  ,cad_g13
12:23:01 188  ,cad_g14
12:23:01 189  ,cad_g15
12:23:01 190  ,cad_g16
12:23:01 191  ,cad_g17
12:23:01 192  ,cad_g18
12:23:01 193  ,cad_g19
12:23:01 194  ,cad_g20
12:23:01 195  ,cad_g21
12:23:01 196  ,cad_g22
12:23:01 197  ,cad_g23
12:23:01 198  ,cad_g24
12:23:01 199  ,cad_g25
12:23:01 200  ,cad_g26
12:23:01 201  ,cad_g27
12:23:01 202  ,cad_g28
12:23:01 203  ,cad_g29
12:23:01 204  ,cad_g30
12:23:01 205  ,cad_g31
12:23:01 206  ,cad_g32
12:23:01 207  ,cad_g33
12:23:01 208  ,cad_g34
12:23:01 209  ,cad_g35
12:23:01 210  ,cad_g36
12:23:01 211  ,cad_g37
12:23:01 212  ,cad_g38
12:23:01 213  ,cad_g39
12:23:01 214  ,cad_g40
12:23:01 215  ,cad_g41
12:23:01 216  ,chf_g00
12:23:01 217  ,chf_g01
12:23:01 218  ,chf_g02
12:23:01 219  ,chf_g03
12:23:01 220  ,chf_g04
12:23:01 221  ,chf_g05
12:23:01 222  ,chf_g06
12:23:01 223  ,chf_g07
12:23:01 224  ,chf_g08
12:23:01 225  ,chf_g09
12:23:01 226  ,chf_g10
12:23:01 227  ,chf_g11
12:23:01 228  ,chf_g12
12:23:01 229  ,chf_g13
12:23:01 230  ,chf_g14
12:23:01 231  ,chf_g15
12:23:01 232  ,chf_g16
12:23:01 233  ,chf_g17
12:23:01 234  ,chf_g18
12:23:01 235  ,chf_g19
12:23:01 236  ,chf_g20
12:23:01 237  ,chf_g21
12:23:01 238  ,chf_g22
12:23:01 239  ,chf_g23
12:23:01 240  ,chf_g24
12:23:01 241  ,chf_g25
12:23:01 242  ,chf_g26
12:23:01 243  ,chf_g27
12:23:01 244  ,chf_g28
12:23:01 245  ,chf_g29
12:23:01 246  ,chf_g30
12:23:01 247  ,chf_g31
12:23:01 248  ,chf_g32
12:23:01 249  ,chf_g33
12:23:01 250  ,chf_g34
12:23:01 251  ,chf_g35
12:23:01 252  ,chf_g36
12:23:01 253  ,chf_g37
12:23:01 254  ,chf_g38
12:23:01 255  ,chf_g39
12:23:01 256  ,chf_g40
12:23:01 257  ,chf_g41
12:23:01 258  FROM aud_ms6 m
12:23:01 259  WHERE m.ydate = '&1'||' '||'&2'
12:23:01 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'12:05:00'

View created.

Elapsed: 00:00:00.14
12:23:01 SQL> 
12:23:01 SQL> -- rpt
12:23:01 SQL> -- We should see just 1 row:
12:23:01 SQL> 
12:23:01 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
12:23:01 SQL> 
12:23:01 SQL> -- Build the model:
12:23:01 SQL> CREATE OR REPLACE VIEW bme AS
12:23:01   2  SELECT
12:23:01   3  'aud'||m.ydate prdate
12:23:01   4  ,gattn
12:23:01   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:23:01   6  ,eur_g00
12:23:01   7  ,eur_g01
12:23:01   8  ,eur_g02
12:23:01   9  ,eur_g03
12:23:01  10  ,eur_g04
12:23:01  11  ,eur_g05
12:23:01  12  ,eur_g06
12:23:01  13  ,eur_g07
12:23:01  14  ,eur_g08
12:23:01  15  ,eur_g09
12:23:01  16  ,eur_g10
12:23:01  17  ,eur_g11
12:23:01  18  ,eur_g12
12:23:01  19  ,eur_g13
12:23:01  20  ,eur_g14
12:23:01  21  ,eur_g15
12:23:01  22  ,eur_g16
12:23:01  23  ,eur_g17
12:23:01  24  ,eur_g18
12:23:01  25  ,eur_g19
12:23:01  26  ,eur_g20
12:23:01  27  ,eur_g21
12:23:01  28  ,eur_g22
12:23:01  29  ,eur_g23
12:23:01  30  ,eur_g24
12:23:01  31  ,eur_g25
12:23:01  32  ,eur_g26
12:23:01  33  ,eur_g27
12:23:01  34  ,eur_g28
12:23:01  35  ,eur_g29
12:23:01  36  ,eur_g30
12:23:01  37  ,eur_g31
12:23:01  38  ,eur_g32
12:23:01  39  ,eur_g33
12:23:01  40  ,eur_g34
12:23:01  41  ,eur_g35
12:23:01  42  ,eur_g36
12:23:01  43  ,eur_g37
12:23:01  44  ,eur_g38
12:23:01  45  ,eur_g39
12:23:01  46  ,eur_g40
12:23:01  47  ,eur_g41
12:23:01  48  ,aud_g00
12:23:01  49  ,aud_g01
12:23:01  50  ,aud_g02
12:23:01  51  ,aud_g03
12:23:01  52  ,aud_g04
12:23:01  53  ,aud_g05
12:23:01  54  ,aud_g06
12:23:01  55  ,aud_g07
12:23:01  56  ,aud_g08
12:23:01  57  ,aud_g09
12:23:01  58  ,aud_g10
12:23:01  59  ,aud_g11
12:23:01  60  ,aud_g12
12:23:01  61  ,aud_g13
12:23:01  62  ,aud_g14
12:23:01  63  ,aud_g15
12:23:01  64  ,aud_g16
12:23:01  65  ,aud_g17
12:23:01  66  ,aud_g18
12:23:01  67  ,aud_g19
12:23:01  68  ,aud_g20
12:23:01  69  ,aud_g21
12:23:01  70  ,aud_g22
12:23:01  71  ,aud_g23
12:23:01  72  ,aud_g24
12:23:01  73  ,aud_g25
12:23:01  74  ,aud_g26
12:23:01  75  ,aud_g27
12:23:01  76  ,aud_g28
12:23:01  77  ,aud_g29
12:23:01  78  ,aud_g30
12:23:01  79  ,aud_g31
12:23:01  80  ,aud_g32
12:23:01  81  ,aud_g33
12:23:01  82  ,aud_g34
12:23:01  83  ,aud_g35
12:23:01  84  ,aud_g36
12:23:01  85  ,aud_g37
12:23:01  86  ,aud_g38
12:23:01  87  ,aud_g39
12:23:01  88  ,aud_g40
12:23:01  89  ,aud_g41
12:23:01  90  ,gbp_g00
12:23:01  91  ,gbp_g01
12:23:01  92  ,gbp_g02
12:23:01  93  ,gbp_g03
12:23:01  94  ,gbp_g04
12:23:01  95  ,gbp_g05
12:23:01  96  ,gbp_g06
12:23:01  97  ,gbp_g07
12:23:01  98  ,gbp_g08
12:23:01  99  ,gbp_g09
12:23:01 100  ,gbp_g10
12:23:01 101  ,gbp_g11
12:23:01 102  ,gbp_g12
12:23:01 103  ,gbp_g13
12:23:01 104  ,gbp_g14
12:23:01 105  ,gbp_g15
12:23:01 106  ,gbp_g16
12:23:01 107  ,gbp_g17
12:23:01 108  ,gbp_g18
12:23:01 109  ,gbp_g19
12:23:01 110  ,gbp_g20
12:23:01 111  ,gbp_g21
12:23:01 112  ,gbp_g22
12:23:01 113  ,gbp_g23
12:23:01 114  ,gbp_g24
12:23:01 115  ,gbp_g25
12:23:01 116  ,gbp_g26
12:23:01 117  ,gbp_g27
12:23:01 118  ,gbp_g28
12:23:01 119  ,gbp_g29
12:23:01 120  ,gbp_g30
12:23:01 121  ,gbp_g31
12:23:01 122  ,gbp_g32
12:23:01 123  ,gbp_g33
12:23:01 124  ,gbp_g34
12:23:01 125  ,gbp_g35
12:23:01 126  ,gbp_g36
12:23:01 127  ,gbp_g37
12:23:01 128  ,gbp_g38
12:23:01 129  ,gbp_g39
12:23:01 130  ,gbp_g40
12:23:01 131  ,gbp_g41
12:23:01 132  ,jpy_g00
12:23:01 133  ,jpy_g01
12:23:01 134  ,jpy_g02
12:23:01 135  ,jpy_g03
12:23:01 136  ,jpy_g04
12:23:01 137  ,jpy_g05
12:23:01 138  ,jpy_g06
12:23:01 139  ,jpy_g07
12:23:01 140  ,jpy_g08
12:23:01 141  ,jpy_g09
12:23:01 142  ,jpy_g10
12:23:01 143  ,jpy_g11
12:23:01 144  ,jpy_g12
12:23:01 145  ,jpy_g13
12:23:01 146  ,jpy_g14
12:23:01 147  ,jpy_g15
12:23:01 148  ,jpy_g16
12:23:01 149  ,jpy_g17
12:23:01 150  ,jpy_g18
12:23:01 151  ,jpy_g19
12:23:01 152  ,jpy_g20
12:23:01 153  ,jpy_g21
12:23:01 154  ,jpy_g22
12:23:01 155  ,jpy_g23
12:23:01 156  ,jpy_g24
12:23:01 157  ,jpy_g25
12:23:01 158  ,jpy_g26
12:23:01 159  ,jpy_g27
12:23:01 160  ,jpy_g28
12:23:01 161  ,jpy_g29
12:23:01 162  ,jpy_g30
12:23:01 163  ,jpy_g31
12:23:01 164  ,jpy_g32
12:23:01 165  ,jpy_g33
12:23:01 166  ,jpy_g34
12:23:01 167  ,jpy_g35
12:23:01 168  ,jpy_g36
12:23:01 169  ,jpy_g37
12:23:01 170  ,jpy_g38
12:23:01 171  ,jpy_g39
12:23:01 172  ,jpy_g40
12:23:01 173  ,jpy_g41
12:23:01 174  ,cad_g00
12:23:01 175  ,cad_g01
12:23:01 176  ,cad_g02
12:23:01 177  ,cad_g03
12:23:01 178  ,cad_g04
12:23:01 179  ,cad_g05
12:23:01 180  ,cad_g06
12:23:01 181  ,cad_g07
12:23:01 182  ,cad_g08
12:23:01 183  ,cad_g09
12:23:01 184  ,cad_g10
12:23:01 185  ,cad_g11
12:23:01 186  ,cad_g12
12:23:01 187  ,cad_g13
12:23:01 188  ,cad_g14
12:23:01 189  ,cad_g15
12:23:01 190  ,cad_g16
12:23:01 191  ,cad_g17
12:23:01 192  ,cad_g18
12:23:01 193  ,cad_g19
12:23:01 194  ,cad_g20
12:23:01 195  ,cad_g21
12:23:01 196  ,cad_g22
12:23:01 197  ,cad_g23
12:23:01 198  ,cad_g24
12:23:01 199  ,cad_g25
12:23:01 200  ,cad_g26
12:23:01 201  ,cad_g27
12:23:01 202  ,cad_g28
12:23:01 203  ,cad_g29
12:23:01 204  ,cad_g30
12:23:01 205  ,cad_g31
12:23:01 206  ,cad_g32
12:23:01 207  ,cad_g33
12:23:01 208  ,cad_g34
12:23:01 209  ,cad_g35
12:23:01 210  ,cad_g36
12:23:01 211  ,cad_g37
12:23:01 212  ,cad_g38
12:23:01 213  ,cad_g39
12:23:01 214  ,cad_g40
12:23:01 215  ,cad_g41
12:23:01 216  ,chf_g00
12:23:01 217  ,chf_g01
12:23:01 218  ,chf_g02
12:23:01 219  ,chf_g03
12:23:01 220  ,chf_g04
12:23:01 221  ,chf_g05
12:23:01 222  ,chf_g06
12:23:01 223  ,chf_g07
12:23:01 224  ,chf_g08
12:23:01 225  ,chf_g09
12:23:01 226  ,chf_g10
12:23:01 227  ,chf_g11
12:23:01 228  ,chf_g12
12:23:01 229  ,chf_g13
12:23:01 230  ,chf_g14
12:23:01 231  ,chf_g15
12:23:01 232  ,chf_g16
12:23:01 233  ,chf_g17
12:23:01 234  ,chf_g18
12:23:01 235  ,chf_g19
12:23:01 236  ,chf_g20
12:23:01 237  ,chf_g21
12:23:01 238  ,chf_g22
12:23:01 239  ,chf_g23
12:23:01 240  ,chf_g24
12:23:01 241  ,chf_g25
12:23:01 242  ,chf_g26
12:23:01 243  ,chf_g27
12:23:01 244  ,chf_g28
12:23:01 245  ,chf_g29
12:23:01 246  ,chf_g30
12:23:01 247  ,chf_g31
12:23:01 248  ,chf_g32
12:23:01 249  ,chf_g33
12:23:01 250  ,chf_g34
12:23:01 251  ,chf_g35
12:23:01 252  ,chf_g36
12:23:01 253  ,chf_g37
12:23:01 254  ,chf_g38
12:23:01 255  ,chf_g39
12:23:01 256  ,chf_g40
12:23:01 257  ,chf_g41
12:23:01 258  FROM aud_ms6 m
12:23:01 259  WHERE gattn IN('nup','up')
12:23:01 260  AND 1+m.ydate < '&1'||' '||'&2'
12:23:01 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'12:05:00'

View created.

Elapsed: 00:00:00.13
12:23:01 SQL> 
12:23:01 SQL> -- rpt
12:23:01 SQL> 
12:23:01 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13043
up	     6397

Elapsed: 00:00:00.04
12:23:01 SQL> 
12:23:01 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 12:00:00

Elapsed: 00:00:00.03
12:23:02 SQL> 
12:23:02 SQL> -- Now build model from bme and score sme
12:23:02 SQL> @score1gattn.sql
12:23:02 SQL> -- score1gattn.sql
12:23:02 SQL> 
12:23:02 SQL> -- Does the 1st SVM score
12:23:02 SQL> 
12:23:02 SQL> -- Fill up svmc_apply_prep
12:23:02 SQL> @score_gattn.sql
12:23:02 SQL> --
12:23:02 SQL> -- score_gattn.sql
12:23:02 SQL> --
12:23:02 SQL> 
12:23:02 SQL> -- usage: score_gattn.sql
12:23:02 SQL> 
12:23:02 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
12:23:02 SQL> 
12:23:02 SQL> DEFINE target	= 'gattn'
12:23:02 SQL> DEFINE model_name = 'forex14'
12:23:02 SQL> DEFINE bldtable	= 'bme'
12:23:02 SQL> DEFINE scoretable = 'sme'
12:23:02 SQL> DEFINE case_id	= 'prdate'
12:23:02 SQL> 
12:23:02 SQL> -- Define a variable to help me exclude some columns from some data mining calls
12:23:02 SQL> DEFINE exclude1 = "'&target','&case_id'"
12:23:02 SQL> 
12:23:02 SQL> -- Builds an SVM model using pl/sql.
12:23:02 SQL> 
12:23:02 SQL> -----------------------------------------------------------------------
12:23:02 SQL> --			    BUILD THE MODEL
12:23:02 SQL> -----------------------------------------------------------------------
12:23:02 SQL> 
12:23:02 SQL> -- Cleanup old build data preparation objects for repeat runs
12:23:02 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
12:23:02 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.01
12:23:02 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
12:23:02 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
12:23:02 SQL> 
12:23:02 SQL> 
12:23:02 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
12:23:02 SQL> --
12:23:02 SQL> -- DROP	TABLE svmc_settings ;
12:23:02 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
12:23:02 SQL> -- DELETE svmc_settings;
12:23:02 SQL> 
12:23:02 SQL> -- The default classification algorithm is Naive Bayes. So override
12:23:02 SQL> -- this choice to SVM using a settings table.
12:23:02 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
12:23:02 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
12:23:02 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
12:23:02 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
12:23:02 SQL> -- models.
12:23:02 SQL> --
12:23:02 SQL> 
12:23:02 SQL> -- Do this once and then comment it out.
12:23:02 SQL> -- That makes script go faster.
12:23:02 SQL> -- BEGIN
12:23:02 SQL> -- -- Populate settings table
12:23:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:23:02 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
12:23:02 SQL> --
12:23:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:23:02 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
12:23:02 SQL> --
12:23:02 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:23:02 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
12:23:02 SQL> --   COMMIT;
12:23:02 SQL> -- END;
12:23:02 SQL> -- /
12:23:02 SQL> 
12:23:02 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
12:23:02 SQL> 
12:23:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
12:23:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:23:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
12:23:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:23:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
12:23:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:23:02 SQL> 
12:23:02 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
12:23:02   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:02   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:23:02 SQL> 
12:23:02 SQL> --------------------------------
12:23:02 SQL> -- PREPARE BUILD (TRAINING) DATA
12:23:02 SQL> --
12:23:02 SQL> 
12:23:02 SQL> -- 1. Missing Value treatment for all Predictors and
12:23:02 SQL> -- 2. Outlier Treatment and
12:23:02 SQL> -- 3. Normalization are performed below.
12:23:02 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
12:23:02 SQL> --    normalized here.
12:23:02 SQL> 
12:23:02 SQL> BEGIN
12:23:02   2  	-- Perform missing value treatment for all predictors
12:23:02   3  	-- create miss tables
12:23:02   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
12:23:02   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
12:23:02   6  
12:23:02   7  	-- populate miss tables
12:23:02   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
12:23:02   9  	  miss_table_name => 'svmc_miss_num',
12:23:02  10  	  data_table_name => '&bldtable',
12:23:02  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:23:02  12  
12:23:02  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
12:23:02  14  	  miss_table_name => 'svmc_miss_cat',
12:23:02  15  	  data_table_name => '&bldtable',
12:23:02  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:23:02  17  
12:23:02  18  	-- xform input data to replace missing values
12:23:02  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:23:02  20  	  miss_table_name => 'svmc_miss_num',
12:23:02  21  	  data_table_name => '&bldtable',
12:23:02  22  	  xform_view_name => 'xformed_build_miss_num');
12:23:02  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:23:02  24  	  miss_table_name => 'svmc_miss_cat',
12:23:02  25  	  data_table_name => '&bldtable',
12:23:02  26  	  xform_view_name => 'xformed_build_miss_cat');
12:23:02  27  
12:23:02  28  	-- Perform outlier treatment.
12:23:02  29  	-- create clip table
12:23:02  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
12:23:02  31  
12:23:02  32  	-- populate clip table
12:23:02  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
12:23:02  34  	  clip_table_name => 'svmc_clip',
12:23:02  35  	  data_table_name => '&bldtable',
12:23:02  36  	  tail_frac	  => 0.025,
12:23:02  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:23:02  38  
12:23:02  39  	-- xform input data to winsorized data
12:23:02  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
12:23:02  41  	  clip_table_name => 'svmc_clip',
12:23:02  42  	  data_table_name => '&bldtable',
12:23:02  43  	  xform_view_name => 'svmc_winsor');
12:23:02  44  
12:23:02  45  	-- create normalization table
12:23:02  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
12:23:02  47  
12:23:02  48  	-- populate normalization table based on winsorized data
12:23:02  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
12:23:02  50  	  norm_table_name => 'svmc_norm',
12:23:02  51  	  data_table_name => 'svmc_winsor',
12:23:02  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:23:02  53  
12:23:02  54  	-- normalize the original data
12:23:02  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:23:02  56  	  norm_table_name => 'svmc_norm',
12:23:02  57  	  data_table_name => '&bldtable',
12:23:02  58  	  xform_view_name => 'svmc_build_prep');
12:23:02  59  END;
12:23:02  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.00
12:23:20 SQL> 
12:23:20 SQL> ---------------------
12:23:20 SQL> -- CREATE A NEW MODEL
12:23:20 SQL> --
12:23:20 SQL> -- Cleanup old model with the same name for repeat runs
12:23:20 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
12:23:20   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:20   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.93
12:23:21 SQL> 
12:23:21 SQL> -- Build a new SVM Model
12:23:21 SQL> BEGIN
12:23:21   2  	DBMS_DATA_MINING.CREATE_MODEL(
12:23:21   3  	  model_name	      => '&model_name',
12:23:21   4  	  mining_function     => dbms_data_mining.classification,
12:23:21   5  	  data_table_name     => 'svmc_build_prep',
12:23:21   6  	  case_id_column_name => '&case_id',
12:23:21   7  	  target_column_name  => '&target',
12:23:21   8  	  settings_table_name => 'svmc_settings');
12:23:21   9  END;
12:23:21  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:29.95
12:23:51 SQL> 
12:23:51 SQL> -----------------------------------------------------------------------
12:23:51 SQL> --			       APPLY/score THE MODEL
12:23:51 SQL> -----------------------------------------------------------------------
12:23:51 SQL> 
12:23:51 SQL> -- Cleanup old scoring data preparation objects for repeat runs
12:23:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
12:23:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:23:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
12:23:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:23:51 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
12:23:51   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:51   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:23:51 SQL> -----------------------
12:23:51 SQL> -- PREPARE SCORING DATA
12:23:51 SQL> --
12:23:51 SQL> -- If the data for model creation has been prepared, then the data
12:23:51 SQL> -- to be scored using the model must be prepared in the same manner
12:23:51 SQL> -- in order to obtain meaningful results.
12:23:51 SQL> --
12:23:51 SQL> -- 1. Missing Value treatment for all Predictors and
12:23:51 SQL> -- 2. Normalization
12:23:51 SQL> -- No outlier treatment will be performed during test and apply. The
12:23:51 SQL> -- normalization step is sufficient, since the normalization parameters
12:23:51 SQL> -- already capture the effects of outlier treatment done with build data.
12:23:51 SQL> --
12:23:51 SQL> BEGIN
12:23:51   2  	-- Xform Test data to replace missing values
12:23:51   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:23:51   4  	  miss_table_name => 'svmc_miss_num',
12:23:51   5  	  data_table_name => '&scoretable',
12:23:51   6  	  xform_view_name => 'xformed_apply_miss_num');
12:23:51   7  
12:23:51   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:23:51   9  	  miss_table_name => 'svmc_miss_cat',
12:23:51  10  	  data_table_name => '&scoretable',
12:23:51  11  	  xform_view_name => 'xformed_apply_miss_cat');
12:23:51  12  
12:23:51  13  	-- Normalize the data to be scored
12:23:51  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:23:51  15  	  norm_table_name => 'svmc_norm',
12:23:51  16  	  data_table_name => '&scoretable',
12:23:51  17  	  xform_view_name => 'svmc_apply_prep');
12:23:51  18  END;
12:23:51  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
12:23:52 SQL> 
12:23:52 SQL> -- Use same model_name used in score_gattn.sql
12:23:52 SQL> DEFINE model_name = 'forex14'
12:23:52 SQL> 
12:23:52 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
12:23:52 SQL> 
12:23:52 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
12:23:52   2  SELECT
12:23:52   3  prdate
12:23:52   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
12:23:52   5  ,sysdate
12:23:52   6  ,SUBSTR(prdate,1,3)pair
12:23:52   7  ,SUBSTR(prdate,4,19)ydate
12:23:52   8  FROM svmc_apply_prep
12:23:52   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
12:23:52 SQL> @aud_score1day_gattn.sql	2010-12-30 12:10:00
12:23:52 SQL> --
12:23:52 SQL> -- aud_score1day_gattn.sql
12:23:52 SQL> --
12:23:52 SQL> 
12:23:52 SQL> CREATE OR REPLACE VIEW sme AS
12:23:52   2  SELECT
12:23:52   3  'aud'||m.ydate prdate
12:23:52   4  ,NULL gattn
12:23:52   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:23:52   6  ,eur_g00
12:23:52   7  ,eur_g01
12:23:52   8  ,eur_g02
12:23:52   9  ,eur_g03
12:23:52  10  ,eur_g04
12:23:52  11  ,eur_g05
12:23:52  12  ,eur_g06
12:23:52  13  ,eur_g07
12:23:52  14  ,eur_g08
12:23:52  15  ,eur_g09
12:23:52  16  ,eur_g10
12:23:52  17  ,eur_g11
12:23:52  18  ,eur_g12
12:23:52  19  ,eur_g13
12:23:52  20  ,eur_g14
12:23:52  21  ,eur_g15
12:23:52  22  ,eur_g16
12:23:52  23  ,eur_g17
12:23:52  24  ,eur_g18
12:23:52  25  ,eur_g19
12:23:52  26  ,eur_g20
12:23:52  27  ,eur_g21
12:23:52  28  ,eur_g22
12:23:52  29  ,eur_g23
12:23:52  30  ,eur_g24
12:23:52  31  ,eur_g25
12:23:52  32  ,eur_g26
12:23:52  33  ,eur_g27
12:23:52  34  ,eur_g28
12:23:52  35  ,eur_g29
12:23:52  36  ,eur_g30
12:23:52  37  ,eur_g31
12:23:52  38  ,eur_g32
12:23:52  39  ,eur_g33
12:23:52  40  ,eur_g34
12:23:52  41  ,eur_g35
12:23:52  42  ,eur_g36
12:23:52  43  ,eur_g37
12:23:52  44  ,eur_g38
12:23:52  45  ,eur_g39
12:23:52  46  ,eur_g40
12:23:52  47  ,eur_g41
12:23:52  48  ,aud_g00
12:23:52  49  ,aud_g01
12:23:52  50  ,aud_g02
12:23:52  51  ,aud_g03
12:23:52  52  ,aud_g04
12:23:52  53  ,aud_g05
12:23:52  54  ,aud_g06
12:23:52  55  ,aud_g07
12:23:52  56  ,aud_g08
12:23:52  57  ,aud_g09
12:23:52  58  ,aud_g10
12:23:52  59  ,aud_g11
12:23:52  60  ,aud_g12
12:23:52  61  ,aud_g13
12:23:52  62  ,aud_g14
12:23:52  63  ,aud_g15
12:23:52  64  ,aud_g16
12:23:52  65  ,aud_g17
12:23:52  66  ,aud_g18
12:23:52  67  ,aud_g19
12:23:52  68  ,aud_g20
12:23:52  69  ,aud_g21
12:23:52  70  ,aud_g22
12:23:52  71  ,aud_g23
12:23:52  72  ,aud_g24
12:23:52  73  ,aud_g25
12:23:52  74  ,aud_g26
12:23:52  75  ,aud_g27
12:23:52  76  ,aud_g28
12:23:52  77  ,aud_g29
12:23:52  78  ,aud_g30
12:23:52  79  ,aud_g31
12:23:52  80  ,aud_g32
12:23:52  81  ,aud_g33
12:23:52  82  ,aud_g34
12:23:52  83  ,aud_g35
12:23:52  84  ,aud_g36
12:23:52  85  ,aud_g37
12:23:52  86  ,aud_g38
12:23:52  87  ,aud_g39
12:23:52  88  ,aud_g40
12:23:52  89  ,aud_g41
12:23:52  90  ,gbp_g00
12:23:52  91  ,gbp_g01
12:23:52  92  ,gbp_g02
12:23:52  93  ,gbp_g03
12:23:52  94  ,gbp_g04
12:23:52  95  ,gbp_g05
12:23:52  96  ,gbp_g06
12:23:52  97  ,gbp_g07
12:23:52  98  ,gbp_g08
12:23:52  99  ,gbp_g09
12:23:52 100  ,gbp_g10
12:23:52 101  ,gbp_g11
12:23:52 102  ,gbp_g12
12:23:52 103  ,gbp_g13
12:23:52 104  ,gbp_g14
12:23:52 105  ,gbp_g15
12:23:52 106  ,gbp_g16
12:23:52 107  ,gbp_g17
12:23:52 108  ,gbp_g18
12:23:52 109  ,gbp_g19
12:23:52 110  ,gbp_g20
12:23:52 111  ,gbp_g21
12:23:52 112  ,gbp_g22
12:23:52 113  ,gbp_g23
12:23:52 114  ,gbp_g24
12:23:52 115  ,gbp_g25
12:23:52 116  ,gbp_g26
12:23:52 117  ,gbp_g27
12:23:52 118  ,gbp_g28
12:23:52 119  ,gbp_g29
12:23:52 120  ,gbp_g30
12:23:52 121  ,gbp_g31
12:23:52 122  ,gbp_g32
12:23:52 123  ,gbp_g33
12:23:52 124  ,gbp_g34
12:23:52 125  ,gbp_g35
12:23:52 126  ,gbp_g36
12:23:52 127  ,gbp_g37
12:23:52 128  ,gbp_g38
12:23:52 129  ,gbp_g39
12:23:52 130  ,gbp_g40
12:23:52 131  ,gbp_g41
12:23:52 132  ,jpy_g00
12:23:52 133  ,jpy_g01
12:23:52 134  ,jpy_g02
12:23:52 135  ,jpy_g03
12:23:52 136  ,jpy_g04
12:23:52 137  ,jpy_g05
12:23:52 138  ,jpy_g06
12:23:52 139  ,jpy_g07
12:23:52 140  ,jpy_g08
12:23:52 141  ,jpy_g09
12:23:52 142  ,jpy_g10
12:23:52 143  ,jpy_g11
12:23:52 144  ,jpy_g12
12:23:52 145  ,jpy_g13
12:23:52 146  ,jpy_g14
12:23:52 147  ,jpy_g15
12:23:52 148  ,jpy_g16
12:23:52 149  ,jpy_g17
12:23:52 150  ,jpy_g18
12:23:52 151  ,jpy_g19
12:23:52 152  ,jpy_g20
12:23:52 153  ,jpy_g21
12:23:52 154  ,jpy_g22
12:23:52 155  ,jpy_g23
12:23:52 156  ,jpy_g24
12:23:52 157  ,jpy_g25
12:23:52 158  ,jpy_g26
12:23:52 159  ,jpy_g27
12:23:52 160  ,jpy_g28
12:23:52 161  ,jpy_g29
12:23:52 162  ,jpy_g30
12:23:52 163  ,jpy_g31
12:23:52 164  ,jpy_g32
12:23:52 165  ,jpy_g33
12:23:52 166  ,jpy_g34
12:23:52 167  ,jpy_g35
12:23:52 168  ,jpy_g36
12:23:52 169  ,jpy_g37
12:23:52 170  ,jpy_g38
12:23:52 171  ,jpy_g39
12:23:52 172  ,jpy_g40
12:23:52 173  ,jpy_g41
12:23:52 174  ,cad_g00
12:23:52 175  ,cad_g01
12:23:52 176  ,cad_g02
12:23:52 177  ,cad_g03
12:23:52 178  ,cad_g04
12:23:52 179  ,cad_g05
12:23:52 180  ,cad_g06
12:23:52 181  ,cad_g07
12:23:52 182  ,cad_g08
12:23:52 183  ,cad_g09
12:23:52 184  ,cad_g10
12:23:52 185  ,cad_g11
12:23:52 186  ,cad_g12
12:23:52 187  ,cad_g13
12:23:52 188  ,cad_g14
12:23:52 189  ,cad_g15
12:23:52 190  ,cad_g16
12:23:52 191  ,cad_g17
12:23:52 192  ,cad_g18
12:23:52 193  ,cad_g19
12:23:52 194  ,cad_g20
12:23:52 195  ,cad_g21
12:23:52 196  ,cad_g22
12:23:52 197  ,cad_g23
12:23:52 198  ,cad_g24
12:23:52 199  ,cad_g25
12:23:52 200  ,cad_g26
12:23:52 201  ,cad_g27
12:23:52 202  ,cad_g28
12:23:52 203  ,cad_g29
12:23:52 204  ,cad_g30
12:23:52 205  ,cad_g31
12:23:52 206  ,cad_g32
12:23:52 207  ,cad_g33
12:23:52 208  ,cad_g34
12:23:52 209  ,cad_g35
12:23:52 210  ,cad_g36
12:23:52 211  ,cad_g37
12:23:52 212  ,cad_g38
12:23:52 213  ,cad_g39
12:23:52 214  ,cad_g40
12:23:52 215  ,cad_g41
12:23:52 216  ,chf_g00
12:23:52 217  ,chf_g01
12:23:52 218  ,chf_g02
12:23:52 219  ,chf_g03
12:23:52 220  ,chf_g04
12:23:52 221  ,chf_g05
12:23:52 222  ,chf_g06
12:23:52 223  ,chf_g07
12:23:52 224  ,chf_g08
12:23:52 225  ,chf_g09
12:23:52 226  ,chf_g10
12:23:52 227  ,chf_g11
12:23:52 228  ,chf_g12
12:23:52 229  ,chf_g13
12:23:52 230  ,chf_g14
12:23:52 231  ,chf_g15
12:23:52 232  ,chf_g16
12:23:52 233  ,chf_g17
12:23:52 234  ,chf_g18
12:23:52 235  ,chf_g19
12:23:52 236  ,chf_g20
12:23:52 237  ,chf_g21
12:23:52 238  ,chf_g22
12:23:52 239  ,chf_g23
12:23:52 240  ,chf_g24
12:23:52 241  ,chf_g25
12:23:52 242  ,chf_g26
12:23:52 243  ,chf_g27
12:23:52 244  ,chf_g28
12:23:52 245  ,chf_g29
12:23:52 246  ,chf_g30
12:23:52 247  ,chf_g31
12:23:52 248  ,chf_g32
12:23:52 249  ,chf_g33
12:23:52 250  ,chf_g34
12:23:52 251  ,chf_g35
12:23:52 252  ,chf_g36
12:23:52 253  ,chf_g37
12:23:52 254  ,chf_g38
12:23:52 255  ,chf_g39
12:23:52 256  ,chf_g40
12:23:52 257  ,chf_g41
12:23:52 258  FROM aud_ms6 m
12:23:52 259  WHERE m.ydate = '&1'||' '||'&2'
12:23:52 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'12:10:00'

View created.

Elapsed: 00:00:00.13
12:23:52 SQL> 
12:23:52 SQL> -- rpt
12:23:52 SQL> -- We should see just 1 row:
12:23:52 SQL> 
12:23:52 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
12:23:52 SQL> 
12:23:52 SQL> -- Build the model:
12:23:52 SQL> CREATE OR REPLACE VIEW bme AS
12:23:52   2  SELECT
12:23:52   3  'aud'||m.ydate prdate
12:23:52   4  ,gattn
12:23:52   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
12:23:52   6  ,eur_g00
12:23:52   7  ,eur_g01
12:23:52   8  ,eur_g02
12:23:52   9  ,eur_g03
12:23:52  10  ,eur_g04
12:23:52  11  ,eur_g05
12:23:52  12  ,eur_g06
12:23:52  13  ,eur_g07
12:23:52  14  ,eur_g08
12:23:52  15  ,eur_g09
12:23:52  16  ,eur_g10
12:23:52  17  ,eur_g11
12:23:52  18  ,eur_g12
12:23:52  19  ,eur_g13
12:23:52  20  ,eur_g14
12:23:52  21  ,eur_g15
12:23:52  22  ,eur_g16
12:23:52  23  ,eur_g17
12:23:52  24  ,eur_g18
12:23:52  25  ,eur_g19
12:23:52  26  ,eur_g20
12:23:52  27  ,eur_g21
12:23:52  28  ,eur_g22
12:23:52  29  ,eur_g23
12:23:52  30  ,eur_g24
12:23:52  31  ,eur_g25
12:23:52  32  ,eur_g26
12:23:52  33  ,eur_g27
12:23:52  34  ,eur_g28
12:23:52  35  ,eur_g29
12:23:52  36  ,eur_g30
12:23:52  37  ,eur_g31
12:23:52  38  ,eur_g32
12:23:52  39  ,eur_g33
12:23:52  40  ,eur_g34
12:23:52  41  ,eur_g35
12:23:52  42  ,eur_g36
12:23:52  43  ,eur_g37
12:23:52  44  ,eur_g38
12:23:52  45  ,eur_g39
12:23:52  46  ,eur_g40
12:23:52  47  ,eur_g41
12:23:52  48  ,aud_g00
12:23:52  49  ,aud_g01
12:23:52  50  ,aud_g02
12:23:52  51  ,aud_g03
12:23:52  52  ,aud_g04
12:23:52  53  ,aud_g05
12:23:52  54  ,aud_g06
12:23:52  55  ,aud_g07
12:23:52  56  ,aud_g08
12:23:52  57  ,aud_g09
12:23:52  58  ,aud_g10
12:23:52  59  ,aud_g11
12:23:52  60  ,aud_g12
12:23:52  61  ,aud_g13
12:23:52  62  ,aud_g14
12:23:52  63  ,aud_g15
12:23:52  64  ,aud_g16
12:23:52  65  ,aud_g17
12:23:52  66  ,aud_g18
12:23:52  67  ,aud_g19
12:23:52  68  ,aud_g20
12:23:52  69  ,aud_g21
12:23:52  70  ,aud_g22
12:23:52  71  ,aud_g23
12:23:52  72  ,aud_g24
12:23:52  73  ,aud_g25
12:23:52  74  ,aud_g26
12:23:52  75  ,aud_g27
12:23:52  76  ,aud_g28
12:23:52  77  ,aud_g29
12:23:52  78  ,aud_g30
12:23:52  79  ,aud_g31
12:23:52  80  ,aud_g32
12:23:52  81  ,aud_g33
12:23:52  82  ,aud_g34
12:23:52  83  ,aud_g35
12:23:52  84  ,aud_g36
12:23:52  85  ,aud_g37
12:23:52  86  ,aud_g38
12:23:52  87  ,aud_g39
12:23:52  88  ,aud_g40
12:23:52  89  ,aud_g41
12:23:52  90  ,gbp_g00
12:23:52  91  ,gbp_g01
12:23:52  92  ,gbp_g02
12:23:52  93  ,gbp_g03
12:23:52  94  ,gbp_g04
12:23:52  95  ,gbp_g05
12:23:52  96  ,gbp_g06
12:23:52  97  ,gbp_g07
12:23:52  98  ,gbp_g08
12:23:52  99  ,gbp_g09
12:23:52 100  ,gbp_g10
12:23:52 101  ,gbp_g11
12:23:52 102  ,gbp_g12
12:23:52 103  ,gbp_g13
12:23:52 104  ,gbp_g14
12:23:52 105  ,gbp_g15
12:23:52 106  ,gbp_g16
12:23:52 107  ,gbp_g17
12:23:52 108  ,gbp_g18
12:23:52 109  ,gbp_g19
12:23:52 110  ,gbp_g20
12:23:52 111  ,gbp_g21
12:23:52 112  ,gbp_g22
12:23:52 113  ,gbp_g23
12:23:52 114  ,gbp_g24
12:23:52 115  ,gbp_g25
12:23:52 116  ,gbp_g26
12:23:52 117  ,gbp_g27
12:23:52 118  ,gbp_g28
12:23:52 119  ,gbp_g29
12:23:52 120  ,gbp_g30
12:23:52 121  ,gbp_g31
12:23:52 122  ,gbp_g32
12:23:52 123  ,gbp_g33
12:23:52 124  ,gbp_g34
12:23:52 125  ,gbp_g35
12:23:52 126  ,gbp_g36
12:23:52 127  ,gbp_g37
12:23:52 128  ,gbp_g38
12:23:52 129  ,gbp_g39
12:23:52 130  ,gbp_g40
12:23:52 131  ,gbp_g41
12:23:52 132  ,jpy_g00
12:23:52 133  ,jpy_g01
12:23:52 134  ,jpy_g02
12:23:52 135  ,jpy_g03
12:23:52 136  ,jpy_g04
12:23:52 137  ,jpy_g05
12:23:52 138  ,jpy_g06
12:23:52 139  ,jpy_g07
12:23:52 140  ,jpy_g08
12:23:52 141  ,jpy_g09
12:23:52 142  ,jpy_g10
12:23:52 143  ,jpy_g11
12:23:52 144  ,jpy_g12
12:23:52 145  ,jpy_g13
12:23:52 146  ,jpy_g14
12:23:52 147  ,jpy_g15
12:23:52 148  ,jpy_g16
12:23:52 149  ,jpy_g17
12:23:52 150  ,jpy_g18
12:23:52 151  ,jpy_g19
12:23:52 152  ,jpy_g20
12:23:52 153  ,jpy_g21
12:23:52 154  ,jpy_g22
12:23:52 155  ,jpy_g23
12:23:52 156  ,jpy_g24
12:23:52 157  ,jpy_g25
12:23:52 158  ,jpy_g26
12:23:52 159  ,jpy_g27
12:23:52 160  ,jpy_g28
12:23:52 161  ,jpy_g29
12:23:52 162  ,jpy_g30
12:23:52 163  ,jpy_g31
12:23:52 164  ,jpy_g32
12:23:52 165  ,jpy_g33
12:23:52 166  ,jpy_g34
12:23:52 167  ,jpy_g35
12:23:52 168  ,jpy_g36
12:23:52 169  ,jpy_g37
12:23:52 170  ,jpy_g38
12:23:52 171  ,jpy_g39
12:23:52 172  ,jpy_g40
12:23:52 173  ,jpy_g41
12:23:52 174  ,cad_g00
12:23:52 175  ,cad_g01
12:23:52 176  ,cad_g02
12:23:52 177  ,cad_g03
12:23:52 178  ,cad_g04
12:23:52 179  ,cad_g05
12:23:52 180  ,cad_g06
12:23:52 181  ,cad_g07
12:23:52 182  ,cad_g08
12:23:52 183  ,cad_g09
12:23:52 184  ,cad_g10
12:23:52 185  ,cad_g11
12:23:52 186  ,cad_g12
12:23:52 187  ,cad_g13
12:23:52 188  ,cad_g14
12:23:52 189  ,cad_g15
12:23:52 190  ,cad_g16
12:23:52 191  ,cad_g17
12:23:52 192  ,cad_g18
12:23:52 193  ,cad_g19
12:23:52 194  ,cad_g20
12:23:52 195  ,cad_g21
12:23:52 196  ,cad_g22
12:23:52 197  ,cad_g23
12:23:52 198  ,cad_g24
12:23:52 199  ,cad_g25
12:23:52 200  ,cad_g26
12:23:52 201  ,cad_g27
12:23:52 202  ,cad_g28
12:23:52 203  ,cad_g29
12:23:52 204  ,cad_g30
12:23:52 205  ,cad_g31
12:23:52 206  ,cad_g32
12:23:52 207  ,cad_g33
12:23:52 208  ,cad_g34
12:23:52 209  ,cad_g35
12:23:52 210  ,cad_g36
12:23:52 211  ,cad_g37
12:23:52 212  ,cad_g38
12:23:52 213  ,cad_g39
12:23:52 214  ,cad_g40
12:23:52 215  ,cad_g41
12:23:52 216  ,chf_g00
12:23:52 217  ,chf_g01
12:23:52 218  ,chf_g02
12:23:52 219  ,chf_g03
12:23:52 220  ,chf_g04
12:23:52 221  ,chf_g05
12:23:52 222  ,chf_g06
12:23:52 223  ,chf_g07
12:23:52 224  ,chf_g08
12:23:52 225  ,chf_g09
12:23:52 226  ,chf_g10
12:23:52 227  ,chf_g11
12:23:52 228  ,chf_g12
12:23:52 229  ,chf_g13
12:23:52 230  ,chf_g14
12:23:52 231  ,chf_g15
12:23:52 232  ,chf_g16
12:23:52 233  ,chf_g17
12:23:52 234  ,chf_g18
12:23:52 235  ,chf_g19
12:23:52 236  ,chf_g20
12:23:52 237  ,chf_g21
12:23:52 238  ,chf_g22
12:23:52 239  ,chf_g23
12:23:52 240  ,chf_g24
12:23:52 241  ,chf_g25
12:23:52 242  ,chf_g26
12:23:52 243  ,chf_g27
12:23:52 244  ,chf_g28
12:23:52 245  ,chf_g29
12:23:52 246  ,chf_g30
12:23:52 247  ,chf_g31
12:23:52 248  ,chf_g32
12:23:52 249  ,chf_g33
12:23:52 250  ,chf_g34
12:23:52 251  ,chf_g35
12:23:52 252  ,chf_g36
12:23:52 253  ,chf_g37
12:23:52 254  ,chf_g38
12:23:52 255  ,chf_g39
12:23:52 256  ,chf_g40
12:23:52 257  ,chf_g41
12:23:52 258  FROM aud_ms6 m
12:23:52 259  WHERE gattn IN('nup','up')
12:23:52 260  AND 1+m.ydate < '&1'||' '||'&2'
12:23:52 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'12:10:00'

View created.

Elapsed: 00:00:00.11
12:23:52 SQL> 
12:23:52 SQL> -- rpt
12:23:52 SQL> 
12:23:52 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13044
up	     6397

Elapsed: 00:00:00.04
12:23:53 SQL> 
12:23:53 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 12:05:00

Elapsed: 00:00:00.03
12:23:53 SQL> 
12:23:53 SQL> -- Now build model from bme and score sme
12:23:53 SQL> @score1gattn.sql
12:23:53 SQL> -- score1gattn.sql
12:23:53 SQL> 
12:23:53 SQL> -- Does the 1st SVM score
12:23:53 SQL> 
12:23:53 SQL> -- Fill up svmc_apply_prep
12:23:53 SQL> @score_gattn.sql
12:23:53 SQL> --
12:23:53 SQL> -- score_gattn.sql
12:23:53 SQL> --
12:23:53 SQL> 
12:23:53 SQL> -- usage: score_gattn.sql
12:23:53 SQL> 
12:23:53 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
12:23:53 SQL> 
12:23:53 SQL> DEFINE target	= 'gattn'
12:23:53 SQL> DEFINE model_name = 'forex14'
12:23:53 SQL> DEFINE bldtable	= 'bme'
12:23:53 SQL> DEFINE scoretable = 'sme'
12:23:53 SQL> DEFINE case_id	= 'prdate'
12:23:53 SQL> 
12:23:53 SQL> -- Define a variable to help me exclude some columns from some data mining calls
12:23:53 SQL> DEFINE exclude1 = "'&target','&case_id'"
12:23:53 SQL> 
12:23:53 SQL> -- Builds an SVM model using pl/sql.
12:23:53 SQL> 
12:23:53 SQL> -----------------------------------------------------------------------
12:23:53 SQL> --			    BUILD THE MODEL
12:23:53 SQL> -----------------------------------------------------------------------
12:23:53 SQL> 
12:23:53 SQL> -- Cleanup old build data preparation objects for repeat runs
12:23:53 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
12:23:53 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
12:23:53 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
12:23:53 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
12:23:53 SQL> 
12:23:53 SQL> 
12:23:53 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
12:23:53 SQL> --
12:23:53 SQL> -- DROP	TABLE svmc_settings ;
12:23:53 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
12:23:53 SQL> -- DELETE svmc_settings;
12:23:53 SQL> 
12:23:53 SQL> -- The default classification algorithm is Naive Bayes. So override
12:23:53 SQL> -- this choice to SVM using a settings table.
12:23:53 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
12:23:53 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
12:23:53 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
12:23:53 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
12:23:53 SQL> -- models.
12:23:53 SQL> --
12:23:53 SQL> 
12:23:53 SQL> -- Do this once and then comment it out.
12:23:53 SQL> -- That makes script go faster.
12:23:53 SQL> -- BEGIN
12:23:53 SQL> -- -- Populate settings table
12:23:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:23:53 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
12:23:53 SQL> --
12:23:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:23:53 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
12:23:53 SQL> --
12:23:53 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
12:23:53 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
12:23:53 SQL> --   COMMIT;
12:23:53 SQL> -- END;
12:23:53 SQL> -- /
12:23:53 SQL> 
12:23:53 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
12:23:53 SQL> 
12:23:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
12:23:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:23:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
12:23:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:23:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
12:23:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:23:53 SQL> 
12:23:53 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
12:23:53   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:23:53   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:23:53 SQL> 
12:23:53 SQL> --------------------------------
12:23:53 SQL> -- PREPARE BUILD (TRAINING) DATA
12:23:53 SQL> --
12:23:53 SQL> 
12:23:53 SQL> -- 1. Missing Value treatment for all Predictors and
12:23:53 SQL> -- 2. Outlier Treatment and
12:23:53 SQL> -- 3. Normalization are performed below.
12:23:53 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
12:23:53 SQL> --    normalized here.
12:23:53 SQL> 
12:23:53 SQL> BEGIN
12:23:53   2  	-- Perform missing value treatment for all predictors
12:23:53   3  	-- create miss tables
12:23:53   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
12:23:53   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
12:23:53   6  
12:23:53   7  	-- populate miss tables
12:23:53   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
12:23:53   9  	  miss_table_name => 'svmc_miss_num',
12:23:53  10  	  data_table_name => '&bldtable',
12:23:53  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:23:53  12  
12:23:53  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
12:23:53  14  	  miss_table_name => 'svmc_miss_cat',
12:23:53  15  	  data_table_name => '&bldtable',
12:23:53  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:23:53  17  
12:23:53  18  	-- xform input data to replace missing values
12:23:53  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:23:53  20  	  miss_table_name => 'svmc_miss_num',
12:23:53  21  	  data_table_name => '&bldtable',
12:23:53  22  	  xform_view_name => 'xformed_build_miss_num');
12:23:53  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:23:53  24  	  miss_table_name => 'svmc_miss_cat',
12:23:53  25  	  data_table_name => '&bldtable',
12:23:53  26  	  xform_view_name => 'xformed_build_miss_cat');
12:23:53  27  
12:23:53  28  	-- Perform outlier treatment.
12:23:53  29  	-- create clip table
12:23:53  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
12:23:53  31  
12:23:53  32  	-- populate clip table
12:23:53  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
12:23:53  34  	  clip_table_name => 'svmc_clip',
12:23:53  35  	  data_table_name => '&bldtable',
12:23:53  36  	  tail_frac	  => 0.025,
12:23:53  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:23:53  38  
12:23:53  39  	-- xform input data to winsorized data
12:23:53  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
12:23:53  41  	  clip_table_name => 'svmc_clip',
12:23:53  42  	  data_table_name => '&bldtable',
12:23:53  43  	  xform_view_name => 'svmc_winsor');
12:23:53  44  
12:23:53  45  	-- create normalization table
12:23:53  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
12:23:53  47  
12:23:53  48  	-- populate normalization table based on winsorized data
12:23:53  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
12:23:53  50  	  norm_table_name => 'svmc_norm',
12:23:53  51  	  data_table_name => 'svmc_winsor',
12:23:53  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
12:23:53  53  
12:23:53  54  	-- normalize the original data
12:23:53  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:23:53  56  	  norm_table_name => 'svmc_norm',
12:23:53  57  	  data_table_name => '&bldtable',
12:23:53  58  	  xform_view_name => 'svmc_build_prep');
12:23:53  59  END;
12:23:53  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.00
12:24:11 SQL> 
12:24:11 SQL> ---------------------
12:24:11 SQL> -- CREATE A NEW MODEL
12:24:11 SQL> --
12:24:11 SQL> -- Cleanup old model with the same name for repeat runs
12:24:11 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
12:24:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:24:11   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.01
12:24:12 SQL> 
12:24:12 SQL> -- Build a new SVM Model
12:24:12 SQL> BEGIN
12:24:12   2  	DBMS_DATA_MINING.CREATE_MODEL(
12:24:12   3  	  model_name	      => '&model_name',
12:24:12   4  	  mining_function     => dbms_data_mining.classification,
12:24:12   5  	  data_table_name     => 'svmc_build_prep',
12:24:12   6  	  case_id_column_name => '&case_id',
12:24:12   7  	  target_column_name  => '&target',
12:24:12   8  	  settings_table_name => 'svmc_settings');
12:24:12   9  END;
12:24:12  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.03
12:24:40 SQL> 
12:24:40 SQL> -----------------------------------------------------------------------
12:24:40 SQL> --			       APPLY/score THE MODEL
12:24:40 SQL> -----------------------------------------------------------------------
12:24:40 SQL> 
12:24:40 SQL> -- Cleanup old scoring data preparation objects for repeat runs
12:24:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
12:24:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:24:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:24:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
12:24:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:24:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
12:24:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
12:24:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
12:24:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
12:24:40 SQL> -----------------------
12:24:40 SQL> -- PREPARE SCORING DATA
12:24:40 SQL> --
12:24:40 SQL> -- If the data for model creation has been prepared, then the data
12:24:40 SQL> -- to be scored using the model must be prepared in the same manner
12:24:40 SQL> -- in order to obtain meaningful results.
12:24:40 SQL> --
12:24:40 SQL> -- 1. Missing Value treatment for all Predictors and
12:24:40 SQL> -- 2. Normalization
12:24:40 SQL> -- No outlier treatment will be performed during test and apply. The
12:24:40 SQL> -- normalization step is sufficient, since the normalization parameters
12:24:40 SQL> -- already capture the effects of outlier treatment done with build data.
12:24:40 SQL> --
12:24:40 SQL> BEGIN
12:24:40   2  	-- Xform Test data to replace missing values
12:24:40   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
12:24:40   4  	  miss_table_name => 'svmc_miss_num',
12:24:40   5  	  data_table_name => '&scoretable',
12:24:40   6  	  xform_view_name => 'xformed_apply_miss_num');
12:24:40   7  
12:24:40   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
12:24:40   9  	  miss_table_name => 'svmc_miss_cat',
12:24:40  10  	  data_table_name => '&scoretable',
12:24:40  11  	  xform_view_name => 'xformed_apply_miss_cat');
12:24:40  12  
12:24:40  13  	-- Normalize the data to be scored
12:24:40  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
12:24:40  15  	  norm_table_name => 'svmc_norm',
12:24:40  16  	  data_table_name => '&scoretable',
12:24:40  17  	  xform_view_name => 'svmc_apply_prep');
12:24:40  18  END;
12:24:40  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
12:24:41 SQL> 
12:24:41 SQL> -- Use same model_name used in score_gattn.sql
12:24:41 SQL> DEFINE model_name = 'forex14'
12:24:41 SQL> 
12:24:41 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
12:24:41 SQL> 
12:24:41 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
12:24:41   2  SELECT
12:24:41   3  prdate
12:24:41   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
12:24:41   5  ,sysdate
12:24:41   6  ,SUBSTR(prdate,1,3)pair
12:24:41   7  ,SUBSTR(prdate,4,19)ydate
12:24:41   8  FROM svmc_apply_prep
12:24:41   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
12:24:41 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
