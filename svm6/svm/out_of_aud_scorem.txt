
SQL*Plus: Release 11.2.0.1.0 Production on Thu Dec 30 13:29:38 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

13:29:38 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
13:29:38 SQL> 13:29:38 SQL> @aud_score1day.sql  2010-12-30 13:05:00
13:29:38 SQL> --
13:29:38 SQL> -- aud_score1day.sql
13:29:38 SQL> --
13:29:38 SQL> 
13:29:38 SQL> CREATE OR REPLACE VIEW sme AS
13:29:38   2  SELECT
13:29:38   3  'aud'||m.ydate prdate
13:29:38   4  ,NULL gatt
13:29:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:29:38   6  ,eur_g00
13:29:38   7  ,eur_g01
13:29:38   8  ,eur_g02
13:29:38   9  ,eur_g03
13:29:38  10  ,eur_g04
13:29:38  11  ,eur_g05
13:29:38  12  ,eur_g06
13:29:38  13  ,eur_g07
13:29:38  14  ,eur_g08
13:29:38  15  ,eur_g09
13:29:38  16  ,eur_g10
13:29:38  17  ,eur_g11
13:29:38  18  ,eur_g12
13:29:38  19  ,eur_g13
13:29:38  20  ,eur_g14
13:29:38  21  ,eur_g15
13:29:38  22  ,eur_g16
13:29:38  23  ,eur_g17
13:29:38  24  ,eur_g18
13:29:38  25  ,eur_g19
13:29:38  26  ,eur_g20
13:29:38  27  ,eur_g21
13:29:38  28  ,eur_g22
13:29:38  29  ,eur_g23
13:29:38  30  ,eur_g24
13:29:38  31  ,eur_g25
13:29:38  32  ,eur_g26
13:29:38  33  ,eur_g27
13:29:38  34  ,eur_g28
13:29:38  35  ,eur_g29
13:29:38  36  ,eur_g30
13:29:38  37  ,eur_g31
13:29:38  38  ,eur_g32
13:29:38  39  ,eur_g33
13:29:38  40  ,eur_g34
13:29:38  41  ,eur_g35
13:29:38  42  ,eur_g36
13:29:38  43  ,eur_g37
13:29:38  44  ,eur_g38
13:29:38  45  ,eur_g39
13:29:38  46  ,eur_g40
13:29:38  47  ,eur_g41
13:29:38  48  ,aud_g00
13:29:38  49  ,aud_g01
13:29:38  50  ,aud_g02
13:29:38  51  ,aud_g03
13:29:38  52  ,aud_g04
13:29:38  53  ,aud_g05
13:29:38  54  ,aud_g06
13:29:38  55  ,aud_g07
13:29:38  56  ,aud_g08
13:29:38  57  ,aud_g09
13:29:38  58  ,aud_g10
13:29:38  59  ,aud_g11
13:29:38  60  ,aud_g12
13:29:38  61  ,aud_g13
13:29:38  62  ,aud_g14
13:29:38  63  ,aud_g15
13:29:38  64  ,aud_g16
13:29:38  65  ,aud_g17
13:29:38  66  ,aud_g18
13:29:38  67  ,aud_g19
13:29:38  68  ,aud_g20
13:29:38  69  ,aud_g21
13:29:38  70  ,aud_g22
13:29:38  71  ,aud_g23
13:29:38  72  ,aud_g24
13:29:38  73  ,aud_g25
13:29:38  74  ,aud_g26
13:29:38  75  ,aud_g27
13:29:38  76  ,aud_g28
13:29:38  77  ,aud_g29
13:29:38  78  ,aud_g30
13:29:38  79  ,aud_g31
13:29:38  80  ,aud_g32
13:29:38  81  ,aud_g33
13:29:38  82  ,aud_g34
13:29:38  83  ,aud_g35
13:29:38  84  ,aud_g36
13:29:38  85  ,aud_g37
13:29:38  86  ,aud_g38
13:29:38  87  ,aud_g39
13:29:38  88  ,aud_g40
13:29:38  89  ,aud_g41
13:29:38  90  ,gbp_g00
13:29:38  91  ,gbp_g01
13:29:38  92  ,gbp_g02
13:29:38  93  ,gbp_g03
13:29:38  94  ,gbp_g04
13:29:38  95  ,gbp_g05
13:29:38  96  ,gbp_g06
13:29:38  97  ,gbp_g07
13:29:38  98  ,gbp_g08
13:29:38  99  ,gbp_g09
13:29:38 100  ,gbp_g10
13:29:38 101  ,gbp_g11
13:29:38 102  ,gbp_g12
13:29:38 103  ,gbp_g13
13:29:38 104  ,gbp_g14
13:29:38 105  ,gbp_g15
13:29:38 106  ,gbp_g16
13:29:38 107  ,gbp_g17
13:29:38 108  ,gbp_g18
13:29:38 109  ,gbp_g19
13:29:38 110  ,gbp_g20
13:29:38 111  ,gbp_g21
13:29:38 112  ,gbp_g22
13:29:38 113  ,gbp_g23
13:29:38 114  ,gbp_g24
13:29:38 115  ,gbp_g25
13:29:38 116  ,gbp_g26
13:29:38 117  ,gbp_g27
13:29:38 118  ,gbp_g28
13:29:38 119  ,gbp_g29
13:29:38 120  ,gbp_g30
13:29:38 121  ,gbp_g31
13:29:38 122  ,gbp_g32
13:29:38 123  ,gbp_g33
13:29:38 124  ,gbp_g34
13:29:38 125  ,gbp_g35
13:29:38 126  ,gbp_g36
13:29:38 127  ,gbp_g37
13:29:38 128  ,gbp_g38
13:29:38 129  ,gbp_g39
13:29:38 130  ,gbp_g40
13:29:38 131  ,gbp_g41
13:29:38 132  ,jpy_g00
13:29:38 133  ,jpy_g01
13:29:38 134  ,jpy_g02
13:29:38 135  ,jpy_g03
13:29:38 136  ,jpy_g04
13:29:38 137  ,jpy_g05
13:29:38 138  ,jpy_g06
13:29:38 139  ,jpy_g07
13:29:38 140  ,jpy_g08
13:29:38 141  ,jpy_g09
13:29:38 142  ,jpy_g10
13:29:38 143  ,jpy_g11
13:29:38 144  ,jpy_g12
13:29:38 145  ,jpy_g13
13:29:38 146  ,jpy_g14
13:29:38 147  ,jpy_g15
13:29:38 148  ,jpy_g16
13:29:38 149  ,jpy_g17
13:29:38 150  ,jpy_g18
13:29:38 151  ,jpy_g19
13:29:38 152  ,jpy_g20
13:29:38 153  ,jpy_g21
13:29:38 154  ,jpy_g22
13:29:38 155  ,jpy_g23
13:29:38 156  ,jpy_g24
13:29:38 157  ,jpy_g25
13:29:38 158  ,jpy_g26
13:29:38 159  ,jpy_g27
13:29:38 160  ,jpy_g28
13:29:38 161  ,jpy_g29
13:29:38 162  ,jpy_g30
13:29:38 163  ,jpy_g31
13:29:38 164  ,jpy_g32
13:29:38 165  ,jpy_g33
13:29:38 166  ,jpy_g34
13:29:38 167  ,jpy_g35
13:29:38 168  ,jpy_g36
13:29:38 169  ,jpy_g37
13:29:38 170  ,jpy_g38
13:29:38 171  ,jpy_g39
13:29:38 172  ,jpy_g40
13:29:38 173  ,jpy_g41
13:29:38 174  ,cad_g00
13:29:38 175  ,cad_g01
13:29:38 176  ,cad_g02
13:29:38 177  ,cad_g03
13:29:38 178  ,cad_g04
13:29:38 179  ,cad_g05
13:29:38 180  ,cad_g06
13:29:38 181  ,cad_g07
13:29:38 182  ,cad_g08
13:29:38 183  ,cad_g09
13:29:38 184  ,cad_g10
13:29:38 185  ,cad_g11
13:29:38 186  ,cad_g12
13:29:38 187  ,cad_g13
13:29:38 188  ,cad_g14
13:29:38 189  ,cad_g15
13:29:38 190  ,cad_g16
13:29:38 191  ,cad_g17
13:29:38 192  ,cad_g18
13:29:38 193  ,cad_g19
13:29:38 194  ,cad_g20
13:29:38 195  ,cad_g21
13:29:38 196  ,cad_g22
13:29:38 197  ,cad_g23
13:29:38 198  ,cad_g24
13:29:38 199  ,cad_g25
13:29:38 200  ,cad_g26
13:29:38 201  ,cad_g27
13:29:38 202  ,cad_g28
13:29:38 203  ,cad_g29
13:29:38 204  ,cad_g30
13:29:38 205  ,cad_g31
13:29:38 206  ,cad_g32
13:29:38 207  ,cad_g33
13:29:38 208  ,cad_g34
13:29:38 209  ,cad_g35
13:29:38 210  ,cad_g36
13:29:38 211  ,cad_g37
13:29:38 212  ,cad_g38
13:29:38 213  ,cad_g39
13:29:38 214  ,cad_g40
13:29:38 215  ,cad_g41
13:29:38 216  ,chf_g00
13:29:38 217  ,chf_g01
13:29:38 218  ,chf_g02
13:29:38 219  ,chf_g03
13:29:38 220  ,chf_g04
13:29:38 221  ,chf_g05
13:29:38 222  ,chf_g06
13:29:38 223  ,chf_g07
13:29:38 224  ,chf_g08
13:29:38 225  ,chf_g09
13:29:38 226  ,chf_g10
13:29:38 227  ,chf_g11
13:29:38 228  ,chf_g12
13:29:38 229  ,chf_g13
13:29:38 230  ,chf_g14
13:29:38 231  ,chf_g15
13:29:38 232  ,chf_g16
13:29:38 233  ,chf_g17
13:29:38 234  ,chf_g18
13:29:38 235  ,chf_g19
13:29:38 236  ,chf_g20
13:29:38 237  ,chf_g21
13:29:38 238  ,chf_g22
13:29:38 239  ,chf_g23
13:29:38 240  ,chf_g24
13:29:38 241  ,chf_g25
13:29:38 242  ,chf_g26
13:29:38 243  ,chf_g27
13:29:38 244  ,chf_g28
13:29:38 245  ,chf_g29
13:29:38 246  ,chf_g30
13:29:38 247  ,chf_g31
13:29:38 248  ,chf_g32
13:29:38 249  ,chf_g33
13:29:38 250  ,chf_g34
13:29:38 251  ,chf_g35
13:29:38 252  ,chf_g36
13:29:38 253  ,chf_g37
13:29:38 254  ,chf_g38
13:29:38 255  ,chf_g39
13:29:38 256  ,chf_g40
13:29:38 257  ,chf_g41
13:29:38 258  FROM aud_ms6 m
13:29:38 259  WHERE m.ydate = '&1'||' '||'&2'
13:29:38 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'13:05:00'

View created.

Elapsed: 00:00:00.16
13:29:38 SQL> 
13:29:38 SQL> -- rpt
13:29:38 SQL> -- We should see just 1 row:
13:29:38 SQL> 
13:29:38 SQL> SELECT COUNT(prdate) FROM sme
13:29:38   2  
13:29:38 SQL> -- Build the model:
13:29:38 SQL> CREATE OR REPLACE VIEW bme AS
13:29:38   2  SELECT
13:29:38   3  'aud'||m.ydate prdate
13:29:38   4  ,gatt
13:29:38   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:29:38   6  ,eur_g00
13:29:38   7  ,eur_g01
13:29:38   8  ,eur_g02
13:29:38   9  ,eur_g03
13:29:38  10  ,eur_g04
13:29:38  11  ,eur_g05
13:29:38  12  ,eur_g06
13:29:38  13  ,eur_g07
13:29:38  14  ,eur_g08
13:29:38  15  ,eur_g09
13:29:38  16  ,eur_g10
13:29:38  17  ,eur_g11
13:29:38  18  ,eur_g12
13:29:38  19  ,eur_g13
13:29:38  20  ,eur_g14
13:29:38  21  ,eur_g15
13:29:38  22  ,eur_g16
13:29:38  23  ,eur_g17
13:29:38  24  ,eur_g18
13:29:38  25  ,eur_g19
13:29:38  26  ,eur_g20
13:29:38  27  ,eur_g21
13:29:38  28  ,eur_g22
13:29:38  29  ,eur_g23
13:29:38  30  ,eur_g24
13:29:38  31  ,eur_g25
13:29:38  32  ,eur_g26
13:29:38  33  ,eur_g27
13:29:38  34  ,eur_g28
13:29:38  35  ,eur_g29
13:29:38  36  ,eur_g30
13:29:38  37  ,eur_g31
13:29:38  38  ,eur_g32
13:29:38  39  ,eur_g33
13:29:38  40  ,eur_g34
13:29:38  41  ,eur_g35
13:29:38  42  ,eur_g36
13:29:38  43  ,eur_g37
13:29:38  44  ,eur_g38
13:29:38  45  ,eur_g39
13:29:38  46  ,eur_g40
13:29:38  47  ,eur_g41
13:29:38  48  ,aud_g00
13:29:38  49  ,aud_g01
13:29:38  50  ,aud_g02
13:29:38  51  ,aud_g03
13:29:38  52  ,aud_g04
13:29:38  53  ,aud_g05
13:29:38  54  ,aud_g06
13:29:38  55  ,aud_g07
13:29:38  56  ,aud_g08
13:29:38  57  ,aud_g09
13:29:38  58  ,aud_g10
13:29:38  59  ,aud_g11
13:29:38  60  ,aud_g12
13:29:38  61  ,aud_g13
13:29:38  62  ,aud_g14
13:29:38  63  ,aud_g15
13:29:38  64  ,aud_g16
13:29:38  65  ,aud_g17
13:29:38  66  ,aud_g18
13:29:38  67  ,aud_g19
13:29:38  68  ,aud_g20
13:29:38  69  ,aud_g21
13:29:38  70  ,aud_g22
13:29:38  71  ,aud_g23
13:29:38  72  ,aud_g24
13:29:38  73  ,aud_g25
13:29:38  74  ,aud_g26
13:29:38  75  ,aud_g27
13:29:38  76  ,aud_g28
13:29:38  77  ,aud_g29
13:29:38  78  ,aud_g30
13:29:38  79  ,aud_g31
13:29:38  80  ,aud_g32
13:29:38  81  ,aud_g33
13:29:38  82  ,aud_g34
13:29:38  83  ,aud_g35
13:29:38  84  ,aud_g36
13:29:38  85  ,aud_g37
13:29:38  86  ,aud_g38
13:29:38  87  ,aud_g39
13:29:38  88  ,aud_g40
13:29:38  89  ,aud_g41
13:29:38  90  ,gbp_g00
13:29:38  91  ,gbp_g01
13:29:38  92  ,gbp_g02
13:29:38  93  ,gbp_g03
13:29:38  94  ,gbp_g04
13:29:38  95  ,gbp_g05
13:29:38  96  ,gbp_g06
13:29:38  97  ,gbp_g07
13:29:38  98  ,gbp_g08
13:29:38  99  ,gbp_g09
13:29:38 100  ,gbp_g10
13:29:38 101  ,gbp_g11
13:29:38 102  ,gbp_g12
13:29:38 103  ,gbp_g13
13:29:38 104  ,gbp_g14
13:29:38 105  ,gbp_g15
13:29:38 106  ,gbp_g16
13:29:38 107  ,gbp_g17
13:29:38 108  ,gbp_g18
13:29:38 109  ,gbp_g19
13:29:38 110  ,gbp_g20
13:29:38 111  ,gbp_g21
13:29:38 112  ,gbp_g22
13:29:38 113  ,gbp_g23
13:29:38 114  ,gbp_g24
13:29:38 115  ,gbp_g25
13:29:38 116  ,gbp_g26
13:29:38 117  ,gbp_g27
13:29:38 118  ,gbp_g28
13:29:38 119  ,gbp_g29
13:29:38 120  ,gbp_g30
13:29:38 121  ,gbp_g31
13:29:38 122  ,gbp_g32
13:29:38 123  ,gbp_g33
13:29:38 124  ,gbp_g34
13:29:38 125  ,gbp_g35
13:29:38 126  ,gbp_g36
13:29:38 127  ,gbp_g37
13:29:38 128  ,gbp_g38
13:29:38 129  ,gbp_g39
13:29:38 130  ,gbp_g40
13:29:38 131  ,gbp_g41
13:29:38 132  ,jpy_g00
13:29:38 133  ,jpy_g01
13:29:38 134  ,jpy_g02
13:29:38 135  ,jpy_g03
13:29:38 136  ,jpy_g04
13:29:38 137  ,jpy_g05
13:29:38 138  ,jpy_g06
13:29:38 139  ,jpy_g07
13:29:38 140  ,jpy_g08
13:29:38 141  ,jpy_g09
13:29:38 142  ,jpy_g10
13:29:38 143  ,jpy_g11
13:29:38 144  ,jpy_g12
13:29:38 145  ,jpy_g13
13:29:38 146  ,jpy_g14
13:29:38 147  ,jpy_g15
13:29:38 148  ,jpy_g16
13:29:38 149  ,jpy_g17
13:29:38 150  ,jpy_g18
13:29:38 151  ,jpy_g19
13:29:38 152  ,jpy_g20
13:29:38 153  ,jpy_g21
13:29:38 154  ,jpy_g22
13:29:38 155  ,jpy_g23
13:29:38 156  ,jpy_g24
13:29:38 157  ,jpy_g25
13:29:38 158  ,jpy_g26
13:29:38 159  ,jpy_g27
13:29:38 160  ,jpy_g28
13:29:38 161  ,jpy_g29
13:29:38 162  ,jpy_g30
13:29:38 163  ,jpy_g31
13:29:38 164  ,jpy_g32
13:29:38 165  ,jpy_g33
13:29:38 166  ,jpy_g34
13:29:38 167  ,jpy_g35
13:29:38 168  ,jpy_g36
13:29:38 169  ,jpy_g37
13:29:38 170  ,jpy_g38
13:29:38 171  ,jpy_g39
13:29:38 172  ,jpy_g40
13:29:38 173  ,jpy_g41
13:29:38 174  ,cad_g00
13:29:38 175  ,cad_g01
13:29:38 176  ,cad_g02
13:29:38 177  ,cad_g03
13:29:38 178  ,cad_g04
13:29:38 179  ,cad_g05
13:29:38 180  ,cad_g06
13:29:38 181  ,cad_g07
13:29:38 182  ,cad_g08
13:29:38 183  ,cad_g09
13:29:38 184  ,cad_g10
13:29:38 185  ,cad_g11
13:29:38 186  ,cad_g12
13:29:38 187  ,cad_g13
13:29:38 188  ,cad_g14
13:29:38 189  ,cad_g15
13:29:38 190  ,cad_g16
13:29:38 191  ,cad_g17
13:29:38 192  ,cad_g18
13:29:38 193  ,cad_g19
13:29:38 194  ,cad_g20
13:29:38 195  ,cad_g21
13:29:38 196  ,cad_g22
13:29:38 197  ,cad_g23
13:29:38 198  ,cad_g24
13:29:38 199  ,cad_g25
13:29:38 200  ,cad_g26
13:29:38 201  ,cad_g27
13:29:38 202  ,cad_g28
13:29:38 203  ,cad_g29
13:29:38 204  ,cad_g30
13:29:38 205  ,cad_g31
13:29:38 206  ,cad_g32
13:29:38 207  ,cad_g33
13:29:38 208  ,cad_g34
13:29:38 209  ,cad_g35
13:29:38 210  ,cad_g36
13:29:38 211  ,cad_g37
13:29:38 212  ,cad_g38
13:29:38 213  ,cad_g39
13:29:38 214  ,cad_g40
13:29:38 215  ,cad_g41
13:29:38 216  ,chf_g00
13:29:38 217  ,chf_g01
13:29:38 218  ,chf_g02
13:29:38 219  ,chf_g03
13:29:38 220  ,chf_g04
13:29:38 221  ,chf_g05
13:29:38 222  ,chf_g06
13:29:38 223  ,chf_g07
13:29:38 224  ,chf_g08
13:29:38 225  ,chf_g09
13:29:38 226  ,chf_g10
13:29:38 227  ,chf_g11
13:29:38 228  ,chf_g12
13:29:38 229  ,chf_g13
13:29:38 230  ,chf_g14
13:29:38 231  ,chf_g15
13:29:38 232  ,chf_g16
13:29:38 233  ,chf_g17
13:29:38 234  ,chf_g18
13:29:38 235  ,chf_g19
13:29:38 236  ,chf_g20
13:29:38 237  ,chf_g21
13:29:38 238  ,chf_g22
13:29:38 239  ,chf_g23
13:29:38 240  ,chf_g24
13:29:38 241  ,chf_g25
13:29:38 242  ,chf_g26
13:29:38 243  ,chf_g27
13:29:38 244  ,chf_g28
13:29:38 245  ,chf_g29
13:29:38 246  ,chf_g30
13:29:38 247  ,chf_g31
13:29:38 248  ,chf_g32
13:29:38 249  ,chf_g33
13:29:38 250  ,chf_g34
13:29:38 251  ,chf_g35
13:29:38 252  ,chf_g36
13:29:38 253  ,chf_g37
13:29:38 254  ,chf_g38
13:29:38 255  ,chf_g39
13:29:38 256  ,chf_g40
13:29:38 257  ,chf_g41
13:29:38 258  FROM aud_ms6 m
13:29:38 259  WHERE gatt IN('nup','up')
13:29:38 260  AND 1+m.ydate < '&1'||' '||'&2'
13:29:38 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'13:05:00'

View created.

Elapsed: 00:00:00.13
13:29:39 SQL> 
13:29:39 SQL> -- rpt
13:29:39 SQL> 
13:29:39 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
13:29:39   2  
13:29:39 SQL> SELECT MAX(prdate) FROM bme
13:29:39   2  
13:29:39 SQL> -- Now build model from bme and score sme
13:29:39 SQL> @score1.sql
13:29:39 SQL> -- score1.sql
13:29:39 SQL> 
13:29:39 SQL> -- Does the 1st SVM score
13:29:39 SQL> 
13:29:39 SQL> -- Fill up svmc_apply_prep
13:29:39 SQL> @score.sql
13:29:39 SQL> --
13:29:39 SQL> -- score.sql
13:29:39 SQL> --
13:29:39 SQL> 
13:29:39 SQL> -- usage: score.sql
13:29:39 SQL> 
13:29:39 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
13:29:39 SQL> 
13:29:39 SQL> DEFINE target	= 'gatt'
13:29:39 SQL> DEFINE model_name = 'forex14'
13:29:39 SQL> DEFINE bldtable	= 'bme'
13:29:39 SQL> DEFINE scoretable = 'sme'
13:29:39 SQL> DEFINE case_id	= 'prdate'
13:29:39 SQL> 
13:29:39 SQL> -- Define a variable to help me exclude some columns from some data mining calls
13:29:39 SQL> DEFINE exclude1 = "'&target','&case_id'"
13:29:39 SQL> 
13:29:39 SQL> -- Builds an SVM model using pl/sql.
13:29:39 SQL> 
13:29:39 SQL> -----------------------------------------------------------------------
13:29:39 SQL> --			    BUILD THE MODEL
13:29:39 SQL> -----------------------------------------------------------------------
13:29:39 SQL> 
13:29:39 SQL> -- Cleanup old build data preparation objects for repeat runs
13:29:39 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
13:29:39 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
13:29:39 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
13:29:39 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
13:29:39 SQL> 
13:29:39 SQL> 
13:29:39 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
13:29:39 SQL> --
13:29:39 SQL> -- DROP	TABLE svmc_settings ;
13:29:39 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
13:29:39 SQL> -- DELETE svmc_settings;
13:29:39 SQL> 
13:29:39 SQL> -- The default classification algorithm is Naive Bayes. So override
13:29:39 SQL> -- this choice to SVM using a settings table.
13:29:39 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
13:29:39 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
13:29:39 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
13:29:39 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
13:29:39 SQL> -- models.
13:29:39 SQL> --
13:29:39 SQL> 
13:29:39 SQL> -- Do this once and then comment it out.
13:29:39 SQL> -- That makes script go faster.
13:29:39 SQL> -- BEGIN
13:29:39 SQL> -- -- Populate settings table
13:29:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:29:39 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
13:29:39 SQL> --
13:29:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:29:39 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
13:29:39 SQL> --
13:29:39 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:29:39 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
13:29:39 SQL> --   COMMIT;
13:29:39 SQL> -- END;
13:29:39 SQL> -- /
13:29:39 SQL> 
13:29:39 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
13:29:39 SQL> 
13:29:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
13:29:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:29:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
13:29:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
13:29:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:29:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:29:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
13:29:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:29:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:29:39 SQL> 
13:29:39 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
13:29:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:29:39   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:29:39 SQL> 
13:29:39 SQL> --------------------------------
13:29:39 SQL> -- PREPARE BUILD (TRAINING) DATA
13:29:39 SQL> --
13:29:39 SQL> 
13:29:39 SQL> -- 1. Missing Value treatment for all Predictors and
13:29:39 SQL> -- 2. Outlier Treatment and
13:29:39 SQL> -- 3. Normalization are performed below.
13:29:39 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
13:29:39 SQL> --    normalized here.
13:29:39 SQL> 
13:29:39 SQL> BEGIN
13:29:39   2  	-- Perform missing value treatment for all predictors
13:29:39   3  	-- create miss tables
13:29:39   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
13:29:39   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
13:29:39   6  
13:29:39   7  	-- populate miss tables
13:29:39   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
13:29:39   9  	  miss_table_name => 'svmc_miss_num',
13:29:39  10  	  data_table_name => '&bldtable',
13:29:39  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:29:39  12  
13:29:39  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
13:29:39  14  	  miss_table_name => 'svmc_miss_cat',
13:29:39  15  	  data_table_name => '&bldtable',
13:29:39  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:29:39  17  
13:29:39  18  	-- xform input data to replace missing values
13:29:39  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:29:39  20  	  miss_table_name => 'svmc_miss_num',
13:29:39  21  	  data_table_name => '&bldtable',
13:29:39  22  	  xform_view_name => 'xformed_build_miss_num');
13:29:39  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:29:39  24  	  miss_table_name => 'svmc_miss_cat',
13:29:39  25  	  data_table_name => '&bldtable',
13:29:39  26  	  xform_view_name => 'xformed_build_miss_cat');
13:29:39  27  
13:29:39  28  	-- Perform outlier treatment.
13:29:39  29  	-- create clip table
13:29:39  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
13:29:39  31  
13:29:39  32  	-- populate clip table
13:29:39  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
13:29:39  34  	  clip_table_name => 'svmc_clip',
13:29:39  35  	  data_table_name => '&bldtable',
13:29:39  36  	  tail_frac	  => 0.025,
13:29:39  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:29:39  38  
13:29:39  39  	-- xform input data to winsorized data
13:29:39  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
13:29:39  41  	  clip_table_name => 'svmc_clip',
13:29:39  42  	  data_table_name => '&bldtable',
13:29:39  43  	  xform_view_name => 'svmc_winsor');
13:29:39  44  
13:29:39  45  	-- create normalization table
13:29:39  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
13:29:39  47  
13:29:39  48  	-- populate normalization table based on winsorized data
13:29:39  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
13:29:39  50  	  norm_table_name => 'svmc_norm',
13:29:39  51  	  data_table_name => 'svmc_winsor',
13:29:39  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:29:39  53  
13:29:39  54  	-- normalize the original data
13:29:39  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:29:39  56  	  norm_table_name => 'svmc_norm',
13:29:39  57  	  data_table_name => '&bldtable',
13:29:39  58  	  xform_view_name => 'svmc_build_prep');
13:29:39  59  END;
13:29:39  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.13
13:29:57 SQL> 
13:29:57 SQL> ---------------------
13:29:57 SQL> -- CREATE A NEW MODEL
13:29:57 SQL> --
13:29:57 SQL> -- Cleanup old model with the same name for repeat runs
13:29:57 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
13:29:57   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:29:57   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.69
13:29:58 SQL> 
13:29:58 SQL> -- Build a new SVM Model
13:29:58 SQL> BEGIN
13:29:58   2  	DBMS_DATA_MINING.CREATE_MODEL(
13:29:58   3  	  model_name	      => '&model_name',
13:29:58   4  	  mining_function     => dbms_data_mining.classification,
13:29:58   5  	  data_table_name     => 'svmc_build_prep',
13:29:58   6  	  case_id_column_name => '&case_id',
13:29:58   7  	  target_column_name  => '&target',
13:29:58   8  	  settings_table_name => 'svmc_settings');
13:29:58   9  END;
13:29:58  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:31.40
13:30:29 SQL> 
13:30:29 SQL> -----------------------------------------------------------------------
13:30:29 SQL> --			       APPLY/score THE MODEL
13:30:29 SQL> -----------------------------------------------------------------------
13:30:29 SQL> 
13:30:29 SQL> -- Cleanup old scoring data preparation objects for repeat runs
13:30:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
13:30:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:30:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:30:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
13:30:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:30:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
13:30:29 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
13:30:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:30:29   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:30:29 SQL> -----------------------
13:30:29 SQL> -- PREPARE SCORING DATA
13:30:29 SQL> --
13:30:29 SQL> -- If the data for model creation has been prepared, then the data
13:30:29 SQL> -- to be scored using the model must be prepared in the same manner
13:30:29 SQL> -- in order to obtain meaningful results.
13:30:29 SQL> --
13:30:29 SQL> -- 1. Missing Value treatment for all Predictors and
13:30:29 SQL> -- 2. Normalization
13:30:29 SQL> -- No outlier treatment will be performed during test and apply. The
13:30:29 SQL> -- normalization step is sufficient, since the normalization parameters
13:30:29 SQL> -- already capture the effects of outlier treatment done with build data.
13:30:29 SQL> --
13:30:29 SQL> BEGIN
13:30:29   2  	-- Xform Test data to replace missing values
13:30:29   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:30:29   4  	  miss_table_name => 'svmc_miss_num',
13:30:29   5  	  data_table_name => '&scoretable',
13:30:29   6  	  xform_view_name => 'xformed_apply_miss_num');
13:30:29   7  
13:30:29   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:30:29   9  	  miss_table_name => 'svmc_miss_cat',
13:30:29  10  	  data_table_name => '&scoretable',
13:30:29  11  	  xform_view_name => 'xformed_apply_miss_cat');
13:30:29  12  
13:30:29  13  	-- Normalize the data to be scored
13:30:29  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:30:29  15  	  norm_table_name => 'svmc_norm',
13:30:29  16  	  data_table_name => '&scoretable',
13:30:29  17  	  xform_view_name => 'svmc_apply_prep');
13:30:29  18  END;
13:30:29  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
13:30:30 SQL> 
13:30:30 SQL> -- Use same model_name used in score.sql
13:30:30 SQL> DEFINE model_name = 'forex14'
13:30:30 SQL> 
13:30:30 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
13:30:30 SQL> 
13:30:30 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
13:30:30 SQL> 
13:30:30 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
13:30:30   2  SELECT
13:30:30   3  prdate
13:30:30   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
13:30:30   5  ,sysdate
13:30:30   6  ,SUBSTR(prdate,1,3)pair
13:30:30   7  ,SUBSTR(prdate,4,19)ydate
13:30:30   8  FROM svmc_apply_prep
13:30:30   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
13:30:31 SQL> @aud_score1day.sql  2010-12-30 13:10:00
13:30:31 SQL> --
13:30:31 SQL> -- aud_score1day.sql
13:30:31 SQL> --
13:30:31 SQL> 
13:30:31 SQL> CREATE OR REPLACE VIEW sme AS
13:30:31   2  SELECT
13:30:31   3  'aud'||m.ydate prdate
13:30:31   4  ,NULL gatt
13:30:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:30:31   6  ,eur_g00
13:30:31   7  ,eur_g01
13:30:31   8  ,eur_g02
13:30:31   9  ,eur_g03
13:30:31  10  ,eur_g04
13:30:31  11  ,eur_g05
13:30:31  12  ,eur_g06
13:30:31  13  ,eur_g07
13:30:31  14  ,eur_g08
13:30:31  15  ,eur_g09
13:30:31  16  ,eur_g10
13:30:31  17  ,eur_g11
13:30:31  18  ,eur_g12
13:30:31  19  ,eur_g13
13:30:31  20  ,eur_g14
13:30:31  21  ,eur_g15
13:30:31  22  ,eur_g16
13:30:31  23  ,eur_g17
13:30:31  24  ,eur_g18
13:30:31  25  ,eur_g19
13:30:31  26  ,eur_g20
13:30:31  27  ,eur_g21
13:30:31  28  ,eur_g22
13:30:31  29  ,eur_g23
13:30:31  30  ,eur_g24
13:30:31  31  ,eur_g25
13:30:31  32  ,eur_g26
13:30:31  33  ,eur_g27
13:30:31  34  ,eur_g28
13:30:31  35  ,eur_g29
13:30:31  36  ,eur_g30
13:30:31  37  ,eur_g31
13:30:31  38  ,eur_g32
13:30:31  39  ,eur_g33
13:30:31  40  ,eur_g34
13:30:31  41  ,eur_g35
13:30:31  42  ,eur_g36
13:30:31  43  ,eur_g37
13:30:31  44  ,eur_g38
13:30:31  45  ,eur_g39
13:30:31  46  ,eur_g40
13:30:31  47  ,eur_g41
13:30:31  48  ,aud_g00
13:30:31  49  ,aud_g01
13:30:31  50  ,aud_g02
13:30:31  51  ,aud_g03
13:30:31  52  ,aud_g04
13:30:31  53  ,aud_g05
13:30:31  54  ,aud_g06
13:30:31  55  ,aud_g07
13:30:31  56  ,aud_g08
13:30:31  57  ,aud_g09
13:30:31  58  ,aud_g10
13:30:31  59  ,aud_g11
13:30:31  60  ,aud_g12
13:30:31  61  ,aud_g13
13:30:31  62  ,aud_g14
13:30:31  63  ,aud_g15
13:30:31  64  ,aud_g16
13:30:31  65  ,aud_g17
13:30:31  66  ,aud_g18
13:30:31  67  ,aud_g19
13:30:31  68  ,aud_g20
13:30:31  69  ,aud_g21
13:30:31  70  ,aud_g22
13:30:31  71  ,aud_g23
13:30:31  72  ,aud_g24
13:30:31  73  ,aud_g25
13:30:31  74  ,aud_g26
13:30:31  75  ,aud_g27
13:30:31  76  ,aud_g28
13:30:31  77  ,aud_g29
13:30:31  78  ,aud_g30
13:30:31  79  ,aud_g31
13:30:31  80  ,aud_g32
13:30:31  81  ,aud_g33
13:30:31  82  ,aud_g34
13:30:31  83  ,aud_g35
13:30:31  84  ,aud_g36
13:30:31  85  ,aud_g37
13:30:31  86  ,aud_g38
13:30:31  87  ,aud_g39
13:30:31  88  ,aud_g40
13:30:31  89  ,aud_g41
13:30:31  90  ,gbp_g00
13:30:31  91  ,gbp_g01
13:30:31  92  ,gbp_g02
13:30:31  93  ,gbp_g03
13:30:31  94  ,gbp_g04
13:30:31  95  ,gbp_g05
13:30:31  96  ,gbp_g06
13:30:31  97  ,gbp_g07
13:30:31  98  ,gbp_g08
13:30:31  99  ,gbp_g09
13:30:31 100  ,gbp_g10
13:30:31 101  ,gbp_g11
13:30:31 102  ,gbp_g12
13:30:31 103  ,gbp_g13
13:30:31 104  ,gbp_g14
13:30:31 105  ,gbp_g15
13:30:31 106  ,gbp_g16
13:30:31 107  ,gbp_g17
13:30:31 108  ,gbp_g18
13:30:31 109  ,gbp_g19
13:30:31 110  ,gbp_g20
13:30:31 111  ,gbp_g21
13:30:31 112  ,gbp_g22
13:30:31 113  ,gbp_g23
13:30:31 114  ,gbp_g24
13:30:31 115  ,gbp_g25
13:30:31 116  ,gbp_g26
13:30:31 117  ,gbp_g27
13:30:31 118  ,gbp_g28
13:30:31 119  ,gbp_g29
13:30:31 120  ,gbp_g30
13:30:31 121  ,gbp_g31
13:30:31 122  ,gbp_g32
13:30:31 123  ,gbp_g33
13:30:31 124  ,gbp_g34
13:30:31 125  ,gbp_g35
13:30:31 126  ,gbp_g36
13:30:31 127  ,gbp_g37
13:30:31 128  ,gbp_g38
13:30:31 129  ,gbp_g39
13:30:31 130  ,gbp_g40
13:30:31 131  ,gbp_g41
13:30:31 132  ,jpy_g00
13:30:31 133  ,jpy_g01
13:30:31 134  ,jpy_g02
13:30:31 135  ,jpy_g03
13:30:31 136  ,jpy_g04
13:30:31 137  ,jpy_g05
13:30:31 138  ,jpy_g06
13:30:31 139  ,jpy_g07
13:30:31 140  ,jpy_g08
13:30:31 141  ,jpy_g09
13:30:31 142  ,jpy_g10
13:30:31 143  ,jpy_g11
13:30:31 144  ,jpy_g12
13:30:31 145  ,jpy_g13
13:30:31 146  ,jpy_g14
13:30:31 147  ,jpy_g15
13:30:31 148  ,jpy_g16
13:30:31 149  ,jpy_g17
13:30:31 150  ,jpy_g18
13:30:31 151  ,jpy_g19
13:30:31 152  ,jpy_g20
13:30:31 153  ,jpy_g21
13:30:31 154  ,jpy_g22
13:30:31 155  ,jpy_g23
13:30:31 156  ,jpy_g24
13:30:31 157  ,jpy_g25
13:30:31 158  ,jpy_g26
13:30:31 159  ,jpy_g27
13:30:31 160  ,jpy_g28
13:30:31 161  ,jpy_g29
13:30:31 162  ,jpy_g30
13:30:31 163  ,jpy_g31
13:30:31 164  ,jpy_g32
13:30:31 165  ,jpy_g33
13:30:31 166  ,jpy_g34
13:30:31 167  ,jpy_g35
13:30:31 168  ,jpy_g36
13:30:31 169  ,jpy_g37
13:30:31 170  ,jpy_g38
13:30:31 171  ,jpy_g39
13:30:31 172  ,jpy_g40
13:30:31 173  ,jpy_g41
13:30:31 174  ,cad_g00
13:30:31 175  ,cad_g01
13:30:31 176  ,cad_g02
13:30:31 177  ,cad_g03
13:30:31 178  ,cad_g04
13:30:31 179  ,cad_g05
13:30:31 180  ,cad_g06
13:30:31 181  ,cad_g07
13:30:31 182  ,cad_g08
13:30:31 183  ,cad_g09
13:30:31 184  ,cad_g10
13:30:31 185  ,cad_g11
13:30:31 186  ,cad_g12
13:30:31 187  ,cad_g13
13:30:31 188  ,cad_g14
13:30:31 189  ,cad_g15
13:30:31 190  ,cad_g16
13:30:31 191  ,cad_g17
13:30:31 192  ,cad_g18
13:30:31 193  ,cad_g19
13:30:31 194  ,cad_g20
13:30:31 195  ,cad_g21
13:30:31 196  ,cad_g22
13:30:31 197  ,cad_g23
13:30:31 198  ,cad_g24
13:30:31 199  ,cad_g25
13:30:31 200  ,cad_g26
13:30:31 201  ,cad_g27
13:30:31 202  ,cad_g28
13:30:31 203  ,cad_g29
13:30:31 204  ,cad_g30
13:30:31 205  ,cad_g31
13:30:31 206  ,cad_g32
13:30:31 207  ,cad_g33
13:30:31 208  ,cad_g34
13:30:31 209  ,cad_g35
13:30:31 210  ,cad_g36
13:30:31 211  ,cad_g37
13:30:31 212  ,cad_g38
13:30:31 213  ,cad_g39
13:30:31 214  ,cad_g40
13:30:31 215  ,cad_g41
13:30:31 216  ,chf_g00
13:30:31 217  ,chf_g01
13:30:31 218  ,chf_g02
13:30:31 219  ,chf_g03
13:30:31 220  ,chf_g04
13:30:31 221  ,chf_g05
13:30:31 222  ,chf_g06
13:30:31 223  ,chf_g07
13:30:31 224  ,chf_g08
13:30:31 225  ,chf_g09
13:30:31 226  ,chf_g10
13:30:31 227  ,chf_g11
13:30:31 228  ,chf_g12
13:30:31 229  ,chf_g13
13:30:31 230  ,chf_g14
13:30:31 231  ,chf_g15
13:30:31 232  ,chf_g16
13:30:31 233  ,chf_g17
13:30:31 234  ,chf_g18
13:30:31 235  ,chf_g19
13:30:31 236  ,chf_g20
13:30:31 237  ,chf_g21
13:30:31 238  ,chf_g22
13:30:31 239  ,chf_g23
13:30:31 240  ,chf_g24
13:30:31 241  ,chf_g25
13:30:31 242  ,chf_g26
13:30:31 243  ,chf_g27
13:30:31 244  ,chf_g28
13:30:31 245  ,chf_g29
13:30:31 246  ,chf_g30
13:30:31 247  ,chf_g31
13:30:31 248  ,chf_g32
13:30:31 249  ,chf_g33
13:30:31 250  ,chf_g34
13:30:31 251  ,chf_g35
13:30:31 252  ,chf_g36
13:30:31 253  ,chf_g37
13:30:31 254  ,chf_g38
13:30:31 255  ,chf_g39
13:30:31 256  ,chf_g40
13:30:31 257  ,chf_g41
13:30:31 258  FROM aud_ms6 m
13:30:31 259  WHERE m.ydate = '&1'||' '||'&2'
13:30:31 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'13:10:00'

View created.

Elapsed: 00:00:00.15
13:30:31 SQL> 
13:30:31 SQL> -- rpt
13:30:31 SQL> -- We should see just 1 row:
13:30:31 SQL> 
13:30:31 SQL> SELECT COUNT(prdate) FROM sme
13:30:31   2  
13:30:31 SQL> -- Build the model:
13:30:31 SQL> CREATE OR REPLACE VIEW bme AS
13:30:31   2  SELECT
13:30:31   3  'aud'||m.ydate prdate
13:30:31   4  ,gatt
13:30:31   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:30:31   6  ,eur_g00
13:30:31   7  ,eur_g01
13:30:31   8  ,eur_g02
13:30:31   9  ,eur_g03
13:30:31  10  ,eur_g04
13:30:31  11  ,eur_g05
13:30:31  12  ,eur_g06
13:30:31  13  ,eur_g07
13:30:31  14  ,eur_g08
13:30:31  15  ,eur_g09
13:30:31  16  ,eur_g10
13:30:31  17  ,eur_g11
13:30:31  18  ,eur_g12
13:30:31  19  ,eur_g13
13:30:31  20  ,eur_g14
13:30:31  21  ,eur_g15
13:30:31  22  ,eur_g16
13:30:31  23  ,eur_g17
13:30:31  24  ,eur_g18
13:30:31  25  ,eur_g19
13:30:31  26  ,eur_g20
13:30:31  27  ,eur_g21
13:30:31  28  ,eur_g22
13:30:31  29  ,eur_g23
13:30:31  30  ,eur_g24
13:30:31  31  ,eur_g25
13:30:31  32  ,eur_g26
13:30:31  33  ,eur_g27
13:30:31  34  ,eur_g28
13:30:31  35  ,eur_g29
13:30:31  36  ,eur_g30
13:30:31  37  ,eur_g31
13:30:31  38  ,eur_g32
13:30:31  39  ,eur_g33
13:30:31  40  ,eur_g34
13:30:31  41  ,eur_g35
13:30:31  42  ,eur_g36
13:30:31  43  ,eur_g37
13:30:31  44  ,eur_g38
13:30:31  45  ,eur_g39
13:30:31  46  ,eur_g40
13:30:31  47  ,eur_g41
13:30:31  48  ,aud_g00
13:30:31  49  ,aud_g01
13:30:31  50  ,aud_g02
13:30:31  51  ,aud_g03
13:30:31  52  ,aud_g04
13:30:31  53  ,aud_g05
13:30:31  54  ,aud_g06
13:30:31  55  ,aud_g07
13:30:31  56  ,aud_g08
13:30:31  57  ,aud_g09
13:30:31  58  ,aud_g10
13:30:31  59  ,aud_g11
13:30:31  60  ,aud_g12
13:30:31  61  ,aud_g13
13:30:31  62  ,aud_g14
13:30:31  63  ,aud_g15
13:30:31  64  ,aud_g16
13:30:31  65  ,aud_g17
13:30:31  66  ,aud_g18
13:30:31  67  ,aud_g19
13:30:31  68  ,aud_g20
13:30:31  69  ,aud_g21
13:30:31  70  ,aud_g22
13:30:31  71  ,aud_g23
13:30:31  72  ,aud_g24
13:30:31  73  ,aud_g25
13:30:31  74  ,aud_g26
13:30:31  75  ,aud_g27
13:30:31  76  ,aud_g28
13:30:31  77  ,aud_g29
13:30:31  78  ,aud_g30
13:30:31  79  ,aud_g31
13:30:31  80  ,aud_g32
13:30:31  81  ,aud_g33
13:30:31  82  ,aud_g34
13:30:31  83  ,aud_g35
13:30:31  84  ,aud_g36
13:30:31  85  ,aud_g37
13:30:31  86  ,aud_g38
13:30:31  87  ,aud_g39
13:30:31  88  ,aud_g40
13:30:31  89  ,aud_g41
13:30:31  90  ,gbp_g00
13:30:31  91  ,gbp_g01
13:30:31  92  ,gbp_g02
13:30:31  93  ,gbp_g03
13:30:31  94  ,gbp_g04
13:30:31  95  ,gbp_g05
13:30:31  96  ,gbp_g06
13:30:31  97  ,gbp_g07
13:30:31  98  ,gbp_g08
13:30:31  99  ,gbp_g09
13:30:31 100  ,gbp_g10
13:30:31 101  ,gbp_g11
13:30:31 102  ,gbp_g12
13:30:31 103  ,gbp_g13
13:30:31 104  ,gbp_g14
13:30:31 105  ,gbp_g15
13:30:31 106  ,gbp_g16
13:30:31 107  ,gbp_g17
13:30:31 108  ,gbp_g18
13:30:31 109  ,gbp_g19
13:30:31 110  ,gbp_g20
13:30:31 111  ,gbp_g21
13:30:31 112  ,gbp_g22
13:30:31 113  ,gbp_g23
13:30:31 114  ,gbp_g24
13:30:31 115  ,gbp_g25
13:30:31 116  ,gbp_g26
13:30:31 117  ,gbp_g27
13:30:31 118  ,gbp_g28
13:30:31 119  ,gbp_g29
13:30:31 120  ,gbp_g30
13:30:31 121  ,gbp_g31
13:30:31 122  ,gbp_g32
13:30:31 123  ,gbp_g33
13:30:31 124  ,gbp_g34
13:30:31 125  ,gbp_g35
13:30:31 126  ,gbp_g36
13:30:31 127  ,gbp_g37
13:30:31 128  ,gbp_g38
13:30:31 129  ,gbp_g39
13:30:31 130  ,gbp_g40
13:30:31 131  ,gbp_g41
13:30:31 132  ,jpy_g00
13:30:31 133  ,jpy_g01
13:30:31 134  ,jpy_g02
13:30:31 135  ,jpy_g03
13:30:31 136  ,jpy_g04
13:30:31 137  ,jpy_g05
13:30:31 138  ,jpy_g06
13:30:31 139  ,jpy_g07
13:30:31 140  ,jpy_g08
13:30:31 141  ,jpy_g09
13:30:31 142  ,jpy_g10
13:30:31 143  ,jpy_g11
13:30:31 144  ,jpy_g12
13:30:31 145  ,jpy_g13
13:30:31 146  ,jpy_g14
13:30:31 147  ,jpy_g15
13:30:31 148  ,jpy_g16
13:30:31 149  ,jpy_g17
13:30:31 150  ,jpy_g18
13:30:31 151  ,jpy_g19
13:30:31 152  ,jpy_g20
13:30:31 153  ,jpy_g21
13:30:31 154  ,jpy_g22
13:30:31 155  ,jpy_g23
13:30:31 156  ,jpy_g24
13:30:31 157  ,jpy_g25
13:30:31 158  ,jpy_g26
13:30:31 159  ,jpy_g27
13:30:31 160  ,jpy_g28
13:30:31 161  ,jpy_g29
13:30:31 162  ,jpy_g30
13:30:31 163  ,jpy_g31
13:30:31 164  ,jpy_g32
13:30:31 165  ,jpy_g33
13:30:31 166  ,jpy_g34
13:30:31 167  ,jpy_g35
13:30:31 168  ,jpy_g36
13:30:31 169  ,jpy_g37
13:30:31 170  ,jpy_g38
13:30:31 171  ,jpy_g39
13:30:31 172  ,jpy_g40
13:30:31 173  ,jpy_g41
13:30:31 174  ,cad_g00
13:30:31 175  ,cad_g01
13:30:31 176  ,cad_g02
13:30:31 177  ,cad_g03
13:30:31 178  ,cad_g04
13:30:31 179  ,cad_g05
13:30:31 180  ,cad_g06
13:30:31 181  ,cad_g07
13:30:31 182  ,cad_g08
13:30:31 183  ,cad_g09
13:30:31 184  ,cad_g10
13:30:31 185  ,cad_g11
13:30:31 186  ,cad_g12
13:30:31 187  ,cad_g13
13:30:31 188  ,cad_g14
13:30:31 189  ,cad_g15
13:30:31 190  ,cad_g16
13:30:31 191  ,cad_g17
13:30:31 192  ,cad_g18
13:30:31 193  ,cad_g19
13:30:31 194  ,cad_g20
13:30:31 195  ,cad_g21
13:30:31 196  ,cad_g22
13:30:31 197  ,cad_g23
13:30:31 198  ,cad_g24
13:30:31 199  ,cad_g25
13:30:31 200  ,cad_g26
13:30:31 201  ,cad_g27
13:30:31 202  ,cad_g28
13:30:31 203  ,cad_g29
13:30:31 204  ,cad_g30
13:30:31 205  ,cad_g31
13:30:31 206  ,cad_g32
13:30:31 207  ,cad_g33
13:30:31 208  ,cad_g34
13:30:31 209  ,cad_g35
13:30:31 210  ,cad_g36
13:30:31 211  ,cad_g37
13:30:31 212  ,cad_g38
13:30:31 213  ,cad_g39
13:30:31 214  ,cad_g40
13:30:31 215  ,cad_g41
13:30:31 216  ,chf_g00
13:30:31 217  ,chf_g01
13:30:31 218  ,chf_g02
13:30:31 219  ,chf_g03
13:30:31 220  ,chf_g04
13:30:31 221  ,chf_g05
13:30:31 222  ,chf_g06
13:30:31 223  ,chf_g07
13:30:31 224  ,chf_g08
13:30:31 225  ,chf_g09
13:30:31 226  ,chf_g10
13:30:31 227  ,chf_g11
13:30:31 228  ,chf_g12
13:30:31 229  ,chf_g13
13:30:31 230  ,chf_g14
13:30:31 231  ,chf_g15
13:30:31 232  ,chf_g16
13:30:31 233  ,chf_g17
13:30:31 234  ,chf_g18
13:30:31 235  ,chf_g19
13:30:31 236  ,chf_g20
13:30:31 237  ,chf_g21
13:30:31 238  ,chf_g22
13:30:31 239  ,chf_g23
13:30:31 240  ,chf_g24
13:30:31 241  ,chf_g25
13:30:31 242  ,chf_g26
13:30:31 243  ,chf_g27
13:30:31 244  ,chf_g28
13:30:31 245  ,chf_g29
13:30:31 246  ,chf_g30
13:30:31 247  ,chf_g31
13:30:31 248  ,chf_g32
13:30:31 249  ,chf_g33
13:30:31 250  ,chf_g34
13:30:31 251  ,chf_g35
13:30:31 252  ,chf_g36
13:30:31 253  ,chf_g37
13:30:31 254  ,chf_g38
13:30:31 255  ,chf_g39
13:30:31 256  ,chf_g40
13:30:31 257  ,chf_g41
13:30:31 258  FROM aud_ms6 m
13:30:31 259  WHERE gatt IN('nup','up')
13:30:31 260  AND 1+m.ydate < '&1'||' '||'&2'
13:30:31 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'13:10:00'

View created.

Elapsed: 00:00:00.12
13:30:31 SQL> 
13:30:31 SQL> -- rpt
13:30:31 SQL> 
13:30:31 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
13:30:31   2  
13:30:31 SQL> SELECT MAX(prdate) FROM bme
13:30:31   2  
13:30:31 SQL> -- Now build model from bme and score sme
13:30:31 SQL> @score1.sql
13:30:31 SQL> -- score1.sql
13:30:31 SQL> 
13:30:31 SQL> -- Does the 1st SVM score
13:30:31 SQL> 
13:30:31 SQL> -- Fill up svmc_apply_prep
13:30:31 SQL> @score.sql
13:30:31 SQL> --
13:30:31 SQL> -- score.sql
13:30:31 SQL> --
13:30:31 SQL> 
13:30:31 SQL> -- usage: score.sql
13:30:31 SQL> 
13:30:31 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
13:30:31 SQL> 
13:30:31 SQL> DEFINE target	= 'gatt'
13:30:31 SQL> DEFINE model_name = 'forex14'
13:30:31 SQL> DEFINE bldtable	= 'bme'
13:30:31 SQL> DEFINE scoretable = 'sme'
13:30:31 SQL> DEFINE case_id	= 'prdate'
13:30:31 SQL> 
13:30:31 SQL> -- Define a variable to help me exclude some columns from some data mining calls
13:30:31 SQL> DEFINE exclude1 = "'&target','&case_id'"
13:30:31 SQL> 
13:30:31 SQL> -- Builds an SVM model using pl/sql.
13:30:31 SQL> 
13:30:31 SQL> -----------------------------------------------------------------------
13:30:31 SQL> --			    BUILD THE MODEL
13:30:31 SQL> -----------------------------------------------------------------------
13:30:31 SQL> 
13:30:31 SQL> -- Cleanup old build data preparation objects for repeat runs
13:30:31 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
13:30:31 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
13:30:31 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
13:30:31 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
13:30:31 SQL> 
13:30:31 SQL> 
13:30:31 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
13:30:31 SQL> --
13:30:31 SQL> -- DROP	TABLE svmc_settings ;
13:30:31 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
13:30:31 SQL> -- DELETE svmc_settings;
13:30:31 SQL> 
13:30:31 SQL> -- The default classification algorithm is Naive Bayes. So override
13:30:31 SQL> -- this choice to SVM using a settings table.
13:30:31 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
13:30:31 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
13:30:31 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
13:30:31 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
13:30:31 SQL> -- models.
13:30:31 SQL> --
13:30:31 SQL> 
13:30:31 SQL> -- Do this once and then comment it out.
13:30:31 SQL> -- That makes script go faster.
13:30:31 SQL> -- BEGIN
13:30:31 SQL> -- -- Populate settings table
13:30:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:30:31 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
13:30:31 SQL> --
13:30:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:30:31 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
13:30:31 SQL> --
13:30:31 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:30:31 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
13:30:31 SQL> --   COMMIT;
13:30:31 SQL> -- END;
13:30:31 SQL> -- /
13:30:31 SQL> 
13:30:31 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
13:30:31 SQL> 
13:30:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
13:30:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:30:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:30:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
13:30:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:30:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:30:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
13:30:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:30:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:30:31 SQL> 
13:30:31 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
13:30:31   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:30:31   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:30:31 SQL> 
13:30:31 SQL> --------------------------------
13:30:31 SQL> -- PREPARE BUILD (TRAINING) DATA
13:30:31 SQL> --
13:30:31 SQL> 
13:30:31 SQL> -- 1. Missing Value treatment for all Predictors and
13:30:31 SQL> -- 2. Outlier Treatment and
13:30:31 SQL> -- 3. Normalization are performed below.
13:30:31 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
13:30:31 SQL> --    normalized here.
13:30:31 SQL> 
13:30:31 SQL> BEGIN
13:30:31   2  	-- Perform missing value treatment for all predictors
13:30:31   3  	-- create miss tables
13:30:31   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
13:30:31   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
13:30:31   6  
13:30:31   7  	-- populate miss tables
13:30:31   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
13:30:31   9  	  miss_table_name => 'svmc_miss_num',
13:30:31  10  	  data_table_name => '&bldtable',
13:30:31  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:30:31  12  
13:30:31  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
13:30:31  14  	  miss_table_name => 'svmc_miss_cat',
13:30:31  15  	  data_table_name => '&bldtable',
13:30:31  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:30:31  17  
13:30:31  18  	-- xform input data to replace missing values
13:30:31  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:30:31  20  	  miss_table_name => 'svmc_miss_num',
13:30:31  21  	  data_table_name => '&bldtable',
13:30:31  22  	  xform_view_name => 'xformed_build_miss_num');
13:30:31  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:30:31  24  	  miss_table_name => 'svmc_miss_cat',
13:30:31  25  	  data_table_name => '&bldtable',
13:30:31  26  	  xform_view_name => 'xformed_build_miss_cat');
13:30:31  27  
13:30:31  28  	-- Perform outlier treatment.
13:30:31  29  	-- create clip table
13:30:31  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
13:30:31  31  
13:30:31  32  	-- populate clip table
13:30:31  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
13:30:31  34  	  clip_table_name => 'svmc_clip',
13:30:31  35  	  data_table_name => '&bldtable',
13:30:31  36  	  tail_frac	  => 0.025,
13:30:31  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:30:31  38  
13:30:31  39  	-- xform input data to winsorized data
13:30:31  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
13:30:31  41  	  clip_table_name => 'svmc_clip',
13:30:31  42  	  data_table_name => '&bldtable',
13:30:31  43  	  xform_view_name => 'svmc_winsor');
13:30:31  44  
13:30:31  45  	-- create normalization table
13:30:31  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
13:30:31  47  
13:30:31  48  	-- populate normalization table based on winsorized data
13:30:31  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
13:30:31  50  	  norm_table_name => 'svmc_norm',
13:30:31  51  	  data_table_name => 'svmc_winsor',
13:30:31  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:30:31  53  
13:30:31  54  	-- normalize the original data
13:30:31  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:30:31  56  	  norm_table_name => 'svmc_norm',
13:30:31  57  	  data_table_name => '&bldtable',
13:30:31  58  	  xform_view_name => 'svmc_build_prep');
13:30:31  59  END;
13:30:31  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.94
13:30:49 SQL> 
13:30:49 SQL> ---------------------
13:30:49 SQL> -- CREATE A NEW MODEL
13:30:49 SQL> --
13:30:49 SQL> -- Cleanup old model with the same name for repeat runs
13:30:49 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
13:30:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:30:49   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
13:30:50 SQL> 
13:30:50 SQL> -- Build a new SVM Model
13:30:50 SQL> BEGIN
13:30:50   2  	DBMS_DATA_MINING.CREATE_MODEL(
13:30:50   3  	  model_name	      => '&model_name',
13:30:50   4  	  mining_function     => dbms_data_mining.classification,
13:30:50   5  	  data_table_name     => 'svmc_build_prep',
13:30:50   6  	  case_id_column_name => '&case_id',
13:30:50   7  	  target_column_name  => '&target',
13:30:50   8  	  settings_table_name => 'svmc_settings');
13:30:50   9  END;
13:30:50  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.83
13:31:19 SQL> 
13:31:19 SQL> -----------------------------------------------------------------------
13:31:19 SQL> --			       APPLY/score THE MODEL
13:31:19 SQL> -----------------------------------------------------------------------
13:31:19 SQL> 
13:31:19 SQL> -- Cleanup old scoring data preparation objects for repeat runs
13:31:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
13:31:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:31:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:31:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
13:31:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:31:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:31:19 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
13:31:19   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:31:19   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:31:19 SQL> -----------------------
13:31:19 SQL> -- PREPARE SCORING DATA
13:31:19 SQL> --
13:31:19 SQL> -- If the data for model creation has been prepared, then the data
13:31:19 SQL> -- to be scored using the model must be prepared in the same manner
13:31:19 SQL> -- in order to obtain meaningful results.
13:31:19 SQL> --
13:31:19 SQL> -- 1. Missing Value treatment for all Predictors and
13:31:19 SQL> -- 2. Normalization
13:31:19 SQL> -- No outlier treatment will be performed during test and apply. The
13:31:19 SQL> -- normalization step is sufficient, since the normalization parameters
13:31:19 SQL> -- already capture the effects of outlier treatment done with build data.
13:31:19 SQL> --
13:31:19 SQL> BEGIN
13:31:19   2  	-- Xform Test data to replace missing values
13:31:19   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:31:19   4  	  miss_table_name => 'svmc_miss_num',
13:31:19   5  	  data_table_name => '&scoretable',
13:31:19   6  	  xform_view_name => 'xformed_apply_miss_num');
13:31:19   7  
13:31:19   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:31:19   9  	  miss_table_name => 'svmc_miss_cat',
13:31:19  10  	  data_table_name => '&scoretable',
13:31:19  11  	  xform_view_name => 'xformed_apply_miss_cat');
13:31:19  12  
13:31:19  13  	-- Normalize the data to be scored
13:31:19  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:31:19  15  	  norm_table_name => 'svmc_norm',
13:31:19  16  	  data_table_name => '&scoretable',
13:31:19  17  	  xform_view_name => 'svmc_apply_prep');
13:31:19  18  END;
13:31:19  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
13:31:21 SQL> 
13:31:21 SQL> -- Use same model_name used in score.sql
13:31:21 SQL> DEFINE model_name = 'forex14'
13:31:21 SQL> 
13:31:21 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
13:31:21 SQL> 
13:31:21 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
13:31:21 SQL> 
13:31:21 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
13:31:21   2  SELECT
13:31:21   3  prdate
13:31:21   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
13:31:21   5  ,sysdate
13:31:21   6  ,SUBSTR(prdate,1,3)pair
13:31:21   7  ,SUBSTR(prdate,4,19)ydate
13:31:21   8  FROM svmc_apply_prep
13:31:21   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
13:31:21 SQL> @aud_score1day.sql  2010-12-30 13:15:00
13:31:21 SQL> --
13:31:21 SQL> -- aud_score1day.sql
13:31:21 SQL> --
13:31:21 SQL> 
13:31:21 SQL> CREATE OR REPLACE VIEW sme AS
13:31:21   2  SELECT
13:31:21   3  'aud'||m.ydate prdate
13:31:21   4  ,NULL gatt
13:31:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:31:21   6  ,eur_g00
13:31:21   7  ,eur_g01
13:31:21   8  ,eur_g02
13:31:21   9  ,eur_g03
13:31:21  10  ,eur_g04
13:31:21  11  ,eur_g05
13:31:21  12  ,eur_g06
13:31:21  13  ,eur_g07
13:31:21  14  ,eur_g08
13:31:21  15  ,eur_g09
13:31:21  16  ,eur_g10
13:31:21  17  ,eur_g11
13:31:21  18  ,eur_g12
13:31:21  19  ,eur_g13
13:31:21  20  ,eur_g14
13:31:21  21  ,eur_g15
13:31:21  22  ,eur_g16
13:31:21  23  ,eur_g17
13:31:21  24  ,eur_g18
13:31:21  25  ,eur_g19
13:31:21  26  ,eur_g20
13:31:21  27  ,eur_g21
13:31:21  28  ,eur_g22
13:31:21  29  ,eur_g23
13:31:21  30  ,eur_g24
13:31:21  31  ,eur_g25
13:31:21  32  ,eur_g26
13:31:21  33  ,eur_g27
13:31:21  34  ,eur_g28
13:31:21  35  ,eur_g29
13:31:21  36  ,eur_g30
13:31:21  37  ,eur_g31
13:31:21  38  ,eur_g32
13:31:21  39  ,eur_g33
13:31:21  40  ,eur_g34
13:31:21  41  ,eur_g35
13:31:21  42  ,eur_g36
13:31:21  43  ,eur_g37
13:31:21  44  ,eur_g38
13:31:21  45  ,eur_g39
13:31:21  46  ,eur_g40
13:31:21  47  ,eur_g41
13:31:21  48  ,aud_g00
13:31:21  49  ,aud_g01
13:31:21  50  ,aud_g02
13:31:21  51  ,aud_g03
13:31:21  52  ,aud_g04
13:31:21  53  ,aud_g05
13:31:21  54  ,aud_g06
13:31:21  55  ,aud_g07
13:31:21  56  ,aud_g08
13:31:21  57  ,aud_g09
13:31:21  58  ,aud_g10
13:31:21  59  ,aud_g11
13:31:21  60  ,aud_g12
13:31:21  61  ,aud_g13
13:31:21  62  ,aud_g14
13:31:21  63  ,aud_g15
13:31:21  64  ,aud_g16
13:31:21  65  ,aud_g17
13:31:21  66  ,aud_g18
13:31:21  67  ,aud_g19
13:31:21  68  ,aud_g20
13:31:21  69  ,aud_g21
13:31:21  70  ,aud_g22
13:31:21  71  ,aud_g23
13:31:21  72  ,aud_g24
13:31:21  73  ,aud_g25
13:31:21  74  ,aud_g26
13:31:21  75  ,aud_g27
13:31:21  76  ,aud_g28
13:31:21  77  ,aud_g29
13:31:21  78  ,aud_g30
13:31:21  79  ,aud_g31
13:31:21  80  ,aud_g32
13:31:21  81  ,aud_g33
13:31:21  82  ,aud_g34
13:31:21  83  ,aud_g35
13:31:21  84  ,aud_g36
13:31:21  85  ,aud_g37
13:31:21  86  ,aud_g38
13:31:21  87  ,aud_g39
13:31:21  88  ,aud_g40
13:31:21  89  ,aud_g41
13:31:21  90  ,gbp_g00
13:31:21  91  ,gbp_g01
13:31:21  92  ,gbp_g02
13:31:21  93  ,gbp_g03
13:31:21  94  ,gbp_g04
13:31:21  95  ,gbp_g05
13:31:21  96  ,gbp_g06
13:31:21  97  ,gbp_g07
13:31:21  98  ,gbp_g08
13:31:21  99  ,gbp_g09
13:31:21 100  ,gbp_g10
13:31:21 101  ,gbp_g11
13:31:21 102  ,gbp_g12
13:31:21 103  ,gbp_g13
13:31:21 104  ,gbp_g14
13:31:21 105  ,gbp_g15
13:31:21 106  ,gbp_g16
13:31:21 107  ,gbp_g17
13:31:21 108  ,gbp_g18
13:31:21 109  ,gbp_g19
13:31:21 110  ,gbp_g20
13:31:21 111  ,gbp_g21
13:31:21 112  ,gbp_g22
13:31:21 113  ,gbp_g23
13:31:21 114  ,gbp_g24
13:31:21 115  ,gbp_g25
13:31:21 116  ,gbp_g26
13:31:21 117  ,gbp_g27
13:31:21 118  ,gbp_g28
13:31:21 119  ,gbp_g29
13:31:21 120  ,gbp_g30
13:31:21 121  ,gbp_g31
13:31:21 122  ,gbp_g32
13:31:21 123  ,gbp_g33
13:31:21 124  ,gbp_g34
13:31:21 125  ,gbp_g35
13:31:21 126  ,gbp_g36
13:31:21 127  ,gbp_g37
13:31:21 128  ,gbp_g38
13:31:21 129  ,gbp_g39
13:31:21 130  ,gbp_g40
13:31:21 131  ,gbp_g41
13:31:21 132  ,jpy_g00
13:31:21 133  ,jpy_g01
13:31:21 134  ,jpy_g02
13:31:21 135  ,jpy_g03
13:31:21 136  ,jpy_g04
13:31:21 137  ,jpy_g05
13:31:21 138  ,jpy_g06
13:31:21 139  ,jpy_g07
13:31:21 140  ,jpy_g08
13:31:21 141  ,jpy_g09
13:31:21 142  ,jpy_g10
13:31:21 143  ,jpy_g11
13:31:21 144  ,jpy_g12
13:31:21 145  ,jpy_g13
13:31:21 146  ,jpy_g14
13:31:21 147  ,jpy_g15
13:31:21 148  ,jpy_g16
13:31:21 149  ,jpy_g17
13:31:21 150  ,jpy_g18
13:31:21 151  ,jpy_g19
13:31:21 152  ,jpy_g20
13:31:21 153  ,jpy_g21
13:31:21 154  ,jpy_g22
13:31:21 155  ,jpy_g23
13:31:21 156  ,jpy_g24
13:31:21 157  ,jpy_g25
13:31:21 158  ,jpy_g26
13:31:21 159  ,jpy_g27
13:31:21 160  ,jpy_g28
13:31:21 161  ,jpy_g29
13:31:21 162  ,jpy_g30
13:31:21 163  ,jpy_g31
13:31:21 164  ,jpy_g32
13:31:21 165  ,jpy_g33
13:31:21 166  ,jpy_g34
13:31:21 167  ,jpy_g35
13:31:21 168  ,jpy_g36
13:31:21 169  ,jpy_g37
13:31:21 170  ,jpy_g38
13:31:21 171  ,jpy_g39
13:31:21 172  ,jpy_g40
13:31:21 173  ,jpy_g41
13:31:21 174  ,cad_g00
13:31:21 175  ,cad_g01
13:31:21 176  ,cad_g02
13:31:21 177  ,cad_g03
13:31:21 178  ,cad_g04
13:31:21 179  ,cad_g05
13:31:21 180  ,cad_g06
13:31:21 181  ,cad_g07
13:31:21 182  ,cad_g08
13:31:21 183  ,cad_g09
13:31:21 184  ,cad_g10
13:31:21 185  ,cad_g11
13:31:21 186  ,cad_g12
13:31:21 187  ,cad_g13
13:31:21 188  ,cad_g14
13:31:21 189  ,cad_g15
13:31:21 190  ,cad_g16
13:31:21 191  ,cad_g17
13:31:21 192  ,cad_g18
13:31:21 193  ,cad_g19
13:31:21 194  ,cad_g20
13:31:21 195  ,cad_g21
13:31:21 196  ,cad_g22
13:31:21 197  ,cad_g23
13:31:21 198  ,cad_g24
13:31:21 199  ,cad_g25
13:31:21 200  ,cad_g26
13:31:21 201  ,cad_g27
13:31:21 202  ,cad_g28
13:31:21 203  ,cad_g29
13:31:21 204  ,cad_g30
13:31:21 205  ,cad_g31
13:31:21 206  ,cad_g32
13:31:21 207  ,cad_g33
13:31:21 208  ,cad_g34
13:31:21 209  ,cad_g35
13:31:21 210  ,cad_g36
13:31:21 211  ,cad_g37
13:31:21 212  ,cad_g38
13:31:21 213  ,cad_g39
13:31:21 214  ,cad_g40
13:31:21 215  ,cad_g41
13:31:21 216  ,chf_g00
13:31:21 217  ,chf_g01
13:31:21 218  ,chf_g02
13:31:21 219  ,chf_g03
13:31:21 220  ,chf_g04
13:31:21 221  ,chf_g05
13:31:21 222  ,chf_g06
13:31:21 223  ,chf_g07
13:31:21 224  ,chf_g08
13:31:21 225  ,chf_g09
13:31:21 226  ,chf_g10
13:31:21 227  ,chf_g11
13:31:21 228  ,chf_g12
13:31:21 229  ,chf_g13
13:31:21 230  ,chf_g14
13:31:21 231  ,chf_g15
13:31:21 232  ,chf_g16
13:31:21 233  ,chf_g17
13:31:21 234  ,chf_g18
13:31:21 235  ,chf_g19
13:31:21 236  ,chf_g20
13:31:21 237  ,chf_g21
13:31:21 238  ,chf_g22
13:31:21 239  ,chf_g23
13:31:21 240  ,chf_g24
13:31:21 241  ,chf_g25
13:31:21 242  ,chf_g26
13:31:21 243  ,chf_g27
13:31:21 244  ,chf_g28
13:31:21 245  ,chf_g29
13:31:21 246  ,chf_g30
13:31:21 247  ,chf_g31
13:31:21 248  ,chf_g32
13:31:21 249  ,chf_g33
13:31:21 250  ,chf_g34
13:31:21 251  ,chf_g35
13:31:21 252  ,chf_g36
13:31:21 253  ,chf_g37
13:31:21 254  ,chf_g38
13:31:21 255  ,chf_g39
13:31:21 256  ,chf_g40
13:31:21 257  ,chf_g41
13:31:21 258  FROM aud_ms6 m
13:31:21 259  WHERE m.ydate = '&1'||' '||'&2'
13:31:21 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'13:15:00'

View created.

Elapsed: 00:00:00.12
13:31:21 SQL> 
13:31:21 SQL> -- rpt
13:31:21 SQL> -- We should see just 1 row:
13:31:21 SQL> 
13:31:21 SQL> SELECT COUNT(prdate) FROM sme
13:31:21   2  
13:31:21 SQL> -- Build the model:
13:31:21 SQL> CREATE OR REPLACE VIEW bme AS
13:31:21   2  SELECT
13:31:21   3  'aud'||m.ydate prdate
13:31:21   4  ,gatt
13:31:21   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:31:21   6  ,eur_g00
13:31:21   7  ,eur_g01
13:31:21   8  ,eur_g02
13:31:21   9  ,eur_g03
13:31:21  10  ,eur_g04
13:31:21  11  ,eur_g05
13:31:21  12  ,eur_g06
13:31:21  13  ,eur_g07
13:31:21  14  ,eur_g08
13:31:21  15  ,eur_g09
13:31:21  16  ,eur_g10
13:31:21  17  ,eur_g11
13:31:21  18  ,eur_g12
13:31:21  19  ,eur_g13
13:31:21  20  ,eur_g14
13:31:21  21  ,eur_g15
13:31:21  22  ,eur_g16
13:31:21  23  ,eur_g17
13:31:21  24  ,eur_g18
13:31:21  25  ,eur_g19
13:31:21  26  ,eur_g20
13:31:21  27  ,eur_g21
13:31:21  28  ,eur_g22
13:31:21  29  ,eur_g23
13:31:21  30  ,eur_g24
13:31:21  31  ,eur_g25
13:31:21  32  ,eur_g26
13:31:21  33  ,eur_g27
13:31:21  34  ,eur_g28
13:31:21  35  ,eur_g29
13:31:21  36  ,eur_g30
13:31:21  37  ,eur_g31
13:31:21  38  ,eur_g32
13:31:21  39  ,eur_g33
13:31:21  40  ,eur_g34
13:31:21  41  ,eur_g35
13:31:21  42  ,eur_g36
13:31:21  43  ,eur_g37
13:31:21  44  ,eur_g38
13:31:21  45  ,eur_g39
13:31:21  46  ,eur_g40
13:31:21  47  ,eur_g41
13:31:21  48  ,aud_g00
13:31:21  49  ,aud_g01
13:31:21  50  ,aud_g02
13:31:21  51  ,aud_g03
13:31:21  52  ,aud_g04
13:31:21  53  ,aud_g05
13:31:21  54  ,aud_g06
13:31:21  55  ,aud_g07
13:31:21  56  ,aud_g08
13:31:21  57  ,aud_g09
13:31:21  58  ,aud_g10
13:31:21  59  ,aud_g11
13:31:21  60  ,aud_g12
13:31:21  61  ,aud_g13
13:31:21  62  ,aud_g14
13:31:21  63  ,aud_g15
13:31:21  64  ,aud_g16
13:31:21  65  ,aud_g17
13:31:21  66  ,aud_g18
13:31:21  67  ,aud_g19
13:31:21  68  ,aud_g20
13:31:21  69  ,aud_g21
13:31:21  70  ,aud_g22
13:31:21  71  ,aud_g23
13:31:21  72  ,aud_g24
13:31:21  73  ,aud_g25
13:31:21  74  ,aud_g26
13:31:21  75  ,aud_g27
13:31:21  76  ,aud_g28
13:31:21  77  ,aud_g29
13:31:21  78  ,aud_g30
13:31:21  79  ,aud_g31
13:31:21  80  ,aud_g32
13:31:21  81  ,aud_g33
13:31:21  82  ,aud_g34
13:31:21  83  ,aud_g35
13:31:21  84  ,aud_g36
13:31:21  85  ,aud_g37
13:31:21  86  ,aud_g38
13:31:21  87  ,aud_g39
13:31:21  88  ,aud_g40
13:31:21  89  ,aud_g41
13:31:21  90  ,gbp_g00
13:31:21  91  ,gbp_g01
13:31:21  92  ,gbp_g02
13:31:21  93  ,gbp_g03
13:31:21  94  ,gbp_g04
13:31:21  95  ,gbp_g05
13:31:21  96  ,gbp_g06
13:31:21  97  ,gbp_g07
13:31:21  98  ,gbp_g08
13:31:21  99  ,gbp_g09
13:31:21 100  ,gbp_g10
13:31:21 101  ,gbp_g11
13:31:21 102  ,gbp_g12
13:31:21 103  ,gbp_g13
13:31:21 104  ,gbp_g14
13:31:21 105  ,gbp_g15
13:31:21 106  ,gbp_g16
13:31:21 107  ,gbp_g17
13:31:21 108  ,gbp_g18
13:31:21 109  ,gbp_g19
13:31:21 110  ,gbp_g20
13:31:21 111  ,gbp_g21
13:31:21 112  ,gbp_g22
13:31:21 113  ,gbp_g23
13:31:21 114  ,gbp_g24
13:31:21 115  ,gbp_g25
13:31:21 116  ,gbp_g26
13:31:21 117  ,gbp_g27
13:31:21 118  ,gbp_g28
13:31:21 119  ,gbp_g29
13:31:21 120  ,gbp_g30
13:31:21 121  ,gbp_g31
13:31:21 122  ,gbp_g32
13:31:21 123  ,gbp_g33
13:31:21 124  ,gbp_g34
13:31:21 125  ,gbp_g35
13:31:21 126  ,gbp_g36
13:31:21 127  ,gbp_g37
13:31:21 128  ,gbp_g38
13:31:21 129  ,gbp_g39
13:31:21 130  ,gbp_g40
13:31:21 131  ,gbp_g41
13:31:21 132  ,jpy_g00
13:31:21 133  ,jpy_g01
13:31:21 134  ,jpy_g02
13:31:21 135  ,jpy_g03
13:31:21 136  ,jpy_g04
13:31:21 137  ,jpy_g05
13:31:21 138  ,jpy_g06
13:31:21 139  ,jpy_g07
13:31:21 140  ,jpy_g08
13:31:21 141  ,jpy_g09
13:31:21 142  ,jpy_g10
13:31:21 143  ,jpy_g11
13:31:21 144  ,jpy_g12
13:31:21 145  ,jpy_g13
13:31:21 146  ,jpy_g14
13:31:21 147  ,jpy_g15
13:31:21 148  ,jpy_g16
13:31:21 149  ,jpy_g17
13:31:21 150  ,jpy_g18
13:31:21 151  ,jpy_g19
13:31:21 152  ,jpy_g20
13:31:21 153  ,jpy_g21
13:31:21 154  ,jpy_g22
13:31:21 155  ,jpy_g23
13:31:21 156  ,jpy_g24
13:31:21 157  ,jpy_g25
13:31:21 158  ,jpy_g26
13:31:21 159  ,jpy_g27
13:31:21 160  ,jpy_g28
13:31:21 161  ,jpy_g29
13:31:21 162  ,jpy_g30
13:31:21 163  ,jpy_g31
13:31:21 164  ,jpy_g32
13:31:21 165  ,jpy_g33
13:31:21 166  ,jpy_g34
13:31:21 167  ,jpy_g35
13:31:21 168  ,jpy_g36
13:31:21 169  ,jpy_g37
13:31:21 170  ,jpy_g38
13:31:21 171  ,jpy_g39
13:31:21 172  ,jpy_g40
13:31:21 173  ,jpy_g41
13:31:21 174  ,cad_g00
13:31:21 175  ,cad_g01
13:31:21 176  ,cad_g02
13:31:21 177  ,cad_g03
13:31:21 178  ,cad_g04
13:31:21 179  ,cad_g05
13:31:21 180  ,cad_g06
13:31:21 181  ,cad_g07
13:31:21 182  ,cad_g08
13:31:21 183  ,cad_g09
13:31:21 184  ,cad_g10
13:31:21 185  ,cad_g11
13:31:21 186  ,cad_g12
13:31:21 187  ,cad_g13
13:31:21 188  ,cad_g14
13:31:21 189  ,cad_g15
13:31:21 190  ,cad_g16
13:31:21 191  ,cad_g17
13:31:21 192  ,cad_g18
13:31:21 193  ,cad_g19
13:31:21 194  ,cad_g20
13:31:21 195  ,cad_g21
13:31:21 196  ,cad_g22
13:31:21 197  ,cad_g23
13:31:21 198  ,cad_g24
13:31:21 199  ,cad_g25
13:31:21 200  ,cad_g26
13:31:21 201  ,cad_g27
13:31:21 202  ,cad_g28
13:31:21 203  ,cad_g29
13:31:21 204  ,cad_g30
13:31:21 205  ,cad_g31
13:31:21 206  ,cad_g32
13:31:21 207  ,cad_g33
13:31:21 208  ,cad_g34
13:31:21 209  ,cad_g35
13:31:21 210  ,cad_g36
13:31:21 211  ,cad_g37
13:31:21 212  ,cad_g38
13:31:21 213  ,cad_g39
13:31:21 214  ,cad_g40
13:31:21 215  ,cad_g41
13:31:21 216  ,chf_g00
13:31:21 217  ,chf_g01
13:31:21 218  ,chf_g02
13:31:21 219  ,chf_g03
13:31:21 220  ,chf_g04
13:31:21 221  ,chf_g05
13:31:21 222  ,chf_g06
13:31:21 223  ,chf_g07
13:31:21 224  ,chf_g08
13:31:21 225  ,chf_g09
13:31:21 226  ,chf_g10
13:31:21 227  ,chf_g11
13:31:21 228  ,chf_g12
13:31:21 229  ,chf_g13
13:31:21 230  ,chf_g14
13:31:21 231  ,chf_g15
13:31:21 232  ,chf_g16
13:31:21 233  ,chf_g17
13:31:21 234  ,chf_g18
13:31:21 235  ,chf_g19
13:31:21 236  ,chf_g20
13:31:21 237  ,chf_g21
13:31:21 238  ,chf_g22
13:31:21 239  ,chf_g23
13:31:21 240  ,chf_g24
13:31:21 241  ,chf_g25
13:31:21 242  ,chf_g26
13:31:21 243  ,chf_g27
13:31:21 244  ,chf_g28
13:31:21 245  ,chf_g29
13:31:21 246  ,chf_g30
13:31:21 247  ,chf_g31
13:31:21 248  ,chf_g32
13:31:21 249  ,chf_g33
13:31:21 250  ,chf_g34
13:31:21 251  ,chf_g35
13:31:21 252  ,chf_g36
13:31:21 253  ,chf_g37
13:31:21 254  ,chf_g38
13:31:21 255  ,chf_g39
13:31:21 256  ,chf_g40
13:31:21 257  ,chf_g41
13:31:21 258  FROM aud_ms6 m
13:31:21 259  WHERE gatt IN('nup','up')
13:31:21 260  AND 1+m.ydate < '&1'||' '||'&2'
13:31:21 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'13:15:00'

View created.

Elapsed: 00:00:00.13
13:31:21 SQL> 
13:31:21 SQL> -- rpt
13:31:21 SQL> 
13:31:21 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
13:31:21   2  
13:31:21 SQL> SELECT MAX(prdate) FROM bme
13:31:21   2  
13:31:21 SQL> -- Now build model from bme and score sme
13:31:21 SQL> @score1.sql
13:31:21 SQL> -- score1.sql
13:31:21 SQL> 
13:31:21 SQL> -- Does the 1st SVM score
13:31:21 SQL> 
13:31:21 SQL> -- Fill up svmc_apply_prep
13:31:21 SQL> @score.sql
13:31:21 SQL> --
13:31:21 SQL> -- score.sql
13:31:21 SQL> --
13:31:21 SQL> 
13:31:21 SQL> -- usage: score.sql
13:31:21 SQL> 
13:31:21 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
13:31:21 SQL> 
13:31:21 SQL> DEFINE target	= 'gatt'
13:31:21 SQL> DEFINE model_name = 'forex14'
13:31:21 SQL> DEFINE bldtable	= 'bme'
13:31:21 SQL> DEFINE scoretable = 'sme'
13:31:21 SQL> DEFINE case_id	= 'prdate'
13:31:21 SQL> 
13:31:21 SQL> -- Define a variable to help me exclude some columns from some data mining calls
13:31:21 SQL> DEFINE exclude1 = "'&target','&case_id'"
13:31:21 SQL> 
13:31:21 SQL> -- Builds an SVM model using pl/sql.
13:31:21 SQL> 
13:31:21 SQL> -----------------------------------------------------------------------
13:31:21 SQL> --			    BUILD THE MODEL
13:31:21 SQL> -----------------------------------------------------------------------
13:31:21 SQL> 
13:31:21 SQL> -- Cleanup old build data preparation objects for repeat runs
13:31:21 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
13:31:21 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
13:31:21 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
13:31:21 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
13:31:21 SQL> 
13:31:21 SQL> 
13:31:21 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
13:31:21 SQL> --
13:31:21 SQL> -- DROP	TABLE svmc_settings ;
13:31:21 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
13:31:21 SQL> -- DELETE svmc_settings;
13:31:21 SQL> 
13:31:21 SQL> -- The default classification algorithm is Naive Bayes. So override
13:31:21 SQL> -- this choice to SVM using a settings table.
13:31:21 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
13:31:21 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
13:31:21 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
13:31:21 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
13:31:21 SQL> -- models.
13:31:21 SQL> --
13:31:21 SQL> 
13:31:21 SQL> -- Do this once and then comment it out.
13:31:21 SQL> -- That makes script go faster.
13:31:21 SQL> -- BEGIN
13:31:21 SQL> -- -- Populate settings table
13:31:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:31:21 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
13:31:21 SQL> --
13:31:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:31:21 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
13:31:21 SQL> --
13:31:21 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:31:21 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
13:31:21 SQL> --   COMMIT;
13:31:21 SQL> -- END;
13:31:21 SQL> -- /
13:31:21 SQL> 
13:31:21 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
13:31:21 SQL> 
13:31:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
13:31:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:31:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.09
13:31:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
13:31:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:31:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:31:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
13:31:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:31:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:31:21 SQL> 
13:31:21 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
13:31:21   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:31:21   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:31:21 SQL> 
13:31:21 SQL> --------------------------------
13:31:21 SQL> -- PREPARE BUILD (TRAINING) DATA
13:31:21 SQL> --
13:31:21 SQL> 
13:31:21 SQL> -- 1. Missing Value treatment for all Predictors and
13:31:21 SQL> -- 2. Outlier Treatment and
13:31:21 SQL> -- 3. Normalization are performed below.
13:31:21 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
13:31:21 SQL> --    normalized here.
13:31:21 SQL> 
13:31:21 SQL> BEGIN
13:31:21   2  	-- Perform missing value treatment for all predictors
13:31:21   3  	-- create miss tables
13:31:21   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
13:31:21   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
13:31:21   6  
13:31:21   7  	-- populate miss tables
13:31:21   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
13:31:21   9  	  miss_table_name => 'svmc_miss_num',
13:31:21  10  	  data_table_name => '&bldtable',
13:31:21  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:31:21  12  
13:31:21  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
13:31:21  14  	  miss_table_name => 'svmc_miss_cat',
13:31:21  15  	  data_table_name => '&bldtable',
13:31:21  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:31:21  17  
13:31:21  18  	-- xform input data to replace missing values
13:31:21  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:31:21  20  	  miss_table_name => 'svmc_miss_num',
13:31:21  21  	  data_table_name => '&bldtable',
13:31:21  22  	  xform_view_name => 'xformed_build_miss_num');
13:31:21  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:31:21  24  	  miss_table_name => 'svmc_miss_cat',
13:31:21  25  	  data_table_name => '&bldtable',
13:31:21  26  	  xform_view_name => 'xformed_build_miss_cat');
13:31:21  27  
13:31:21  28  	-- Perform outlier treatment.
13:31:21  29  	-- create clip table
13:31:21  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
13:31:21  31  
13:31:21  32  	-- populate clip table
13:31:21  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
13:31:21  34  	  clip_table_name => 'svmc_clip',
13:31:21  35  	  data_table_name => '&bldtable',
13:31:21  36  	  tail_frac	  => 0.025,
13:31:21  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:31:21  38  
13:31:21  39  	-- xform input data to winsorized data
13:31:21  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
13:31:21  41  	  clip_table_name => 'svmc_clip',
13:31:21  42  	  data_table_name => '&bldtable',
13:31:21  43  	  xform_view_name => 'svmc_winsor');
13:31:21  44  
13:31:21  45  	-- create normalization table
13:31:21  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
13:31:21  47  
13:31:21  48  	-- populate normalization table based on winsorized data
13:31:21  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
13:31:21  50  	  norm_table_name => 'svmc_norm',
13:31:21  51  	  data_table_name => 'svmc_winsor',
13:31:21  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:31:21  53  
13:31:21  54  	-- normalize the original data
13:31:21  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:31:21  56  	  norm_table_name => 'svmc_norm',
13:31:21  57  	  data_table_name => '&bldtable',
13:31:21  58  	  xform_view_name => 'svmc_build_prep');
13:31:21  59  END;
13:31:21  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.92
13:31:39 SQL> 
13:31:39 SQL> ---------------------
13:31:39 SQL> -- CREATE A NEW MODEL
13:31:39 SQL> --
13:31:39 SQL> -- Cleanup old model with the same name for repeat runs
13:31:39 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
13:31:39   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:31:39   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
13:31:40 SQL> 
13:31:40 SQL> -- Build a new SVM Model
13:31:40 SQL> BEGIN
13:31:40   2  	DBMS_DATA_MINING.CREATE_MODEL(
13:31:40   3  	  model_name	      => '&model_name',
13:31:40   4  	  mining_function     => dbms_data_mining.classification,
13:31:40   5  	  data_table_name     => 'svmc_build_prep',
13:31:40   6  	  case_id_column_name => '&case_id',
13:31:40   7  	  target_column_name  => '&target',
13:31:40   8  	  settings_table_name => 'svmc_settings');
13:31:40   9  END;
13:31:40  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.88
13:32:09 SQL> 
13:32:09 SQL> -----------------------------------------------------------------------
13:32:09 SQL> --			       APPLY/score THE MODEL
13:32:09 SQL> -----------------------------------------------------------------------
13:32:09 SQL> 
13:32:09 SQL> -- Cleanup old scoring data preparation objects for repeat runs
13:32:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
13:32:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:32:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:32:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
13:32:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:32:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:32:09 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
13:32:09   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:32:09   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
13:32:10 SQL> -----------------------
13:32:10 SQL> -- PREPARE SCORING DATA
13:32:10 SQL> --
13:32:10 SQL> -- If the data for model creation has been prepared, then the data
13:32:10 SQL> -- to be scored using the model must be prepared in the same manner
13:32:10 SQL> -- in order to obtain meaningful results.
13:32:10 SQL> --
13:32:10 SQL> -- 1. Missing Value treatment for all Predictors and
13:32:10 SQL> -- 2. Normalization
13:32:10 SQL> -- No outlier treatment will be performed during test and apply. The
13:32:10 SQL> -- normalization step is sufficient, since the normalization parameters
13:32:10 SQL> -- already capture the effects of outlier treatment done with build data.
13:32:10 SQL> --
13:32:10 SQL> BEGIN
13:32:10   2  	-- Xform Test data to replace missing values
13:32:10   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:32:10   4  	  miss_table_name => 'svmc_miss_num',
13:32:10   5  	  data_table_name => '&scoretable',
13:32:10   6  	  xform_view_name => 'xformed_apply_miss_num');
13:32:10   7  
13:32:10   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:32:10   9  	  miss_table_name => 'svmc_miss_cat',
13:32:10  10  	  data_table_name => '&scoretable',
13:32:10  11  	  xform_view_name => 'xformed_apply_miss_cat');
13:32:10  12  
13:32:10  13  	-- Normalize the data to be scored
13:32:10  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:32:10  15  	  norm_table_name => 'svmc_norm',
13:32:10  16  	  data_table_name => '&scoretable',
13:32:10  17  	  xform_view_name => 'svmc_apply_prep');
13:32:10  18  END;
13:32:10  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
13:32:11 SQL> 
13:32:11 SQL> -- Use same model_name used in score.sql
13:32:11 SQL> DEFINE model_name = 'forex14'
13:32:11 SQL> 
13:32:11 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
13:32:11 SQL> 
13:32:11 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
13:32:11 SQL> 
13:32:11 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
13:32:11   2  SELECT
13:32:11   3  prdate
13:32:11   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
13:32:11   5  ,sysdate
13:32:11   6  ,SUBSTR(prdate,1,3)pair
13:32:11   7  ,SUBSTR(prdate,4,19)ydate
13:32:11   8  FROM svmc_apply_prep
13:32:11   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
13:32:11 SQL> @aud_score1day.sql  2010-12-30 13:20:00
13:32:11 SQL> --
13:32:11 SQL> -- aud_score1day.sql
13:32:11 SQL> --
13:32:11 SQL> 
13:32:11 SQL> CREATE OR REPLACE VIEW sme AS
13:32:11   2  SELECT
13:32:11   3  'aud'||m.ydate prdate
13:32:11   4  ,NULL gatt
13:32:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:32:11   6  ,eur_g00
13:32:11   7  ,eur_g01
13:32:11   8  ,eur_g02
13:32:11   9  ,eur_g03
13:32:11  10  ,eur_g04
13:32:11  11  ,eur_g05
13:32:11  12  ,eur_g06
13:32:11  13  ,eur_g07
13:32:11  14  ,eur_g08
13:32:11  15  ,eur_g09
13:32:11  16  ,eur_g10
13:32:11  17  ,eur_g11
13:32:11  18  ,eur_g12
13:32:11  19  ,eur_g13
13:32:11  20  ,eur_g14
13:32:11  21  ,eur_g15
13:32:11  22  ,eur_g16
13:32:11  23  ,eur_g17
13:32:11  24  ,eur_g18
13:32:11  25  ,eur_g19
13:32:11  26  ,eur_g20
13:32:11  27  ,eur_g21
13:32:11  28  ,eur_g22
13:32:11  29  ,eur_g23
13:32:11  30  ,eur_g24
13:32:11  31  ,eur_g25
13:32:11  32  ,eur_g26
13:32:11  33  ,eur_g27
13:32:11  34  ,eur_g28
13:32:11  35  ,eur_g29
13:32:11  36  ,eur_g30
13:32:11  37  ,eur_g31
13:32:11  38  ,eur_g32
13:32:11  39  ,eur_g33
13:32:11  40  ,eur_g34
13:32:11  41  ,eur_g35
13:32:11  42  ,eur_g36
13:32:11  43  ,eur_g37
13:32:11  44  ,eur_g38
13:32:11  45  ,eur_g39
13:32:11  46  ,eur_g40
13:32:11  47  ,eur_g41
13:32:11  48  ,aud_g00
13:32:11  49  ,aud_g01
13:32:11  50  ,aud_g02
13:32:11  51  ,aud_g03
13:32:11  52  ,aud_g04
13:32:11  53  ,aud_g05
13:32:11  54  ,aud_g06
13:32:11  55  ,aud_g07
13:32:11  56  ,aud_g08
13:32:11  57  ,aud_g09
13:32:11  58  ,aud_g10
13:32:11  59  ,aud_g11
13:32:11  60  ,aud_g12
13:32:11  61  ,aud_g13
13:32:11  62  ,aud_g14
13:32:11  63  ,aud_g15
13:32:11  64  ,aud_g16
13:32:11  65  ,aud_g17
13:32:11  66  ,aud_g18
13:32:11  67  ,aud_g19
13:32:11  68  ,aud_g20
13:32:11  69  ,aud_g21
13:32:11  70  ,aud_g22
13:32:11  71  ,aud_g23
13:32:11  72  ,aud_g24
13:32:11  73  ,aud_g25
13:32:11  74  ,aud_g26
13:32:11  75  ,aud_g27
13:32:11  76  ,aud_g28
13:32:11  77  ,aud_g29
13:32:11  78  ,aud_g30
13:32:11  79  ,aud_g31
13:32:11  80  ,aud_g32
13:32:11  81  ,aud_g33
13:32:11  82  ,aud_g34
13:32:11  83  ,aud_g35
13:32:11  84  ,aud_g36
13:32:11  85  ,aud_g37
13:32:11  86  ,aud_g38
13:32:11  87  ,aud_g39
13:32:11  88  ,aud_g40
13:32:11  89  ,aud_g41
13:32:11  90  ,gbp_g00
13:32:11  91  ,gbp_g01
13:32:11  92  ,gbp_g02
13:32:11  93  ,gbp_g03
13:32:11  94  ,gbp_g04
13:32:11  95  ,gbp_g05
13:32:11  96  ,gbp_g06
13:32:11  97  ,gbp_g07
13:32:11  98  ,gbp_g08
13:32:11  99  ,gbp_g09
13:32:11 100  ,gbp_g10
13:32:11 101  ,gbp_g11
13:32:11 102  ,gbp_g12
13:32:11 103  ,gbp_g13
13:32:11 104  ,gbp_g14
13:32:11 105  ,gbp_g15
13:32:11 106  ,gbp_g16
13:32:11 107  ,gbp_g17
13:32:11 108  ,gbp_g18
13:32:11 109  ,gbp_g19
13:32:11 110  ,gbp_g20
13:32:11 111  ,gbp_g21
13:32:11 112  ,gbp_g22
13:32:11 113  ,gbp_g23
13:32:11 114  ,gbp_g24
13:32:11 115  ,gbp_g25
13:32:11 116  ,gbp_g26
13:32:11 117  ,gbp_g27
13:32:11 118  ,gbp_g28
13:32:11 119  ,gbp_g29
13:32:11 120  ,gbp_g30
13:32:11 121  ,gbp_g31
13:32:11 122  ,gbp_g32
13:32:11 123  ,gbp_g33
13:32:11 124  ,gbp_g34
13:32:11 125  ,gbp_g35
13:32:11 126  ,gbp_g36
13:32:11 127  ,gbp_g37
13:32:11 128  ,gbp_g38
13:32:11 129  ,gbp_g39
13:32:11 130  ,gbp_g40
13:32:11 131  ,gbp_g41
13:32:11 132  ,jpy_g00
13:32:11 133  ,jpy_g01
13:32:11 134  ,jpy_g02
13:32:11 135  ,jpy_g03
13:32:11 136  ,jpy_g04
13:32:11 137  ,jpy_g05
13:32:11 138  ,jpy_g06
13:32:11 139  ,jpy_g07
13:32:11 140  ,jpy_g08
13:32:11 141  ,jpy_g09
13:32:11 142  ,jpy_g10
13:32:11 143  ,jpy_g11
13:32:11 144  ,jpy_g12
13:32:11 145  ,jpy_g13
13:32:11 146  ,jpy_g14
13:32:11 147  ,jpy_g15
13:32:11 148  ,jpy_g16
13:32:11 149  ,jpy_g17
13:32:11 150  ,jpy_g18
13:32:11 151  ,jpy_g19
13:32:11 152  ,jpy_g20
13:32:11 153  ,jpy_g21
13:32:11 154  ,jpy_g22
13:32:11 155  ,jpy_g23
13:32:11 156  ,jpy_g24
13:32:11 157  ,jpy_g25
13:32:11 158  ,jpy_g26
13:32:11 159  ,jpy_g27
13:32:11 160  ,jpy_g28
13:32:11 161  ,jpy_g29
13:32:11 162  ,jpy_g30
13:32:11 163  ,jpy_g31
13:32:11 164  ,jpy_g32
13:32:11 165  ,jpy_g33
13:32:11 166  ,jpy_g34
13:32:11 167  ,jpy_g35
13:32:11 168  ,jpy_g36
13:32:11 169  ,jpy_g37
13:32:11 170  ,jpy_g38
13:32:11 171  ,jpy_g39
13:32:11 172  ,jpy_g40
13:32:11 173  ,jpy_g41
13:32:11 174  ,cad_g00
13:32:11 175  ,cad_g01
13:32:11 176  ,cad_g02
13:32:11 177  ,cad_g03
13:32:11 178  ,cad_g04
13:32:11 179  ,cad_g05
13:32:11 180  ,cad_g06
13:32:11 181  ,cad_g07
13:32:11 182  ,cad_g08
13:32:11 183  ,cad_g09
13:32:11 184  ,cad_g10
13:32:11 185  ,cad_g11
13:32:11 186  ,cad_g12
13:32:11 187  ,cad_g13
13:32:11 188  ,cad_g14
13:32:11 189  ,cad_g15
13:32:11 190  ,cad_g16
13:32:11 191  ,cad_g17
13:32:11 192  ,cad_g18
13:32:11 193  ,cad_g19
13:32:11 194  ,cad_g20
13:32:11 195  ,cad_g21
13:32:11 196  ,cad_g22
13:32:11 197  ,cad_g23
13:32:11 198  ,cad_g24
13:32:11 199  ,cad_g25
13:32:11 200  ,cad_g26
13:32:11 201  ,cad_g27
13:32:11 202  ,cad_g28
13:32:11 203  ,cad_g29
13:32:11 204  ,cad_g30
13:32:11 205  ,cad_g31
13:32:11 206  ,cad_g32
13:32:11 207  ,cad_g33
13:32:11 208  ,cad_g34
13:32:11 209  ,cad_g35
13:32:11 210  ,cad_g36
13:32:11 211  ,cad_g37
13:32:11 212  ,cad_g38
13:32:11 213  ,cad_g39
13:32:11 214  ,cad_g40
13:32:11 215  ,cad_g41
13:32:11 216  ,chf_g00
13:32:11 217  ,chf_g01
13:32:11 218  ,chf_g02
13:32:11 219  ,chf_g03
13:32:11 220  ,chf_g04
13:32:11 221  ,chf_g05
13:32:11 222  ,chf_g06
13:32:11 223  ,chf_g07
13:32:11 224  ,chf_g08
13:32:11 225  ,chf_g09
13:32:11 226  ,chf_g10
13:32:11 227  ,chf_g11
13:32:11 228  ,chf_g12
13:32:11 229  ,chf_g13
13:32:11 230  ,chf_g14
13:32:11 231  ,chf_g15
13:32:11 232  ,chf_g16
13:32:11 233  ,chf_g17
13:32:11 234  ,chf_g18
13:32:11 235  ,chf_g19
13:32:11 236  ,chf_g20
13:32:11 237  ,chf_g21
13:32:11 238  ,chf_g22
13:32:11 239  ,chf_g23
13:32:11 240  ,chf_g24
13:32:11 241  ,chf_g25
13:32:11 242  ,chf_g26
13:32:11 243  ,chf_g27
13:32:11 244  ,chf_g28
13:32:11 245  ,chf_g29
13:32:11 246  ,chf_g30
13:32:11 247  ,chf_g31
13:32:11 248  ,chf_g32
13:32:11 249  ,chf_g33
13:32:11 250  ,chf_g34
13:32:11 251  ,chf_g35
13:32:11 252  ,chf_g36
13:32:11 253  ,chf_g37
13:32:11 254  ,chf_g38
13:32:11 255  ,chf_g39
13:32:11 256  ,chf_g40
13:32:11 257  ,chf_g41
13:32:11 258  FROM aud_ms6 m
13:32:11 259  WHERE m.ydate = '&1'||' '||'&2'
13:32:11 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'13:20:00'

View created.

Elapsed: 00:00:00.12
13:32:11 SQL> 
13:32:11 SQL> -- rpt
13:32:11 SQL> -- We should see just 1 row:
13:32:11 SQL> 
13:32:11 SQL> SELECT COUNT(prdate) FROM sme
13:32:11   2  
13:32:11 SQL> -- Build the model:
13:32:11 SQL> CREATE OR REPLACE VIEW bme AS
13:32:11   2  SELECT
13:32:11   3  'aud'||m.ydate prdate
13:32:11   4  ,gatt
13:32:11   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:32:11   6  ,eur_g00
13:32:11   7  ,eur_g01
13:32:11   8  ,eur_g02
13:32:11   9  ,eur_g03
13:32:11  10  ,eur_g04
13:32:11  11  ,eur_g05
13:32:11  12  ,eur_g06
13:32:11  13  ,eur_g07
13:32:11  14  ,eur_g08
13:32:11  15  ,eur_g09
13:32:11  16  ,eur_g10
13:32:11  17  ,eur_g11
13:32:11  18  ,eur_g12
13:32:11  19  ,eur_g13
13:32:11  20  ,eur_g14
13:32:11  21  ,eur_g15
13:32:11  22  ,eur_g16
13:32:11  23  ,eur_g17
13:32:11  24  ,eur_g18
13:32:11  25  ,eur_g19
13:32:11  26  ,eur_g20
13:32:11  27  ,eur_g21
13:32:11  28  ,eur_g22
13:32:11  29  ,eur_g23
13:32:11  30  ,eur_g24
13:32:11  31  ,eur_g25
13:32:11  32  ,eur_g26
13:32:11  33  ,eur_g27
13:32:11  34  ,eur_g28
13:32:11  35  ,eur_g29
13:32:11  36  ,eur_g30
13:32:11  37  ,eur_g31
13:32:11  38  ,eur_g32
13:32:11  39  ,eur_g33
13:32:11  40  ,eur_g34
13:32:11  41  ,eur_g35
13:32:11  42  ,eur_g36
13:32:11  43  ,eur_g37
13:32:11  44  ,eur_g38
13:32:11  45  ,eur_g39
13:32:11  46  ,eur_g40
13:32:11  47  ,eur_g41
13:32:11  48  ,aud_g00
13:32:11  49  ,aud_g01
13:32:11  50  ,aud_g02
13:32:11  51  ,aud_g03
13:32:11  52  ,aud_g04
13:32:11  53  ,aud_g05
13:32:11  54  ,aud_g06
13:32:11  55  ,aud_g07
13:32:11  56  ,aud_g08
13:32:11  57  ,aud_g09
13:32:11  58  ,aud_g10
13:32:11  59  ,aud_g11
13:32:11  60  ,aud_g12
13:32:11  61  ,aud_g13
13:32:11  62  ,aud_g14
13:32:11  63  ,aud_g15
13:32:11  64  ,aud_g16
13:32:11  65  ,aud_g17
13:32:11  66  ,aud_g18
13:32:11  67  ,aud_g19
13:32:11  68  ,aud_g20
13:32:11  69  ,aud_g21
13:32:11  70  ,aud_g22
13:32:11  71  ,aud_g23
13:32:11  72  ,aud_g24
13:32:11  73  ,aud_g25
13:32:11  74  ,aud_g26
13:32:11  75  ,aud_g27
13:32:11  76  ,aud_g28
13:32:11  77  ,aud_g29
13:32:11  78  ,aud_g30
13:32:11  79  ,aud_g31
13:32:11  80  ,aud_g32
13:32:11  81  ,aud_g33
13:32:11  82  ,aud_g34
13:32:11  83  ,aud_g35
13:32:11  84  ,aud_g36
13:32:11  85  ,aud_g37
13:32:11  86  ,aud_g38
13:32:11  87  ,aud_g39
13:32:11  88  ,aud_g40
13:32:11  89  ,aud_g41
13:32:11  90  ,gbp_g00
13:32:11  91  ,gbp_g01
13:32:11  92  ,gbp_g02
13:32:11  93  ,gbp_g03
13:32:11  94  ,gbp_g04
13:32:11  95  ,gbp_g05
13:32:11  96  ,gbp_g06
13:32:11  97  ,gbp_g07
13:32:11  98  ,gbp_g08
13:32:11  99  ,gbp_g09
13:32:11 100  ,gbp_g10
13:32:11 101  ,gbp_g11
13:32:11 102  ,gbp_g12
13:32:11 103  ,gbp_g13
13:32:11 104  ,gbp_g14
13:32:11 105  ,gbp_g15
13:32:11 106  ,gbp_g16
13:32:11 107  ,gbp_g17
13:32:11 108  ,gbp_g18
13:32:11 109  ,gbp_g19
13:32:11 110  ,gbp_g20
13:32:11 111  ,gbp_g21
13:32:11 112  ,gbp_g22
13:32:11 113  ,gbp_g23
13:32:11 114  ,gbp_g24
13:32:11 115  ,gbp_g25
13:32:11 116  ,gbp_g26
13:32:11 117  ,gbp_g27
13:32:11 118  ,gbp_g28
13:32:11 119  ,gbp_g29
13:32:11 120  ,gbp_g30
13:32:11 121  ,gbp_g31
13:32:11 122  ,gbp_g32
13:32:11 123  ,gbp_g33
13:32:11 124  ,gbp_g34
13:32:11 125  ,gbp_g35
13:32:11 126  ,gbp_g36
13:32:11 127  ,gbp_g37
13:32:11 128  ,gbp_g38
13:32:11 129  ,gbp_g39
13:32:11 130  ,gbp_g40
13:32:11 131  ,gbp_g41
13:32:11 132  ,jpy_g00
13:32:11 133  ,jpy_g01
13:32:11 134  ,jpy_g02
13:32:11 135  ,jpy_g03
13:32:11 136  ,jpy_g04
13:32:11 137  ,jpy_g05
13:32:11 138  ,jpy_g06
13:32:11 139  ,jpy_g07
13:32:11 140  ,jpy_g08
13:32:11 141  ,jpy_g09
13:32:11 142  ,jpy_g10
13:32:11 143  ,jpy_g11
13:32:11 144  ,jpy_g12
13:32:11 145  ,jpy_g13
13:32:11 146  ,jpy_g14
13:32:11 147  ,jpy_g15
13:32:11 148  ,jpy_g16
13:32:11 149  ,jpy_g17
13:32:11 150  ,jpy_g18
13:32:11 151  ,jpy_g19
13:32:11 152  ,jpy_g20
13:32:11 153  ,jpy_g21
13:32:11 154  ,jpy_g22
13:32:11 155  ,jpy_g23
13:32:11 156  ,jpy_g24
13:32:11 157  ,jpy_g25
13:32:11 158  ,jpy_g26
13:32:11 159  ,jpy_g27
13:32:11 160  ,jpy_g28
13:32:11 161  ,jpy_g29
13:32:11 162  ,jpy_g30
13:32:11 163  ,jpy_g31
13:32:11 164  ,jpy_g32
13:32:11 165  ,jpy_g33
13:32:11 166  ,jpy_g34
13:32:11 167  ,jpy_g35
13:32:11 168  ,jpy_g36
13:32:11 169  ,jpy_g37
13:32:11 170  ,jpy_g38
13:32:11 171  ,jpy_g39
13:32:11 172  ,jpy_g40
13:32:11 173  ,jpy_g41
13:32:11 174  ,cad_g00
13:32:11 175  ,cad_g01
13:32:11 176  ,cad_g02
13:32:11 177  ,cad_g03
13:32:11 178  ,cad_g04
13:32:11 179  ,cad_g05
13:32:11 180  ,cad_g06
13:32:11 181  ,cad_g07
13:32:11 182  ,cad_g08
13:32:11 183  ,cad_g09
13:32:11 184  ,cad_g10
13:32:11 185  ,cad_g11
13:32:11 186  ,cad_g12
13:32:11 187  ,cad_g13
13:32:11 188  ,cad_g14
13:32:11 189  ,cad_g15
13:32:11 190  ,cad_g16
13:32:11 191  ,cad_g17
13:32:11 192  ,cad_g18
13:32:11 193  ,cad_g19
13:32:11 194  ,cad_g20
13:32:11 195  ,cad_g21
13:32:11 196  ,cad_g22
13:32:11 197  ,cad_g23
13:32:11 198  ,cad_g24
13:32:11 199  ,cad_g25
13:32:11 200  ,cad_g26
13:32:11 201  ,cad_g27
13:32:11 202  ,cad_g28
13:32:11 203  ,cad_g29
13:32:11 204  ,cad_g30
13:32:11 205  ,cad_g31
13:32:11 206  ,cad_g32
13:32:11 207  ,cad_g33
13:32:11 208  ,cad_g34
13:32:11 209  ,cad_g35
13:32:11 210  ,cad_g36
13:32:11 211  ,cad_g37
13:32:11 212  ,cad_g38
13:32:11 213  ,cad_g39
13:32:11 214  ,cad_g40
13:32:11 215  ,cad_g41
13:32:11 216  ,chf_g00
13:32:11 217  ,chf_g01
13:32:11 218  ,chf_g02
13:32:11 219  ,chf_g03
13:32:11 220  ,chf_g04
13:32:11 221  ,chf_g05
13:32:11 222  ,chf_g06
13:32:11 223  ,chf_g07
13:32:11 224  ,chf_g08
13:32:11 225  ,chf_g09
13:32:11 226  ,chf_g10
13:32:11 227  ,chf_g11
13:32:11 228  ,chf_g12
13:32:11 229  ,chf_g13
13:32:11 230  ,chf_g14
13:32:11 231  ,chf_g15
13:32:11 232  ,chf_g16
13:32:11 233  ,chf_g17
13:32:11 234  ,chf_g18
13:32:11 235  ,chf_g19
13:32:11 236  ,chf_g20
13:32:11 237  ,chf_g21
13:32:11 238  ,chf_g22
13:32:11 239  ,chf_g23
13:32:11 240  ,chf_g24
13:32:11 241  ,chf_g25
13:32:11 242  ,chf_g26
13:32:11 243  ,chf_g27
13:32:11 244  ,chf_g28
13:32:11 245  ,chf_g29
13:32:11 246  ,chf_g30
13:32:11 247  ,chf_g31
13:32:11 248  ,chf_g32
13:32:11 249  ,chf_g33
13:32:11 250  ,chf_g34
13:32:11 251  ,chf_g35
13:32:11 252  ,chf_g36
13:32:11 253  ,chf_g37
13:32:11 254  ,chf_g38
13:32:11 255  ,chf_g39
13:32:11 256  ,chf_g40
13:32:11 257  ,chf_g41
13:32:11 258  FROM aud_ms6 m
13:32:11 259  WHERE gatt IN('nup','up')
13:32:11 260  AND 1+m.ydate < '&1'||' '||'&2'
13:32:11 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'13:20:00'

View created.

Elapsed: 00:00:00.12
13:32:11 SQL> 
13:32:11 SQL> -- rpt
13:32:11 SQL> 
13:32:11 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
13:32:11   2  
13:32:11 SQL> SELECT MAX(prdate) FROM bme
13:32:11   2  
13:32:11 SQL> -- Now build model from bme and score sme
13:32:11 SQL> @score1.sql
13:32:11 SQL> -- score1.sql
13:32:11 SQL> 
13:32:11 SQL> -- Does the 1st SVM score
13:32:11 SQL> 
13:32:11 SQL> -- Fill up svmc_apply_prep
13:32:11 SQL> @score.sql
13:32:11 SQL> --
13:32:11 SQL> -- score.sql
13:32:11 SQL> --
13:32:11 SQL> 
13:32:11 SQL> -- usage: score.sql
13:32:11 SQL> 
13:32:11 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
13:32:11 SQL> 
13:32:11 SQL> DEFINE target	= 'gatt'
13:32:11 SQL> DEFINE model_name = 'forex14'
13:32:11 SQL> DEFINE bldtable	= 'bme'
13:32:11 SQL> DEFINE scoretable = 'sme'
13:32:11 SQL> DEFINE case_id	= 'prdate'
13:32:11 SQL> 
13:32:11 SQL> -- Define a variable to help me exclude some columns from some data mining calls
13:32:11 SQL> DEFINE exclude1 = "'&target','&case_id'"
13:32:11 SQL> 
13:32:11 SQL> -- Builds an SVM model using pl/sql.
13:32:11 SQL> 
13:32:11 SQL> -----------------------------------------------------------------------
13:32:11 SQL> --			    BUILD THE MODEL
13:32:11 SQL> -----------------------------------------------------------------------
13:32:11 SQL> 
13:32:11 SQL> -- Cleanup old build data preparation objects for repeat runs
13:32:11 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
13:32:11 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
13:32:11 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
13:32:11 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
13:32:11 SQL> 
13:32:11 SQL> 
13:32:11 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
13:32:11 SQL> --
13:32:11 SQL> -- DROP	TABLE svmc_settings ;
13:32:11 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
13:32:11 SQL> -- DELETE svmc_settings;
13:32:11 SQL> 
13:32:11 SQL> -- The default classification algorithm is Naive Bayes. So override
13:32:11 SQL> -- this choice to SVM using a settings table.
13:32:11 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
13:32:11 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
13:32:11 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
13:32:11 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
13:32:11 SQL> -- models.
13:32:11 SQL> --
13:32:11 SQL> 
13:32:11 SQL> -- Do this once and then comment it out.
13:32:11 SQL> -- That makes script go faster.
13:32:11 SQL> -- BEGIN
13:32:11 SQL> -- -- Populate settings table
13:32:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:32:11 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
13:32:11 SQL> --
13:32:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:32:11 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
13:32:11 SQL> --
13:32:11 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:32:11 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
13:32:11 SQL> --   COMMIT;
13:32:11 SQL> -- END;
13:32:11 SQL> -- /
13:32:11 SQL> 
13:32:11 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
13:32:11 SQL> 
13:32:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
13:32:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:32:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
13:32:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
13:32:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:32:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:32:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
13:32:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:32:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:32:11 SQL> 
13:32:11 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
13:32:11   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:32:11   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:32:11 SQL> 
13:32:11 SQL> --------------------------------
13:32:11 SQL> -- PREPARE BUILD (TRAINING) DATA
13:32:11 SQL> --
13:32:11 SQL> 
13:32:11 SQL> -- 1. Missing Value treatment for all Predictors and
13:32:11 SQL> -- 2. Outlier Treatment and
13:32:11 SQL> -- 3. Normalization are performed below.
13:32:11 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
13:32:11 SQL> --    normalized here.
13:32:11 SQL> 
13:32:11 SQL> BEGIN
13:32:11   2  	-- Perform missing value treatment for all predictors
13:32:11   3  	-- create miss tables
13:32:11   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
13:32:11   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
13:32:11   6  
13:32:11   7  	-- populate miss tables
13:32:11   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
13:32:11   9  	  miss_table_name => 'svmc_miss_num',
13:32:11  10  	  data_table_name => '&bldtable',
13:32:11  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:32:11  12  
13:32:11  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
13:32:11  14  	  miss_table_name => 'svmc_miss_cat',
13:32:11  15  	  data_table_name => '&bldtable',
13:32:11  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:32:11  17  
13:32:11  18  	-- xform input data to replace missing values
13:32:11  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:32:11  20  	  miss_table_name => 'svmc_miss_num',
13:32:11  21  	  data_table_name => '&bldtable',
13:32:11  22  	  xform_view_name => 'xformed_build_miss_num');
13:32:11  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:32:11  24  	  miss_table_name => 'svmc_miss_cat',
13:32:11  25  	  data_table_name => '&bldtable',
13:32:11  26  	  xform_view_name => 'xformed_build_miss_cat');
13:32:11  27  
13:32:11  28  	-- Perform outlier treatment.
13:32:11  29  	-- create clip table
13:32:11  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
13:32:11  31  
13:32:11  32  	-- populate clip table
13:32:11  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
13:32:11  34  	  clip_table_name => 'svmc_clip',
13:32:11  35  	  data_table_name => '&bldtable',
13:32:11  36  	  tail_frac	  => 0.025,
13:32:11  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:32:11  38  
13:32:11  39  	-- xform input data to winsorized data
13:32:11  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
13:32:11  41  	  clip_table_name => 'svmc_clip',
13:32:11  42  	  data_table_name => '&bldtable',
13:32:11  43  	  xform_view_name => 'svmc_winsor');
13:32:11  44  
13:32:11  45  	-- create normalization table
13:32:11  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
13:32:11  47  
13:32:11  48  	-- populate normalization table based on winsorized data
13:32:11  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
13:32:11  50  	  norm_table_name => 'svmc_norm',
13:32:11  51  	  data_table_name => 'svmc_winsor',
13:32:11  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:32:11  53  
13:32:11  54  	-- normalize the original data
13:32:11  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:32:11  56  	  norm_table_name => 'svmc_norm',
13:32:11  57  	  data_table_name => '&bldtable',
13:32:11  58  	  xform_view_name => 'svmc_build_prep');
13:32:11  59  END;
13:32:11  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.76
13:32:29 SQL> 
13:32:29 SQL> ---------------------
13:32:29 SQL> -- CREATE A NEW MODEL
13:32:29 SQL> --
13:32:29 SQL> -- Cleanup old model with the same name for repeat runs
13:32:29 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
13:32:29   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:32:29   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.93
13:32:30 SQL> 
13:32:30 SQL> -- Build a new SVM Model
13:32:30 SQL> BEGIN
13:32:30   2  	DBMS_DATA_MINING.CREATE_MODEL(
13:32:30   3  	  model_name	      => '&model_name',
13:32:30   4  	  mining_function     => dbms_data_mining.classification,
13:32:30   5  	  data_table_name     => 'svmc_build_prep',
13:32:30   6  	  case_id_column_name => '&case_id',
13:32:30   7  	  target_column_name  => '&target',
13:32:30   8  	  settings_table_name => 'svmc_settings');
13:32:30   9  END;
13:32:30  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.94
13:32:58 SQL> 
13:32:58 SQL> -----------------------------------------------------------------------
13:32:58 SQL> --			       APPLY/score THE MODEL
13:32:58 SQL> -----------------------------------------------------------------------
13:32:58 SQL> 
13:32:58 SQL> -- Cleanup old scoring data preparation objects for repeat runs
13:32:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
13:32:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:32:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:32:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
13:32:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:32:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:32:58 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
13:32:58   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:32:58   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:32:58 SQL> -----------------------
13:32:58 SQL> -- PREPARE SCORING DATA
13:32:58 SQL> --
13:32:58 SQL> -- If the data for model creation has been prepared, then the data
13:32:58 SQL> -- to be scored using the model must be prepared in the same manner
13:32:58 SQL> -- in order to obtain meaningful results.
13:32:58 SQL> --
13:32:58 SQL> -- 1. Missing Value treatment for all Predictors and
13:32:58 SQL> -- 2. Normalization
13:32:58 SQL> -- No outlier treatment will be performed during test and apply. The
13:32:58 SQL> -- normalization step is sufficient, since the normalization parameters
13:32:58 SQL> -- already capture the effects of outlier treatment done with build data.
13:32:58 SQL> --
13:32:58 SQL> BEGIN
13:32:58   2  	-- Xform Test data to replace missing values
13:32:58   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:32:58   4  	  miss_table_name => 'svmc_miss_num',
13:32:58   5  	  data_table_name => '&scoretable',
13:32:58   6  	  xform_view_name => 'xformed_apply_miss_num');
13:32:58   7  
13:32:58   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:32:58   9  	  miss_table_name => 'svmc_miss_cat',
13:32:58  10  	  data_table_name => '&scoretable',
13:32:58  11  	  xform_view_name => 'xformed_apply_miss_cat');
13:32:58  12  
13:32:58  13  	-- Normalize the data to be scored
13:32:58  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:32:58  15  	  norm_table_name => 'svmc_norm',
13:32:58  16  	  data_table_name => '&scoretable',
13:32:58  17  	  xform_view_name => 'svmc_apply_prep');
13:32:58  18  END;
13:32:58  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.22
13:32:59 SQL> 
13:32:59 SQL> -- Use same model_name used in score.sql
13:32:59 SQL> DEFINE model_name = 'forex14'
13:32:59 SQL> 
13:32:59 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
13:32:59 SQL> 
13:32:59 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
13:33:00 SQL> 
13:33:00 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
13:33:00   2  SELECT
13:33:00   3  prdate
13:33:00   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
13:33:00   5  ,sysdate
13:33:00   6  ,SUBSTR(prdate,1,3)pair
13:33:00   7  ,SUBSTR(prdate,4,19)ydate
13:33:00   8  FROM svmc_apply_prep
13:33:00   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
13:33:00 SQL> @aud_score1day_gattn.sql	2010-12-30 13:05:00
13:33:00 SQL> --
13:33:00 SQL> -- aud_score1day_gattn.sql
13:33:00 SQL> --
13:33:00 SQL> 
13:33:00 SQL> CREATE OR REPLACE VIEW sme AS
13:33:00   2  SELECT
13:33:00   3  'aud'||m.ydate prdate
13:33:00   4  ,NULL gattn
13:33:00   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:33:00   6  ,eur_g00
13:33:00   7  ,eur_g01
13:33:00   8  ,eur_g02
13:33:00   9  ,eur_g03
13:33:00  10  ,eur_g04
13:33:00  11  ,eur_g05
13:33:00  12  ,eur_g06
13:33:00  13  ,eur_g07
13:33:00  14  ,eur_g08
13:33:00  15  ,eur_g09
13:33:00  16  ,eur_g10
13:33:00  17  ,eur_g11
13:33:00  18  ,eur_g12
13:33:00  19  ,eur_g13
13:33:00  20  ,eur_g14
13:33:00  21  ,eur_g15
13:33:00  22  ,eur_g16
13:33:00  23  ,eur_g17
13:33:00  24  ,eur_g18
13:33:00  25  ,eur_g19
13:33:00  26  ,eur_g20
13:33:00  27  ,eur_g21
13:33:00  28  ,eur_g22
13:33:00  29  ,eur_g23
13:33:00  30  ,eur_g24
13:33:00  31  ,eur_g25
13:33:00  32  ,eur_g26
13:33:00  33  ,eur_g27
13:33:00  34  ,eur_g28
13:33:00  35  ,eur_g29
13:33:00  36  ,eur_g30
13:33:00  37  ,eur_g31
13:33:00  38  ,eur_g32
13:33:00  39  ,eur_g33
13:33:00  40  ,eur_g34
13:33:00  41  ,eur_g35
13:33:00  42  ,eur_g36
13:33:00  43  ,eur_g37
13:33:00  44  ,eur_g38
13:33:00  45  ,eur_g39
13:33:00  46  ,eur_g40
13:33:00  47  ,eur_g41
13:33:00  48  ,aud_g00
13:33:00  49  ,aud_g01
13:33:00  50  ,aud_g02
13:33:00  51  ,aud_g03
13:33:00  52  ,aud_g04
13:33:00  53  ,aud_g05
13:33:00  54  ,aud_g06
13:33:00  55  ,aud_g07
13:33:00  56  ,aud_g08
13:33:00  57  ,aud_g09
13:33:00  58  ,aud_g10
13:33:00  59  ,aud_g11
13:33:00  60  ,aud_g12
13:33:00  61  ,aud_g13
13:33:00  62  ,aud_g14
13:33:00  63  ,aud_g15
13:33:00  64  ,aud_g16
13:33:00  65  ,aud_g17
13:33:00  66  ,aud_g18
13:33:00  67  ,aud_g19
13:33:00  68  ,aud_g20
13:33:00  69  ,aud_g21
13:33:00  70  ,aud_g22
13:33:00  71  ,aud_g23
13:33:00  72  ,aud_g24
13:33:00  73  ,aud_g25
13:33:00  74  ,aud_g26
13:33:00  75  ,aud_g27
13:33:00  76  ,aud_g28
13:33:00  77  ,aud_g29
13:33:00  78  ,aud_g30
13:33:00  79  ,aud_g31
13:33:00  80  ,aud_g32
13:33:00  81  ,aud_g33
13:33:00  82  ,aud_g34
13:33:00  83  ,aud_g35
13:33:00  84  ,aud_g36
13:33:00  85  ,aud_g37
13:33:00  86  ,aud_g38
13:33:00  87  ,aud_g39
13:33:00  88  ,aud_g40
13:33:00  89  ,aud_g41
13:33:00  90  ,gbp_g00
13:33:00  91  ,gbp_g01
13:33:00  92  ,gbp_g02
13:33:00  93  ,gbp_g03
13:33:00  94  ,gbp_g04
13:33:00  95  ,gbp_g05
13:33:00  96  ,gbp_g06
13:33:00  97  ,gbp_g07
13:33:00  98  ,gbp_g08
13:33:00  99  ,gbp_g09
13:33:00 100  ,gbp_g10
13:33:00 101  ,gbp_g11
13:33:00 102  ,gbp_g12
13:33:00 103  ,gbp_g13
13:33:00 104  ,gbp_g14
13:33:00 105  ,gbp_g15
13:33:00 106  ,gbp_g16
13:33:00 107  ,gbp_g17
13:33:00 108  ,gbp_g18
13:33:00 109  ,gbp_g19
13:33:00 110  ,gbp_g20
13:33:00 111  ,gbp_g21
13:33:00 112  ,gbp_g22
13:33:00 113  ,gbp_g23
13:33:00 114  ,gbp_g24
13:33:00 115  ,gbp_g25
13:33:00 116  ,gbp_g26
13:33:00 117  ,gbp_g27
13:33:00 118  ,gbp_g28
13:33:00 119  ,gbp_g29
13:33:00 120  ,gbp_g30
13:33:00 121  ,gbp_g31
13:33:00 122  ,gbp_g32
13:33:00 123  ,gbp_g33
13:33:00 124  ,gbp_g34
13:33:00 125  ,gbp_g35
13:33:00 126  ,gbp_g36
13:33:00 127  ,gbp_g37
13:33:00 128  ,gbp_g38
13:33:00 129  ,gbp_g39
13:33:00 130  ,gbp_g40
13:33:00 131  ,gbp_g41
13:33:00 132  ,jpy_g00
13:33:00 133  ,jpy_g01
13:33:00 134  ,jpy_g02
13:33:00 135  ,jpy_g03
13:33:00 136  ,jpy_g04
13:33:00 137  ,jpy_g05
13:33:00 138  ,jpy_g06
13:33:00 139  ,jpy_g07
13:33:00 140  ,jpy_g08
13:33:00 141  ,jpy_g09
13:33:00 142  ,jpy_g10
13:33:00 143  ,jpy_g11
13:33:00 144  ,jpy_g12
13:33:00 145  ,jpy_g13
13:33:00 146  ,jpy_g14
13:33:00 147  ,jpy_g15
13:33:00 148  ,jpy_g16
13:33:00 149  ,jpy_g17
13:33:00 150  ,jpy_g18
13:33:00 151  ,jpy_g19
13:33:00 152  ,jpy_g20
13:33:00 153  ,jpy_g21
13:33:00 154  ,jpy_g22
13:33:00 155  ,jpy_g23
13:33:00 156  ,jpy_g24
13:33:00 157  ,jpy_g25
13:33:00 158  ,jpy_g26
13:33:00 159  ,jpy_g27
13:33:00 160  ,jpy_g28
13:33:00 161  ,jpy_g29
13:33:00 162  ,jpy_g30
13:33:00 163  ,jpy_g31
13:33:00 164  ,jpy_g32
13:33:00 165  ,jpy_g33
13:33:00 166  ,jpy_g34
13:33:00 167  ,jpy_g35
13:33:00 168  ,jpy_g36
13:33:00 169  ,jpy_g37
13:33:00 170  ,jpy_g38
13:33:00 171  ,jpy_g39
13:33:00 172  ,jpy_g40
13:33:00 173  ,jpy_g41
13:33:00 174  ,cad_g00
13:33:00 175  ,cad_g01
13:33:00 176  ,cad_g02
13:33:00 177  ,cad_g03
13:33:00 178  ,cad_g04
13:33:00 179  ,cad_g05
13:33:00 180  ,cad_g06
13:33:00 181  ,cad_g07
13:33:00 182  ,cad_g08
13:33:00 183  ,cad_g09
13:33:00 184  ,cad_g10
13:33:00 185  ,cad_g11
13:33:00 186  ,cad_g12
13:33:00 187  ,cad_g13
13:33:00 188  ,cad_g14
13:33:00 189  ,cad_g15
13:33:00 190  ,cad_g16
13:33:00 191  ,cad_g17
13:33:00 192  ,cad_g18
13:33:00 193  ,cad_g19
13:33:00 194  ,cad_g20
13:33:00 195  ,cad_g21
13:33:00 196  ,cad_g22
13:33:00 197  ,cad_g23
13:33:00 198  ,cad_g24
13:33:00 199  ,cad_g25
13:33:00 200  ,cad_g26
13:33:00 201  ,cad_g27
13:33:00 202  ,cad_g28
13:33:00 203  ,cad_g29
13:33:00 204  ,cad_g30
13:33:00 205  ,cad_g31
13:33:00 206  ,cad_g32
13:33:00 207  ,cad_g33
13:33:00 208  ,cad_g34
13:33:00 209  ,cad_g35
13:33:00 210  ,cad_g36
13:33:00 211  ,cad_g37
13:33:00 212  ,cad_g38
13:33:00 213  ,cad_g39
13:33:00 214  ,cad_g40
13:33:00 215  ,cad_g41
13:33:00 216  ,chf_g00
13:33:00 217  ,chf_g01
13:33:00 218  ,chf_g02
13:33:00 219  ,chf_g03
13:33:00 220  ,chf_g04
13:33:00 221  ,chf_g05
13:33:00 222  ,chf_g06
13:33:00 223  ,chf_g07
13:33:00 224  ,chf_g08
13:33:00 225  ,chf_g09
13:33:00 226  ,chf_g10
13:33:00 227  ,chf_g11
13:33:00 228  ,chf_g12
13:33:00 229  ,chf_g13
13:33:00 230  ,chf_g14
13:33:00 231  ,chf_g15
13:33:00 232  ,chf_g16
13:33:00 233  ,chf_g17
13:33:00 234  ,chf_g18
13:33:00 235  ,chf_g19
13:33:00 236  ,chf_g20
13:33:00 237  ,chf_g21
13:33:00 238  ,chf_g22
13:33:00 239  ,chf_g23
13:33:00 240  ,chf_g24
13:33:00 241  ,chf_g25
13:33:00 242  ,chf_g26
13:33:00 243  ,chf_g27
13:33:00 244  ,chf_g28
13:33:00 245  ,chf_g29
13:33:00 246  ,chf_g30
13:33:00 247  ,chf_g31
13:33:00 248  ,chf_g32
13:33:00 249  ,chf_g33
13:33:00 250  ,chf_g34
13:33:00 251  ,chf_g35
13:33:00 252  ,chf_g36
13:33:00 253  ,chf_g37
13:33:00 254  ,chf_g38
13:33:00 255  ,chf_g39
13:33:00 256  ,chf_g40
13:33:00 257  ,chf_g41
13:33:00 258  FROM aud_ms6 m
13:33:00 259  WHERE m.ydate = '&1'||' '||'&2'
13:33:00 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'13:05:00'

View created.

Elapsed: 00:00:00.13
13:33:00 SQL> 
13:33:00 SQL> -- rpt
13:33:00 SQL> -- We should see just 1 row:
13:33:00 SQL> 
13:33:00 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
13:33:00 SQL> 
13:33:00 SQL> -- Build the model:
13:33:00 SQL> CREATE OR REPLACE VIEW bme AS
13:33:00   2  SELECT
13:33:00   3  'aud'||m.ydate prdate
13:33:00   4  ,gattn
13:33:00   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:33:00   6  ,eur_g00
13:33:00   7  ,eur_g01
13:33:00   8  ,eur_g02
13:33:00   9  ,eur_g03
13:33:00  10  ,eur_g04
13:33:00  11  ,eur_g05
13:33:00  12  ,eur_g06
13:33:00  13  ,eur_g07
13:33:00  14  ,eur_g08
13:33:00  15  ,eur_g09
13:33:00  16  ,eur_g10
13:33:00  17  ,eur_g11
13:33:00  18  ,eur_g12
13:33:00  19  ,eur_g13
13:33:00  20  ,eur_g14
13:33:00  21  ,eur_g15
13:33:00  22  ,eur_g16
13:33:00  23  ,eur_g17
13:33:00  24  ,eur_g18
13:33:00  25  ,eur_g19
13:33:00  26  ,eur_g20
13:33:00  27  ,eur_g21
13:33:00  28  ,eur_g22
13:33:00  29  ,eur_g23
13:33:00  30  ,eur_g24
13:33:00  31  ,eur_g25
13:33:00  32  ,eur_g26
13:33:00  33  ,eur_g27
13:33:00  34  ,eur_g28
13:33:00  35  ,eur_g29
13:33:00  36  ,eur_g30
13:33:00  37  ,eur_g31
13:33:00  38  ,eur_g32
13:33:00  39  ,eur_g33
13:33:00  40  ,eur_g34
13:33:00  41  ,eur_g35
13:33:00  42  ,eur_g36
13:33:00  43  ,eur_g37
13:33:00  44  ,eur_g38
13:33:00  45  ,eur_g39
13:33:00  46  ,eur_g40
13:33:00  47  ,eur_g41
13:33:00  48  ,aud_g00
13:33:00  49  ,aud_g01
13:33:00  50  ,aud_g02
13:33:00  51  ,aud_g03
13:33:00  52  ,aud_g04
13:33:00  53  ,aud_g05
13:33:00  54  ,aud_g06
13:33:00  55  ,aud_g07
13:33:00  56  ,aud_g08
13:33:00  57  ,aud_g09
13:33:00  58  ,aud_g10
13:33:00  59  ,aud_g11
13:33:00  60  ,aud_g12
13:33:00  61  ,aud_g13
13:33:00  62  ,aud_g14
13:33:00  63  ,aud_g15
13:33:00  64  ,aud_g16
13:33:00  65  ,aud_g17
13:33:00  66  ,aud_g18
13:33:00  67  ,aud_g19
13:33:00  68  ,aud_g20
13:33:00  69  ,aud_g21
13:33:00  70  ,aud_g22
13:33:00  71  ,aud_g23
13:33:00  72  ,aud_g24
13:33:00  73  ,aud_g25
13:33:00  74  ,aud_g26
13:33:00  75  ,aud_g27
13:33:00  76  ,aud_g28
13:33:00  77  ,aud_g29
13:33:00  78  ,aud_g30
13:33:00  79  ,aud_g31
13:33:00  80  ,aud_g32
13:33:00  81  ,aud_g33
13:33:00  82  ,aud_g34
13:33:00  83  ,aud_g35
13:33:00  84  ,aud_g36
13:33:00  85  ,aud_g37
13:33:00  86  ,aud_g38
13:33:00  87  ,aud_g39
13:33:00  88  ,aud_g40
13:33:00  89  ,aud_g41
13:33:00  90  ,gbp_g00
13:33:00  91  ,gbp_g01
13:33:00  92  ,gbp_g02
13:33:00  93  ,gbp_g03
13:33:00  94  ,gbp_g04
13:33:00  95  ,gbp_g05
13:33:00  96  ,gbp_g06
13:33:00  97  ,gbp_g07
13:33:00  98  ,gbp_g08
13:33:00  99  ,gbp_g09
13:33:00 100  ,gbp_g10
13:33:00 101  ,gbp_g11
13:33:00 102  ,gbp_g12
13:33:00 103  ,gbp_g13
13:33:00 104  ,gbp_g14
13:33:00 105  ,gbp_g15
13:33:00 106  ,gbp_g16
13:33:00 107  ,gbp_g17
13:33:00 108  ,gbp_g18
13:33:00 109  ,gbp_g19
13:33:00 110  ,gbp_g20
13:33:00 111  ,gbp_g21
13:33:00 112  ,gbp_g22
13:33:00 113  ,gbp_g23
13:33:00 114  ,gbp_g24
13:33:00 115  ,gbp_g25
13:33:00 116  ,gbp_g26
13:33:00 117  ,gbp_g27
13:33:00 118  ,gbp_g28
13:33:00 119  ,gbp_g29
13:33:00 120  ,gbp_g30
13:33:00 121  ,gbp_g31
13:33:00 122  ,gbp_g32
13:33:00 123  ,gbp_g33
13:33:00 124  ,gbp_g34
13:33:00 125  ,gbp_g35
13:33:00 126  ,gbp_g36
13:33:00 127  ,gbp_g37
13:33:00 128  ,gbp_g38
13:33:00 129  ,gbp_g39
13:33:00 130  ,gbp_g40
13:33:00 131  ,gbp_g41
13:33:00 132  ,jpy_g00
13:33:00 133  ,jpy_g01
13:33:00 134  ,jpy_g02
13:33:00 135  ,jpy_g03
13:33:00 136  ,jpy_g04
13:33:00 137  ,jpy_g05
13:33:00 138  ,jpy_g06
13:33:00 139  ,jpy_g07
13:33:00 140  ,jpy_g08
13:33:00 141  ,jpy_g09
13:33:00 142  ,jpy_g10
13:33:00 143  ,jpy_g11
13:33:00 144  ,jpy_g12
13:33:00 145  ,jpy_g13
13:33:00 146  ,jpy_g14
13:33:00 147  ,jpy_g15
13:33:00 148  ,jpy_g16
13:33:00 149  ,jpy_g17
13:33:00 150  ,jpy_g18
13:33:00 151  ,jpy_g19
13:33:00 152  ,jpy_g20
13:33:00 153  ,jpy_g21
13:33:00 154  ,jpy_g22
13:33:00 155  ,jpy_g23
13:33:00 156  ,jpy_g24
13:33:00 157  ,jpy_g25
13:33:00 158  ,jpy_g26
13:33:00 159  ,jpy_g27
13:33:00 160  ,jpy_g28
13:33:00 161  ,jpy_g29
13:33:00 162  ,jpy_g30
13:33:00 163  ,jpy_g31
13:33:00 164  ,jpy_g32
13:33:00 165  ,jpy_g33
13:33:00 166  ,jpy_g34
13:33:00 167  ,jpy_g35
13:33:00 168  ,jpy_g36
13:33:00 169  ,jpy_g37
13:33:00 170  ,jpy_g38
13:33:00 171  ,jpy_g39
13:33:00 172  ,jpy_g40
13:33:00 173  ,jpy_g41
13:33:00 174  ,cad_g00
13:33:00 175  ,cad_g01
13:33:00 176  ,cad_g02
13:33:00 177  ,cad_g03
13:33:00 178  ,cad_g04
13:33:00 179  ,cad_g05
13:33:00 180  ,cad_g06
13:33:00 181  ,cad_g07
13:33:00 182  ,cad_g08
13:33:00 183  ,cad_g09
13:33:00 184  ,cad_g10
13:33:00 185  ,cad_g11
13:33:00 186  ,cad_g12
13:33:00 187  ,cad_g13
13:33:00 188  ,cad_g14
13:33:00 189  ,cad_g15
13:33:00 190  ,cad_g16
13:33:00 191  ,cad_g17
13:33:00 192  ,cad_g18
13:33:00 193  ,cad_g19
13:33:00 194  ,cad_g20
13:33:00 195  ,cad_g21
13:33:00 196  ,cad_g22
13:33:00 197  ,cad_g23
13:33:00 198  ,cad_g24
13:33:00 199  ,cad_g25
13:33:00 200  ,cad_g26
13:33:00 201  ,cad_g27
13:33:00 202  ,cad_g28
13:33:00 203  ,cad_g29
13:33:00 204  ,cad_g30
13:33:00 205  ,cad_g31
13:33:00 206  ,cad_g32
13:33:00 207  ,cad_g33
13:33:00 208  ,cad_g34
13:33:00 209  ,cad_g35
13:33:00 210  ,cad_g36
13:33:00 211  ,cad_g37
13:33:00 212  ,cad_g38
13:33:00 213  ,cad_g39
13:33:00 214  ,cad_g40
13:33:00 215  ,cad_g41
13:33:00 216  ,chf_g00
13:33:00 217  ,chf_g01
13:33:00 218  ,chf_g02
13:33:00 219  ,chf_g03
13:33:00 220  ,chf_g04
13:33:00 221  ,chf_g05
13:33:00 222  ,chf_g06
13:33:00 223  ,chf_g07
13:33:00 224  ,chf_g08
13:33:00 225  ,chf_g09
13:33:00 226  ,chf_g10
13:33:00 227  ,chf_g11
13:33:00 228  ,chf_g12
13:33:00 229  ,chf_g13
13:33:00 230  ,chf_g14
13:33:00 231  ,chf_g15
13:33:00 232  ,chf_g16
13:33:00 233  ,chf_g17
13:33:00 234  ,chf_g18
13:33:00 235  ,chf_g19
13:33:00 236  ,chf_g20
13:33:00 237  ,chf_g21
13:33:00 238  ,chf_g22
13:33:00 239  ,chf_g23
13:33:00 240  ,chf_g24
13:33:00 241  ,chf_g25
13:33:00 242  ,chf_g26
13:33:00 243  ,chf_g27
13:33:00 244  ,chf_g28
13:33:00 245  ,chf_g29
13:33:00 246  ,chf_g30
13:33:00 247  ,chf_g31
13:33:00 248  ,chf_g32
13:33:00 249  ,chf_g33
13:33:00 250  ,chf_g34
13:33:00 251  ,chf_g35
13:33:00 252  ,chf_g36
13:33:00 253  ,chf_g37
13:33:00 254  ,chf_g38
13:33:00 255  ,chf_g39
13:33:00 256  ,chf_g40
13:33:00 257  ,chf_g41
13:33:00 258  FROM aud_ms6 m
13:33:00 259  WHERE gattn IN('nup','up')
13:33:00 260  AND 1+m.ydate < '&1'||' '||'&2'
13:33:00 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'13:05:00'

View created.

Elapsed: 00:00:00.13
13:33:00 SQL> 
13:33:00 SQL> -- rpt
13:33:00 SQL> 
13:33:00 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13055
up	     6397

Elapsed: 00:00:00.04
13:33:00 SQL> 
13:33:00 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 13:00:00

Elapsed: 00:00:00.04
13:33:00 SQL> 
13:33:00 SQL> -- Now build model from bme and score sme
13:33:00 SQL> @score1gattn.sql
13:33:00 SQL> -- score1gattn.sql
13:33:00 SQL> 
13:33:00 SQL> -- Does the 1st SVM score
13:33:00 SQL> 
13:33:00 SQL> -- Fill up svmc_apply_prep
13:33:00 SQL> @score_gattn.sql
13:33:00 SQL> --
13:33:00 SQL> -- score_gattn.sql
13:33:00 SQL> --
13:33:00 SQL> 
13:33:00 SQL> -- usage: score_gattn.sql
13:33:00 SQL> 
13:33:00 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
13:33:00 SQL> 
13:33:00 SQL> DEFINE target	= 'gattn'
13:33:00 SQL> DEFINE model_name = 'forex14'
13:33:00 SQL> DEFINE bldtable	= 'bme'
13:33:00 SQL> DEFINE scoretable = 'sme'
13:33:00 SQL> DEFINE case_id	= 'prdate'
13:33:00 SQL> 
13:33:00 SQL> -- Define a variable to help me exclude some columns from some data mining calls
13:33:00 SQL> DEFINE exclude1 = "'&target','&case_id'"
13:33:00 SQL> 
13:33:00 SQL> -- Builds an SVM model using pl/sql.
13:33:00 SQL> 
13:33:00 SQL> -----------------------------------------------------------------------
13:33:00 SQL> --			    BUILD THE MODEL
13:33:00 SQL> -----------------------------------------------------------------------
13:33:00 SQL> 
13:33:00 SQL> -- Cleanup old build data preparation objects for repeat runs
13:33:00 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
13:33:00 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
13:33:00 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
13:33:00 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
13:33:00 SQL> 
13:33:00 SQL> 
13:33:00 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
13:33:00 SQL> --
13:33:00 SQL> -- DROP	TABLE svmc_settings ;
13:33:00 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
13:33:00 SQL> -- DELETE svmc_settings;
13:33:00 SQL> 
13:33:00 SQL> -- The default classification algorithm is Naive Bayes. So override
13:33:00 SQL> -- this choice to SVM using a settings table.
13:33:00 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
13:33:00 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
13:33:00 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
13:33:00 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
13:33:00 SQL> -- models.
13:33:00 SQL> --
13:33:00 SQL> 
13:33:00 SQL> -- Do this once and then comment it out.
13:33:00 SQL> -- That makes script go faster.
13:33:00 SQL> -- BEGIN
13:33:00 SQL> -- -- Populate settings table
13:33:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:33:00 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
13:33:00 SQL> --
13:33:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:33:00 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
13:33:00 SQL> --
13:33:00 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:33:00 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
13:33:00 SQL> --   COMMIT;
13:33:00 SQL> -- END;
13:33:00 SQL> -- /
13:33:00 SQL> 
13:33:00 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
13:33:00 SQL> 
13:33:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
13:33:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:33:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:33:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
13:33:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:33:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
13:33:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
13:33:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:33:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:33:00 SQL> 
13:33:00 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
13:33:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:33:00   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:33:00 SQL> 
13:33:00 SQL> --------------------------------
13:33:00 SQL> -- PREPARE BUILD (TRAINING) DATA
13:33:00 SQL> --
13:33:00 SQL> 
13:33:00 SQL> -- 1. Missing Value treatment for all Predictors and
13:33:00 SQL> -- 2. Outlier Treatment and
13:33:00 SQL> -- 3. Normalization are performed below.
13:33:00 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
13:33:00 SQL> --    normalized here.
13:33:00 SQL> 
13:33:00 SQL> BEGIN
13:33:00   2  	-- Perform missing value treatment for all predictors
13:33:00   3  	-- create miss tables
13:33:00   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
13:33:00   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
13:33:00   6  
13:33:00   7  	-- populate miss tables
13:33:00   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
13:33:00   9  	  miss_table_name => 'svmc_miss_num',
13:33:00  10  	  data_table_name => '&bldtable',
13:33:00  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:33:00  12  
13:33:00  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
13:33:00  14  	  miss_table_name => 'svmc_miss_cat',
13:33:00  15  	  data_table_name => '&bldtable',
13:33:00  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:33:00  17  
13:33:00  18  	-- xform input data to replace missing values
13:33:00  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:33:00  20  	  miss_table_name => 'svmc_miss_num',
13:33:00  21  	  data_table_name => '&bldtable',
13:33:00  22  	  xform_view_name => 'xformed_build_miss_num');
13:33:00  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:33:00  24  	  miss_table_name => 'svmc_miss_cat',
13:33:00  25  	  data_table_name => '&bldtable',
13:33:00  26  	  xform_view_name => 'xformed_build_miss_cat');
13:33:00  27  
13:33:00  28  	-- Perform outlier treatment.
13:33:00  29  	-- create clip table
13:33:00  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
13:33:00  31  
13:33:00  32  	-- populate clip table
13:33:00  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
13:33:00  34  	  clip_table_name => 'svmc_clip',
13:33:00  35  	  data_table_name => '&bldtable',
13:33:00  36  	  tail_frac	  => 0.025,
13:33:00  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:33:00  38  
13:33:00  39  	-- xform input data to winsorized data
13:33:00  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
13:33:00  41  	  clip_table_name => 'svmc_clip',
13:33:00  42  	  data_table_name => '&bldtable',
13:33:00  43  	  xform_view_name => 'svmc_winsor');
13:33:00  44  
13:33:00  45  	-- create normalization table
13:33:00  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
13:33:00  47  
13:33:00  48  	-- populate normalization table based on winsorized data
13:33:00  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
13:33:00  50  	  norm_table_name => 'svmc_norm',
13:33:00  51  	  data_table_name => 'svmc_winsor',
13:33:00  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:33:00  53  
13:33:00  54  	-- normalize the original data
13:33:00  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:33:00  56  	  norm_table_name => 'svmc_norm',
13:33:00  57  	  data_table_name => '&bldtable',
13:33:00  58  	  xform_view_name => 'svmc_build_prep');
13:33:00  59  END;
13:33:00  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:18.12
13:33:18 SQL> 
13:33:18 SQL> ---------------------
13:33:18 SQL> -- CREATE A NEW MODEL
13:33:18 SQL> --
13:33:18 SQL> -- Cleanup old model with the same name for repeat runs
13:33:18 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
13:33:18   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:33:18   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.92
13:33:19 SQL> 
13:33:19 SQL> -- Build a new SVM Model
13:33:19 SQL> BEGIN
13:33:19   2  	DBMS_DATA_MINING.CREATE_MODEL(
13:33:19   3  	  model_name	      => '&model_name',
13:33:19   4  	  mining_function     => dbms_data_mining.classification,
13:33:19   5  	  data_table_name     => 'svmc_build_prep',
13:33:19   6  	  case_id_column_name => '&case_id',
13:33:19   7  	  target_column_name  => '&target',
13:33:19   8  	  settings_table_name => 'svmc_settings');
13:33:19   9  END;
13:33:19  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.97
13:33:46 SQL> 
13:33:46 SQL> -----------------------------------------------------------------------
13:33:46 SQL> --			       APPLY/score THE MODEL
13:33:46 SQL> -----------------------------------------------------------------------
13:33:46 SQL> 
13:33:46 SQL> -- Cleanup old scoring data preparation objects for repeat runs
13:33:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
13:33:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:33:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:33:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
13:33:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:33:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:33:46 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
13:33:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:33:46   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:33:47 SQL> -----------------------
13:33:47 SQL> -- PREPARE SCORING DATA
13:33:47 SQL> --
13:33:47 SQL> -- If the data for model creation has been prepared, then the data
13:33:47 SQL> -- to be scored using the model must be prepared in the same manner
13:33:47 SQL> -- in order to obtain meaningful results.
13:33:47 SQL> --
13:33:47 SQL> -- 1. Missing Value treatment for all Predictors and
13:33:47 SQL> -- 2. Normalization
13:33:47 SQL> -- No outlier treatment will be performed during test and apply. The
13:33:47 SQL> -- normalization step is sufficient, since the normalization parameters
13:33:47 SQL> -- already capture the effects of outlier treatment done with build data.
13:33:47 SQL> --
13:33:47 SQL> BEGIN
13:33:47   2  	-- Xform Test data to replace missing values
13:33:47   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:33:47   4  	  miss_table_name => 'svmc_miss_num',
13:33:47   5  	  data_table_name => '&scoretable',
13:33:47   6  	  xform_view_name => 'xformed_apply_miss_num');
13:33:47   7  
13:33:47   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:33:47   9  	  miss_table_name => 'svmc_miss_cat',
13:33:47  10  	  data_table_name => '&scoretable',
13:33:47  11  	  xform_view_name => 'xformed_apply_miss_cat');
13:33:47  12  
13:33:47  13  	-- Normalize the data to be scored
13:33:47  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:33:47  15  	  norm_table_name => 'svmc_norm',
13:33:47  16  	  data_table_name => '&scoretable',
13:33:47  17  	  xform_view_name => 'svmc_apply_prep');
13:33:47  18  END;
13:33:47  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
13:33:48 SQL> 
13:33:48 SQL> -- Use same model_name used in score_gattn.sql
13:33:48 SQL> DEFINE model_name = 'forex14'
13:33:48 SQL> 
13:33:48 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
13:33:48 SQL> 
13:33:48 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
13:33:48   2  SELECT
13:33:48   3  prdate
13:33:48   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
13:33:48   5  ,sysdate
13:33:48   6  ,SUBSTR(prdate,1,3)pair
13:33:48   7  ,SUBSTR(prdate,4,19)ydate
13:33:48   8  FROM svmc_apply_prep
13:33:48   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.18
13:33:48 SQL> @aud_score1day_gattn.sql	2010-12-30 13:10:00
13:33:48 SQL> --
13:33:48 SQL> -- aud_score1day_gattn.sql
13:33:48 SQL> --
13:33:48 SQL> 
13:33:48 SQL> CREATE OR REPLACE VIEW sme AS
13:33:48   2  SELECT
13:33:48   3  'aud'||m.ydate prdate
13:33:48   4  ,NULL gattn
13:33:48   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:33:48   6  ,eur_g00
13:33:48   7  ,eur_g01
13:33:48   8  ,eur_g02
13:33:48   9  ,eur_g03
13:33:48  10  ,eur_g04
13:33:48  11  ,eur_g05
13:33:48  12  ,eur_g06
13:33:48  13  ,eur_g07
13:33:48  14  ,eur_g08
13:33:48  15  ,eur_g09
13:33:48  16  ,eur_g10
13:33:48  17  ,eur_g11
13:33:48  18  ,eur_g12
13:33:48  19  ,eur_g13
13:33:48  20  ,eur_g14
13:33:48  21  ,eur_g15
13:33:48  22  ,eur_g16
13:33:48  23  ,eur_g17
13:33:48  24  ,eur_g18
13:33:48  25  ,eur_g19
13:33:48  26  ,eur_g20
13:33:48  27  ,eur_g21
13:33:48  28  ,eur_g22
13:33:48  29  ,eur_g23
13:33:48  30  ,eur_g24
13:33:48  31  ,eur_g25
13:33:48  32  ,eur_g26
13:33:48  33  ,eur_g27
13:33:48  34  ,eur_g28
13:33:48  35  ,eur_g29
13:33:48  36  ,eur_g30
13:33:48  37  ,eur_g31
13:33:48  38  ,eur_g32
13:33:48  39  ,eur_g33
13:33:48  40  ,eur_g34
13:33:48  41  ,eur_g35
13:33:48  42  ,eur_g36
13:33:48  43  ,eur_g37
13:33:48  44  ,eur_g38
13:33:48  45  ,eur_g39
13:33:48  46  ,eur_g40
13:33:48  47  ,eur_g41
13:33:48  48  ,aud_g00
13:33:48  49  ,aud_g01
13:33:48  50  ,aud_g02
13:33:48  51  ,aud_g03
13:33:48  52  ,aud_g04
13:33:48  53  ,aud_g05
13:33:48  54  ,aud_g06
13:33:48  55  ,aud_g07
13:33:48  56  ,aud_g08
13:33:48  57  ,aud_g09
13:33:48  58  ,aud_g10
13:33:48  59  ,aud_g11
13:33:48  60  ,aud_g12
13:33:48  61  ,aud_g13
13:33:48  62  ,aud_g14
13:33:48  63  ,aud_g15
13:33:48  64  ,aud_g16
13:33:48  65  ,aud_g17
13:33:48  66  ,aud_g18
13:33:48  67  ,aud_g19
13:33:48  68  ,aud_g20
13:33:48  69  ,aud_g21
13:33:48  70  ,aud_g22
13:33:48  71  ,aud_g23
13:33:48  72  ,aud_g24
13:33:48  73  ,aud_g25
13:33:48  74  ,aud_g26
13:33:48  75  ,aud_g27
13:33:48  76  ,aud_g28
13:33:48  77  ,aud_g29
13:33:48  78  ,aud_g30
13:33:48  79  ,aud_g31
13:33:48  80  ,aud_g32
13:33:48  81  ,aud_g33
13:33:48  82  ,aud_g34
13:33:48  83  ,aud_g35
13:33:48  84  ,aud_g36
13:33:48  85  ,aud_g37
13:33:48  86  ,aud_g38
13:33:48  87  ,aud_g39
13:33:48  88  ,aud_g40
13:33:48  89  ,aud_g41
13:33:48  90  ,gbp_g00
13:33:48  91  ,gbp_g01
13:33:48  92  ,gbp_g02
13:33:48  93  ,gbp_g03
13:33:48  94  ,gbp_g04
13:33:48  95  ,gbp_g05
13:33:48  96  ,gbp_g06
13:33:48  97  ,gbp_g07
13:33:48  98  ,gbp_g08
13:33:48  99  ,gbp_g09
13:33:48 100  ,gbp_g10
13:33:48 101  ,gbp_g11
13:33:48 102  ,gbp_g12
13:33:48 103  ,gbp_g13
13:33:48 104  ,gbp_g14
13:33:48 105  ,gbp_g15
13:33:48 106  ,gbp_g16
13:33:48 107  ,gbp_g17
13:33:48 108  ,gbp_g18
13:33:48 109  ,gbp_g19
13:33:48 110  ,gbp_g20
13:33:48 111  ,gbp_g21
13:33:48 112  ,gbp_g22
13:33:48 113  ,gbp_g23
13:33:48 114  ,gbp_g24
13:33:48 115  ,gbp_g25
13:33:48 116  ,gbp_g26
13:33:48 117  ,gbp_g27
13:33:48 118  ,gbp_g28
13:33:48 119  ,gbp_g29
13:33:48 120  ,gbp_g30
13:33:48 121  ,gbp_g31
13:33:48 122  ,gbp_g32
13:33:48 123  ,gbp_g33
13:33:48 124  ,gbp_g34
13:33:48 125  ,gbp_g35
13:33:48 126  ,gbp_g36
13:33:48 127  ,gbp_g37
13:33:48 128  ,gbp_g38
13:33:48 129  ,gbp_g39
13:33:48 130  ,gbp_g40
13:33:48 131  ,gbp_g41
13:33:48 132  ,jpy_g00
13:33:48 133  ,jpy_g01
13:33:48 134  ,jpy_g02
13:33:48 135  ,jpy_g03
13:33:48 136  ,jpy_g04
13:33:48 137  ,jpy_g05
13:33:48 138  ,jpy_g06
13:33:48 139  ,jpy_g07
13:33:48 140  ,jpy_g08
13:33:48 141  ,jpy_g09
13:33:48 142  ,jpy_g10
13:33:48 143  ,jpy_g11
13:33:48 144  ,jpy_g12
13:33:48 145  ,jpy_g13
13:33:48 146  ,jpy_g14
13:33:48 147  ,jpy_g15
13:33:48 148  ,jpy_g16
13:33:48 149  ,jpy_g17
13:33:48 150  ,jpy_g18
13:33:48 151  ,jpy_g19
13:33:48 152  ,jpy_g20
13:33:48 153  ,jpy_g21
13:33:48 154  ,jpy_g22
13:33:48 155  ,jpy_g23
13:33:48 156  ,jpy_g24
13:33:48 157  ,jpy_g25
13:33:48 158  ,jpy_g26
13:33:48 159  ,jpy_g27
13:33:48 160  ,jpy_g28
13:33:48 161  ,jpy_g29
13:33:48 162  ,jpy_g30
13:33:48 163  ,jpy_g31
13:33:48 164  ,jpy_g32
13:33:48 165  ,jpy_g33
13:33:48 166  ,jpy_g34
13:33:48 167  ,jpy_g35
13:33:48 168  ,jpy_g36
13:33:48 169  ,jpy_g37
13:33:48 170  ,jpy_g38
13:33:48 171  ,jpy_g39
13:33:48 172  ,jpy_g40
13:33:48 173  ,jpy_g41
13:33:48 174  ,cad_g00
13:33:48 175  ,cad_g01
13:33:48 176  ,cad_g02
13:33:48 177  ,cad_g03
13:33:48 178  ,cad_g04
13:33:48 179  ,cad_g05
13:33:48 180  ,cad_g06
13:33:48 181  ,cad_g07
13:33:48 182  ,cad_g08
13:33:48 183  ,cad_g09
13:33:48 184  ,cad_g10
13:33:48 185  ,cad_g11
13:33:48 186  ,cad_g12
13:33:48 187  ,cad_g13
13:33:48 188  ,cad_g14
13:33:48 189  ,cad_g15
13:33:48 190  ,cad_g16
13:33:48 191  ,cad_g17
13:33:48 192  ,cad_g18
13:33:48 193  ,cad_g19
13:33:48 194  ,cad_g20
13:33:48 195  ,cad_g21
13:33:48 196  ,cad_g22
13:33:48 197  ,cad_g23
13:33:48 198  ,cad_g24
13:33:48 199  ,cad_g25
13:33:48 200  ,cad_g26
13:33:48 201  ,cad_g27
13:33:48 202  ,cad_g28
13:33:48 203  ,cad_g29
13:33:48 204  ,cad_g30
13:33:48 205  ,cad_g31
13:33:48 206  ,cad_g32
13:33:48 207  ,cad_g33
13:33:48 208  ,cad_g34
13:33:48 209  ,cad_g35
13:33:48 210  ,cad_g36
13:33:48 211  ,cad_g37
13:33:48 212  ,cad_g38
13:33:48 213  ,cad_g39
13:33:48 214  ,cad_g40
13:33:48 215  ,cad_g41
13:33:48 216  ,chf_g00
13:33:48 217  ,chf_g01
13:33:48 218  ,chf_g02
13:33:48 219  ,chf_g03
13:33:48 220  ,chf_g04
13:33:48 221  ,chf_g05
13:33:48 222  ,chf_g06
13:33:48 223  ,chf_g07
13:33:48 224  ,chf_g08
13:33:48 225  ,chf_g09
13:33:48 226  ,chf_g10
13:33:48 227  ,chf_g11
13:33:48 228  ,chf_g12
13:33:48 229  ,chf_g13
13:33:48 230  ,chf_g14
13:33:48 231  ,chf_g15
13:33:48 232  ,chf_g16
13:33:48 233  ,chf_g17
13:33:48 234  ,chf_g18
13:33:48 235  ,chf_g19
13:33:48 236  ,chf_g20
13:33:48 237  ,chf_g21
13:33:48 238  ,chf_g22
13:33:48 239  ,chf_g23
13:33:48 240  ,chf_g24
13:33:48 241  ,chf_g25
13:33:48 242  ,chf_g26
13:33:48 243  ,chf_g27
13:33:48 244  ,chf_g28
13:33:48 245  ,chf_g29
13:33:48 246  ,chf_g30
13:33:48 247  ,chf_g31
13:33:48 248  ,chf_g32
13:33:48 249  ,chf_g33
13:33:48 250  ,chf_g34
13:33:48 251  ,chf_g35
13:33:48 252  ,chf_g36
13:33:48 253  ,chf_g37
13:33:48 254  ,chf_g38
13:33:48 255  ,chf_g39
13:33:48 256  ,chf_g40
13:33:48 257  ,chf_g41
13:33:48 258  FROM aud_ms6 m
13:33:48 259  WHERE m.ydate = '&1'||' '||'&2'
13:33:48 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'13:10:00'

View created.

Elapsed: 00:00:00.15
13:33:48 SQL> 
13:33:48 SQL> -- rpt
13:33:48 SQL> -- We should see just 1 row:
13:33:48 SQL> 
13:33:48 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
13:33:48 SQL> 
13:33:48 SQL> -- Build the model:
13:33:48 SQL> CREATE OR REPLACE VIEW bme AS
13:33:48   2  SELECT
13:33:48   3  'aud'||m.ydate prdate
13:33:48   4  ,gattn
13:33:48   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:33:48   6  ,eur_g00
13:33:48   7  ,eur_g01
13:33:48   8  ,eur_g02
13:33:48   9  ,eur_g03
13:33:48  10  ,eur_g04
13:33:48  11  ,eur_g05
13:33:48  12  ,eur_g06
13:33:48  13  ,eur_g07
13:33:48  14  ,eur_g08
13:33:48  15  ,eur_g09
13:33:48  16  ,eur_g10
13:33:48  17  ,eur_g11
13:33:48  18  ,eur_g12
13:33:48  19  ,eur_g13
13:33:48  20  ,eur_g14
13:33:48  21  ,eur_g15
13:33:48  22  ,eur_g16
13:33:48  23  ,eur_g17
13:33:48  24  ,eur_g18
13:33:48  25  ,eur_g19
13:33:48  26  ,eur_g20
13:33:48  27  ,eur_g21
13:33:48  28  ,eur_g22
13:33:48  29  ,eur_g23
13:33:48  30  ,eur_g24
13:33:48  31  ,eur_g25
13:33:48  32  ,eur_g26
13:33:48  33  ,eur_g27
13:33:48  34  ,eur_g28
13:33:48  35  ,eur_g29
13:33:48  36  ,eur_g30
13:33:48  37  ,eur_g31
13:33:48  38  ,eur_g32
13:33:48  39  ,eur_g33
13:33:48  40  ,eur_g34
13:33:48  41  ,eur_g35
13:33:48  42  ,eur_g36
13:33:48  43  ,eur_g37
13:33:48  44  ,eur_g38
13:33:48  45  ,eur_g39
13:33:48  46  ,eur_g40
13:33:48  47  ,eur_g41
13:33:48  48  ,aud_g00
13:33:48  49  ,aud_g01
13:33:48  50  ,aud_g02
13:33:48  51  ,aud_g03
13:33:48  52  ,aud_g04
13:33:48  53  ,aud_g05
13:33:48  54  ,aud_g06
13:33:48  55  ,aud_g07
13:33:48  56  ,aud_g08
13:33:48  57  ,aud_g09
13:33:48  58  ,aud_g10
13:33:48  59  ,aud_g11
13:33:48  60  ,aud_g12
13:33:48  61  ,aud_g13
13:33:48  62  ,aud_g14
13:33:48  63  ,aud_g15
13:33:48  64  ,aud_g16
13:33:48  65  ,aud_g17
13:33:48  66  ,aud_g18
13:33:48  67  ,aud_g19
13:33:48  68  ,aud_g20
13:33:48  69  ,aud_g21
13:33:48  70  ,aud_g22
13:33:48  71  ,aud_g23
13:33:48  72  ,aud_g24
13:33:48  73  ,aud_g25
13:33:48  74  ,aud_g26
13:33:48  75  ,aud_g27
13:33:48  76  ,aud_g28
13:33:48  77  ,aud_g29
13:33:48  78  ,aud_g30
13:33:48  79  ,aud_g31
13:33:48  80  ,aud_g32
13:33:48  81  ,aud_g33
13:33:48  82  ,aud_g34
13:33:48  83  ,aud_g35
13:33:48  84  ,aud_g36
13:33:48  85  ,aud_g37
13:33:48  86  ,aud_g38
13:33:48  87  ,aud_g39
13:33:48  88  ,aud_g40
13:33:48  89  ,aud_g41
13:33:48  90  ,gbp_g00
13:33:48  91  ,gbp_g01
13:33:48  92  ,gbp_g02
13:33:48  93  ,gbp_g03
13:33:48  94  ,gbp_g04
13:33:48  95  ,gbp_g05
13:33:48  96  ,gbp_g06
13:33:48  97  ,gbp_g07
13:33:48  98  ,gbp_g08
13:33:48  99  ,gbp_g09
13:33:48 100  ,gbp_g10
13:33:48 101  ,gbp_g11
13:33:48 102  ,gbp_g12
13:33:48 103  ,gbp_g13
13:33:48 104  ,gbp_g14
13:33:48 105  ,gbp_g15
13:33:48 106  ,gbp_g16
13:33:48 107  ,gbp_g17
13:33:48 108  ,gbp_g18
13:33:48 109  ,gbp_g19
13:33:48 110  ,gbp_g20
13:33:48 111  ,gbp_g21
13:33:48 112  ,gbp_g22
13:33:48 113  ,gbp_g23
13:33:48 114  ,gbp_g24
13:33:48 115  ,gbp_g25
13:33:48 116  ,gbp_g26
13:33:48 117  ,gbp_g27
13:33:48 118  ,gbp_g28
13:33:48 119  ,gbp_g29
13:33:48 120  ,gbp_g30
13:33:48 121  ,gbp_g31
13:33:48 122  ,gbp_g32
13:33:48 123  ,gbp_g33
13:33:48 124  ,gbp_g34
13:33:48 125  ,gbp_g35
13:33:48 126  ,gbp_g36
13:33:48 127  ,gbp_g37
13:33:48 128  ,gbp_g38
13:33:48 129  ,gbp_g39
13:33:48 130  ,gbp_g40
13:33:48 131  ,gbp_g41
13:33:48 132  ,jpy_g00
13:33:48 133  ,jpy_g01
13:33:48 134  ,jpy_g02
13:33:48 135  ,jpy_g03
13:33:48 136  ,jpy_g04
13:33:48 137  ,jpy_g05
13:33:48 138  ,jpy_g06
13:33:48 139  ,jpy_g07
13:33:48 140  ,jpy_g08
13:33:48 141  ,jpy_g09
13:33:48 142  ,jpy_g10
13:33:48 143  ,jpy_g11
13:33:48 144  ,jpy_g12
13:33:48 145  ,jpy_g13
13:33:48 146  ,jpy_g14
13:33:48 147  ,jpy_g15
13:33:48 148  ,jpy_g16
13:33:48 149  ,jpy_g17
13:33:48 150  ,jpy_g18
13:33:48 151  ,jpy_g19
13:33:48 152  ,jpy_g20
13:33:48 153  ,jpy_g21
13:33:48 154  ,jpy_g22
13:33:48 155  ,jpy_g23
13:33:48 156  ,jpy_g24
13:33:48 157  ,jpy_g25
13:33:48 158  ,jpy_g26
13:33:48 159  ,jpy_g27
13:33:48 160  ,jpy_g28
13:33:48 161  ,jpy_g29
13:33:48 162  ,jpy_g30
13:33:48 163  ,jpy_g31
13:33:48 164  ,jpy_g32
13:33:48 165  ,jpy_g33
13:33:48 166  ,jpy_g34
13:33:48 167  ,jpy_g35
13:33:48 168  ,jpy_g36
13:33:48 169  ,jpy_g37
13:33:48 170  ,jpy_g38
13:33:48 171  ,jpy_g39
13:33:48 172  ,jpy_g40
13:33:48 173  ,jpy_g41
13:33:48 174  ,cad_g00
13:33:48 175  ,cad_g01
13:33:48 176  ,cad_g02
13:33:48 177  ,cad_g03
13:33:48 178  ,cad_g04
13:33:48 179  ,cad_g05
13:33:48 180  ,cad_g06
13:33:48 181  ,cad_g07
13:33:48 182  ,cad_g08
13:33:48 183  ,cad_g09
13:33:48 184  ,cad_g10
13:33:48 185  ,cad_g11
13:33:48 186  ,cad_g12
13:33:48 187  ,cad_g13
13:33:48 188  ,cad_g14
13:33:48 189  ,cad_g15
13:33:48 190  ,cad_g16
13:33:48 191  ,cad_g17
13:33:48 192  ,cad_g18
13:33:48 193  ,cad_g19
13:33:48 194  ,cad_g20
13:33:48 195  ,cad_g21
13:33:48 196  ,cad_g22
13:33:48 197  ,cad_g23
13:33:48 198  ,cad_g24
13:33:48 199  ,cad_g25
13:33:48 200  ,cad_g26
13:33:48 201  ,cad_g27
13:33:48 202  ,cad_g28
13:33:48 203  ,cad_g29
13:33:48 204  ,cad_g30
13:33:48 205  ,cad_g31
13:33:48 206  ,cad_g32
13:33:48 207  ,cad_g33
13:33:48 208  ,cad_g34
13:33:48 209  ,cad_g35
13:33:48 210  ,cad_g36
13:33:48 211  ,cad_g37
13:33:48 212  ,cad_g38
13:33:48 213  ,cad_g39
13:33:48 214  ,cad_g40
13:33:48 215  ,cad_g41
13:33:48 216  ,chf_g00
13:33:48 217  ,chf_g01
13:33:48 218  ,chf_g02
13:33:48 219  ,chf_g03
13:33:48 220  ,chf_g04
13:33:48 221  ,chf_g05
13:33:48 222  ,chf_g06
13:33:48 223  ,chf_g07
13:33:48 224  ,chf_g08
13:33:48 225  ,chf_g09
13:33:48 226  ,chf_g10
13:33:48 227  ,chf_g11
13:33:48 228  ,chf_g12
13:33:48 229  ,chf_g13
13:33:48 230  ,chf_g14
13:33:48 231  ,chf_g15
13:33:48 232  ,chf_g16
13:33:48 233  ,chf_g17
13:33:48 234  ,chf_g18
13:33:48 235  ,chf_g19
13:33:48 236  ,chf_g20
13:33:48 237  ,chf_g21
13:33:48 238  ,chf_g22
13:33:48 239  ,chf_g23
13:33:48 240  ,chf_g24
13:33:48 241  ,chf_g25
13:33:48 242  ,chf_g26
13:33:48 243  ,chf_g27
13:33:48 244  ,chf_g28
13:33:48 245  ,chf_g29
13:33:48 246  ,chf_g30
13:33:48 247  ,chf_g31
13:33:48 248  ,chf_g32
13:33:48 249  ,chf_g33
13:33:48 250  ,chf_g34
13:33:48 251  ,chf_g35
13:33:48 252  ,chf_g36
13:33:48 253  ,chf_g37
13:33:48 254  ,chf_g38
13:33:48 255  ,chf_g39
13:33:48 256  ,chf_g40
13:33:48 257  ,chf_g41
13:33:48 258  FROM aud_ms6 m
13:33:48 259  WHERE gattn IN('nup','up')
13:33:48 260  AND 1+m.ydate < '&1'||' '||'&2'
13:33:48 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'13:10:00'

View created.

Elapsed: 00:00:00.13
13:33:48 SQL> 
13:33:48 SQL> -- rpt
13:33:48 SQL> 
13:33:48 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13056
up	     6397

Elapsed: 00:00:00.03
13:33:48 SQL> 
13:33:48 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 13:05:00

Elapsed: 00:00:00.04
13:33:48 SQL> 
13:33:48 SQL> -- Now build model from bme and score sme
13:33:48 SQL> @score1gattn.sql
13:33:48 SQL> -- score1gattn.sql
13:33:48 SQL> 
13:33:48 SQL> -- Does the 1st SVM score
13:33:48 SQL> 
13:33:48 SQL> -- Fill up svmc_apply_prep
13:33:48 SQL> @score_gattn.sql
13:33:48 SQL> --
13:33:48 SQL> -- score_gattn.sql
13:33:48 SQL> --
13:33:48 SQL> 
13:33:48 SQL> -- usage: score_gattn.sql
13:33:48 SQL> 
13:33:48 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
13:33:48 SQL> 
13:33:48 SQL> DEFINE target	= 'gattn'
13:33:48 SQL> DEFINE model_name = 'forex14'
13:33:48 SQL> DEFINE bldtable	= 'bme'
13:33:48 SQL> DEFINE scoretable = 'sme'
13:33:48 SQL> DEFINE case_id	= 'prdate'
13:33:48 SQL> 
13:33:48 SQL> -- Define a variable to help me exclude some columns from some data mining calls
13:33:48 SQL> DEFINE exclude1 = "'&target','&case_id'"
13:33:48 SQL> 
13:33:48 SQL> -- Builds an SVM model using pl/sql.
13:33:48 SQL> 
13:33:48 SQL> -----------------------------------------------------------------------
13:33:48 SQL> --			    BUILD THE MODEL
13:33:48 SQL> -----------------------------------------------------------------------
13:33:48 SQL> 
13:33:48 SQL> -- Cleanup old build data preparation objects for repeat runs
13:33:48 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
13:33:48 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
13:33:48 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
13:33:48 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
13:33:48 SQL> 
13:33:48 SQL> 
13:33:48 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
13:33:48 SQL> --
13:33:48 SQL> -- DROP	TABLE svmc_settings ;
13:33:48 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
13:33:48 SQL> -- DELETE svmc_settings;
13:33:48 SQL> 
13:33:48 SQL> -- The default classification algorithm is Naive Bayes. So override
13:33:48 SQL> -- this choice to SVM using a settings table.
13:33:48 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
13:33:48 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
13:33:48 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
13:33:48 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
13:33:48 SQL> -- models.
13:33:48 SQL> --
13:33:48 SQL> 
13:33:48 SQL> -- Do this once and then comment it out.
13:33:48 SQL> -- That makes script go faster.
13:33:48 SQL> -- BEGIN
13:33:48 SQL> -- -- Populate settings table
13:33:48 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:33:48 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
13:33:48 SQL> --
13:33:48 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:33:48 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
13:33:48 SQL> --
13:33:48 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:33:48 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
13:33:48 SQL> --   COMMIT;
13:33:48 SQL> -- END;
13:33:48 SQL> -- /
13:33:48 SQL> 
13:33:48 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
13:33:48 SQL> 
13:33:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
13:33:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:33:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
13:33:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
13:33:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:33:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
13:33:48 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
13:33:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:33:48   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:33:49 SQL> 
13:33:49 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
13:33:49   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:33:49   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:33:49 SQL> 
13:33:49 SQL> --------------------------------
13:33:49 SQL> -- PREPARE BUILD (TRAINING) DATA
13:33:49 SQL> --
13:33:49 SQL> 
13:33:49 SQL> -- 1. Missing Value treatment for all Predictors and
13:33:49 SQL> -- 2. Outlier Treatment and
13:33:49 SQL> -- 3. Normalization are performed below.
13:33:49 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
13:33:49 SQL> --    normalized here.
13:33:49 SQL> 
13:33:49 SQL> BEGIN
13:33:49   2  	-- Perform missing value treatment for all predictors
13:33:49   3  	-- create miss tables
13:33:49   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
13:33:49   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
13:33:49   6  
13:33:49   7  	-- populate miss tables
13:33:49   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
13:33:49   9  	  miss_table_name => 'svmc_miss_num',
13:33:49  10  	  data_table_name => '&bldtable',
13:33:49  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:33:49  12  
13:33:49  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
13:33:49  14  	  miss_table_name => 'svmc_miss_cat',
13:33:49  15  	  data_table_name => '&bldtable',
13:33:49  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:33:49  17  
13:33:49  18  	-- xform input data to replace missing values
13:33:49  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:33:49  20  	  miss_table_name => 'svmc_miss_num',
13:33:49  21  	  data_table_name => '&bldtable',
13:33:49  22  	  xform_view_name => 'xformed_build_miss_num');
13:33:49  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:33:49  24  	  miss_table_name => 'svmc_miss_cat',
13:33:49  25  	  data_table_name => '&bldtable',
13:33:49  26  	  xform_view_name => 'xformed_build_miss_cat');
13:33:49  27  
13:33:49  28  	-- Perform outlier treatment.
13:33:49  29  	-- create clip table
13:33:49  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
13:33:49  31  
13:33:49  32  	-- populate clip table
13:33:49  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
13:33:49  34  	  clip_table_name => 'svmc_clip',
13:33:49  35  	  data_table_name => '&bldtable',
13:33:49  36  	  tail_frac	  => 0.025,
13:33:49  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:33:49  38  
13:33:49  39  	-- xform input data to winsorized data
13:33:49  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
13:33:49  41  	  clip_table_name => 'svmc_clip',
13:33:49  42  	  data_table_name => '&bldtable',
13:33:49  43  	  xform_view_name => 'svmc_winsor');
13:33:49  44  
13:33:49  45  	-- create normalization table
13:33:49  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
13:33:49  47  
13:33:49  48  	-- populate normalization table based on winsorized data
13:33:49  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
13:33:49  50  	  norm_table_name => 'svmc_norm',
13:33:49  51  	  data_table_name => 'svmc_winsor',
13:33:49  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:33:49  53  
13:33:49  54  	-- normalize the original data
13:33:49  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:33:49  56  	  norm_table_name => 'svmc_norm',
13:33:49  57  	  data_table_name => '&bldtable',
13:33:49  58  	  xform_view_name => 'svmc_build_prep');
13:33:49  59  END;
13:33:49  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.92
13:34:06 SQL> 
13:34:06 SQL> ---------------------
13:34:06 SQL> -- CREATE A NEW MODEL
13:34:06 SQL> --
13:34:06 SQL> -- Cleanup old model with the same name for repeat runs
13:34:06 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
13:34:06   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:34:06   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.85
13:34:07 SQL> 
13:34:07 SQL> -- Build a new SVM Model
13:34:07 SQL> BEGIN
13:34:07   2  	DBMS_DATA_MINING.CREATE_MODEL(
13:34:07   3  	  model_name	      => '&model_name',
13:34:07   4  	  mining_function     => dbms_data_mining.classification,
13:34:07   5  	  data_table_name     => 'svmc_build_prep',
13:34:07   6  	  case_id_column_name => '&case_id',
13:34:07   7  	  target_column_name  => '&target',
13:34:07   8  	  settings_table_name => 'svmc_settings');
13:34:07   9  END;
13:34:07  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.33
13:34:35 SQL> 
13:34:35 SQL> -----------------------------------------------------------------------
13:34:35 SQL> --			       APPLY/score THE MODEL
13:34:35 SQL> -----------------------------------------------------------------------
13:34:35 SQL> 
13:34:35 SQL> -- Cleanup old scoring data preparation objects for repeat runs
13:34:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
13:34:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:34:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:34:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
13:34:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:34:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:34:35 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
13:34:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:34:35   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:34:35 SQL> -----------------------
13:34:35 SQL> -- PREPARE SCORING DATA
13:34:35 SQL> --
13:34:35 SQL> -- If the data for model creation has been prepared, then the data
13:34:35 SQL> -- to be scored using the model must be prepared in the same manner
13:34:35 SQL> -- in order to obtain meaningful results.
13:34:35 SQL> --
13:34:35 SQL> -- 1. Missing Value treatment for all Predictors and
13:34:35 SQL> -- 2. Normalization
13:34:35 SQL> -- No outlier treatment will be performed during test and apply. The
13:34:35 SQL> -- normalization step is sufficient, since the normalization parameters
13:34:35 SQL> -- already capture the effects of outlier treatment done with build data.
13:34:35 SQL> --
13:34:35 SQL> BEGIN
13:34:35   2  	-- Xform Test data to replace missing values
13:34:35   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:34:35   4  	  miss_table_name => 'svmc_miss_num',
13:34:35   5  	  data_table_name => '&scoretable',
13:34:35   6  	  xform_view_name => 'xformed_apply_miss_num');
13:34:35   7  
13:34:35   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:34:35   9  	  miss_table_name => 'svmc_miss_cat',
13:34:35  10  	  data_table_name => '&scoretable',
13:34:35  11  	  xform_view_name => 'xformed_apply_miss_cat');
13:34:35  12  
13:34:35  13  	-- Normalize the data to be scored
13:34:35  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:34:35  15  	  norm_table_name => 'svmc_norm',
13:34:35  16  	  data_table_name => '&scoretable',
13:34:35  17  	  xform_view_name => 'svmc_apply_prep');
13:34:35  18  END;
13:34:35  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.23
13:34:36 SQL> 
13:34:36 SQL> -- Use same model_name used in score_gattn.sql
13:34:36 SQL> DEFINE model_name = 'forex14'
13:34:36 SQL> 
13:34:36 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
13:34:36 SQL> 
13:34:36 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
13:34:36   2  SELECT
13:34:36   3  prdate
13:34:36   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
13:34:36   5  ,sysdate
13:34:36   6  ,SUBSTR(prdate,1,3)pair
13:34:36   7  ,SUBSTR(prdate,4,19)ydate
13:34:36   8  FROM svmc_apply_prep
13:34:36   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
13:34:36 SQL> @aud_score1day_gattn.sql	2010-12-30 13:15:00
13:34:36 SQL> --
13:34:36 SQL> -- aud_score1day_gattn.sql
13:34:36 SQL> --
13:34:36 SQL> 
13:34:36 SQL> CREATE OR REPLACE VIEW sme AS
13:34:36   2  SELECT
13:34:36   3  'aud'||m.ydate prdate
13:34:36   4  ,NULL gattn
13:34:36   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:34:36   6  ,eur_g00
13:34:36   7  ,eur_g01
13:34:36   8  ,eur_g02
13:34:36   9  ,eur_g03
13:34:36  10  ,eur_g04
13:34:36  11  ,eur_g05
13:34:36  12  ,eur_g06
13:34:36  13  ,eur_g07
13:34:36  14  ,eur_g08
13:34:36  15  ,eur_g09
13:34:36  16  ,eur_g10
13:34:36  17  ,eur_g11
13:34:36  18  ,eur_g12
13:34:36  19  ,eur_g13
13:34:36  20  ,eur_g14
13:34:36  21  ,eur_g15
13:34:36  22  ,eur_g16
13:34:36  23  ,eur_g17
13:34:36  24  ,eur_g18
13:34:36  25  ,eur_g19
13:34:36  26  ,eur_g20
13:34:36  27  ,eur_g21
13:34:36  28  ,eur_g22
13:34:36  29  ,eur_g23
13:34:36  30  ,eur_g24
13:34:36  31  ,eur_g25
13:34:36  32  ,eur_g26
13:34:36  33  ,eur_g27
13:34:36  34  ,eur_g28
13:34:36  35  ,eur_g29
13:34:36  36  ,eur_g30
13:34:36  37  ,eur_g31
13:34:36  38  ,eur_g32
13:34:36  39  ,eur_g33
13:34:36  40  ,eur_g34
13:34:36  41  ,eur_g35
13:34:36  42  ,eur_g36
13:34:36  43  ,eur_g37
13:34:36  44  ,eur_g38
13:34:36  45  ,eur_g39
13:34:36  46  ,eur_g40
13:34:36  47  ,eur_g41
13:34:36  48  ,aud_g00
13:34:36  49  ,aud_g01
13:34:36  50  ,aud_g02
13:34:36  51  ,aud_g03
13:34:36  52  ,aud_g04
13:34:36  53  ,aud_g05
13:34:36  54  ,aud_g06
13:34:36  55  ,aud_g07
13:34:36  56  ,aud_g08
13:34:36  57  ,aud_g09
13:34:36  58  ,aud_g10
13:34:36  59  ,aud_g11
13:34:36  60  ,aud_g12
13:34:36  61  ,aud_g13
13:34:36  62  ,aud_g14
13:34:36  63  ,aud_g15
13:34:36  64  ,aud_g16
13:34:36  65  ,aud_g17
13:34:36  66  ,aud_g18
13:34:36  67  ,aud_g19
13:34:36  68  ,aud_g20
13:34:36  69  ,aud_g21
13:34:36  70  ,aud_g22
13:34:36  71  ,aud_g23
13:34:36  72  ,aud_g24
13:34:36  73  ,aud_g25
13:34:36  74  ,aud_g26
13:34:36  75  ,aud_g27
13:34:36  76  ,aud_g28
13:34:36  77  ,aud_g29
13:34:36  78  ,aud_g30
13:34:36  79  ,aud_g31
13:34:36  80  ,aud_g32
13:34:36  81  ,aud_g33
13:34:36  82  ,aud_g34
13:34:36  83  ,aud_g35
13:34:36  84  ,aud_g36
13:34:36  85  ,aud_g37
13:34:36  86  ,aud_g38
13:34:36  87  ,aud_g39
13:34:36  88  ,aud_g40
13:34:36  89  ,aud_g41
13:34:36  90  ,gbp_g00
13:34:36  91  ,gbp_g01
13:34:36  92  ,gbp_g02
13:34:36  93  ,gbp_g03
13:34:36  94  ,gbp_g04
13:34:36  95  ,gbp_g05
13:34:36  96  ,gbp_g06
13:34:36  97  ,gbp_g07
13:34:36  98  ,gbp_g08
13:34:36  99  ,gbp_g09
13:34:36 100  ,gbp_g10
13:34:36 101  ,gbp_g11
13:34:36 102  ,gbp_g12
13:34:36 103  ,gbp_g13
13:34:36 104  ,gbp_g14
13:34:36 105  ,gbp_g15
13:34:36 106  ,gbp_g16
13:34:36 107  ,gbp_g17
13:34:36 108  ,gbp_g18
13:34:36 109  ,gbp_g19
13:34:36 110  ,gbp_g20
13:34:36 111  ,gbp_g21
13:34:36 112  ,gbp_g22
13:34:36 113  ,gbp_g23
13:34:36 114  ,gbp_g24
13:34:36 115  ,gbp_g25
13:34:36 116  ,gbp_g26
13:34:36 117  ,gbp_g27
13:34:36 118  ,gbp_g28
13:34:36 119  ,gbp_g29
13:34:36 120  ,gbp_g30
13:34:36 121  ,gbp_g31
13:34:36 122  ,gbp_g32
13:34:36 123  ,gbp_g33
13:34:36 124  ,gbp_g34
13:34:36 125  ,gbp_g35
13:34:36 126  ,gbp_g36
13:34:36 127  ,gbp_g37
13:34:36 128  ,gbp_g38
13:34:36 129  ,gbp_g39
13:34:36 130  ,gbp_g40
13:34:36 131  ,gbp_g41
13:34:36 132  ,jpy_g00
13:34:36 133  ,jpy_g01
13:34:36 134  ,jpy_g02
13:34:36 135  ,jpy_g03
13:34:36 136  ,jpy_g04
13:34:36 137  ,jpy_g05
13:34:36 138  ,jpy_g06
13:34:36 139  ,jpy_g07
13:34:36 140  ,jpy_g08
13:34:36 141  ,jpy_g09
13:34:36 142  ,jpy_g10
13:34:36 143  ,jpy_g11
13:34:36 144  ,jpy_g12
13:34:36 145  ,jpy_g13
13:34:36 146  ,jpy_g14
13:34:36 147  ,jpy_g15
13:34:36 148  ,jpy_g16
13:34:36 149  ,jpy_g17
13:34:36 150  ,jpy_g18
13:34:36 151  ,jpy_g19
13:34:36 152  ,jpy_g20
13:34:36 153  ,jpy_g21
13:34:36 154  ,jpy_g22
13:34:36 155  ,jpy_g23
13:34:36 156  ,jpy_g24
13:34:36 157  ,jpy_g25
13:34:36 158  ,jpy_g26
13:34:36 159  ,jpy_g27
13:34:36 160  ,jpy_g28
13:34:36 161  ,jpy_g29
13:34:36 162  ,jpy_g30
13:34:36 163  ,jpy_g31
13:34:36 164  ,jpy_g32
13:34:36 165  ,jpy_g33
13:34:36 166  ,jpy_g34
13:34:36 167  ,jpy_g35
13:34:36 168  ,jpy_g36
13:34:36 169  ,jpy_g37
13:34:36 170  ,jpy_g38
13:34:36 171  ,jpy_g39
13:34:36 172  ,jpy_g40
13:34:36 173  ,jpy_g41
13:34:36 174  ,cad_g00
13:34:36 175  ,cad_g01
13:34:36 176  ,cad_g02
13:34:36 177  ,cad_g03
13:34:36 178  ,cad_g04
13:34:36 179  ,cad_g05
13:34:36 180  ,cad_g06
13:34:36 181  ,cad_g07
13:34:36 182  ,cad_g08
13:34:36 183  ,cad_g09
13:34:36 184  ,cad_g10
13:34:36 185  ,cad_g11
13:34:36 186  ,cad_g12
13:34:36 187  ,cad_g13
13:34:36 188  ,cad_g14
13:34:36 189  ,cad_g15
13:34:36 190  ,cad_g16
13:34:36 191  ,cad_g17
13:34:36 192  ,cad_g18
13:34:36 193  ,cad_g19
13:34:36 194  ,cad_g20
13:34:36 195  ,cad_g21
13:34:36 196  ,cad_g22
13:34:36 197  ,cad_g23
13:34:36 198  ,cad_g24
13:34:36 199  ,cad_g25
13:34:36 200  ,cad_g26
13:34:36 201  ,cad_g27
13:34:36 202  ,cad_g28
13:34:36 203  ,cad_g29
13:34:36 204  ,cad_g30
13:34:36 205  ,cad_g31
13:34:36 206  ,cad_g32
13:34:36 207  ,cad_g33
13:34:36 208  ,cad_g34
13:34:36 209  ,cad_g35
13:34:36 210  ,cad_g36
13:34:36 211  ,cad_g37
13:34:36 212  ,cad_g38
13:34:36 213  ,cad_g39
13:34:36 214  ,cad_g40
13:34:36 215  ,cad_g41
13:34:36 216  ,chf_g00
13:34:36 217  ,chf_g01
13:34:36 218  ,chf_g02
13:34:36 219  ,chf_g03
13:34:36 220  ,chf_g04
13:34:36 221  ,chf_g05
13:34:36 222  ,chf_g06
13:34:36 223  ,chf_g07
13:34:36 224  ,chf_g08
13:34:36 225  ,chf_g09
13:34:36 226  ,chf_g10
13:34:36 227  ,chf_g11
13:34:36 228  ,chf_g12
13:34:36 229  ,chf_g13
13:34:36 230  ,chf_g14
13:34:36 231  ,chf_g15
13:34:36 232  ,chf_g16
13:34:36 233  ,chf_g17
13:34:36 234  ,chf_g18
13:34:36 235  ,chf_g19
13:34:36 236  ,chf_g20
13:34:36 237  ,chf_g21
13:34:36 238  ,chf_g22
13:34:36 239  ,chf_g23
13:34:36 240  ,chf_g24
13:34:36 241  ,chf_g25
13:34:36 242  ,chf_g26
13:34:36 243  ,chf_g27
13:34:36 244  ,chf_g28
13:34:36 245  ,chf_g29
13:34:36 246  ,chf_g30
13:34:36 247  ,chf_g31
13:34:36 248  ,chf_g32
13:34:36 249  ,chf_g33
13:34:36 250  ,chf_g34
13:34:36 251  ,chf_g35
13:34:36 252  ,chf_g36
13:34:36 253  ,chf_g37
13:34:36 254  ,chf_g38
13:34:36 255  ,chf_g39
13:34:36 256  ,chf_g40
13:34:36 257  ,chf_g41
13:34:36 258  FROM aud_ms6 m
13:34:36 259  WHERE m.ydate = '&1'||' '||'&2'
13:34:36 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'13:15:00'

View created.

Elapsed: 00:00:00.12
13:34:36 SQL> 
13:34:36 SQL> -- rpt
13:34:36 SQL> -- We should see just 1 row:
13:34:36 SQL> 
13:34:36 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
13:34:36 SQL> 
13:34:36 SQL> -- Build the model:
13:34:36 SQL> CREATE OR REPLACE VIEW bme AS
13:34:36   2  SELECT
13:34:36   3  'aud'||m.ydate prdate
13:34:36   4  ,gattn
13:34:36   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:34:36   6  ,eur_g00
13:34:36   7  ,eur_g01
13:34:36   8  ,eur_g02
13:34:36   9  ,eur_g03
13:34:36  10  ,eur_g04
13:34:36  11  ,eur_g05
13:34:36  12  ,eur_g06
13:34:36  13  ,eur_g07
13:34:36  14  ,eur_g08
13:34:36  15  ,eur_g09
13:34:36  16  ,eur_g10
13:34:36  17  ,eur_g11
13:34:36  18  ,eur_g12
13:34:36  19  ,eur_g13
13:34:36  20  ,eur_g14
13:34:36  21  ,eur_g15
13:34:36  22  ,eur_g16
13:34:36  23  ,eur_g17
13:34:36  24  ,eur_g18
13:34:36  25  ,eur_g19
13:34:36  26  ,eur_g20
13:34:36  27  ,eur_g21
13:34:36  28  ,eur_g22
13:34:36  29  ,eur_g23
13:34:36  30  ,eur_g24
13:34:36  31  ,eur_g25
13:34:36  32  ,eur_g26
13:34:36  33  ,eur_g27
13:34:36  34  ,eur_g28
13:34:36  35  ,eur_g29
13:34:36  36  ,eur_g30
13:34:36  37  ,eur_g31
13:34:36  38  ,eur_g32
13:34:36  39  ,eur_g33
13:34:36  40  ,eur_g34
13:34:36  41  ,eur_g35
13:34:36  42  ,eur_g36
13:34:36  43  ,eur_g37
13:34:36  44  ,eur_g38
13:34:36  45  ,eur_g39
13:34:36  46  ,eur_g40
13:34:36  47  ,eur_g41
13:34:36  48  ,aud_g00
13:34:36  49  ,aud_g01
13:34:36  50  ,aud_g02
13:34:36  51  ,aud_g03
13:34:36  52  ,aud_g04
13:34:36  53  ,aud_g05
13:34:36  54  ,aud_g06
13:34:36  55  ,aud_g07
13:34:36  56  ,aud_g08
13:34:36  57  ,aud_g09
13:34:36  58  ,aud_g10
13:34:36  59  ,aud_g11
13:34:36  60  ,aud_g12
13:34:36  61  ,aud_g13
13:34:36  62  ,aud_g14
13:34:36  63  ,aud_g15
13:34:36  64  ,aud_g16
13:34:36  65  ,aud_g17
13:34:36  66  ,aud_g18
13:34:36  67  ,aud_g19
13:34:36  68  ,aud_g20
13:34:36  69  ,aud_g21
13:34:36  70  ,aud_g22
13:34:36  71  ,aud_g23
13:34:36  72  ,aud_g24
13:34:36  73  ,aud_g25
13:34:36  74  ,aud_g26
13:34:36  75  ,aud_g27
13:34:36  76  ,aud_g28
13:34:36  77  ,aud_g29
13:34:36  78  ,aud_g30
13:34:36  79  ,aud_g31
13:34:36  80  ,aud_g32
13:34:36  81  ,aud_g33
13:34:36  82  ,aud_g34
13:34:36  83  ,aud_g35
13:34:36  84  ,aud_g36
13:34:36  85  ,aud_g37
13:34:36  86  ,aud_g38
13:34:36  87  ,aud_g39
13:34:36  88  ,aud_g40
13:34:36  89  ,aud_g41
13:34:36  90  ,gbp_g00
13:34:36  91  ,gbp_g01
13:34:36  92  ,gbp_g02
13:34:36  93  ,gbp_g03
13:34:36  94  ,gbp_g04
13:34:36  95  ,gbp_g05
13:34:36  96  ,gbp_g06
13:34:36  97  ,gbp_g07
13:34:36  98  ,gbp_g08
13:34:36  99  ,gbp_g09
13:34:36 100  ,gbp_g10
13:34:36 101  ,gbp_g11
13:34:36 102  ,gbp_g12
13:34:36 103  ,gbp_g13
13:34:36 104  ,gbp_g14
13:34:36 105  ,gbp_g15
13:34:36 106  ,gbp_g16
13:34:36 107  ,gbp_g17
13:34:36 108  ,gbp_g18
13:34:36 109  ,gbp_g19
13:34:36 110  ,gbp_g20
13:34:36 111  ,gbp_g21
13:34:36 112  ,gbp_g22
13:34:36 113  ,gbp_g23
13:34:36 114  ,gbp_g24
13:34:36 115  ,gbp_g25
13:34:36 116  ,gbp_g26
13:34:36 117  ,gbp_g27
13:34:36 118  ,gbp_g28
13:34:36 119  ,gbp_g29
13:34:36 120  ,gbp_g30
13:34:36 121  ,gbp_g31
13:34:36 122  ,gbp_g32
13:34:36 123  ,gbp_g33
13:34:36 124  ,gbp_g34
13:34:36 125  ,gbp_g35
13:34:36 126  ,gbp_g36
13:34:36 127  ,gbp_g37
13:34:36 128  ,gbp_g38
13:34:36 129  ,gbp_g39
13:34:36 130  ,gbp_g40
13:34:36 131  ,gbp_g41
13:34:36 132  ,jpy_g00
13:34:36 133  ,jpy_g01
13:34:36 134  ,jpy_g02
13:34:36 135  ,jpy_g03
13:34:36 136  ,jpy_g04
13:34:36 137  ,jpy_g05
13:34:36 138  ,jpy_g06
13:34:36 139  ,jpy_g07
13:34:36 140  ,jpy_g08
13:34:36 141  ,jpy_g09
13:34:36 142  ,jpy_g10
13:34:36 143  ,jpy_g11
13:34:36 144  ,jpy_g12
13:34:36 145  ,jpy_g13
13:34:36 146  ,jpy_g14
13:34:36 147  ,jpy_g15
13:34:36 148  ,jpy_g16
13:34:36 149  ,jpy_g17
13:34:36 150  ,jpy_g18
13:34:36 151  ,jpy_g19
13:34:36 152  ,jpy_g20
13:34:36 153  ,jpy_g21
13:34:36 154  ,jpy_g22
13:34:36 155  ,jpy_g23
13:34:36 156  ,jpy_g24
13:34:36 157  ,jpy_g25
13:34:36 158  ,jpy_g26
13:34:36 159  ,jpy_g27
13:34:36 160  ,jpy_g28
13:34:36 161  ,jpy_g29
13:34:36 162  ,jpy_g30
13:34:36 163  ,jpy_g31
13:34:36 164  ,jpy_g32
13:34:36 165  ,jpy_g33
13:34:36 166  ,jpy_g34
13:34:36 167  ,jpy_g35
13:34:36 168  ,jpy_g36
13:34:36 169  ,jpy_g37
13:34:36 170  ,jpy_g38
13:34:36 171  ,jpy_g39
13:34:36 172  ,jpy_g40
13:34:36 173  ,jpy_g41
13:34:36 174  ,cad_g00
13:34:36 175  ,cad_g01
13:34:36 176  ,cad_g02
13:34:36 177  ,cad_g03
13:34:36 178  ,cad_g04
13:34:36 179  ,cad_g05
13:34:36 180  ,cad_g06
13:34:36 181  ,cad_g07
13:34:36 182  ,cad_g08
13:34:36 183  ,cad_g09
13:34:36 184  ,cad_g10
13:34:36 185  ,cad_g11
13:34:36 186  ,cad_g12
13:34:36 187  ,cad_g13
13:34:36 188  ,cad_g14
13:34:36 189  ,cad_g15
13:34:36 190  ,cad_g16
13:34:36 191  ,cad_g17
13:34:36 192  ,cad_g18
13:34:36 193  ,cad_g19
13:34:36 194  ,cad_g20
13:34:36 195  ,cad_g21
13:34:36 196  ,cad_g22
13:34:36 197  ,cad_g23
13:34:36 198  ,cad_g24
13:34:36 199  ,cad_g25
13:34:36 200  ,cad_g26
13:34:36 201  ,cad_g27
13:34:36 202  ,cad_g28
13:34:36 203  ,cad_g29
13:34:36 204  ,cad_g30
13:34:36 205  ,cad_g31
13:34:36 206  ,cad_g32
13:34:36 207  ,cad_g33
13:34:36 208  ,cad_g34
13:34:36 209  ,cad_g35
13:34:36 210  ,cad_g36
13:34:36 211  ,cad_g37
13:34:36 212  ,cad_g38
13:34:36 213  ,cad_g39
13:34:36 214  ,cad_g40
13:34:36 215  ,cad_g41
13:34:36 216  ,chf_g00
13:34:36 217  ,chf_g01
13:34:36 218  ,chf_g02
13:34:36 219  ,chf_g03
13:34:36 220  ,chf_g04
13:34:36 221  ,chf_g05
13:34:36 222  ,chf_g06
13:34:36 223  ,chf_g07
13:34:36 224  ,chf_g08
13:34:36 225  ,chf_g09
13:34:36 226  ,chf_g10
13:34:36 227  ,chf_g11
13:34:36 228  ,chf_g12
13:34:36 229  ,chf_g13
13:34:36 230  ,chf_g14
13:34:36 231  ,chf_g15
13:34:36 232  ,chf_g16
13:34:36 233  ,chf_g17
13:34:36 234  ,chf_g18
13:34:36 235  ,chf_g19
13:34:36 236  ,chf_g20
13:34:36 237  ,chf_g21
13:34:36 238  ,chf_g22
13:34:36 239  ,chf_g23
13:34:36 240  ,chf_g24
13:34:36 241  ,chf_g25
13:34:36 242  ,chf_g26
13:34:36 243  ,chf_g27
13:34:36 244  ,chf_g28
13:34:36 245  ,chf_g29
13:34:36 246  ,chf_g30
13:34:36 247  ,chf_g31
13:34:36 248  ,chf_g32
13:34:36 249  ,chf_g33
13:34:36 250  ,chf_g34
13:34:36 251  ,chf_g35
13:34:36 252  ,chf_g36
13:34:36 253  ,chf_g37
13:34:36 254  ,chf_g38
13:34:36 255  ,chf_g39
13:34:36 256  ,chf_g40
13:34:36 257  ,chf_g41
13:34:36 258  FROM aud_ms6 m
13:34:36 259  WHERE gattn IN('nup','up')
13:34:36 260  AND 1+m.ydate < '&1'||' '||'&2'
13:34:36 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'13:15:00'

View created.

Elapsed: 00:00:00.13
13:34:37 SQL> 
13:34:37 SQL> -- rpt
13:34:37 SQL> 
13:34:37 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13057
up	     6397

Elapsed: 00:00:00.04
13:34:37 SQL> 
13:34:37 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 13:10:00

Elapsed: 00:00:00.03
13:34:37 SQL> 
13:34:37 SQL> -- Now build model from bme and score sme
13:34:37 SQL> @score1gattn.sql
13:34:37 SQL> -- score1gattn.sql
13:34:37 SQL> 
13:34:37 SQL> -- Does the 1st SVM score
13:34:37 SQL> 
13:34:37 SQL> -- Fill up svmc_apply_prep
13:34:37 SQL> @score_gattn.sql
13:34:37 SQL> --
13:34:37 SQL> -- score_gattn.sql
13:34:37 SQL> --
13:34:37 SQL> 
13:34:37 SQL> -- usage: score_gattn.sql
13:34:37 SQL> 
13:34:37 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
13:34:37 SQL> 
13:34:37 SQL> DEFINE target	= 'gattn'
13:34:37 SQL> DEFINE model_name = 'forex14'
13:34:37 SQL> DEFINE bldtable	= 'bme'
13:34:37 SQL> DEFINE scoretable = 'sme'
13:34:37 SQL> DEFINE case_id	= 'prdate'
13:34:37 SQL> 
13:34:37 SQL> -- Define a variable to help me exclude some columns from some data mining calls
13:34:37 SQL> DEFINE exclude1 = "'&target','&case_id'"
13:34:37 SQL> 
13:34:37 SQL> -- Builds an SVM model using pl/sql.
13:34:37 SQL> 
13:34:37 SQL> -----------------------------------------------------------------------
13:34:37 SQL> --			    BUILD THE MODEL
13:34:37 SQL> -----------------------------------------------------------------------
13:34:37 SQL> 
13:34:37 SQL> -- Cleanup old build data preparation objects for repeat runs
13:34:37 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
13:34:37 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
13:34:37 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
13:34:37 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
13:34:37 SQL> 
13:34:37 SQL> 
13:34:37 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
13:34:37 SQL> --
13:34:37 SQL> -- DROP	TABLE svmc_settings ;
13:34:37 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
13:34:37 SQL> -- DELETE svmc_settings;
13:34:37 SQL> 
13:34:37 SQL> -- The default classification algorithm is Naive Bayes. So override
13:34:37 SQL> -- this choice to SVM using a settings table.
13:34:37 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
13:34:37 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
13:34:37 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
13:34:37 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
13:34:37 SQL> -- models.
13:34:37 SQL> --
13:34:37 SQL> 
13:34:37 SQL> -- Do this once and then comment it out.
13:34:37 SQL> -- That makes script go faster.
13:34:37 SQL> -- BEGIN
13:34:37 SQL> -- -- Populate settings table
13:34:37 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:34:37 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
13:34:37 SQL> --
13:34:37 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:34:37 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
13:34:37 SQL> --
13:34:37 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:34:37 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
13:34:37 SQL> --   COMMIT;
13:34:37 SQL> -- END;
13:34:37 SQL> -- /
13:34:37 SQL> 
13:34:37 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
13:34:37 SQL> 
13:34:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
13:34:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:34:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:34:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
13:34:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:34:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:34:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
13:34:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:34:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
13:34:37 SQL> 
13:34:37 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
13:34:37   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:34:37   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:34:37 SQL> 
13:34:37 SQL> --------------------------------
13:34:37 SQL> -- PREPARE BUILD (TRAINING) DATA
13:34:37 SQL> --
13:34:37 SQL> 
13:34:37 SQL> -- 1. Missing Value treatment for all Predictors and
13:34:37 SQL> -- 2. Outlier Treatment and
13:34:37 SQL> -- 3. Normalization are performed below.
13:34:37 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
13:34:37 SQL> --    normalized here.
13:34:37 SQL> 
13:34:37 SQL> BEGIN
13:34:37   2  	-- Perform missing value treatment for all predictors
13:34:37   3  	-- create miss tables
13:34:37   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
13:34:37   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
13:34:37   6  
13:34:37   7  	-- populate miss tables
13:34:37   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
13:34:37   9  	  miss_table_name => 'svmc_miss_num',
13:34:37  10  	  data_table_name => '&bldtable',
13:34:37  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:34:37  12  
13:34:37  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
13:34:37  14  	  miss_table_name => 'svmc_miss_cat',
13:34:37  15  	  data_table_name => '&bldtable',
13:34:37  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:34:37  17  
13:34:37  18  	-- xform input data to replace missing values
13:34:37  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:34:37  20  	  miss_table_name => 'svmc_miss_num',
13:34:37  21  	  data_table_name => '&bldtable',
13:34:37  22  	  xform_view_name => 'xformed_build_miss_num');
13:34:37  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:34:37  24  	  miss_table_name => 'svmc_miss_cat',
13:34:37  25  	  data_table_name => '&bldtable',
13:34:37  26  	  xform_view_name => 'xformed_build_miss_cat');
13:34:37  27  
13:34:37  28  	-- Perform outlier treatment.
13:34:37  29  	-- create clip table
13:34:37  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
13:34:37  31  
13:34:37  32  	-- populate clip table
13:34:37  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
13:34:37  34  	  clip_table_name => 'svmc_clip',
13:34:37  35  	  data_table_name => '&bldtable',
13:34:37  36  	  tail_frac	  => 0.025,
13:34:37  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:34:37  38  
13:34:37  39  	-- xform input data to winsorized data
13:34:37  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
13:34:37  41  	  clip_table_name => 'svmc_clip',
13:34:37  42  	  data_table_name => '&bldtable',
13:34:37  43  	  xform_view_name => 'svmc_winsor');
13:34:37  44  
13:34:37  45  	-- create normalization table
13:34:37  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
13:34:37  47  
13:34:37  48  	-- populate normalization table based on winsorized data
13:34:37  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
13:34:37  50  	  norm_table_name => 'svmc_norm',
13:34:37  51  	  data_table_name => 'svmc_winsor',
13:34:37  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:34:37  53  
13:34:37  54  	-- normalize the original data
13:34:37  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:34:37  56  	  norm_table_name => 'svmc_norm',
13:34:37  57  	  data_table_name => '&bldtable',
13:34:37  58  	  xform_view_name => 'svmc_build_prep');
13:34:37  59  END;
13:34:37  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.86
13:34:55 SQL> 
13:34:55 SQL> ---------------------
13:34:55 SQL> -- CREATE A NEW MODEL
13:34:55 SQL> --
13:34:55 SQL> -- Cleanup old model with the same name for repeat runs
13:34:55 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
13:34:55   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:34:55   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.96
13:34:56 SQL> 
13:34:56 SQL> -- Build a new SVM Model
13:34:56 SQL> BEGIN
13:34:56   2  	DBMS_DATA_MINING.CREATE_MODEL(
13:34:56   3  	  model_name	      => '&model_name',
13:34:56   4  	  mining_function     => dbms_data_mining.classification,
13:34:56   5  	  data_table_name     => 'svmc_build_prep',
13:34:56   6  	  case_id_column_name => '&case_id',
13:34:56   7  	  target_column_name  => '&target',
13:34:56   8  	  settings_table_name => 'svmc_settings');
13:34:56   9  END;
13:34:56  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.72
13:35:23 SQL> 
13:35:23 SQL> -----------------------------------------------------------------------
13:35:23 SQL> --			       APPLY/score THE MODEL
13:35:23 SQL> -----------------------------------------------------------------------
13:35:23 SQL> 
13:35:23 SQL> -- Cleanup old scoring data preparation objects for repeat runs
13:35:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
13:35:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:35:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:35:23 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
13:35:23   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:35:23   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:35:24 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
13:35:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:35:24   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:35:24 SQL> -----------------------
13:35:24 SQL> -- PREPARE SCORING DATA
13:35:24 SQL> --
13:35:24 SQL> -- If the data for model creation has been prepared, then the data
13:35:24 SQL> -- to be scored using the model must be prepared in the same manner
13:35:24 SQL> -- in order to obtain meaningful results.
13:35:24 SQL> --
13:35:24 SQL> -- 1. Missing Value treatment for all Predictors and
13:35:24 SQL> -- 2. Normalization
13:35:24 SQL> -- No outlier treatment will be performed during test and apply. The
13:35:24 SQL> -- normalization step is sufficient, since the normalization parameters
13:35:24 SQL> -- already capture the effects of outlier treatment done with build data.
13:35:24 SQL> --
13:35:24 SQL> BEGIN
13:35:24   2  	-- Xform Test data to replace missing values
13:35:24   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:35:24   4  	  miss_table_name => 'svmc_miss_num',
13:35:24   5  	  data_table_name => '&scoretable',
13:35:24   6  	  xform_view_name => 'xformed_apply_miss_num');
13:35:24   7  
13:35:24   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:35:24   9  	  miss_table_name => 'svmc_miss_cat',
13:35:24  10  	  data_table_name => '&scoretable',
13:35:24  11  	  xform_view_name => 'xformed_apply_miss_cat');
13:35:24  12  
13:35:24  13  	-- Normalize the data to be scored
13:35:24  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:35:24  15  	  norm_table_name => 'svmc_norm',
13:35:24  16  	  data_table_name => '&scoretable',
13:35:24  17  	  xform_view_name => 'svmc_apply_prep');
13:35:24  18  END;
13:35:24  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
13:35:25 SQL> 
13:35:25 SQL> -- Use same model_name used in score_gattn.sql
13:35:25 SQL> DEFINE model_name = 'forex14'
13:35:25 SQL> 
13:35:25 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
13:35:25 SQL> 
13:35:25 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
13:35:25   2  SELECT
13:35:25   3  prdate
13:35:25   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
13:35:25   5  ,sysdate
13:35:25   6  ,SUBSTR(prdate,1,3)pair
13:35:25   7  ,SUBSTR(prdate,4,19)ydate
13:35:25   8  FROM svmc_apply_prep
13:35:25   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
13:35:25 SQL> @aud_score1day_gattn.sql	2010-12-30 13:20:00
13:35:25 SQL> --
13:35:25 SQL> -- aud_score1day_gattn.sql
13:35:25 SQL> --
13:35:25 SQL> 
13:35:25 SQL> CREATE OR REPLACE VIEW sme AS
13:35:25   2  SELECT
13:35:25   3  'aud'||m.ydate prdate
13:35:25   4  ,NULL gattn
13:35:25   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:35:25   6  ,eur_g00
13:35:25   7  ,eur_g01
13:35:25   8  ,eur_g02
13:35:25   9  ,eur_g03
13:35:25  10  ,eur_g04
13:35:25  11  ,eur_g05
13:35:25  12  ,eur_g06
13:35:25  13  ,eur_g07
13:35:25  14  ,eur_g08
13:35:25  15  ,eur_g09
13:35:25  16  ,eur_g10
13:35:25  17  ,eur_g11
13:35:25  18  ,eur_g12
13:35:25  19  ,eur_g13
13:35:25  20  ,eur_g14
13:35:25  21  ,eur_g15
13:35:25  22  ,eur_g16
13:35:25  23  ,eur_g17
13:35:25  24  ,eur_g18
13:35:25  25  ,eur_g19
13:35:25  26  ,eur_g20
13:35:25  27  ,eur_g21
13:35:25  28  ,eur_g22
13:35:25  29  ,eur_g23
13:35:25  30  ,eur_g24
13:35:25  31  ,eur_g25
13:35:25  32  ,eur_g26
13:35:25  33  ,eur_g27
13:35:25  34  ,eur_g28
13:35:25  35  ,eur_g29
13:35:25  36  ,eur_g30
13:35:25  37  ,eur_g31
13:35:25  38  ,eur_g32
13:35:25  39  ,eur_g33
13:35:25  40  ,eur_g34
13:35:25  41  ,eur_g35
13:35:25  42  ,eur_g36
13:35:25  43  ,eur_g37
13:35:25  44  ,eur_g38
13:35:25  45  ,eur_g39
13:35:25  46  ,eur_g40
13:35:25  47  ,eur_g41
13:35:25  48  ,aud_g00
13:35:25  49  ,aud_g01
13:35:25  50  ,aud_g02
13:35:25  51  ,aud_g03
13:35:25  52  ,aud_g04
13:35:25  53  ,aud_g05
13:35:25  54  ,aud_g06
13:35:25  55  ,aud_g07
13:35:25  56  ,aud_g08
13:35:25  57  ,aud_g09
13:35:25  58  ,aud_g10
13:35:25  59  ,aud_g11
13:35:25  60  ,aud_g12
13:35:25  61  ,aud_g13
13:35:25  62  ,aud_g14
13:35:25  63  ,aud_g15
13:35:25  64  ,aud_g16
13:35:25  65  ,aud_g17
13:35:25  66  ,aud_g18
13:35:25  67  ,aud_g19
13:35:25  68  ,aud_g20
13:35:25  69  ,aud_g21
13:35:25  70  ,aud_g22
13:35:25  71  ,aud_g23
13:35:25  72  ,aud_g24
13:35:25  73  ,aud_g25
13:35:25  74  ,aud_g26
13:35:25  75  ,aud_g27
13:35:25  76  ,aud_g28
13:35:25  77  ,aud_g29
13:35:25  78  ,aud_g30
13:35:25  79  ,aud_g31
13:35:25  80  ,aud_g32
13:35:25  81  ,aud_g33
13:35:25  82  ,aud_g34
13:35:25  83  ,aud_g35
13:35:25  84  ,aud_g36
13:35:25  85  ,aud_g37
13:35:25  86  ,aud_g38
13:35:25  87  ,aud_g39
13:35:25  88  ,aud_g40
13:35:25  89  ,aud_g41
13:35:25  90  ,gbp_g00
13:35:25  91  ,gbp_g01
13:35:25  92  ,gbp_g02
13:35:25  93  ,gbp_g03
13:35:25  94  ,gbp_g04
13:35:25  95  ,gbp_g05
13:35:25  96  ,gbp_g06
13:35:25  97  ,gbp_g07
13:35:25  98  ,gbp_g08
13:35:25  99  ,gbp_g09
13:35:25 100  ,gbp_g10
13:35:25 101  ,gbp_g11
13:35:25 102  ,gbp_g12
13:35:25 103  ,gbp_g13
13:35:25 104  ,gbp_g14
13:35:25 105  ,gbp_g15
13:35:25 106  ,gbp_g16
13:35:25 107  ,gbp_g17
13:35:25 108  ,gbp_g18
13:35:25 109  ,gbp_g19
13:35:25 110  ,gbp_g20
13:35:25 111  ,gbp_g21
13:35:25 112  ,gbp_g22
13:35:25 113  ,gbp_g23
13:35:25 114  ,gbp_g24
13:35:25 115  ,gbp_g25
13:35:25 116  ,gbp_g26
13:35:25 117  ,gbp_g27
13:35:25 118  ,gbp_g28
13:35:25 119  ,gbp_g29
13:35:25 120  ,gbp_g30
13:35:25 121  ,gbp_g31
13:35:25 122  ,gbp_g32
13:35:25 123  ,gbp_g33
13:35:25 124  ,gbp_g34
13:35:25 125  ,gbp_g35
13:35:25 126  ,gbp_g36
13:35:25 127  ,gbp_g37
13:35:25 128  ,gbp_g38
13:35:25 129  ,gbp_g39
13:35:25 130  ,gbp_g40
13:35:25 131  ,gbp_g41
13:35:25 132  ,jpy_g00
13:35:25 133  ,jpy_g01
13:35:25 134  ,jpy_g02
13:35:25 135  ,jpy_g03
13:35:25 136  ,jpy_g04
13:35:25 137  ,jpy_g05
13:35:25 138  ,jpy_g06
13:35:25 139  ,jpy_g07
13:35:25 140  ,jpy_g08
13:35:25 141  ,jpy_g09
13:35:25 142  ,jpy_g10
13:35:25 143  ,jpy_g11
13:35:25 144  ,jpy_g12
13:35:25 145  ,jpy_g13
13:35:25 146  ,jpy_g14
13:35:25 147  ,jpy_g15
13:35:25 148  ,jpy_g16
13:35:25 149  ,jpy_g17
13:35:25 150  ,jpy_g18
13:35:25 151  ,jpy_g19
13:35:25 152  ,jpy_g20
13:35:25 153  ,jpy_g21
13:35:25 154  ,jpy_g22
13:35:25 155  ,jpy_g23
13:35:25 156  ,jpy_g24
13:35:25 157  ,jpy_g25
13:35:25 158  ,jpy_g26
13:35:25 159  ,jpy_g27
13:35:25 160  ,jpy_g28
13:35:25 161  ,jpy_g29
13:35:25 162  ,jpy_g30
13:35:25 163  ,jpy_g31
13:35:25 164  ,jpy_g32
13:35:25 165  ,jpy_g33
13:35:25 166  ,jpy_g34
13:35:25 167  ,jpy_g35
13:35:25 168  ,jpy_g36
13:35:25 169  ,jpy_g37
13:35:25 170  ,jpy_g38
13:35:25 171  ,jpy_g39
13:35:25 172  ,jpy_g40
13:35:25 173  ,jpy_g41
13:35:25 174  ,cad_g00
13:35:25 175  ,cad_g01
13:35:25 176  ,cad_g02
13:35:25 177  ,cad_g03
13:35:25 178  ,cad_g04
13:35:25 179  ,cad_g05
13:35:25 180  ,cad_g06
13:35:25 181  ,cad_g07
13:35:25 182  ,cad_g08
13:35:25 183  ,cad_g09
13:35:25 184  ,cad_g10
13:35:25 185  ,cad_g11
13:35:25 186  ,cad_g12
13:35:25 187  ,cad_g13
13:35:25 188  ,cad_g14
13:35:25 189  ,cad_g15
13:35:25 190  ,cad_g16
13:35:25 191  ,cad_g17
13:35:25 192  ,cad_g18
13:35:25 193  ,cad_g19
13:35:25 194  ,cad_g20
13:35:25 195  ,cad_g21
13:35:25 196  ,cad_g22
13:35:25 197  ,cad_g23
13:35:25 198  ,cad_g24
13:35:25 199  ,cad_g25
13:35:25 200  ,cad_g26
13:35:25 201  ,cad_g27
13:35:25 202  ,cad_g28
13:35:25 203  ,cad_g29
13:35:25 204  ,cad_g30
13:35:25 205  ,cad_g31
13:35:25 206  ,cad_g32
13:35:25 207  ,cad_g33
13:35:25 208  ,cad_g34
13:35:25 209  ,cad_g35
13:35:25 210  ,cad_g36
13:35:25 211  ,cad_g37
13:35:25 212  ,cad_g38
13:35:25 213  ,cad_g39
13:35:25 214  ,cad_g40
13:35:25 215  ,cad_g41
13:35:25 216  ,chf_g00
13:35:25 217  ,chf_g01
13:35:25 218  ,chf_g02
13:35:25 219  ,chf_g03
13:35:25 220  ,chf_g04
13:35:25 221  ,chf_g05
13:35:25 222  ,chf_g06
13:35:25 223  ,chf_g07
13:35:25 224  ,chf_g08
13:35:25 225  ,chf_g09
13:35:25 226  ,chf_g10
13:35:25 227  ,chf_g11
13:35:25 228  ,chf_g12
13:35:25 229  ,chf_g13
13:35:25 230  ,chf_g14
13:35:25 231  ,chf_g15
13:35:25 232  ,chf_g16
13:35:25 233  ,chf_g17
13:35:25 234  ,chf_g18
13:35:25 235  ,chf_g19
13:35:25 236  ,chf_g20
13:35:25 237  ,chf_g21
13:35:25 238  ,chf_g22
13:35:25 239  ,chf_g23
13:35:25 240  ,chf_g24
13:35:25 241  ,chf_g25
13:35:25 242  ,chf_g26
13:35:25 243  ,chf_g27
13:35:25 244  ,chf_g28
13:35:25 245  ,chf_g29
13:35:25 246  ,chf_g30
13:35:25 247  ,chf_g31
13:35:25 248  ,chf_g32
13:35:25 249  ,chf_g33
13:35:25 250  ,chf_g34
13:35:25 251  ,chf_g35
13:35:25 252  ,chf_g36
13:35:25 253  ,chf_g37
13:35:25 254  ,chf_g38
13:35:25 255  ,chf_g39
13:35:25 256  ,chf_g40
13:35:25 257  ,chf_g41
13:35:25 258  FROM aud_ms6 m
13:35:25 259  WHERE m.ydate = '&1'||' '||'&2'
13:35:25 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-30'||' '||'13:20:00'

View created.

Elapsed: 00:00:00.14
13:35:25 SQL> 
13:35:25 SQL> -- rpt
13:35:25 SQL> -- We should see just 1 row:
13:35:25 SQL> 
13:35:25 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
13:35:25 SQL> 
13:35:25 SQL> -- Build the model:
13:35:25 SQL> CREATE OR REPLACE VIEW bme AS
13:35:25   2  SELECT
13:35:25   3  'aud'||m.ydate prdate
13:35:25   4  ,gattn
13:35:25   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
13:35:25   6  ,eur_g00
13:35:25   7  ,eur_g01
13:35:25   8  ,eur_g02
13:35:25   9  ,eur_g03
13:35:25  10  ,eur_g04
13:35:25  11  ,eur_g05
13:35:25  12  ,eur_g06
13:35:25  13  ,eur_g07
13:35:25  14  ,eur_g08
13:35:25  15  ,eur_g09
13:35:25  16  ,eur_g10
13:35:25  17  ,eur_g11
13:35:25  18  ,eur_g12
13:35:25  19  ,eur_g13
13:35:25  20  ,eur_g14
13:35:25  21  ,eur_g15
13:35:25  22  ,eur_g16
13:35:25  23  ,eur_g17
13:35:25  24  ,eur_g18
13:35:25  25  ,eur_g19
13:35:25  26  ,eur_g20
13:35:25  27  ,eur_g21
13:35:25  28  ,eur_g22
13:35:25  29  ,eur_g23
13:35:25  30  ,eur_g24
13:35:25  31  ,eur_g25
13:35:25  32  ,eur_g26
13:35:25  33  ,eur_g27
13:35:25  34  ,eur_g28
13:35:25  35  ,eur_g29
13:35:25  36  ,eur_g30
13:35:25  37  ,eur_g31
13:35:25  38  ,eur_g32
13:35:25  39  ,eur_g33
13:35:25  40  ,eur_g34
13:35:25  41  ,eur_g35
13:35:25  42  ,eur_g36
13:35:25  43  ,eur_g37
13:35:25  44  ,eur_g38
13:35:25  45  ,eur_g39
13:35:25  46  ,eur_g40
13:35:25  47  ,eur_g41
13:35:25  48  ,aud_g00
13:35:25  49  ,aud_g01
13:35:25  50  ,aud_g02
13:35:25  51  ,aud_g03
13:35:25  52  ,aud_g04
13:35:25  53  ,aud_g05
13:35:25  54  ,aud_g06
13:35:25  55  ,aud_g07
13:35:25  56  ,aud_g08
13:35:25  57  ,aud_g09
13:35:25  58  ,aud_g10
13:35:25  59  ,aud_g11
13:35:25  60  ,aud_g12
13:35:25  61  ,aud_g13
13:35:25  62  ,aud_g14
13:35:25  63  ,aud_g15
13:35:25  64  ,aud_g16
13:35:25  65  ,aud_g17
13:35:25  66  ,aud_g18
13:35:25  67  ,aud_g19
13:35:25  68  ,aud_g20
13:35:25  69  ,aud_g21
13:35:25  70  ,aud_g22
13:35:25  71  ,aud_g23
13:35:25  72  ,aud_g24
13:35:25  73  ,aud_g25
13:35:25  74  ,aud_g26
13:35:25  75  ,aud_g27
13:35:25  76  ,aud_g28
13:35:25  77  ,aud_g29
13:35:25  78  ,aud_g30
13:35:25  79  ,aud_g31
13:35:25  80  ,aud_g32
13:35:25  81  ,aud_g33
13:35:25  82  ,aud_g34
13:35:25  83  ,aud_g35
13:35:25  84  ,aud_g36
13:35:25  85  ,aud_g37
13:35:25  86  ,aud_g38
13:35:25  87  ,aud_g39
13:35:25  88  ,aud_g40
13:35:25  89  ,aud_g41
13:35:25  90  ,gbp_g00
13:35:25  91  ,gbp_g01
13:35:25  92  ,gbp_g02
13:35:25  93  ,gbp_g03
13:35:25  94  ,gbp_g04
13:35:25  95  ,gbp_g05
13:35:25  96  ,gbp_g06
13:35:25  97  ,gbp_g07
13:35:25  98  ,gbp_g08
13:35:25  99  ,gbp_g09
13:35:25 100  ,gbp_g10
13:35:25 101  ,gbp_g11
13:35:25 102  ,gbp_g12
13:35:25 103  ,gbp_g13
13:35:25 104  ,gbp_g14
13:35:25 105  ,gbp_g15
13:35:25 106  ,gbp_g16
13:35:25 107  ,gbp_g17
13:35:25 108  ,gbp_g18
13:35:25 109  ,gbp_g19
13:35:25 110  ,gbp_g20
13:35:25 111  ,gbp_g21
13:35:25 112  ,gbp_g22
13:35:25 113  ,gbp_g23
13:35:25 114  ,gbp_g24
13:35:25 115  ,gbp_g25
13:35:25 116  ,gbp_g26
13:35:25 117  ,gbp_g27
13:35:25 118  ,gbp_g28
13:35:25 119  ,gbp_g29
13:35:25 120  ,gbp_g30
13:35:25 121  ,gbp_g31
13:35:25 122  ,gbp_g32
13:35:25 123  ,gbp_g33
13:35:25 124  ,gbp_g34
13:35:25 125  ,gbp_g35
13:35:25 126  ,gbp_g36
13:35:25 127  ,gbp_g37
13:35:25 128  ,gbp_g38
13:35:25 129  ,gbp_g39
13:35:25 130  ,gbp_g40
13:35:25 131  ,gbp_g41
13:35:25 132  ,jpy_g00
13:35:25 133  ,jpy_g01
13:35:25 134  ,jpy_g02
13:35:25 135  ,jpy_g03
13:35:25 136  ,jpy_g04
13:35:25 137  ,jpy_g05
13:35:25 138  ,jpy_g06
13:35:25 139  ,jpy_g07
13:35:25 140  ,jpy_g08
13:35:25 141  ,jpy_g09
13:35:25 142  ,jpy_g10
13:35:25 143  ,jpy_g11
13:35:25 144  ,jpy_g12
13:35:25 145  ,jpy_g13
13:35:25 146  ,jpy_g14
13:35:25 147  ,jpy_g15
13:35:25 148  ,jpy_g16
13:35:25 149  ,jpy_g17
13:35:25 150  ,jpy_g18
13:35:25 151  ,jpy_g19
13:35:25 152  ,jpy_g20
13:35:25 153  ,jpy_g21
13:35:25 154  ,jpy_g22
13:35:25 155  ,jpy_g23
13:35:25 156  ,jpy_g24
13:35:25 157  ,jpy_g25
13:35:25 158  ,jpy_g26
13:35:25 159  ,jpy_g27
13:35:25 160  ,jpy_g28
13:35:25 161  ,jpy_g29
13:35:25 162  ,jpy_g30
13:35:25 163  ,jpy_g31
13:35:25 164  ,jpy_g32
13:35:25 165  ,jpy_g33
13:35:25 166  ,jpy_g34
13:35:25 167  ,jpy_g35
13:35:25 168  ,jpy_g36
13:35:25 169  ,jpy_g37
13:35:25 170  ,jpy_g38
13:35:25 171  ,jpy_g39
13:35:25 172  ,jpy_g40
13:35:25 173  ,jpy_g41
13:35:25 174  ,cad_g00
13:35:25 175  ,cad_g01
13:35:25 176  ,cad_g02
13:35:25 177  ,cad_g03
13:35:25 178  ,cad_g04
13:35:25 179  ,cad_g05
13:35:25 180  ,cad_g06
13:35:25 181  ,cad_g07
13:35:25 182  ,cad_g08
13:35:25 183  ,cad_g09
13:35:25 184  ,cad_g10
13:35:25 185  ,cad_g11
13:35:25 186  ,cad_g12
13:35:25 187  ,cad_g13
13:35:25 188  ,cad_g14
13:35:25 189  ,cad_g15
13:35:25 190  ,cad_g16
13:35:25 191  ,cad_g17
13:35:25 192  ,cad_g18
13:35:25 193  ,cad_g19
13:35:25 194  ,cad_g20
13:35:25 195  ,cad_g21
13:35:25 196  ,cad_g22
13:35:25 197  ,cad_g23
13:35:25 198  ,cad_g24
13:35:25 199  ,cad_g25
13:35:25 200  ,cad_g26
13:35:25 201  ,cad_g27
13:35:25 202  ,cad_g28
13:35:25 203  ,cad_g29
13:35:25 204  ,cad_g30
13:35:25 205  ,cad_g31
13:35:25 206  ,cad_g32
13:35:25 207  ,cad_g33
13:35:25 208  ,cad_g34
13:35:25 209  ,cad_g35
13:35:25 210  ,cad_g36
13:35:25 211  ,cad_g37
13:35:25 212  ,cad_g38
13:35:25 213  ,cad_g39
13:35:25 214  ,cad_g40
13:35:25 215  ,cad_g41
13:35:25 216  ,chf_g00
13:35:25 217  ,chf_g01
13:35:25 218  ,chf_g02
13:35:25 219  ,chf_g03
13:35:25 220  ,chf_g04
13:35:25 221  ,chf_g05
13:35:25 222  ,chf_g06
13:35:25 223  ,chf_g07
13:35:25 224  ,chf_g08
13:35:25 225  ,chf_g09
13:35:25 226  ,chf_g10
13:35:25 227  ,chf_g11
13:35:25 228  ,chf_g12
13:35:25 229  ,chf_g13
13:35:25 230  ,chf_g14
13:35:25 231  ,chf_g15
13:35:25 232  ,chf_g16
13:35:25 233  ,chf_g17
13:35:25 234  ,chf_g18
13:35:25 235  ,chf_g19
13:35:25 236  ,chf_g20
13:35:25 237  ,chf_g21
13:35:25 238  ,chf_g22
13:35:25 239  ,chf_g23
13:35:25 240  ,chf_g24
13:35:25 241  ,chf_g25
13:35:25 242  ,chf_g26
13:35:25 243  ,chf_g27
13:35:25 244  ,chf_g28
13:35:25 245  ,chf_g29
13:35:25 246  ,chf_g30
13:35:25 247  ,chf_g31
13:35:25 248  ,chf_g32
13:35:25 249  ,chf_g33
13:35:25 250  ,chf_g34
13:35:25 251  ,chf_g35
13:35:25 252  ,chf_g36
13:35:25 253  ,chf_g37
13:35:25 254  ,chf_g38
13:35:25 255  ,chf_g39
13:35:25 256  ,chf_g40
13:35:25 257  ,chf_g41
13:35:25 258  FROM aud_ms6 m
13:35:25 259  WHERE gattn IN('nup','up')
13:35:25 260  AND 1+m.ydate < '&1'||' '||'&2'
13:35:25 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-30'||' '||'13:20:00'

View created.

Elapsed: 00:00:00.12
13:35:25 SQL> 
13:35:25 SQL> -- rpt
13:35:25 SQL> 
13:35:25 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    13058
up	     6397

Elapsed: 00:00:00.04
13:35:25 SQL> 
13:35:25 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-29 13:15:00

Elapsed: 00:00:00.04
13:35:25 SQL> 
13:35:25 SQL> -- Now build model from bme and score sme
13:35:25 SQL> @score1gattn.sql
13:35:25 SQL> -- score1gattn.sql
13:35:25 SQL> 
13:35:25 SQL> -- Does the 1st SVM score
13:35:25 SQL> 
13:35:25 SQL> -- Fill up svmc_apply_prep
13:35:25 SQL> @score_gattn.sql
13:35:25 SQL> --
13:35:25 SQL> -- score_gattn.sql
13:35:25 SQL> --
13:35:25 SQL> 
13:35:25 SQL> -- usage: score_gattn.sql
13:35:25 SQL> 
13:35:25 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
13:35:25 SQL> 
13:35:25 SQL> DEFINE target	= 'gattn'
13:35:25 SQL> DEFINE model_name = 'forex14'
13:35:25 SQL> DEFINE bldtable	= 'bme'
13:35:25 SQL> DEFINE scoretable = 'sme'
13:35:25 SQL> DEFINE case_id	= 'prdate'
13:35:25 SQL> 
13:35:25 SQL> -- Define a variable to help me exclude some columns from some data mining calls
13:35:25 SQL> DEFINE exclude1 = "'&target','&case_id'"
13:35:25 SQL> 
13:35:25 SQL> -- Builds an SVM model using pl/sql.
13:35:25 SQL> 
13:35:25 SQL> -----------------------------------------------------------------------
13:35:25 SQL> --			    BUILD THE MODEL
13:35:25 SQL> -----------------------------------------------------------------------
13:35:25 SQL> 
13:35:25 SQL> -- Cleanup old build data preparation objects for repeat runs
13:35:25 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
13:35:25 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
13:35:25 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
13:35:25 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
13:35:25 SQL> 
13:35:25 SQL> 
13:35:25 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
13:35:25 SQL> --
13:35:25 SQL> -- DROP	TABLE svmc_settings ;
13:35:25 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
13:35:25 SQL> -- DELETE svmc_settings;
13:35:25 SQL> 
13:35:25 SQL> -- The default classification algorithm is Naive Bayes. So override
13:35:25 SQL> -- this choice to SVM using a settings table.
13:35:25 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
13:35:25 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
13:35:25 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
13:35:25 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
13:35:25 SQL> -- models.
13:35:25 SQL> --
13:35:25 SQL> 
13:35:25 SQL> -- Do this once and then comment it out.
13:35:25 SQL> -- That makes script go faster.
13:35:25 SQL> -- BEGIN
13:35:25 SQL> -- -- Populate settings table
13:35:25 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:35:25 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
13:35:25 SQL> --
13:35:25 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:35:25 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
13:35:25 SQL> --
13:35:25 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
13:35:25 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
13:35:25 SQL> --   COMMIT;
13:35:25 SQL> -- END;
13:35:25 SQL> -- /
13:35:25 SQL> 
13:35:25 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
13:35:25 SQL> 
13:35:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
13:35:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:35:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
13:35:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
13:35:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:35:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:35:25 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
13:35:25   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:35:25   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:35:26 SQL> 
13:35:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
13:35:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:35:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:35:26 SQL> 
13:35:26 SQL> --------------------------------
13:35:26 SQL> -- PREPARE BUILD (TRAINING) DATA
13:35:26 SQL> --
13:35:26 SQL> 
13:35:26 SQL> -- 1. Missing Value treatment for all Predictors and
13:35:26 SQL> -- 2. Outlier Treatment and
13:35:26 SQL> -- 3. Normalization are performed below.
13:35:26 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
13:35:26 SQL> --    normalized here.
13:35:26 SQL> 
13:35:26 SQL> BEGIN
13:35:26   2  	-- Perform missing value treatment for all predictors
13:35:26   3  	-- create miss tables
13:35:26   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
13:35:26   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
13:35:26   6  
13:35:26   7  	-- populate miss tables
13:35:26   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
13:35:26   9  	  miss_table_name => 'svmc_miss_num',
13:35:26  10  	  data_table_name => '&bldtable',
13:35:26  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:35:26  12  
13:35:26  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
13:35:26  14  	  miss_table_name => 'svmc_miss_cat',
13:35:26  15  	  data_table_name => '&bldtable',
13:35:26  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:35:26  17  
13:35:26  18  	-- xform input data to replace missing values
13:35:26  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:35:26  20  	  miss_table_name => 'svmc_miss_num',
13:35:26  21  	  data_table_name => '&bldtable',
13:35:26  22  	  xform_view_name => 'xformed_build_miss_num');
13:35:26  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:35:26  24  	  miss_table_name => 'svmc_miss_cat',
13:35:26  25  	  data_table_name => '&bldtable',
13:35:26  26  	  xform_view_name => 'xformed_build_miss_cat');
13:35:26  27  
13:35:26  28  	-- Perform outlier treatment.
13:35:26  29  	-- create clip table
13:35:26  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
13:35:26  31  
13:35:26  32  	-- populate clip table
13:35:26  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
13:35:26  34  	  clip_table_name => 'svmc_clip',
13:35:26  35  	  data_table_name => '&bldtable',
13:35:26  36  	  tail_frac	  => 0.025,
13:35:26  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:35:26  38  
13:35:26  39  	-- xform input data to winsorized data
13:35:26  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
13:35:26  41  	  clip_table_name => 'svmc_clip',
13:35:26  42  	  data_table_name => '&bldtable',
13:35:26  43  	  xform_view_name => 'svmc_winsor');
13:35:26  44  
13:35:26  45  	-- create normalization table
13:35:26  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
13:35:26  47  
13:35:26  48  	-- populate normalization table based on winsorized data
13:35:26  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
13:35:26  50  	  norm_table_name => 'svmc_norm',
13:35:26  51  	  data_table_name => 'svmc_winsor',
13:35:26  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
13:35:26  53  
13:35:26  54  	-- normalize the original data
13:35:26  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:35:26  56  	  norm_table_name => 'svmc_norm',
13:35:26  57  	  data_table_name => '&bldtable',
13:35:26  58  	  xform_view_name => 'svmc_build_prep');
13:35:26  59  END;
13:35:26  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.82
13:35:43 SQL> 
13:35:43 SQL> ---------------------
13:35:43 SQL> -- CREATE A NEW MODEL
13:35:43 SQL> --
13:35:43 SQL> -- Cleanup old model with the same name for repeat runs
13:35:43 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
13:35:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:35:43   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.98
13:35:44 SQL> 
13:35:44 SQL> -- Build a new SVM Model
13:35:44 SQL> BEGIN
13:35:44   2  	DBMS_DATA_MINING.CREATE_MODEL(
13:35:44   3  	  model_name	      => '&model_name',
13:35:44   4  	  mining_function     => dbms_data_mining.classification,
13:35:44   5  	  data_table_name     => 'svmc_build_prep',
13:35:44   6  	  case_id_column_name => '&case_id',
13:35:44   7  	  target_column_name  => '&target',
13:35:44   8  	  settings_table_name => 'svmc_settings');
13:35:44   9  END;
13:35:44  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.23
13:36:12 SQL> 
13:36:12 SQL> -----------------------------------------------------------------------
13:36:12 SQL> --			       APPLY/score THE MODEL
13:36:12 SQL> -----------------------------------------------------------------------
13:36:12 SQL> 
13:36:12 SQL> -- Cleanup old scoring data preparation objects for repeat runs
13:36:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
13:36:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:36:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
13:36:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
13:36:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:36:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:36:12 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
13:36:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
13:36:12   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
13:36:12 SQL> -----------------------
13:36:12 SQL> -- PREPARE SCORING DATA
13:36:12 SQL> --
13:36:12 SQL> -- If the data for model creation has been prepared, then the data
13:36:12 SQL> -- to be scored using the model must be prepared in the same manner
13:36:12 SQL> -- in order to obtain meaningful results.
13:36:12 SQL> --
13:36:12 SQL> -- 1. Missing Value treatment for all Predictors and
13:36:12 SQL> -- 2. Normalization
13:36:12 SQL> -- No outlier treatment will be performed during test and apply. The
13:36:12 SQL> -- normalization step is sufficient, since the normalization parameters
13:36:12 SQL> -- already capture the effects of outlier treatment done with build data.
13:36:12 SQL> --
13:36:12 SQL> BEGIN
13:36:12   2  	-- Xform Test data to replace missing values
13:36:12   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
13:36:12   4  	  miss_table_name => 'svmc_miss_num',
13:36:12   5  	  data_table_name => '&scoretable',
13:36:12   6  	  xform_view_name => 'xformed_apply_miss_num');
13:36:12   7  
13:36:12   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
13:36:12   9  	  miss_table_name => 'svmc_miss_cat',
13:36:12  10  	  data_table_name => '&scoretable',
13:36:12  11  	  xform_view_name => 'xformed_apply_miss_cat');
13:36:12  12  
13:36:12  13  	-- Normalize the data to be scored
13:36:12  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
13:36:12  15  	  norm_table_name => 'svmc_norm',
13:36:12  16  	  data_table_name => '&scoretable',
13:36:12  17  	  xform_view_name => 'svmc_apply_prep');
13:36:12  18  END;
13:36:12  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
13:36:13 SQL> 
13:36:13 SQL> -- Use same model_name used in score_gattn.sql
13:36:13 SQL> DEFINE model_name = 'forex14'
13:36:13 SQL> 
13:36:13 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
13:36:13 SQL> 
13:36:13 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
13:36:13   2  SELECT
13:36:13   3  prdate
13:36:13   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
13:36:13   5  ,sysdate
13:36:13   6  ,SUBSTR(prdate,1,3)pair
13:36:13   7  ,SUBSTR(prdate,4,19)ydate
13:36:13   8  FROM svmc_apply_prep
13:36:13   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
13:36:13 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
