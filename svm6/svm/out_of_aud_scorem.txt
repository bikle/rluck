
SQL*Plus: Release 11.2.0.1.0 Production on Tue Dec 28 18:22:42 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

18:22:42 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.01
18:22:42 SQL> 18:22:42 SQL> @aud_score1day.sql  2010-12-28 18:00:00
18:22:42 SQL> --
18:22:42 SQL> -- aud_score1day.sql
18:22:42 SQL> --
18:22:42 SQL> 
18:22:42 SQL> CREATE OR REPLACE VIEW sme AS
18:22:42   2  SELECT
18:22:42   3  'aud'||m.ydate prdate
18:22:42   4  ,NULL gatt
18:22:42   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:22:42   6  ,eur_g00
18:22:42   7  ,eur_g01
18:22:42   8  ,eur_g02
18:22:42   9  ,eur_g03
18:22:42  10  ,eur_g04
18:22:42  11  ,eur_g05
18:22:42  12  ,eur_g06
18:22:42  13  ,eur_g07
18:22:42  14  ,eur_g08
18:22:42  15  ,eur_g09
18:22:42  16  ,eur_g10
18:22:42  17  ,eur_g11
18:22:42  18  ,eur_g12
18:22:42  19  ,eur_g13
18:22:42  20  ,eur_g14
18:22:42  21  ,eur_g15
18:22:42  22  ,eur_g16
18:22:42  23  ,eur_g17
18:22:42  24  ,eur_g18
18:22:42  25  ,eur_g19
18:22:42  26  ,eur_g20
18:22:42  27  ,eur_g21
18:22:42  28  ,eur_g22
18:22:42  29  ,eur_g23
18:22:42  30  ,eur_g24
18:22:42  31  ,eur_g25
18:22:42  32  ,eur_g26
18:22:42  33  ,eur_g27
18:22:42  34  ,eur_g28
18:22:42  35  ,eur_g29
18:22:42  36  ,eur_g30
18:22:42  37  ,eur_g31
18:22:42  38  ,eur_g32
18:22:42  39  ,eur_g33
18:22:42  40  ,eur_g34
18:22:42  41  ,eur_g35
18:22:42  42  ,eur_g36
18:22:42  43  ,eur_g37
18:22:42  44  ,eur_g38
18:22:42  45  ,eur_g39
18:22:42  46  ,eur_g40
18:22:42  47  ,eur_g41
18:22:42  48  ,aud_g00
18:22:42  49  ,aud_g01
18:22:42  50  ,aud_g02
18:22:42  51  ,aud_g03
18:22:42  52  ,aud_g04
18:22:42  53  ,aud_g05
18:22:42  54  ,aud_g06
18:22:42  55  ,aud_g07
18:22:42  56  ,aud_g08
18:22:42  57  ,aud_g09
18:22:42  58  ,aud_g10
18:22:42  59  ,aud_g11
18:22:42  60  ,aud_g12
18:22:42  61  ,aud_g13
18:22:42  62  ,aud_g14
18:22:42  63  ,aud_g15
18:22:42  64  ,aud_g16
18:22:42  65  ,aud_g17
18:22:42  66  ,aud_g18
18:22:42  67  ,aud_g19
18:22:42  68  ,aud_g20
18:22:42  69  ,aud_g21
18:22:42  70  ,aud_g22
18:22:42  71  ,aud_g23
18:22:42  72  ,aud_g24
18:22:42  73  ,aud_g25
18:22:42  74  ,aud_g26
18:22:42  75  ,aud_g27
18:22:42  76  ,aud_g28
18:22:42  77  ,aud_g29
18:22:42  78  ,aud_g30
18:22:42  79  ,aud_g31
18:22:42  80  ,aud_g32
18:22:42  81  ,aud_g33
18:22:42  82  ,aud_g34
18:22:42  83  ,aud_g35
18:22:42  84  ,aud_g36
18:22:42  85  ,aud_g37
18:22:42  86  ,aud_g38
18:22:42  87  ,aud_g39
18:22:42  88  ,aud_g40
18:22:42  89  ,aud_g41
18:22:42  90  ,gbp_g00
18:22:42  91  ,gbp_g01
18:22:42  92  ,gbp_g02
18:22:42  93  ,gbp_g03
18:22:42  94  ,gbp_g04
18:22:42  95  ,gbp_g05
18:22:42  96  ,gbp_g06
18:22:42  97  ,gbp_g07
18:22:42  98  ,gbp_g08
18:22:42  99  ,gbp_g09
18:22:42 100  ,gbp_g10
18:22:42 101  ,gbp_g11
18:22:42 102  ,gbp_g12
18:22:42 103  ,gbp_g13
18:22:42 104  ,gbp_g14
18:22:42 105  ,gbp_g15
18:22:42 106  ,gbp_g16
18:22:42 107  ,gbp_g17
18:22:42 108  ,gbp_g18
18:22:42 109  ,gbp_g19
18:22:42 110  ,gbp_g20
18:22:42 111  ,gbp_g21
18:22:42 112  ,gbp_g22
18:22:42 113  ,gbp_g23
18:22:42 114  ,gbp_g24
18:22:42 115  ,gbp_g25
18:22:42 116  ,gbp_g26
18:22:42 117  ,gbp_g27
18:22:42 118  ,gbp_g28
18:22:42 119  ,gbp_g29
18:22:42 120  ,gbp_g30
18:22:42 121  ,gbp_g31
18:22:42 122  ,gbp_g32
18:22:42 123  ,gbp_g33
18:22:42 124  ,gbp_g34
18:22:42 125  ,gbp_g35
18:22:42 126  ,gbp_g36
18:22:42 127  ,gbp_g37
18:22:42 128  ,gbp_g38
18:22:42 129  ,gbp_g39
18:22:42 130  ,gbp_g40
18:22:42 131  ,gbp_g41
18:22:42 132  ,jpy_g00
18:22:42 133  ,jpy_g01
18:22:42 134  ,jpy_g02
18:22:42 135  ,jpy_g03
18:22:42 136  ,jpy_g04
18:22:42 137  ,jpy_g05
18:22:42 138  ,jpy_g06
18:22:42 139  ,jpy_g07
18:22:42 140  ,jpy_g08
18:22:42 141  ,jpy_g09
18:22:42 142  ,jpy_g10
18:22:42 143  ,jpy_g11
18:22:42 144  ,jpy_g12
18:22:42 145  ,jpy_g13
18:22:42 146  ,jpy_g14
18:22:42 147  ,jpy_g15
18:22:42 148  ,jpy_g16
18:22:42 149  ,jpy_g17
18:22:42 150  ,jpy_g18
18:22:42 151  ,jpy_g19
18:22:42 152  ,jpy_g20
18:22:42 153  ,jpy_g21
18:22:42 154  ,jpy_g22
18:22:42 155  ,jpy_g23
18:22:42 156  ,jpy_g24
18:22:42 157  ,jpy_g25
18:22:42 158  ,jpy_g26
18:22:42 159  ,jpy_g27
18:22:42 160  ,jpy_g28
18:22:42 161  ,jpy_g29
18:22:42 162  ,jpy_g30
18:22:42 163  ,jpy_g31
18:22:42 164  ,jpy_g32
18:22:42 165  ,jpy_g33
18:22:42 166  ,jpy_g34
18:22:42 167  ,jpy_g35
18:22:42 168  ,jpy_g36
18:22:42 169  ,jpy_g37
18:22:42 170  ,jpy_g38
18:22:42 171  ,jpy_g39
18:22:42 172  ,jpy_g40
18:22:42 173  ,jpy_g41
18:22:42 174  ,cad_g00
18:22:42 175  ,cad_g01
18:22:42 176  ,cad_g02
18:22:42 177  ,cad_g03
18:22:42 178  ,cad_g04
18:22:42 179  ,cad_g05
18:22:42 180  ,cad_g06
18:22:42 181  ,cad_g07
18:22:42 182  ,cad_g08
18:22:42 183  ,cad_g09
18:22:42 184  ,cad_g10
18:22:42 185  ,cad_g11
18:22:42 186  ,cad_g12
18:22:42 187  ,cad_g13
18:22:42 188  ,cad_g14
18:22:42 189  ,cad_g15
18:22:42 190  ,cad_g16
18:22:42 191  ,cad_g17
18:22:42 192  ,cad_g18
18:22:42 193  ,cad_g19
18:22:42 194  ,cad_g20
18:22:42 195  ,cad_g21
18:22:42 196  ,cad_g22
18:22:42 197  ,cad_g23
18:22:42 198  ,cad_g24
18:22:42 199  ,cad_g25
18:22:42 200  ,cad_g26
18:22:42 201  ,cad_g27
18:22:42 202  ,cad_g28
18:22:42 203  ,cad_g29
18:22:42 204  ,cad_g30
18:22:42 205  ,cad_g31
18:22:42 206  ,cad_g32
18:22:42 207  ,cad_g33
18:22:42 208  ,cad_g34
18:22:42 209  ,cad_g35
18:22:42 210  ,cad_g36
18:22:42 211  ,cad_g37
18:22:42 212  ,cad_g38
18:22:42 213  ,cad_g39
18:22:42 214  ,cad_g40
18:22:42 215  ,cad_g41
18:22:42 216  ,chf_g00
18:22:42 217  ,chf_g01
18:22:42 218  ,chf_g02
18:22:42 219  ,chf_g03
18:22:42 220  ,chf_g04
18:22:42 221  ,chf_g05
18:22:42 222  ,chf_g06
18:22:42 223  ,chf_g07
18:22:42 224  ,chf_g08
18:22:42 225  ,chf_g09
18:22:42 226  ,chf_g10
18:22:42 227  ,chf_g11
18:22:42 228  ,chf_g12
18:22:42 229  ,chf_g13
18:22:42 230  ,chf_g14
18:22:42 231  ,chf_g15
18:22:42 232  ,chf_g16
18:22:42 233  ,chf_g17
18:22:42 234  ,chf_g18
18:22:42 235  ,chf_g19
18:22:42 236  ,chf_g20
18:22:42 237  ,chf_g21
18:22:42 238  ,chf_g22
18:22:42 239  ,chf_g23
18:22:42 240  ,chf_g24
18:22:42 241  ,chf_g25
18:22:42 242  ,chf_g26
18:22:42 243  ,chf_g27
18:22:42 244  ,chf_g28
18:22:42 245  ,chf_g29
18:22:42 246  ,chf_g30
18:22:42 247  ,chf_g31
18:22:42 248  ,chf_g32
18:22:42 249  ,chf_g33
18:22:42 250  ,chf_g34
18:22:42 251  ,chf_g35
18:22:42 252  ,chf_g36
18:22:42 253  ,chf_g37
18:22:42 254  ,chf_g38
18:22:42 255  ,chf_g39
18:22:42 256  ,chf_g40
18:22:42 257  ,chf_g41
18:22:42 258  FROM aud_ms6 m
18:22:42 259  WHERE m.ydate = '&1'||' '||'&2'
18:22:42 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'18:00:00'

View created.

Elapsed: 00:00:00.13
18:22:42 SQL> 
18:22:42 SQL> -- rpt
18:22:42 SQL> -- We should see just 1 row:
18:22:42 SQL> 
18:22:42 SQL> SELECT COUNT(prdate) FROM sme
18:22:42   2  
18:22:42 SQL> -- Build the model:
18:22:42 SQL> CREATE OR REPLACE VIEW bme AS
18:22:42   2  SELECT
18:22:42   3  'aud'||m.ydate prdate
18:22:42   4  ,gatt
18:22:42   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:22:42   6  ,eur_g00
18:22:42   7  ,eur_g01
18:22:42   8  ,eur_g02
18:22:42   9  ,eur_g03
18:22:42  10  ,eur_g04
18:22:42  11  ,eur_g05
18:22:42  12  ,eur_g06
18:22:42  13  ,eur_g07
18:22:42  14  ,eur_g08
18:22:42  15  ,eur_g09
18:22:42  16  ,eur_g10
18:22:42  17  ,eur_g11
18:22:42  18  ,eur_g12
18:22:42  19  ,eur_g13
18:22:42  20  ,eur_g14
18:22:42  21  ,eur_g15
18:22:42  22  ,eur_g16
18:22:42  23  ,eur_g17
18:22:42  24  ,eur_g18
18:22:42  25  ,eur_g19
18:22:42  26  ,eur_g20
18:22:42  27  ,eur_g21
18:22:42  28  ,eur_g22
18:22:42  29  ,eur_g23
18:22:42  30  ,eur_g24
18:22:42  31  ,eur_g25
18:22:42  32  ,eur_g26
18:22:42  33  ,eur_g27
18:22:42  34  ,eur_g28
18:22:42  35  ,eur_g29
18:22:42  36  ,eur_g30
18:22:42  37  ,eur_g31
18:22:42  38  ,eur_g32
18:22:42  39  ,eur_g33
18:22:42  40  ,eur_g34
18:22:42  41  ,eur_g35
18:22:42  42  ,eur_g36
18:22:42  43  ,eur_g37
18:22:42  44  ,eur_g38
18:22:42  45  ,eur_g39
18:22:42  46  ,eur_g40
18:22:42  47  ,eur_g41
18:22:42  48  ,aud_g00
18:22:42  49  ,aud_g01
18:22:42  50  ,aud_g02
18:22:42  51  ,aud_g03
18:22:42  52  ,aud_g04
18:22:42  53  ,aud_g05
18:22:42  54  ,aud_g06
18:22:42  55  ,aud_g07
18:22:42  56  ,aud_g08
18:22:42  57  ,aud_g09
18:22:42  58  ,aud_g10
18:22:42  59  ,aud_g11
18:22:42  60  ,aud_g12
18:22:42  61  ,aud_g13
18:22:42  62  ,aud_g14
18:22:42  63  ,aud_g15
18:22:42  64  ,aud_g16
18:22:42  65  ,aud_g17
18:22:42  66  ,aud_g18
18:22:42  67  ,aud_g19
18:22:42  68  ,aud_g20
18:22:42  69  ,aud_g21
18:22:42  70  ,aud_g22
18:22:42  71  ,aud_g23
18:22:42  72  ,aud_g24
18:22:42  73  ,aud_g25
18:22:42  74  ,aud_g26
18:22:42  75  ,aud_g27
18:22:42  76  ,aud_g28
18:22:42  77  ,aud_g29
18:22:42  78  ,aud_g30
18:22:42  79  ,aud_g31
18:22:42  80  ,aud_g32
18:22:42  81  ,aud_g33
18:22:42  82  ,aud_g34
18:22:42  83  ,aud_g35
18:22:42  84  ,aud_g36
18:22:42  85  ,aud_g37
18:22:42  86  ,aud_g38
18:22:42  87  ,aud_g39
18:22:42  88  ,aud_g40
18:22:42  89  ,aud_g41
18:22:42  90  ,gbp_g00
18:22:42  91  ,gbp_g01
18:22:42  92  ,gbp_g02
18:22:42  93  ,gbp_g03
18:22:42  94  ,gbp_g04
18:22:42  95  ,gbp_g05
18:22:42  96  ,gbp_g06
18:22:42  97  ,gbp_g07
18:22:42  98  ,gbp_g08
18:22:42  99  ,gbp_g09
18:22:42 100  ,gbp_g10
18:22:42 101  ,gbp_g11
18:22:42 102  ,gbp_g12
18:22:42 103  ,gbp_g13
18:22:42 104  ,gbp_g14
18:22:42 105  ,gbp_g15
18:22:42 106  ,gbp_g16
18:22:42 107  ,gbp_g17
18:22:42 108  ,gbp_g18
18:22:42 109  ,gbp_g19
18:22:42 110  ,gbp_g20
18:22:42 111  ,gbp_g21
18:22:42 112  ,gbp_g22
18:22:42 113  ,gbp_g23
18:22:42 114  ,gbp_g24
18:22:42 115  ,gbp_g25
18:22:42 116  ,gbp_g26
18:22:42 117  ,gbp_g27
18:22:42 118  ,gbp_g28
18:22:42 119  ,gbp_g29
18:22:42 120  ,gbp_g30
18:22:42 121  ,gbp_g31
18:22:42 122  ,gbp_g32
18:22:42 123  ,gbp_g33
18:22:42 124  ,gbp_g34
18:22:42 125  ,gbp_g35
18:22:42 126  ,gbp_g36
18:22:42 127  ,gbp_g37
18:22:42 128  ,gbp_g38
18:22:42 129  ,gbp_g39
18:22:42 130  ,gbp_g40
18:22:42 131  ,gbp_g41
18:22:42 132  ,jpy_g00
18:22:42 133  ,jpy_g01
18:22:42 134  ,jpy_g02
18:22:42 135  ,jpy_g03
18:22:42 136  ,jpy_g04
18:22:42 137  ,jpy_g05
18:22:42 138  ,jpy_g06
18:22:42 139  ,jpy_g07
18:22:42 140  ,jpy_g08
18:22:42 141  ,jpy_g09
18:22:42 142  ,jpy_g10
18:22:42 143  ,jpy_g11
18:22:42 144  ,jpy_g12
18:22:42 145  ,jpy_g13
18:22:42 146  ,jpy_g14
18:22:42 147  ,jpy_g15
18:22:42 148  ,jpy_g16
18:22:42 149  ,jpy_g17
18:22:42 150  ,jpy_g18
18:22:42 151  ,jpy_g19
18:22:42 152  ,jpy_g20
18:22:42 153  ,jpy_g21
18:22:42 154  ,jpy_g22
18:22:42 155  ,jpy_g23
18:22:42 156  ,jpy_g24
18:22:42 157  ,jpy_g25
18:22:42 158  ,jpy_g26
18:22:42 159  ,jpy_g27
18:22:42 160  ,jpy_g28
18:22:42 161  ,jpy_g29
18:22:42 162  ,jpy_g30
18:22:42 163  ,jpy_g31
18:22:42 164  ,jpy_g32
18:22:42 165  ,jpy_g33
18:22:42 166  ,jpy_g34
18:22:42 167  ,jpy_g35
18:22:42 168  ,jpy_g36
18:22:42 169  ,jpy_g37
18:22:42 170  ,jpy_g38
18:22:42 171  ,jpy_g39
18:22:42 172  ,jpy_g40
18:22:42 173  ,jpy_g41
18:22:42 174  ,cad_g00
18:22:42 175  ,cad_g01
18:22:42 176  ,cad_g02
18:22:42 177  ,cad_g03
18:22:42 178  ,cad_g04
18:22:42 179  ,cad_g05
18:22:42 180  ,cad_g06
18:22:42 181  ,cad_g07
18:22:42 182  ,cad_g08
18:22:42 183  ,cad_g09
18:22:42 184  ,cad_g10
18:22:42 185  ,cad_g11
18:22:42 186  ,cad_g12
18:22:42 187  ,cad_g13
18:22:42 188  ,cad_g14
18:22:42 189  ,cad_g15
18:22:42 190  ,cad_g16
18:22:42 191  ,cad_g17
18:22:42 192  ,cad_g18
18:22:42 193  ,cad_g19
18:22:42 194  ,cad_g20
18:22:42 195  ,cad_g21
18:22:42 196  ,cad_g22
18:22:42 197  ,cad_g23
18:22:42 198  ,cad_g24
18:22:42 199  ,cad_g25
18:22:42 200  ,cad_g26
18:22:42 201  ,cad_g27
18:22:42 202  ,cad_g28
18:22:42 203  ,cad_g29
18:22:42 204  ,cad_g30
18:22:42 205  ,cad_g31
18:22:42 206  ,cad_g32
18:22:42 207  ,cad_g33
18:22:42 208  ,cad_g34
18:22:42 209  ,cad_g35
18:22:42 210  ,cad_g36
18:22:42 211  ,cad_g37
18:22:42 212  ,cad_g38
18:22:42 213  ,cad_g39
18:22:42 214  ,cad_g40
18:22:42 215  ,cad_g41
18:22:42 216  ,chf_g00
18:22:42 217  ,chf_g01
18:22:42 218  ,chf_g02
18:22:42 219  ,chf_g03
18:22:42 220  ,chf_g04
18:22:42 221  ,chf_g05
18:22:42 222  ,chf_g06
18:22:42 223  ,chf_g07
18:22:42 224  ,chf_g08
18:22:42 225  ,chf_g09
18:22:42 226  ,chf_g10
18:22:42 227  ,chf_g11
18:22:42 228  ,chf_g12
18:22:42 229  ,chf_g13
18:22:42 230  ,chf_g14
18:22:42 231  ,chf_g15
18:22:42 232  ,chf_g16
18:22:42 233  ,chf_g17
18:22:42 234  ,chf_g18
18:22:42 235  ,chf_g19
18:22:42 236  ,chf_g20
18:22:42 237  ,chf_g21
18:22:42 238  ,chf_g22
18:22:42 239  ,chf_g23
18:22:42 240  ,chf_g24
18:22:42 241  ,chf_g25
18:22:42 242  ,chf_g26
18:22:42 243  ,chf_g27
18:22:42 244  ,chf_g28
18:22:42 245  ,chf_g29
18:22:42 246  ,chf_g30
18:22:42 247  ,chf_g31
18:22:42 248  ,chf_g32
18:22:42 249  ,chf_g33
18:22:42 250  ,chf_g34
18:22:42 251  ,chf_g35
18:22:42 252  ,chf_g36
18:22:42 253  ,chf_g37
18:22:42 254  ,chf_g38
18:22:42 255  ,chf_g39
18:22:42 256  ,chf_g40
18:22:42 257  ,chf_g41
18:22:42 258  FROM aud_ms6 m
18:22:42 259  WHERE gatt IN('nup','up')
18:22:42 260  AND 1+m.ydate < '&1'||' '||'&2'
18:22:42 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'18:00:00'

View created.

Elapsed: 00:00:00.15
18:22:42 SQL> 
18:22:42 SQL> -- rpt
18:22:42 SQL> 
18:22:42 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
18:22:42   2  
18:22:42 SQL> SELECT MAX(prdate) FROM bme
18:22:42   2  
18:22:42 SQL> -- Now build model from bme and score sme
18:22:42 SQL> @score1.sql
18:22:42 SQL> -- score1.sql
18:22:42 SQL> 
18:22:42 SQL> -- Does the 1st SVM score
18:22:42 SQL> 
18:22:42 SQL> -- Fill up svmc_apply_prep
18:22:42 SQL> @score.sql
18:22:42 SQL> --
18:22:42 SQL> -- score.sql
18:22:42 SQL> --
18:22:42 SQL> 
18:22:42 SQL> -- usage: score.sql
18:22:42 SQL> 
18:22:42 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
18:22:42 SQL> 
18:22:42 SQL> DEFINE target	= 'gatt'
18:22:42 SQL> DEFINE model_name = 'forex14'
18:22:42 SQL> DEFINE bldtable	= 'bme'
18:22:42 SQL> DEFINE scoretable = 'sme'
18:22:42 SQL> DEFINE case_id	= 'prdate'
18:22:42 SQL> 
18:22:42 SQL> -- Define a variable to help me exclude some columns from some data mining calls
18:22:42 SQL> DEFINE exclude1 = "'&target','&case_id'"
18:22:42 SQL> 
18:22:42 SQL> -- Builds an SVM model using pl/sql.
18:22:42 SQL> 
18:22:42 SQL> -----------------------------------------------------------------------
18:22:42 SQL> --			    BUILD THE MODEL
18:22:42 SQL> -----------------------------------------------------------------------
18:22:42 SQL> 
18:22:42 SQL> -- Cleanup old build data preparation objects for repeat runs
18:22:42 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
18:22:42 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
18:22:42 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
18:22:42 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
18:22:42 SQL> 
18:22:42 SQL> 
18:22:42 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
18:22:42 SQL> --
18:22:42 SQL> -- DROP	TABLE svmc_settings ;
18:22:42 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
18:22:42 SQL> -- DELETE svmc_settings;
18:22:42 SQL> 
18:22:42 SQL> -- The default classification algorithm is Naive Bayes. So override
18:22:42 SQL> -- this choice to SVM using a settings table.
18:22:42 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
18:22:42 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
18:22:42 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
18:22:42 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
18:22:42 SQL> -- models.
18:22:42 SQL> --
18:22:42 SQL> 
18:22:42 SQL> -- Do this once and then comment it out.
18:22:42 SQL> -- That makes script go faster.
18:22:42 SQL> -- BEGIN
18:22:42 SQL> -- -- Populate settings table
18:22:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:22:42 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
18:22:42 SQL> --
18:22:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:22:42 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
18:22:42 SQL> --
18:22:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:22:42 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
18:22:42 SQL> --   COMMIT;
18:22:42 SQL> -- END;
18:22:42 SQL> -- /
18:22:42 SQL> 
18:22:42 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
18:22:42 SQL> 
18:22:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
18:22:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:22:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
18:22:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
18:22:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:22:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:22:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
18:22:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:22:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
18:22:43 SQL> 
18:22:43 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
18:22:43   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:22:43   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:22:43 SQL> 
18:22:43 SQL> --------------------------------
18:22:43 SQL> -- PREPARE BUILD (TRAINING) DATA
18:22:43 SQL> --
18:22:43 SQL> 
18:22:43 SQL> -- 1. Missing Value treatment for all Predictors and
18:22:43 SQL> -- 2. Outlier Treatment and
18:22:43 SQL> -- 3. Normalization are performed below.
18:22:43 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
18:22:43 SQL> --    normalized here.
18:22:43 SQL> 
18:22:43 SQL> BEGIN
18:22:43   2  	-- Perform missing value treatment for all predictors
18:22:43   3  	-- create miss tables
18:22:43   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
18:22:43   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
18:22:43   6  
18:22:43   7  	-- populate miss tables
18:22:43   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
18:22:43   9  	  miss_table_name => 'svmc_miss_num',
18:22:43  10  	  data_table_name => '&bldtable',
18:22:43  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:22:43  12  
18:22:43  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
18:22:43  14  	  miss_table_name => 'svmc_miss_cat',
18:22:43  15  	  data_table_name => '&bldtable',
18:22:43  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:22:43  17  
18:22:43  18  	-- xform input data to replace missing values
18:22:43  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:22:43  20  	  miss_table_name => 'svmc_miss_num',
18:22:43  21  	  data_table_name => '&bldtable',
18:22:43  22  	  xform_view_name => 'xformed_build_miss_num');
18:22:43  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:22:43  24  	  miss_table_name => 'svmc_miss_cat',
18:22:43  25  	  data_table_name => '&bldtable',
18:22:43  26  	  xform_view_name => 'xformed_build_miss_cat');
18:22:43  27  
18:22:43  28  	-- Perform outlier treatment.
18:22:43  29  	-- create clip table
18:22:43  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
18:22:43  31  
18:22:43  32  	-- populate clip table
18:22:43  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
18:22:43  34  	  clip_table_name => 'svmc_clip',
18:22:43  35  	  data_table_name => '&bldtable',
18:22:43  36  	  tail_frac	  => 0.025,
18:22:43  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:22:43  38  
18:22:43  39  	-- xform input data to winsorized data
18:22:43  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
18:22:43  41  	  clip_table_name => 'svmc_clip',
18:22:43  42  	  data_table_name => '&bldtable',
18:22:43  43  	  xform_view_name => 'svmc_winsor');
18:22:43  44  
18:22:43  45  	-- create normalization table
18:22:43  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
18:22:43  47  
18:22:43  48  	-- populate normalization table based on winsorized data
18:22:43  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
18:22:43  50  	  norm_table_name => 'svmc_norm',
18:22:43  51  	  data_table_name => 'svmc_winsor',
18:22:43  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:22:43  53  
18:22:43  54  	-- normalize the original data
18:22:43  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:22:43  56  	  norm_table_name => 'svmc_norm',
18:22:43  57  	  data_table_name => '&bldtable',
18:22:43  58  	  xform_view_name => 'svmc_build_prep');
18:22:43  59  END;
18:22:43  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.61
18:23:00 SQL> 
18:23:00 SQL> ---------------------
18:23:00 SQL> -- CREATE A NEW MODEL
18:23:00 SQL> --
18:23:00 SQL> -- Cleanup old model with the same name for repeat runs
18:23:00 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
18:23:00   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:23:00   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.55
18:23:01 SQL> 
18:23:01 SQL> -- Build a new SVM Model
18:23:01 SQL> BEGIN
18:23:01   2  	DBMS_DATA_MINING.CREATE_MODEL(
18:23:01   3  	  model_name	      => '&model_name',
18:23:01   4  	  mining_function     => dbms_data_mining.classification,
18:23:01   5  	  data_table_name     => 'svmc_build_prep',
18:23:01   6  	  case_id_column_name => '&case_id',
18:23:01   7  	  target_column_name  => '&target',
18:23:01   8  	  settings_table_name => 'svmc_settings');
18:23:01   9  END;
18:23:01  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.98
18:23:28 SQL> 
18:23:28 SQL> -----------------------------------------------------------------------
18:23:28 SQL> --			       APPLY/score THE MODEL
18:23:28 SQL> -----------------------------------------------------------------------
18:23:28 SQL> 
18:23:28 SQL> -- Cleanup old scoring data preparation objects for repeat runs
18:23:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
18:23:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:23:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
18:23:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
18:23:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:23:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:23:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
18:23:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:23:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:23:28 SQL> -----------------------
18:23:28 SQL> -- PREPARE SCORING DATA
18:23:28 SQL> --
18:23:28 SQL> -- If the data for model creation has been prepared, then the data
18:23:28 SQL> -- to be scored using the model must be prepared in the same manner
18:23:28 SQL> -- in order to obtain meaningful results.
18:23:28 SQL> --
18:23:28 SQL> -- 1. Missing Value treatment for all Predictors and
18:23:28 SQL> -- 2. Normalization
18:23:28 SQL> -- No outlier treatment will be performed during test and apply. The
18:23:28 SQL> -- normalization step is sufficient, since the normalization parameters
18:23:28 SQL> -- already capture the effects of outlier treatment done with build data.
18:23:28 SQL> --
18:23:28 SQL> BEGIN
18:23:28   2  	-- Xform Test data to replace missing values
18:23:28   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:23:28   4  	  miss_table_name => 'svmc_miss_num',
18:23:28   5  	  data_table_name => '&scoretable',
18:23:28   6  	  xform_view_name => 'xformed_apply_miss_num');
18:23:28   7  
18:23:28   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:23:28   9  	  miss_table_name => 'svmc_miss_cat',
18:23:28  10  	  data_table_name => '&scoretable',
18:23:28  11  	  xform_view_name => 'xformed_apply_miss_cat');
18:23:28  12  
18:23:28  13  	-- Normalize the data to be scored
18:23:28  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:23:28  15  	  norm_table_name => 'svmc_norm',
18:23:28  16  	  data_table_name => '&scoretable',
18:23:28  17  	  xform_view_name => 'svmc_apply_prep');
18:23:28  18  END;
18:23:28  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
18:23:29 SQL> 
18:23:29 SQL> -- Use same model_name used in score.sql
18:23:29 SQL> DEFINE model_name = 'forex14'
18:23:29 SQL> 
18:23:29 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
18:23:29 SQL> 
18:23:29 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
18:23:29 SQL> 
18:23:29 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
18:23:29   2  SELECT
18:23:29   3  prdate
18:23:29   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
18:23:29   5  ,sysdate
18:23:29   6  ,SUBSTR(prdate,1,3)pair
18:23:29   7  ,SUBSTR(prdate,4,19)ydate
18:23:29   8  FROM svmc_apply_prep
18:23:29   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
18:23:29 SQL> @aud_score1day.sql  2010-12-28 18:05:00
18:23:29 SQL> --
18:23:29 SQL> -- aud_score1day.sql
18:23:29 SQL> --
18:23:29 SQL> 
18:23:29 SQL> CREATE OR REPLACE VIEW sme AS
18:23:29   2  SELECT
18:23:29   3  'aud'||m.ydate prdate
18:23:29   4  ,NULL gatt
18:23:29   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:23:29   6  ,eur_g00
18:23:29   7  ,eur_g01
18:23:29   8  ,eur_g02
18:23:29   9  ,eur_g03
18:23:29  10  ,eur_g04
18:23:29  11  ,eur_g05
18:23:29  12  ,eur_g06
18:23:29  13  ,eur_g07
18:23:29  14  ,eur_g08
18:23:29  15  ,eur_g09
18:23:29  16  ,eur_g10
18:23:29  17  ,eur_g11
18:23:29  18  ,eur_g12
18:23:29  19  ,eur_g13
18:23:29  20  ,eur_g14
18:23:29  21  ,eur_g15
18:23:29  22  ,eur_g16
18:23:29  23  ,eur_g17
18:23:29  24  ,eur_g18
18:23:29  25  ,eur_g19
18:23:29  26  ,eur_g20
18:23:29  27  ,eur_g21
18:23:29  28  ,eur_g22
18:23:29  29  ,eur_g23
18:23:29  30  ,eur_g24
18:23:29  31  ,eur_g25
18:23:29  32  ,eur_g26
18:23:29  33  ,eur_g27
18:23:29  34  ,eur_g28
18:23:29  35  ,eur_g29
18:23:29  36  ,eur_g30
18:23:29  37  ,eur_g31
18:23:29  38  ,eur_g32
18:23:29  39  ,eur_g33
18:23:29  40  ,eur_g34
18:23:29  41  ,eur_g35
18:23:29  42  ,eur_g36
18:23:29  43  ,eur_g37
18:23:29  44  ,eur_g38
18:23:29  45  ,eur_g39
18:23:29  46  ,eur_g40
18:23:29  47  ,eur_g41
18:23:29  48  ,aud_g00
18:23:29  49  ,aud_g01
18:23:29  50  ,aud_g02
18:23:29  51  ,aud_g03
18:23:29  52  ,aud_g04
18:23:29  53  ,aud_g05
18:23:29  54  ,aud_g06
18:23:29  55  ,aud_g07
18:23:29  56  ,aud_g08
18:23:29  57  ,aud_g09
18:23:29  58  ,aud_g10
18:23:29  59  ,aud_g11
18:23:29  60  ,aud_g12
18:23:29  61  ,aud_g13
18:23:29  62  ,aud_g14
18:23:29  63  ,aud_g15
18:23:29  64  ,aud_g16
18:23:29  65  ,aud_g17
18:23:29  66  ,aud_g18
18:23:29  67  ,aud_g19
18:23:29  68  ,aud_g20
18:23:29  69  ,aud_g21
18:23:29  70  ,aud_g22
18:23:29  71  ,aud_g23
18:23:29  72  ,aud_g24
18:23:29  73  ,aud_g25
18:23:29  74  ,aud_g26
18:23:29  75  ,aud_g27
18:23:29  76  ,aud_g28
18:23:29  77  ,aud_g29
18:23:29  78  ,aud_g30
18:23:29  79  ,aud_g31
18:23:29  80  ,aud_g32
18:23:29  81  ,aud_g33
18:23:29  82  ,aud_g34
18:23:29  83  ,aud_g35
18:23:29  84  ,aud_g36
18:23:29  85  ,aud_g37
18:23:29  86  ,aud_g38
18:23:29  87  ,aud_g39
18:23:29  88  ,aud_g40
18:23:29  89  ,aud_g41
18:23:29  90  ,gbp_g00
18:23:29  91  ,gbp_g01
18:23:29  92  ,gbp_g02
18:23:29  93  ,gbp_g03
18:23:29  94  ,gbp_g04
18:23:29  95  ,gbp_g05
18:23:29  96  ,gbp_g06
18:23:29  97  ,gbp_g07
18:23:29  98  ,gbp_g08
18:23:29  99  ,gbp_g09
18:23:29 100  ,gbp_g10
18:23:29 101  ,gbp_g11
18:23:29 102  ,gbp_g12
18:23:29 103  ,gbp_g13
18:23:29 104  ,gbp_g14
18:23:29 105  ,gbp_g15
18:23:29 106  ,gbp_g16
18:23:29 107  ,gbp_g17
18:23:29 108  ,gbp_g18
18:23:29 109  ,gbp_g19
18:23:29 110  ,gbp_g20
18:23:29 111  ,gbp_g21
18:23:29 112  ,gbp_g22
18:23:29 113  ,gbp_g23
18:23:29 114  ,gbp_g24
18:23:29 115  ,gbp_g25
18:23:29 116  ,gbp_g26
18:23:29 117  ,gbp_g27
18:23:29 118  ,gbp_g28
18:23:29 119  ,gbp_g29
18:23:29 120  ,gbp_g30
18:23:29 121  ,gbp_g31
18:23:29 122  ,gbp_g32
18:23:29 123  ,gbp_g33
18:23:29 124  ,gbp_g34
18:23:29 125  ,gbp_g35
18:23:29 126  ,gbp_g36
18:23:29 127  ,gbp_g37
18:23:29 128  ,gbp_g38
18:23:29 129  ,gbp_g39
18:23:29 130  ,gbp_g40
18:23:29 131  ,gbp_g41
18:23:29 132  ,jpy_g00
18:23:29 133  ,jpy_g01
18:23:29 134  ,jpy_g02
18:23:29 135  ,jpy_g03
18:23:29 136  ,jpy_g04
18:23:29 137  ,jpy_g05
18:23:29 138  ,jpy_g06
18:23:29 139  ,jpy_g07
18:23:29 140  ,jpy_g08
18:23:29 141  ,jpy_g09
18:23:29 142  ,jpy_g10
18:23:29 143  ,jpy_g11
18:23:29 144  ,jpy_g12
18:23:29 145  ,jpy_g13
18:23:29 146  ,jpy_g14
18:23:29 147  ,jpy_g15
18:23:29 148  ,jpy_g16
18:23:29 149  ,jpy_g17
18:23:29 150  ,jpy_g18
18:23:29 151  ,jpy_g19
18:23:29 152  ,jpy_g20
18:23:29 153  ,jpy_g21
18:23:29 154  ,jpy_g22
18:23:29 155  ,jpy_g23
18:23:29 156  ,jpy_g24
18:23:29 157  ,jpy_g25
18:23:29 158  ,jpy_g26
18:23:29 159  ,jpy_g27
18:23:29 160  ,jpy_g28
18:23:29 161  ,jpy_g29
18:23:29 162  ,jpy_g30
18:23:29 163  ,jpy_g31
18:23:29 164  ,jpy_g32
18:23:29 165  ,jpy_g33
18:23:29 166  ,jpy_g34
18:23:29 167  ,jpy_g35
18:23:29 168  ,jpy_g36
18:23:29 169  ,jpy_g37
18:23:29 170  ,jpy_g38
18:23:29 171  ,jpy_g39
18:23:29 172  ,jpy_g40
18:23:29 173  ,jpy_g41
18:23:29 174  ,cad_g00
18:23:29 175  ,cad_g01
18:23:29 176  ,cad_g02
18:23:29 177  ,cad_g03
18:23:29 178  ,cad_g04
18:23:29 179  ,cad_g05
18:23:29 180  ,cad_g06
18:23:29 181  ,cad_g07
18:23:29 182  ,cad_g08
18:23:29 183  ,cad_g09
18:23:29 184  ,cad_g10
18:23:29 185  ,cad_g11
18:23:29 186  ,cad_g12
18:23:29 187  ,cad_g13
18:23:29 188  ,cad_g14
18:23:29 189  ,cad_g15
18:23:29 190  ,cad_g16
18:23:29 191  ,cad_g17
18:23:29 192  ,cad_g18
18:23:29 193  ,cad_g19
18:23:29 194  ,cad_g20
18:23:29 195  ,cad_g21
18:23:29 196  ,cad_g22
18:23:29 197  ,cad_g23
18:23:29 198  ,cad_g24
18:23:29 199  ,cad_g25
18:23:29 200  ,cad_g26
18:23:29 201  ,cad_g27
18:23:29 202  ,cad_g28
18:23:29 203  ,cad_g29
18:23:29 204  ,cad_g30
18:23:29 205  ,cad_g31
18:23:29 206  ,cad_g32
18:23:29 207  ,cad_g33
18:23:29 208  ,cad_g34
18:23:29 209  ,cad_g35
18:23:29 210  ,cad_g36
18:23:29 211  ,cad_g37
18:23:29 212  ,cad_g38
18:23:29 213  ,cad_g39
18:23:29 214  ,cad_g40
18:23:29 215  ,cad_g41
18:23:29 216  ,chf_g00
18:23:29 217  ,chf_g01
18:23:29 218  ,chf_g02
18:23:29 219  ,chf_g03
18:23:29 220  ,chf_g04
18:23:29 221  ,chf_g05
18:23:29 222  ,chf_g06
18:23:29 223  ,chf_g07
18:23:29 224  ,chf_g08
18:23:29 225  ,chf_g09
18:23:29 226  ,chf_g10
18:23:29 227  ,chf_g11
18:23:29 228  ,chf_g12
18:23:29 229  ,chf_g13
18:23:29 230  ,chf_g14
18:23:29 231  ,chf_g15
18:23:29 232  ,chf_g16
18:23:29 233  ,chf_g17
18:23:29 234  ,chf_g18
18:23:29 235  ,chf_g19
18:23:29 236  ,chf_g20
18:23:29 237  ,chf_g21
18:23:29 238  ,chf_g22
18:23:29 239  ,chf_g23
18:23:29 240  ,chf_g24
18:23:29 241  ,chf_g25
18:23:29 242  ,chf_g26
18:23:29 243  ,chf_g27
18:23:29 244  ,chf_g28
18:23:29 245  ,chf_g29
18:23:29 246  ,chf_g30
18:23:29 247  ,chf_g31
18:23:29 248  ,chf_g32
18:23:29 249  ,chf_g33
18:23:29 250  ,chf_g34
18:23:29 251  ,chf_g35
18:23:29 252  ,chf_g36
18:23:29 253  ,chf_g37
18:23:29 254  ,chf_g38
18:23:29 255  ,chf_g39
18:23:29 256  ,chf_g40
18:23:29 257  ,chf_g41
18:23:29 258  FROM aud_ms6 m
18:23:29 259  WHERE m.ydate = '&1'||' '||'&2'
18:23:29 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'18:05:00'

View created.

Elapsed: 00:00:00.14
18:23:30 SQL> 
18:23:30 SQL> -- rpt
18:23:30 SQL> -- We should see just 1 row:
18:23:30 SQL> 
18:23:30 SQL> SELECT COUNT(prdate) FROM sme
18:23:30   2  
18:23:30 SQL> -- Build the model:
18:23:30 SQL> CREATE OR REPLACE VIEW bme AS
18:23:30   2  SELECT
18:23:30   3  'aud'||m.ydate prdate
18:23:30   4  ,gatt
18:23:30   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:23:30   6  ,eur_g00
18:23:30   7  ,eur_g01
18:23:30   8  ,eur_g02
18:23:30   9  ,eur_g03
18:23:30  10  ,eur_g04
18:23:30  11  ,eur_g05
18:23:30  12  ,eur_g06
18:23:30  13  ,eur_g07
18:23:30  14  ,eur_g08
18:23:30  15  ,eur_g09
18:23:30  16  ,eur_g10
18:23:30  17  ,eur_g11
18:23:30  18  ,eur_g12
18:23:30  19  ,eur_g13
18:23:30  20  ,eur_g14
18:23:30  21  ,eur_g15
18:23:30  22  ,eur_g16
18:23:30  23  ,eur_g17
18:23:30  24  ,eur_g18
18:23:30  25  ,eur_g19
18:23:30  26  ,eur_g20
18:23:30  27  ,eur_g21
18:23:30  28  ,eur_g22
18:23:30  29  ,eur_g23
18:23:30  30  ,eur_g24
18:23:30  31  ,eur_g25
18:23:30  32  ,eur_g26
18:23:30  33  ,eur_g27
18:23:30  34  ,eur_g28
18:23:30  35  ,eur_g29
18:23:30  36  ,eur_g30
18:23:30  37  ,eur_g31
18:23:30  38  ,eur_g32
18:23:30  39  ,eur_g33
18:23:30  40  ,eur_g34
18:23:30  41  ,eur_g35
18:23:30  42  ,eur_g36
18:23:30  43  ,eur_g37
18:23:30  44  ,eur_g38
18:23:30  45  ,eur_g39
18:23:30  46  ,eur_g40
18:23:30  47  ,eur_g41
18:23:30  48  ,aud_g00
18:23:30  49  ,aud_g01
18:23:30  50  ,aud_g02
18:23:30  51  ,aud_g03
18:23:30  52  ,aud_g04
18:23:30  53  ,aud_g05
18:23:30  54  ,aud_g06
18:23:30  55  ,aud_g07
18:23:30  56  ,aud_g08
18:23:30  57  ,aud_g09
18:23:30  58  ,aud_g10
18:23:30  59  ,aud_g11
18:23:30  60  ,aud_g12
18:23:30  61  ,aud_g13
18:23:30  62  ,aud_g14
18:23:30  63  ,aud_g15
18:23:30  64  ,aud_g16
18:23:30  65  ,aud_g17
18:23:30  66  ,aud_g18
18:23:30  67  ,aud_g19
18:23:30  68  ,aud_g20
18:23:30  69  ,aud_g21
18:23:30  70  ,aud_g22
18:23:30  71  ,aud_g23
18:23:30  72  ,aud_g24
18:23:30  73  ,aud_g25
18:23:30  74  ,aud_g26
18:23:30  75  ,aud_g27
18:23:30  76  ,aud_g28
18:23:30  77  ,aud_g29
18:23:30  78  ,aud_g30
18:23:30  79  ,aud_g31
18:23:30  80  ,aud_g32
18:23:30  81  ,aud_g33
18:23:30  82  ,aud_g34
18:23:30  83  ,aud_g35
18:23:30  84  ,aud_g36
18:23:30  85  ,aud_g37
18:23:30  86  ,aud_g38
18:23:30  87  ,aud_g39
18:23:30  88  ,aud_g40
18:23:30  89  ,aud_g41
18:23:30  90  ,gbp_g00
18:23:30  91  ,gbp_g01
18:23:30  92  ,gbp_g02
18:23:30  93  ,gbp_g03
18:23:30  94  ,gbp_g04
18:23:30  95  ,gbp_g05
18:23:30  96  ,gbp_g06
18:23:30  97  ,gbp_g07
18:23:30  98  ,gbp_g08
18:23:30  99  ,gbp_g09
18:23:30 100  ,gbp_g10
18:23:30 101  ,gbp_g11
18:23:30 102  ,gbp_g12
18:23:30 103  ,gbp_g13
18:23:30 104  ,gbp_g14
18:23:30 105  ,gbp_g15
18:23:30 106  ,gbp_g16
18:23:30 107  ,gbp_g17
18:23:30 108  ,gbp_g18
18:23:30 109  ,gbp_g19
18:23:30 110  ,gbp_g20
18:23:30 111  ,gbp_g21
18:23:30 112  ,gbp_g22
18:23:30 113  ,gbp_g23
18:23:30 114  ,gbp_g24
18:23:30 115  ,gbp_g25
18:23:30 116  ,gbp_g26
18:23:30 117  ,gbp_g27
18:23:30 118  ,gbp_g28
18:23:30 119  ,gbp_g29
18:23:30 120  ,gbp_g30
18:23:30 121  ,gbp_g31
18:23:30 122  ,gbp_g32
18:23:30 123  ,gbp_g33
18:23:30 124  ,gbp_g34
18:23:30 125  ,gbp_g35
18:23:30 126  ,gbp_g36
18:23:30 127  ,gbp_g37
18:23:30 128  ,gbp_g38
18:23:30 129  ,gbp_g39
18:23:30 130  ,gbp_g40
18:23:30 131  ,gbp_g41
18:23:30 132  ,jpy_g00
18:23:30 133  ,jpy_g01
18:23:30 134  ,jpy_g02
18:23:30 135  ,jpy_g03
18:23:30 136  ,jpy_g04
18:23:30 137  ,jpy_g05
18:23:30 138  ,jpy_g06
18:23:30 139  ,jpy_g07
18:23:30 140  ,jpy_g08
18:23:30 141  ,jpy_g09
18:23:30 142  ,jpy_g10
18:23:30 143  ,jpy_g11
18:23:30 144  ,jpy_g12
18:23:30 145  ,jpy_g13
18:23:30 146  ,jpy_g14
18:23:30 147  ,jpy_g15
18:23:30 148  ,jpy_g16
18:23:30 149  ,jpy_g17
18:23:30 150  ,jpy_g18
18:23:30 151  ,jpy_g19
18:23:30 152  ,jpy_g20
18:23:30 153  ,jpy_g21
18:23:30 154  ,jpy_g22
18:23:30 155  ,jpy_g23
18:23:30 156  ,jpy_g24
18:23:30 157  ,jpy_g25
18:23:30 158  ,jpy_g26
18:23:30 159  ,jpy_g27
18:23:30 160  ,jpy_g28
18:23:30 161  ,jpy_g29
18:23:30 162  ,jpy_g30
18:23:30 163  ,jpy_g31
18:23:30 164  ,jpy_g32
18:23:30 165  ,jpy_g33
18:23:30 166  ,jpy_g34
18:23:30 167  ,jpy_g35
18:23:30 168  ,jpy_g36
18:23:30 169  ,jpy_g37
18:23:30 170  ,jpy_g38
18:23:30 171  ,jpy_g39
18:23:30 172  ,jpy_g40
18:23:30 173  ,jpy_g41
18:23:30 174  ,cad_g00
18:23:30 175  ,cad_g01
18:23:30 176  ,cad_g02
18:23:30 177  ,cad_g03
18:23:30 178  ,cad_g04
18:23:30 179  ,cad_g05
18:23:30 180  ,cad_g06
18:23:30 181  ,cad_g07
18:23:30 182  ,cad_g08
18:23:30 183  ,cad_g09
18:23:30 184  ,cad_g10
18:23:30 185  ,cad_g11
18:23:30 186  ,cad_g12
18:23:30 187  ,cad_g13
18:23:30 188  ,cad_g14
18:23:30 189  ,cad_g15
18:23:30 190  ,cad_g16
18:23:30 191  ,cad_g17
18:23:30 192  ,cad_g18
18:23:30 193  ,cad_g19
18:23:30 194  ,cad_g20
18:23:30 195  ,cad_g21
18:23:30 196  ,cad_g22
18:23:30 197  ,cad_g23
18:23:30 198  ,cad_g24
18:23:30 199  ,cad_g25
18:23:30 200  ,cad_g26
18:23:30 201  ,cad_g27
18:23:30 202  ,cad_g28
18:23:30 203  ,cad_g29
18:23:30 204  ,cad_g30
18:23:30 205  ,cad_g31
18:23:30 206  ,cad_g32
18:23:30 207  ,cad_g33
18:23:30 208  ,cad_g34
18:23:30 209  ,cad_g35
18:23:30 210  ,cad_g36
18:23:30 211  ,cad_g37
18:23:30 212  ,cad_g38
18:23:30 213  ,cad_g39
18:23:30 214  ,cad_g40
18:23:30 215  ,cad_g41
18:23:30 216  ,chf_g00
18:23:30 217  ,chf_g01
18:23:30 218  ,chf_g02
18:23:30 219  ,chf_g03
18:23:30 220  ,chf_g04
18:23:30 221  ,chf_g05
18:23:30 222  ,chf_g06
18:23:30 223  ,chf_g07
18:23:30 224  ,chf_g08
18:23:30 225  ,chf_g09
18:23:30 226  ,chf_g10
18:23:30 227  ,chf_g11
18:23:30 228  ,chf_g12
18:23:30 229  ,chf_g13
18:23:30 230  ,chf_g14
18:23:30 231  ,chf_g15
18:23:30 232  ,chf_g16
18:23:30 233  ,chf_g17
18:23:30 234  ,chf_g18
18:23:30 235  ,chf_g19
18:23:30 236  ,chf_g20
18:23:30 237  ,chf_g21
18:23:30 238  ,chf_g22
18:23:30 239  ,chf_g23
18:23:30 240  ,chf_g24
18:23:30 241  ,chf_g25
18:23:30 242  ,chf_g26
18:23:30 243  ,chf_g27
18:23:30 244  ,chf_g28
18:23:30 245  ,chf_g29
18:23:30 246  ,chf_g30
18:23:30 247  ,chf_g31
18:23:30 248  ,chf_g32
18:23:30 249  ,chf_g33
18:23:30 250  ,chf_g34
18:23:30 251  ,chf_g35
18:23:30 252  ,chf_g36
18:23:30 253  ,chf_g37
18:23:30 254  ,chf_g38
18:23:30 255  ,chf_g39
18:23:30 256  ,chf_g40
18:23:30 257  ,chf_g41
18:23:30 258  FROM aud_ms6 m
18:23:30 259  WHERE gatt IN('nup','up')
18:23:30 260  AND 1+m.ydate < '&1'||' '||'&2'
18:23:30 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'18:05:00'

View created.

Elapsed: 00:00:00.12
18:23:30 SQL> 
18:23:30 SQL> -- rpt
18:23:30 SQL> 
18:23:30 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
18:23:30   2  
18:23:30 SQL> SELECT MAX(prdate) FROM bme
18:23:30   2  
18:23:30 SQL> -- Now build model from bme and score sme
18:23:30 SQL> @score1.sql
18:23:30 SQL> -- score1.sql
18:23:30 SQL> 
18:23:30 SQL> -- Does the 1st SVM score
18:23:30 SQL> 
18:23:30 SQL> -- Fill up svmc_apply_prep
18:23:30 SQL> @score.sql
18:23:30 SQL> --
18:23:30 SQL> -- score.sql
18:23:30 SQL> --
18:23:30 SQL> 
18:23:30 SQL> -- usage: score.sql
18:23:30 SQL> 
18:23:30 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
18:23:30 SQL> 
18:23:30 SQL> DEFINE target	= 'gatt'
18:23:30 SQL> DEFINE model_name = 'forex14'
18:23:30 SQL> DEFINE bldtable	= 'bme'
18:23:30 SQL> DEFINE scoretable = 'sme'
18:23:30 SQL> DEFINE case_id	= 'prdate'
18:23:30 SQL> 
18:23:30 SQL> -- Define a variable to help me exclude some columns from some data mining calls
18:23:30 SQL> DEFINE exclude1 = "'&target','&case_id'"
18:23:30 SQL> 
18:23:30 SQL> -- Builds an SVM model using pl/sql.
18:23:30 SQL> 
18:23:30 SQL> -----------------------------------------------------------------------
18:23:30 SQL> --			    BUILD THE MODEL
18:23:30 SQL> -----------------------------------------------------------------------
18:23:30 SQL> 
18:23:30 SQL> -- Cleanup old build data preparation objects for repeat runs
18:23:30 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
18:23:30 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
18:23:30 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
18:23:30 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
18:23:30 SQL> 
18:23:30 SQL> 
18:23:30 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
18:23:30 SQL> --
18:23:30 SQL> -- DROP	TABLE svmc_settings ;
18:23:30 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
18:23:30 SQL> -- DELETE svmc_settings;
18:23:30 SQL> 
18:23:30 SQL> -- The default classification algorithm is Naive Bayes. So override
18:23:30 SQL> -- this choice to SVM using a settings table.
18:23:30 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
18:23:30 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
18:23:30 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
18:23:30 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
18:23:30 SQL> -- models.
18:23:30 SQL> --
18:23:30 SQL> 
18:23:30 SQL> -- Do this once and then comment it out.
18:23:30 SQL> -- That makes script go faster.
18:23:30 SQL> -- BEGIN
18:23:30 SQL> -- -- Populate settings table
18:23:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:23:30 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
18:23:30 SQL> --
18:23:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:23:30 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
18:23:30 SQL> --
18:23:30 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:23:30 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
18:23:30 SQL> --   COMMIT;
18:23:30 SQL> -- END;
18:23:30 SQL> -- /
18:23:30 SQL> 
18:23:30 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
18:23:30 SQL> 
18:23:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
18:23:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:23:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:23:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
18:23:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:23:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:23:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
18:23:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:23:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:23:30 SQL> 
18:23:30 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
18:23:30   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:23:30   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:23:30 SQL> 
18:23:30 SQL> --------------------------------
18:23:30 SQL> -- PREPARE BUILD (TRAINING) DATA
18:23:30 SQL> --
18:23:30 SQL> 
18:23:30 SQL> -- 1. Missing Value treatment for all Predictors and
18:23:30 SQL> -- 2. Outlier Treatment and
18:23:30 SQL> -- 3. Normalization are performed below.
18:23:30 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
18:23:30 SQL> --    normalized here.
18:23:30 SQL> 
18:23:30 SQL> BEGIN
18:23:30   2  	-- Perform missing value treatment for all predictors
18:23:30   3  	-- create miss tables
18:23:30   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
18:23:30   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
18:23:30   6  
18:23:30   7  	-- populate miss tables
18:23:30   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
18:23:30   9  	  miss_table_name => 'svmc_miss_num',
18:23:30  10  	  data_table_name => '&bldtable',
18:23:30  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:23:30  12  
18:23:30  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
18:23:30  14  	  miss_table_name => 'svmc_miss_cat',
18:23:30  15  	  data_table_name => '&bldtable',
18:23:30  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:23:30  17  
18:23:30  18  	-- xform input data to replace missing values
18:23:30  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:23:30  20  	  miss_table_name => 'svmc_miss_num',
18:23:30  21  	  data_table_name => '&bldtable',
18:23:30  22  	  xform_view_name => 'xformed_build_miss_num');
18:23:30  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:23:30  24  	  miss_table_name => 'svmc_miss_cat',
18:23:30  25  	  data_table_name => '&bldtable',
18:23:30  26  	  xform_view_name => 'xformed_build_miss_cat');
18:23:30  27  
18:23:30  28  	-- Perform outlier treatment.
18:23:30  29  	-- create clip table
18:23:30  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
18:23:30  31  
18:23:30  32  	-- populate clip table
18:23:30  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
18:23:30  34  	  clip_table_name => 'svmc_clip',
18:23:30  35  	  data_table_name => '&bldtable',
18:23:30  36  	  tail_frac	  => 0.025,
18:23:30  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:23:30  38  
18:23:30  39  	-- xform input data to winsorized data
18:23:30  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
18:23:30  41  	  clip_table_name => 'svmc_clip',
18:23:30  42  	  data_table_name => '&bldtable',
18:23:30  43  	  xform_view_name => 'svmc_winsor');
18:23:30  44  
18:23:30  45  	-- create normalization table
18:23:30  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
18:23:30  47  
18:23:30  48  	-- populate normalization table based on winsorized data
18:23:30  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
18:23:30  50  	  norm_table_name => 'svmc_norm',
18:23:30  51  	  data_table_name => 'svmc_winsor',
18:23:30  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:23:30  53  
18:23:30  54  	-- normalize the original data
18:23:30  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:23:30  56  	  norm_table_name => 'svmc_norm',
18:23:30  57  	  data_table_name => '&bldtable',
18:23:30  58  	  xform_view_name => 'svmc_build_prep');
18:23:30  59  END;
18:23:30  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.59
18:23:48 SQL> 
18:23:48 SQL> ---------------------
18:23:48 SQL> -- CREATE A NEW MODEL
18:23:48 SQL> --
18:23:48 SQL> -- Cleanup old model with the same name for repeat runs
18:23:48 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
18:23:48   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:23:48   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.21
18:23:49 SQL> 
18:23:49 SQL> -- Build a new SVM Model
18:23:49 SQL> BEGIN
18:23:49   2  	DBMS_DATA_MINING.CREATE_MODEL(
18:23:49   3  	  model_name	      => '&model_name',
18:23:49   4  	  mining_function     => dbms_data_mining.classification,
18:23:49   5  	  data_table_name     => 'svmc_build_prep',
18:23:49   6  	  case_id_column_name => '&case_id',
18:23:49   7  	  target_column_name  => '&target',
18:23:49   8  	  settings_table_name => 'svmc_settings');
18:23:49   9  END;
18:23:49  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.44
18:24:15 SQL> 
18:24:15 SQL> -----------------------------------------------------------------------
18:24:15 SQL> --			       APPLY/score THE MODEL
18:24:15 SQL> -----------------------------------------------------------------------
18:24:15 SQL> 
18:24:15 SQL> -- Cleanup old scoring data preparation objects for repeat runs
18:24:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
18:24:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:24:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
18:24:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
18:24:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:24:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:24:15 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
18:24:15   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:24:15   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:24:15 SQL> -----------------------
18:24:15 SQL> -- PREPARE SCORING DATA
18:24:15 SQL> --
18:24:15 SQL> -- If the data for model creation has been prepared, then the data
18:24:15 SQL> -- to be scored using the model must be prepared in the same manner
18:24:15 SQL> -- in order to obtain meaningful results.
18:24:15 SQL> --
18:24:15 SQL> -- 1. Missing Value treatment for all Predictors and
18:24:15 SQL> -- 2. Normalization
18:24:15 SQL> -- No outlier treatment will be performed during test and apply. The
18:24:15 SQL> -- normalization step is sufficient, since the normalization parameters
18:24:15 SQL> -- already capture the effects of outlier treatment done with build data.
18:24:15 SQL> --
18:24:15 SQL> BEGIN
18:24:15   2  	-- Xform Test data to replace missing values
18:24:15   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:24:15   4  	  miss_table_name => 'svmc_miss_num',
18:24:15   5  	  data_table_name => '&scoretable',
18:24:15   6  	  xform_view_name => 'xformed_apply_miss_num');
18:24:15   7  
18:24:15   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:24:15   9  	  miss_table_name => 'svmc_miss_cat',
18:24:15  10  	  data_table_name => '&scoretable',
18:24:15  11  	  xform_view_name => 'xformed_apply_miss_cat');
18:24:15  12  
18:24:15  13  	-- Normalize the data to be scored
18:24:15  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:24:15  15  	  norm_table_name => 'svmc_norm',
18:24:15  16  	  data_table_name => '&scoretable',
18:24:15  17  	  xform_view_name => 'svmc_apply_prep');
18:24:15  18  END;
18:24:15  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.24
18:24:17 SQL> 
18:24:17 SQL> -- Use same model_name used in score.sql
18:24:17 SQL> DEFINE model_name = 'forex14'
18:24:17 SQL> 
18:24:17 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
18:24:17 SQL> 
18:24:17 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
18:24:17 SQL> 
18:24:17 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
18:24:17   2  SELECT
18:24:17   3  prdate
18:24:17   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
18:24:17   5  ,sysdate
18:24:17   6  ,SUBSTR(prdate,1,3)pair
18:24:17   7  ,SUBSTR(prdate,4,19)ydate
18:24:17   8  FROM svmc_apply_prep
18:24:17   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
18:24:17 SQL> @aud_score1day.sql  2010-12-28 18:10:00
18:24:17 SQL> --
18:24:17 SQL> -- aud_score1day.sql
18:24:17 SQL> --
18:24:17 SQL> 
18:24:17 SQL> CREATE OR REPLACE VIEW sme AS
18:24:17   2  SELECT
18:24:17   3  'aud'||m.ydate prdate
18:24:17   4  ,NULL gatt
18:24:17   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:24:17   6  ,eur_g00
18:24:17   7  ,eur_g01
18:24:17   8  ,eur_g02
18:24:17   9  ,eur_g03
18:24:17  10  ,eur_g04
18:24:17  11  ,eur_g05
18:24:17  12  ,eur_g06
18:24:17  13  ,eur_g07
18:24:17  14  ,eur_g08
18:24:17  15  ,eur_g09
18:24:17  16  ,eur_g10
18:24:17  17  ,eur_g11
18:24:17  18  ,eur_g12
18:24:17  19  ,eur_g13
18:24:17  20  ,eur_g14
18:24:17  21  ,eur_g15
18:24:17  22  ,eur_g16
18:24:17  23  ,eur_g17
18:24:17  24  ,eur_g18
18:24:17  25  ,eur_g19
18:24:17  26  ,eur_g20
18:24:17  27  ,eur_g21
18:24:17  28  ,eur_g22
18:24:17  29  ,eur_g23
18:24:17  30  ,eur_g24
18:24:17  31  ,eur_g25
18:24:17  32  ,eur_g26
18:24:17  33  ,eur_g27
18:24:17  34  ,eur_g28
18:24:17  35  ,eur_g29
18:24:17  36  ,eur_g30
18:24:17  37  ,eur_g31
18:24:17  38  ,eur_g32
18:24:17  39  ,eur_g33
18:24:17  40  ,eur_g34
18:24:17  41  ,eur_g35
18:24:17  42  ,eur_g36
18:24:17  43  ,eur_g37
18:24:17  44  ,eur_g38
18:24:17  45  ,eur_g39
18:24:17  46  ,eur_g40
18:24:17  47  ,eur_g41
18:24:17  48  ,aud_g00
18:24:17  49  ,aud_g01
18:24:17  50  ,aud_g02
18:24:17  51  ,aud_g03
18:24:17  52  ,aud_g04
18:24:17  53  ,aud_g05
18:24:17  54  ,aud_g06
18:24:17  55  ,aud_g07
18:24:17  56  ,aud_g08
18:24:17  57  ,aud_g09
18:24:17  58  ,aud_g10
18:24:17  59  ,aud_g11
18:24:17  60  ,aud_g12
18:24:17  61  ,aud_g13
18:24:17  62  ,aud_g14
18:24:17  63  ,aud_g15
18:24:17  64  ,aud_g16
18:24:17  65  ,aud_g17
18:24:17  66  ,aud_g18
18:24:17  67  ,aud_g19
18:24:17  68  ,aud_g20
18:24:17  69  ,aud_g21
18:24:17  70  ,aud_g22
18:24:17  71  ,aud_g23
18:24:17  72  ,aud_g24
18:24:17  73  ,aud_g25
18:24:17  74  ,aud_g26
18:24:17  75  ,aud_g27
18:24:17  76  ,aud_g28
18:24:17  77  ,aud_g29
18:24:17  78  ,aud_g30
18:24:17  79  ,aud_g31
18:24:17  80  ,aud_g32
18:24:17  81  ,aud_g33
18:24:17  82  ,aud_g34
18:24:17  83  ,aud_g35
18:24:17  84  ,aud_g36
18:24:17  85  ,aud_g37
18:24:17  86  ,aud_g38
18:24:17  87  ,aud_g39
18:24:17  88  ,aud_g40
18:24:17  89  ,aud_g41
18:24:17  90  ,gbp_g00
18:24:17  91  ,gbp_g01
18:24:17  92  ,gbp_g02
18:24:17  93  ,gbp_g03
18:24:17  94  ,gbp_g04
18:24:17  95  ,gbp_g05
18:24:17  96  ,gbp_g06
18:24:17  97  ,gbp_g07
18:24:17  98  ,gbp_g08
18:24:17  99  ,gbp_g09
18:24:17 100  ,gbp_g10
18:24:17 101  ,gbp_g11
18:24:17 102  ,gbp_g12
18:24:17 103  ,gbp_g13
18:24:17 104  ,gbp_g14
18:24:17 105  ,gbp_g15
18:24:17 106  ,gbp_g16
18:24:17 107  ,gbp_g17
18:24:17 108  ,gbp_g18
18:24:17 109  ,gbp_g19
18:24:17 110  ,gbp_g20
18:24:17 111  ,gbp_g21
18:24:17 112  ,gbp_g22
18:24:17 113  ,gbp_g23
18:24:17 114  ,gbp_g24
18:24:17 115  ,gbp_g25
18:24:17 116  ,gbp_g26
18:24:17 117  ,gbp_g27
18:24:17 118  ,gbp_g28
18:24:17 119  ,gbp_g29
18:24:17 120  ,gbp_g30
18:24:17 121  ,gbp_g31
18:24:17 122  ,gbp_g32
18:24:17 123  ,gbp_g33
18:24:17 124  ,gbp_g34
18:24:17 125  ,gbp_g35
18:24:17 126  ,gbp_g36
18:24:17 127  ,gbp_g37
18:24:17 128  ,gbp_g38
18:24:17 129  ,gbp_g39
18:24:17 130  ,gbp_g40
18:24:17 131  ,gbp_g41
18:24:17 132  ,jpy_g00
18:24:17 133  ,jpy_g01
18:24:17 134  ,jpy_g02
18:24:17 135  ,jpy_g03
18:24:17 136  ,jpy_g04
18:24:17 137  ,jpy_g05
18:24:17 138  ,jpy_g06
18:24:17 139  ,jpy_g07
18:24:17 140  ,jpy_g08
18:24:17 141  ,jpy_g09
18:24:17 142  ,jpy_g10
18:24:17 143  ,jpy_g11
18:24:17 144  ,jpy_g12
18:24:17 145  ,jpy_g13
18:24:17 146  ,jpy_g14
18:24:17 147  ,jpy_g15
18:24:17 148  ,jpy_g16
18:24:17 149  ,jpy_g17
18:24:17 150  ,jpy_g18
18:24:17 151  ,jpy_g19
18:24:17 152  ,jpy_g20
18:24:17 153  ,jpy_g21
18:24:17 154  ,jpy_g22
18:24:17 155  ,jpy_g23
18:24:17 156  ,jpy_g24
18:24:17 157  ,jpy_g25
18:24:17 158  ,jpy_g26
18:24:17 159  ,jpy_g27
18:24:17 160  ,jpy_g28
18:24:17 161  ,jpy_g29
18:24:17 162  ,jpy_g30
18:24:17 163  ,jpy_g31
18:24:17 164  ,jpy_g32
18:24:17 165  ,jpy_g33
18:24:17 166  ,jpy_g34
18:24:17 167  ,jpy_g35
18:24:17 168  ,jpy_g36
18:24:17 169  ,jpy_g37
18:24:17 170  ,jpy_g38
18:24:17 171  ,jpy_g39
18:24:17 172  ,jpy_g40
18:24:17 173  ,jpy_g41
18:24:17 174  ,cad_g00
18:24:17 175  ,cad_g01
18:24:17 176  ,cad_g02
18:24:17 177  ,cad_g03
18:24:17 178  ,cad_g04
18:24:17 179  ,cad_g05
18:24:17 180  ,cad_g06
18:24:17 181  ,cad_g07
18:24:17 182  ,cad_g08
18:24:17 183  ,cad_g09
18:24:17 184  ,cad_g10
18:24:17 185  ,cad_g11
18:24:17 186  ,cad_g12
18:24:17 187  ,cad_g13
18:24:17 188  ,cad_g14
18:24:17 189  ,cad_g15
18:24:17 190  ,cad_g16
18:24:17 191  ,cad_g17
18:24:17 192  ,cad_g18
18:24:17 193  ,cad_g19
18:24:17 194  ,cad_g20
18:24:17 195  ,cad_g21
18:24:17 196  ,cad_g22
18:24:17 197  ,cad_g23
18:24:17 198  ,cad_g24
18:24:17 199  ,cad_g25
18:24:17 200  ,cad_g26
18:24:17 201  ,cad_g27
18:24:17 202  ,cad_g28
18:24:17 203  ,cad_g29
18:24:17 204  ,cad_g30
18:24:17 205  ,cad_g31
18:24:17 206  ,cad_g32
18:24:17 207  ,cad_g33
18:24:17 208  ,cad_g34
18:24:17 209  ,cad_g35
18:24:17 210  ,cad_g36
18:24:17 211  ,cad_g37
18:24:17 212  ,cad_g38
18:24:17 213  ,cad_g39
18:24:17 214  ,cad_g40
18:24:17 215  ,cad_g41
18:24:17 216  ,chf_g00
18:24:17 217  ,chf_g01
18:24:17 218  ,chf_g02
18:24:17 219  ,chf_g03
18:24:17 220  ,chf_g04
18:24:17 221  ,chf_g05
18:24:17 222  ,chf_g06
18:24:17 223  ,chf_g07
18:24:17 224  ,chf_g08
18:24:17 225  ,chf_g09
18:24:17 226  ,chf_g10
18:24:17 227  ,chf_g11
18:24:17 228  ,chf_g12
18:24:17 229  ,chf_g13
18:24:17 230  ,chf_g14
18:24:17 231  ,chf_g15
18:24:17 232  ,chf_g16
18:24:17 233  ,chf_g17
18:24:17 234  ,chf_g18
18:24:17 235  ,chf_g19
18:24:17 236  ,chf_g20
18:24:17 237  ,chf_g21
18:24:17 238  ,chf_g22
18:24:17 239  ,chf_g23
18:24:17 240  ,chf_g24
18:24:17 241  ,chf_g25
18:24:17 242  ,chf_g26
18:24:17 243  ,chf_g27
18:24:17 244  ,chf_g28
18:24:17 245  ,chf_g29
18:24:17 246  ,chf_g30
18:24:17 247  ,chf_g31
18:24:17 248  ,chf_g32
18:24:17 249  ,chf_g33
18:24:17 250  ,chf_g34
18:24:17 251  ,chf_g35
18:24:17 252  ,chf_g36
18:24:17 253  ,chf_g37
18:24:17 254  ,chf_g38
18:24:17 255  ,chf_g39
18:24:17 256  ,chf_g40
18:24:17 257  ,chf_g41
18:24:17 258  FROM aud_ms6 m
18:24:17 259  WHERE m.ydate = '&1'||' '||'&2'
18:24:17 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'18:10:00'

View created.

Elapsed: 00:00:00.12
18:24:17 SQL> 
18:24:17 SQL> -- rpt
18:24:17 SQL> -- We should see just 1 row:
18:24:17 SQL> 
18:24:17 SQL> SELECT COUNT(prdate) FROM sme
18:24:17   2  
18:24:17 SQL> -- Build the model:
18:24:17 SQL> CREATE OR REPLACE VIEW bme AS
18:24:17   2  SELECT
18:24:17   3  'aud'||m.ydate prdate
18:24:17   4  ,gatt
18:24:17   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:24:17   6  ,eur_g00
18:24:17   7  ,eur_g01
18:24:17   8  ,eur_g02
18:24:17   9  ,eur_g03
18:24:17  10  ,eur_g04
18:24:17  11  ,eur_g05
18:24:17  12  ,eur_g06
18:24:17  13  ,eur_g07
18:24:17  14  ,eur_g08
18:24:17  15  ,eur_g09
18:24:17  16  ,eur_g10
18:24:17  17  ,eur_g11
18:24:17  18  ,eur_g12
18:24:17  19  ,eur_g13
18:24:17  20  ,eur_g14
18:24:17  21  ,eur_g15
18:24:17  22  ,eur_g16
18:24:17  23  ,eur_g17
18:24:17  24  ,eur_g18
18:24:17  25  ,eur_g19
18:24:17  26  ,eur_g20
18:24:17  27  ,eur_g21
18:24:17  28  ,eur_g22
18:24:17  29  ,eur_g23
18:24:17  30  ,eur_g24
18:24:17  31  ,eur_g25
18:24:17  32  ,eur_g26
18:24:17  33  ,eur_g27
18:24:17  34  ,eur_g28
18:24:17  35  ,eur_g29
18:24:17  36  ,eur_g30
18:24:17  37  ,eur_g31
18:24:17  38  ,eur_g32
18:24:17  39  ,eur_g33
18:24:17  40  ,eur_g34
18:24:17  41  ,eur_g35
18:24:17  42  ,eur_g36
18:24:17  43  ,eur_g37
18:24:17  44  ,eur_g38
18:24:17  45  ,eur_g39
18:24:17  46  ,eur_g40
18:24:17  47  ,eur_g41
18:24:17  48  ,aud_g00
18:24:17  49  ,aud_g01
18:24:17  50  ,aud_g02
18:24:17  51  ,aud_g03
18:24:17  52  ,aud_g04
18:24:17  53  ,aud_g05
18:24:17  54  ,aud_g06
18:24:17  55  ,aud_g07
18:24:17  56  ,aud_g08
18:24:17  57  ,aud_g09
18:24:17  58  ,aud_g10
18:24:17  59  ,aud_g11
18:24:17  60  ,aud_g12
18:24:17  61  ,aud_g13
18:24:17  62  ,aud_g14
18:24:17  63  ,aud_g15
18:24:17  64  ,aud_g16
18:24:17  65  ,aud_g17
18:24:17  66  ,aud_g18
18:24:17  67  ,aud_g19
18:24:17  68  ,aud_g20
18:24:17  69  ,aud_g21
18:24:17  70  ,aud_g22
18:24:17  71  ,aud_g23
18:24:17  72  ,aud_g24
18:24:17  73  ,aud_g25
18:24:17  74  ,aud_g26
18:24:17  75  ,aud_g27
18:24:17  76  ,aud_g28
18:24:17  77  ,aud_g29
18:24:17  78  ,aud_g30
18:24:17  79  ,aud_g31
18:24:17  80  ,aud_g32
18:24:17  81  ,aud_g33
18:24:17  82  ,aud_g34
18:24:17  83  ,aud_g35
18:24:17  84  ,aud_g36
18:24:17  85  ,aud_g37
18:24:17  86  ,aud_g38
18:24:17  87  ,aud_g39
18:24:17  88  ,aud_g40
18:24:17  89  ,aud_g41
18:24:17  90  ,gbp_g00
18:24:17  91  ,gbp_g01
18:24:17  92  ,gbp_g02
18:24:17  93  ,gbp_g03
18:24:17  94  ,gbp_g04
18:24:17  95  ,gbp_g05
18:24:17  96  ,gbp_g06
18:24:17  97  ,gbp_g07
18:24:17  98  ,gbp_g08
18:24:17  99  ,gbp_g09
18:24:17 100  ,gbp_g10
18:24:17 101  ,gbp_g11
18:24:17 102  ,gbp_g12
18:24:17 103  ,gbp_g13
18:24:17 104  ,gbp_g14
18:24:17 105  ,gbp_g15
18:24:17 106  ,gbp_g16
18:24:17 107  ,gbp_g17
18:24:17 108  ,gbp_g18
18:24:17 109  ,gbp_g19
18:24:17 110  ,gbp_g20
18:24:17 111  ,gbp_g21
18:24:17 112  ,gbp_g22
18:24:17 113  ,gbp_g23
18:24:17 114  ,gbp_g24
18:24:17 115  ,gbp_g25
18:24:17 116  ,gbp_g26
18:24:17 117  ,gbp_g27
18:24:17 118  ,gbp_g28
18:24:17 119  ,gbp_g29
18:24:17 120  ,gbp_g30
18:24:17 121  ,gbp_g31
18:24:17 122  ,gbp_g32
18:24:17 123  ,gbp_g33
18:24:17 124  ,gbp_g34
18:24:17 125  ,gbp_g35
18:24:17 126  ,gbp_g36
18:24:17 127  ,gbp_g37
18:24:17 128  ,gbp_g38
18:24:17 129  ,gbp_g39
18:24:17 130  ,gbp_g40
18:24:17 131  ,gbp_g41
18:24:17 132  ,jpy_g00
18:24:17 133  ,jpy_g01
18:24:17 134  ,jpy_g02
18:24:17 135  ,jpy_g03
18:24:17 136  ,jpy_g04
18:24:17 137  ,jpy_g05
18:24:17 138  ,jpy_g06
18:24:17 139  ,jpy_g07
18:24:17 140  ,jpy_g08
18:24:17 141  ,jpy_g09
18:24:17 142  ,jpy_g10
18:24:17 143  ,jpy_g11
18:24:17 144  ,jpy_g12
18:24:17 145  ,jpy_g13
18:24:17 146  ,jpy_g14
18:24:17 147  ,jpy_g15
18:24:17 148  ,jpy_g16
18:24:17 149  ,jpy_g17
18:24:17 150  ,jpy_g18
18:24:17 151  ,jpy_g19
18:24:17 152  ,jpy_g20
18:24:17 153  ,jpy_g21
18:24:17 154  ,jpy_g22
18:24:17 155  ,jpy_g23
18:24:17 156  ,jpy_g24
18:24:17 157  ,jpy_g25
18:24:17 158  ,jpy_g26
18:24:17 159  ,jpy_g27
18:24:17 160  ,jpy_g28
18:24:17 161  ,jpy_g29
18:24:17 162  ,jpy_g30
18:24:17 163  ,jpy_g31
18:24:17 164  ,jpy_g32
18:24:17 165  ,jpy_g33
18:24:17 166  ,jpy_g34
18:24:17 167  ,jpy_g35
18:24:17 168  ,jpy_g36
18:24:17 169  ,jpy_g37
18:24:17 170  ,jpy_g38
18:24:17 171  ,jpy_g39
18:24:17 172  ,jpy_g40
18:24:17 173  ,jpy_g41
18:24:17 174  ,cad_g00
18:24:17 175  ,cad_g01
18:24:17 176  ,cad_g02
18:24:17 177  ,cad_g03
18:24:17 178  ,cad_g04
18:24:17 179  ,cad_g05
18:24:17 180  ,cad_g06
18:24:17 181  ,cad_g07
18:24:17 182  ,cad_g08
18:24:17 183  ,cad_g09
18:24:17 184  ,cad_g10
18:24:17 185  ,cad_g11
18:24:17 186  ,cad_g12
18:24:17 187  ,cad_g13
18:24:17 188  ,cad_g14
18:24:17 189  ,cad_g15
18:24:17 190  ,cad_g16
18:24:17 191  ,cad_g17
18:24:17 192  ,cad_g18
18:24:17 193  ,cad_g19
18:24:17 194  ,cad_g20
18:24:17 195  ,cad_g21
18:24:17 196  ,cad_g22
18:24:17 197  ,cad_g23
18:24:17 198  ,cad_g24
18:24:17 199  ,cad_g25
18:24:17 200  ,cad_g26
18:24:17 201  ,cad_g27
18:24:17 202  ,cad_g28
18:24:17 203  ,cad_g29
18:24:17 204  ,cad_g30
18:24:17 205  ,cad_g31
18:24:17 206  ,cad_g32
18:24:17 207  ,cad_g33
18:24:17 208  ,cad_g34
18:24:17 209  ,cad_g35
18:24:17 210  ,cad_g36
18:24:17 211  ,cad_g37
18:24:17 212  ,cad_g38
18:24:17 213  ,cad_g39
18:24:17 214  ,cad_g40
18:24:17 215  ,cad_g41
18:24:17 216  ,chf_g00
18:24:17 217  ,chf_g01
18:24:17 218  ,chf_g02
18:24:17 219  ,chf_g03
18:24:17 220  ,chf_g04
18:24:17 221  ,chf_g05
18:24:17 222  ,chf_g06
18:24:17 223  ,chf_g07
18:24:17 224  ,chf_g08
18:24:17 225  ,chf_g09
18:24:17 226  ,chf_g10
18:24:17 227  ,chf_g11
18:24:17 228  ,chf_g12
18:24:17 229  ,chf_g13
18:24:17 230  ,chf_g14
18:24:17 231  ,chf_g15
18:24:17 232  ,chf_g16
18:24:17 233  ,chf_g17
18:24:17 234  ,chf_g18
18:24:17 235  ,chf_g19
18:24:17 236  ,chf_g20
18:24:17 237  ,chf_g21
18:24:17 238  ,chf_g22
18:24:17 239  ,chf_g23
18:24:17 240  ,chf_g24
18:24:17 241  ,chf_g25
18:24:17 242  ,chf_g26
18:24:17 243  ,chf_g27
18:24:17 244  ,chf_g28
18:24:17 245  ,chf_g29
18:24:17 246  ,chf_g30
18:24:17 247  ,chf_g31
18:24:17 248  ,chf_g32
18:24:17 249  ,chf_g33
18:24:17 250  ,chf_g34
18:24:17 251  ,chf_g35
18:24:17 252  ,chf_g36
18:24:17 253  ,chf_g37
18:24:17 254  ,chf_g38
18:24:17 255  ,chf_g39
18:24:17 256  ,chf_g40
18:24:17 257  ,chf_g41
18:24:17 258  FROM aud_ms6 m
18:24:17 259  WHERE gatt IN('nup','up')
18:24:17 260  AND 1+m.ydate < '&1'||' '||'&2'
18:24:17 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'18:10:00'

View created.

Elapsed: 00:00:00.12
18:24:17 SQL> 
18:24:17 SQL> -- rpt
18:24:17 SQL> 
18:24:17 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
18:24:17   2  
18:24:17 SQL> SELECT MAX(prdate) FROM bme
18:24:17   2  
18:24:17 SQL> -- Now build model from bme and score sme
18:24:17 SQL> @score1.sql
18:24:17 SQL> -- score1.sql
18:24:17 SQL> 
18:24:17 SQL> -- Does the 1st SVM score
18:24:17 SQL> 
18:24:17 SQL> -- Fill up svmc_apply_prep
18:24:17 SQL> @score.sql
18:24:17 SQL> --
18:24:17 SQL> -- score.sql
18:24:17 SQL> --
18:24:17 SQL> 
18:24:17 SQL> -- usage: score.sql
18:24:17 SQL> 
18:24:17 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
18:24:17 SQL> 
18:24:17 SQL> DEFINE target	= 'gatt'
18:24:17 SQL> DEFINE model_name = 'forex14'
18:24:17 SQL> DEFINE bldtable	= 'bme'
18:24:17 SQL> DEFINE scoretable = 'sme'
18:24:17 SQL> DEFINE case_id	= 'prdate'
18:24:17 SQL> 
18:24:17 SQL> -- Define a variable to help me exclude some columns from some data mining calls
18:24:17 SQL> DEFINE exclude1 = "'&target','&case_id'"
18:24:17 SQL> 
18:24:17 SQL> -- Builds an SVM model using pl/sql.
18:24:17 SQL> 
18:24:17 SQL> -----------------------------------------------------------------------
18:24:17 SQL> --			    BUILD THE MODEL
18:24:17 SQL> -----------------------------------------------------------------------
18:24:17 SQL> 
18:24:17 SQL> -- Cleanup old build data preparation objects for repeat runs
18:24:17 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
18:24:17 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
18:24:17 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
18:24:17 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
18:24:17 SQL> 
18:24:17 SQL> 
18:24:17 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
18:24:17 SQL> --
18:24:17 SQL> -- DROP	TABLE svmc_settings ;
18:24:17 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
18:24:17 SQL> -- DELETE svmc_settings;
18:24:17 SQL> 
18:24:17 SQL> -- The default classification algorithm is Naive Bayes. So override
18:24:17 SQL> -- this choice to SVM using a settings table.
18:24:17 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
18:24:17 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
18:24:17 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
18:24:17 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
18:24:17 SQL> -- models.
18:24:17 SQL> --
18:24:17 SQL> 
18:24:17 SQL> -- Do this once and then comment it out.
18:24:17 SQL> -- That makes script go faster.
18:24:17 SQL> -- BEGIN
18:24:17 SQL> -- -- Populate settings table
18:24:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:24:17 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
18:24:17 SQL> --
18:24:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:24:17 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
18:24:17 SQL> --
18:24:17 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:24:17 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
18:24:17 SQL> --   COMMIT;
18:24:17 SQL> -- END;
18:24:17 SQL> -- /
18:24:17 SQL> 
18:24:17 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
18:24:17 SQL> 
18:24:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
18:24:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:24:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:24:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
18:24:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:24:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:24:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
18:24:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:24:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:24:17 SQL> 
18:24:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
18:24:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:24:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:24:17 SQL> 
18:24:17 SQL> --------------------------------
18:24:17 SQL> -- PREPARE BUILD (TRAINING) DATA
18:24:17 SQL> --
18:24:17 SQL> 
18:24:17 SQL> -- 1. Missing Value treatment for all Predictors and
18:24:17 SQL> -- 2. Outlier Treatment and
18:24:17 SQL> -- 3. Normalization are performed below.
18:24:17 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
18:24:17 SQL> --    normalized here.
18:24:17 SQL> 
18:24:17 SQL> BEGIN
18:24:17   2  	-- Perform missing value treatment for all predictors
18:24:17   3  	-- create miss tables
18:24:17   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
18:24:17   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
18:24:17   6  
18:24:17   7  	-- populate miss tables
18:24:17   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
18:24:17   9  	  miss_table_name => 'svmc_miss_num',
18:24:17  10  	  data_table_name => '&bldtable',
18:24:17  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:24:17  12  
18:24:17  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
18:24:17  14  	  miss_table_name => 'svmc_miss_cat',
18:24:17  15  	  data_table_name => '&bldtable',
18:24:17  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:24:17  17  
18:24:17  18  	-- xform input data to replace missing values
18:24:17  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:24:17  20  	  miss_table_name => 'svmc_miss_num',
18:24:17  21  	  data_table_name => '&bldtable',
18:24:17  22  	  xform_view_name => 'xformed_build_miss_num');
18:24:17  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:24:17  24  	  miss_table_name => 'svmc_miss_cat',
18:24:17  25  	  data_table_name => '&bldtable',
18:24:17  26  	  xform_view_name => 'xformed_build_miss_cat');
18:24:17  27  
18:24:17  28  	-- Perform outlier treatment.
18:24:17  29  	-- create clip table
18:24:17  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
18:24:17  31  
18:24:17  32  	-- populate clip table
18:24:17  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
18:24:17  34  	  clip_table_name => 'svmc_clip',
18:24:17  35  	  data_table_name => '&bldtable',
18:24:17  36  	  tail_frac	  => 0.025,
18:24:17  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:24:17  38  
18:24:17  39  	-- xform input data to winsorized data
18:24:17  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
18:24:17  41  	  clip_table_name => 'svmc_clip',
18:24:17  42  	  data_table_name => '&bldtable',
18:24:17  43  	  xform_view_name => 'svmc_winsor');
18:24:17  44  
18:24:17  45  	-- create normalization table
18:24:17  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
18:24:17  47  
18:24:17  48  	-- populate normalization table based on winsorized data
18:24:17  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
18:24:17  50  	  norm_table_name => 'svmc_norm',
18:24:17  51  	  data_table_name => 'svmc_winsor',
18:24:17  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:24:17  53  
18:24:17  54  	-- normalize the original data
18:24:17  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:24:17  56  	  norm_table_name => 'svmc_norm',
18:24:17  57  	  data_table_name => '&bldtable',
18:24:17  58  	  xform_view_name => 'svmc_build_prep');
18:24:17  59  END;
18:24:17  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.63
18:24:35 SQL> 
18:24:35 SQL> ---------------------
18:24:35 SQL> -- CREATE A NEW MODEL
18:24:35 SQL> --
18:24:35 SQL> -- Cleanup old model with the same name for repeat runs
18:24:35 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
18:24:35   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:24:35   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.15
18:24:36 SQL> 
18:24:36 SQL> -- Build a new SVM Model
18:24:36 SQL> BEGIN
18:24:36   2  	DBMS_DATA_MINING.CREATE_MODEL(
18:24:36   3  	  model_name	      => '&model_name',
18:24:36   4  	  mining_function     => dbms_data_mining.classification,
18:24:36   5  	  data_table_name     => 'svmc_build_prep',
18:24:36   6  	  case_id_column_name => '&case_id',
18:24:36   7  	  target_column_name  => '&target',
18:24:36   8  	  settings_table_name => 'svmc_settings');
18:24:36   9  END;
18:24:36  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:28.47
18:25:05 SQL> 
18:25:05 SQL> -----------------------------------------------------------------------
18:25:05 SQL> --			       APPLY/score THE MODEL
18:25:05 SQL> -----------------------------------------------------------------------
18:25:05 SQL> 
18:25:05 SQL> -- Cleanup old scoring data preparation objects for repeat runs
18:25:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
18:25:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:25:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
18:25:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:25:05 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
18:25:05   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:05   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:25:05 SQL> -----------------------
18:25:05 SQL> -- PREPARE SCORING DATA
18:25:05 SQL> --
18:25:05 SQL> -- If the data for model creation has been prepared, then the data
18:25:05 SQL> -- to be scored using the model must be prepared in the same manner
18:25:05 SQL> -- in order to obtain meaningful results.
18:25:05 SQL> --
18:25:05 SQL> -- 1. Missing Value treatment for all Predictors and
18:25:05 SQL> -- 2. Normalization
18:25:05 SQL> -- No outlier treatment will be performed during test and apply. The
18:25:05 SQL> -- normalization step is sufficient, since the normalization parameters
18:25:05 SQL> -- already capture the effects of outlier treatment done with build data.
18:25:05 SQL> --
18:25:05 SQL> BEGIN
18:25:05   2  	-- Xform Test data to replace missing values
18:25:05   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:25:05   4  	  miss_table_name => 'svmc_miss_num',
18:25:05   5  	  data_table_name => '&scoretable',
18:25:05   6  	  xform_view_name => 'xformed_apply_miss_num');
18:25:05   7  
18:25:05   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:25:05   9  	  miss_table_name => 'svmc_miss_cat',
18:25:05  10  	  data_table_name => '&scoretable',
18:25:05  11  	  xform_view_name => 'xformed_apply_miss_cat');
18:25:05  12  
18:25:05  13  	-- Normalize the data to be scored
18:25:05  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:25:05  15  	  norm_table_name => 'svmc_norm',
18:25:05  16  	  data_table_name => '&scoretable',
18:25:05  17  	  xform_view_name => 'svmc_apply_prep');
18:25:05  18  END;
18:25:05  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.30
18:25:06 SQL> 
18:25:06 SQL> -- Use same model_name used in score.sql
18:25:06 SQL> DEFINE model_name = 'forex14'
18:25:06 SQL> 
18:25:06 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
18:25:06 SQL> 
18:25:06 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
18:25:06 SQL> 
18:25:06 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
18:25:06   2  SELECT
18:25:06   3  prdate
18:25:06   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
18:25:06   5  ,sysdate
18:25:06   6  ,SUBSTR(prdate,1,3)pair
18:25:06   7  ,SUBSTR(prdate,4,19)ydate
18:25:06   8  FROM svmc_apply_prep
18:25:06   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.19
18:25:06 SQL> @aud_score1day.sql  2010-12-28 18:15:00
18:25:06 SQL> --
18:25:06 SQL> -- aud_score1day.sql
18:25:06 SQL> --
18:25:06 SQL> 
18:25:06 SQL> CREATE OR REPLACE VIEW sme AS
18:25:06   2  SELECT
18:25:06   3  'aud'||m.ydate prdate
18:25:06   4  ,NULL gatt
18:25:06   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:25:06   6  ,eur_g00
18:25:06   7  ,eur_g01
18:25:06   8  ,eur_g02
18:25:06   9  ,eur_g03
18:25:06  10  ,eur_g04
18:25:06  11  ,eur_g05
18:25:06  12  ,eur_g06
18:25:06  13  ,eur_g07
18:25:06  14  ,eur_g08
18:25:06  15  ,eur_g09
18:25:06  16  ,eur_g10
18:25:06  17  ,eur_g11
18:25:06  18  ,eur_g12
18:25:06  19  ,eur_g13
18:25:06  20  ,eur_g14
18:25:06  21  ,eur_g15
18:25:06  22  ,eur_g16
18:25:06  23  ,eur_g17
18:25:06  24  ,eur_g18
18:25:06  25  ,eur_g19
18:25:06  26  ,eur_g20
18:25:06  27  ,eur_g21
18:25:06  28  ,eur_g22
18:25:06  29  ,eur_g23
18:25:06  30  ,eur_g24
18:25:06  31  ,eur_g25
18:25:06  32  ,eur_g26
18:25:06  33  ,eur_g27
18:25:06  34  ,eur_g28
18:25:06  35  ,eur_g29
18:25:06  36  ,eur_g30
18:25:06  37  ,eur_g31
18:25:06  38  ,eur_g32
18:25:06  39  ,eur_g33
18:25:06  40  ,eur_g34
18:25:06  41  ,eur_g35
18:25:06  42  ,eur_g36
18:25:06  43  ,eur_g37
18:25:06  44  ,eur_g38
18:25:06  45  ,eur_g39
18:25:06  46  ,eur_g40
18:25:06  47  ,eur_g41
18:25:06  48  ,aud_g00
18:25:06  49  ,aud_g01
18:25:06  50  ,aud_g02
18:25:06  51  ,aud_g03
18:25:06  52  ,aud_g04
18:25:06  53  ,aud_g05
18:25:06  54  ,aud_g06
18:25:06  55  ,aud_g07
18:25:06  56  ,aud_g08
18:25:06  57  ,aud_g09
18:25:06  58  ,aud_g10
18:25:06  59  ,aud_g11
18:25:06  60  ,aud_g12
18:25:06  61  ,aud_g13
18:25:06  62  ,aud_g14
18:25:06  63  ,aud_g15
18:25:06  64  ,aud_g16
18:25:06  65  ,aud_g17
18:25:06  66  ,aud_g18
18:25:06  67  ,aud_g19
18:25:06  68  ,aud_g20
18:25:06  69  ,aud_g21
18:25:06  70  ,aud_g22
18:25:06  71  ,aud_g23
18:25:06  72  ,aud_g24
18:25:06  73  ,aud_g25
18:25:06  74  ,aud_g26
18:25:06  75  ,aud_g27
18:25:06  76  ,aud_g28
18:25:06  77  ,aud_g29
18:25:06  78  ,aud_g30
18:25:06  79  ,aud_g31
18:25:06  80  ,aud_g32
18:25:06  81  ,aud_g33
18:25:06  82  ,aud_g34
18:25:06  83  ,aud_g35
18:25:06  84  ,aud_g36
18:25:06  85  ,aud_g37
18:25:06  86  ,aud_g38
18:25:06  87  ,aud_g39
18:25:06  88  ,aud_g40
18:25:06  89  ,aud_g41
18:25:06  90  ,gbp_g00
18:25:06  91  ,gbp_g01
18:25:06  92  ,gbp_g02
18:25:06  93  ,gbp_g03
18:25:06  94  ,gbp_g04
18:25:06  95  ,gbp_g05
18:25:06  96  ,gbp_g06
18:25:06  97  ,gbp_g07
18:25:06  98  ,gbp_g08
18:25:06  99  ,gbp_g09
18:25:06 100  ,gbp_g10
18:25:06 101  ,gbp_g11
18:25:06 102  ,gbp_g12
18:25:06 103  ,gbp_g13
18:25:06 104  ,gbp_g14
18:25:06 105  ,gbp_g15
18:25:06 106  ,gbp_g16
18:25:06 107  ,gbp_g17
18:25:06 108  ,gbp_g18
18:25:06 109  ,gbp_g19
18:25:06 110  ,gbp_g20
18:25:06 111  ,gbp_g21
18:25:06 112  ,gbp_g22
18:25:06 113  ,gbp_g23
18:25:06 114  ,gbp_g24
18:25:06 115  ,gbp_g25
18:25:06 116  ,gbp_g26
18:25:06 117  ,gbp_g27
18:25:06 118  ,gbp_g28
18:25:06 119  ,gbp_g29
18:25:06 120  ,gbp_g30
18:25:06 121  ,gbp_g31
18:25:06 122  ,gbp_g32
18:25:06 123  ,gbp_g33
18:25:06 124  ,gbp_g34
18:25:06 125  ,gbp_g35
18:25:06 126  ,gbp_g36
18:25:06 127  ,gbp_g37
18:25:06 128  ,gbp_g38
18:25:06 129  ,gbp_g39
18:25:06 130  ,gbp_g40
18:25:06 131  ,gbp_g41
18:25:06 132  ,jpy_g00
18:25:06 133  ,jpy_g01
18:25:06 134  ,jpy_g02
18:25:06 135  ,jpy_g03
18:25:06 136  ,jpy_g04
18:25:06 137  ,jpy_g05
18:25:06 138  ,jpy_g06
18:25:06 139  ,jpy_g07
18:25:06 140  ,jpy_g08
18:25:06 141  ,jpy_g09
18:25:06 142  ,jpy_g10
18:25:06 143  ,jpy_g11
18:25:06 144  ,jpy_g12
18:25:06 145  ,jpy_g13
18:25:06 146  ,jpy_g14
18:25:06 147  ,jpy_g15
18:25:06 148  ,jpy_g16
18:25:06 149  ,jpy_g17
18:25:06 150  ,jpy_g18
18:25:06 151  ,jpy_g19
18:25:06 152  ,jpy_g20
18:25:06 153  ,jpy_g21
18:25:06 154  ,jpy_g22
18:25:06 155  ,jpy_g23
18:25:06 156  ,jpy_g24
18:25:06 157  ,jpy_g25
18:25:06 158  ,jpy_g26
18:25:06 159  ,jpy_g27
18:25:06 160  ,jpy_g28
18:25:06 161  ,jpy_g29
18:25:06 162  ,jpy_g30
18:25:06 163  ,jpy_g31
18:25:06 164  ,jpy_g32
18:25:06 165  ,jpy_g33
18:25:06 166  ,jpy_g34
18:25:06 167  ,jpy_g35
18:25:06 168  ,jpy_g36
18:25:06 169  ,jpy_g37
18:25:06 170  ,jpy_g38
18:25:06 171  ,jpy_g39
18:25:06 172  ,jpy_g40
18:25:06 173  ,jpy_g41
18:25:06 174  ,cad_g00
18:25:06 175  ,cad_g01
18:25:06 176  ,cad_g02
18:25:06 177  ,cad_g03
18:25:06 178  ,cad_g04
18:25:06 179  ,cad_g05
18:25:06 180  ,cad_g06
18:25:06 181  ,cad_g07
18:25:06 182  ,cad_g08
18:25:06 183  ,cad_g09
18:25:06 184  ,cad_g10
18:25:06 185  ,cad_g11
18:25:06 186  ,cad_g12
18:25:06 187  ,cad_g13
18:25:06 188  ,cad_g14
18:25:06 189  ,cad_g15
18:25:06 190  ,cad_g16
18:25:06 191  ,cad_g17
18:25:06 192  ,cad_g18
18:25:06 193  ,cad_g19
18:25:06 194  ,cad_g20
18:25:06 195  ,cad_g21
18:25:06 196  ,cad_g22
18:25:06 197  ,cad_g23
18:25:06 198  ,cad_g24
18:25:06 199  ,cad_g25
18:25:06 200  ,cad_g26
18:25:06 201  ,cad_g27
18:25:06 202  ,cad_g28
18:25:06 203  ,cad_g29
18:25:06 204  ,cad_g30
18:25:06 205  ,cad_g31
18:25:06 206  ,cad_g32
18:25:06 207  ,cad_g33
18:25:06 208  ,cad_g34
18:25:06 209  ,cad_g35
18:25:06 210  ,cad_g36
18:25:06 211  ,cad_g37
18:25:06 212  ,cad_g38
18:25:06 213  ,cad_g39
18:25:06 214  ,cad_g40
18:25:06 215  ,cad_g41
18:25:06 216  ,chf_g00
18:25:06 217  ,chf_g01
18:25:06 218  ,chf_g02
18:25:06 219  ,chf_g03
18:25:06 220  ,chf_g04
18:25:06 221  ,chf_g05
18:25:06 222  ,chf_g06
18:25:06 223  ,chf_g07
18:25:06 224  ,chf_g08
18:25:06 225  ,chf_g09
18:25:06 226  ,chf_g10
18:25:06 227  ,chf_g11
18:25:06 228  ,chf_g12
18:25:06 229  ,chf_g13
18:25:06 230  ,chf_g14
18:25:06 231  ,chf_g15
18:25:06 232  ,chf_g16
18:25:06 233  ,chf_g17
18:25:06 234  ,chf_g18
18:25:06 235  ,chf_g19
18:25:06 236  ,chf_g20
18:25:06 237  ,chf_g21
18:25:06 238  ,chf_g22
18:25:06 239  ,chf_g23
18:25:06 240  ,chf_g24
18:25:06 241  ,chf_g25
18:25:06 242  ,chf_g26
18:25:06 243  ,chf_g27
18:25:06 244  ,chf_g28
18:25:06 245  ,chf_g29
18:25:06 246  ,chf_g30
18:25:06 247  ,chf_g31
18:25:06 248  ,chf_g32
18:25:06 249  ,chf_g33
18:25:06 250  ,chf_g34
18:25:06 251  ,chf_g35
18:25:06 252  ,chf_g36
18:25:06 253  ,chf_g37
18:25:06 254  ,chf_g38
18:25:06 255  ,chf_g39
18:25:06 256  ,chf_g40
18:25:06 257  ,chf_g41
18:25:06 258  FROM aud_ms6 m
18:25:06 259  WHERE m.ydate = '&1'||' '||'&2'
18:25:06 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'18:15:00'

View created.

Elapsed: 00:00:00.15
18:25:07 SQL> 
18:25:07 SQL> -- rpt
18:25:07 SQL> -- We should see just 1 row:
18:25:07 SQL> 
18:25:07 SQL> SELECT COUNT(prdate) FROM sme
18:25:07   2  
18:25:07 SQL> -- Build the model:
18:25:07 SQL> CREATE OR REPLACE VIEW bme AS
18:25:07   2  SELECT
18:25:07   3  'aud'||m.ydate prdate
18:25:07   4  ,gatt
18:25:07   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:25:07   6  ,eur_g00
18:25:07   7  ,eur_g01
18:25:07   8  ,eur_g02
18:25:07   9  ,eur_g03
18:25:07  10  ,eur_g04
18:25:07  11  ,eur_g05
18:25:07  12  ,eur_g06
18:25:07  13  ,eur_g07
18:25:07  14  ,eur_g08
18:25:07  15  ,eur_g09
18:25:07  16  ,eur_g10
18:25:07  17  ,eur_g11
18:25:07  18  ,eur_g12
18:25:07  19  ,eur_g13
18:25:07  20  ,eur_g14
18:25:07  21  ,eur_g15
18:25:07  22  ,eur_g16
18:25:07  23  ,eur_g17
18:25:07  24  ,eur_g18
18:25:07  25  ,eur_g19
18:25:07  26  ,eur_g20
18:25:07  27  ,eur_g21
18:25:07  28  ,eur_g22
18:25:07  29  ,eur_g23
18:25:07  30  ,eur_g24
18:25:07  31  ,eur_g25
18:25:07  32  ,eur_g26
18:25:07  33  ,eur_g27
18:25:07  34  ,eur_g28
18:25:07  35  ,eur_g29
18:25:07  36  ,eur_g30
18:25:07  37  ,eur_g31
18:25:07  38  ,eur_g32
18:25:07  39  ,eur_g33
18:25:07  40  ,eur_g34
18:25:07  41  ,eur_g35
18:25:07  42  ,eur_g36
18:25:07  43  ,eur_g37
18:25:07  44  ,eur_g38
18:25:07  45  ,eur_g39
18:25:07  46  ,eur_g40
18:25:07  47  ,eur_g41
18:25:07  48  ,aud_g00
18:25:07  49  ,aud_g01
18:25:07  50  ,aud_g02
18:25:07  51  ,aud_g03
18:25:07  52  ,aud_g04
18:25:07  53  ,aud_g05
18:25:07  54  ,aud_g06
18:25:07  55  ,aud_g07
18:25:07  56  ,aud_g08
18:25:07  57  ,aud_g09
18:25:07  58  ,aud_g10
18:25:07  59  ,aud_g11
18:25:07  60  ,aud_g12
18:25:07  61  ,aud_g13
18:25:07  62  ,aud_g14
18:25:07  63  ,aud_g15
18:25:07  64  ,aud_g16
18:25:07  65  ,aud_g17
18:25:07  66  ,aud_g18
18:25:07  67  ,aud_g19
18:25:07  68  ,aud_g20
18:25:07  69  ,aud_g21
18:25:07  70  ,aud_g22
18:25:07  71  ,aud_g23
18:25:07  72  ,aud_g24
18:25:07  73  ,aud_g25
18:25:07  74  ,aud_g26
18:25:07  75  ,aud_g27
18:25:07  76  ,aud_g28
18:25:07  77  ,aud_g29
18:25:07  78  ,aud_g30
18:25:07  79  ,aud_g31
18:25:07  80  ,aud_g32
18:25:07  81  ,aud_g33
18:25:07  82  ,aud_g34
18:25:07  83  ,aud_g35
18:25:07  84  ,aud_g36
18:25:07  85  ,aud_g37
18:25:07  86  ,aud_g38
18:25:07  87  ,aud_g39
18:25:07  88  ,aud_g40
18:25:07  89  ,aud_g41
18:25:07  90  ,gbp_g00
18:25:07  91  ,gbp_g01
18:25:07  92  ,gbp_g02
18:25:07  93  ,gbp_g03
18:25:07  94  ,gbp_g04
18:25:07  95  ,gbp_g05
18:25:07  96  ,gbp_g06
18:25:07  97  ,gbp_g07
18:25:07  98  ,gbp_g08
18:25:07  99  ,gbp_g09
18:25:07 100  ,gbp_g10
18:25:07 101  ,gbp_g11
18:25:07 102  ,gbp_g12
18:25:07 103  ,gbp_g13
18:25:07 104  ,gbp_g14
18:25:07 105  ,gbp_g15
18:25:07 106  ,gbp_g16
18:25:07 107  ,gbp_g17
18:25:07 108  ,gbp_g18
18:25:07 109  ,gbp_g19
18:25:07 110  ,gbp_g20
18:25:07 111  ,gbp_g21
18:25:07 112  ,gbp_g22
18:25:07 113  ,gbp_g23
18:25:07 114  ,gbp_g24
18:25:07 115  ,gbp_g25
18:25:07 116  ,gbp_g26
18:25:07 117  ,gbp_g27
18:25:07 118  ,gbp_g28
18:25:07 119  ,gbp_g29
18:25:07 120  ,gbp_g30
18:25:07 121  ,gbp_g31
18:25:07 122  ,gbp_g32
18:25:07 123  ,gbp_g33
18:25:07 124  ,gbp_g34
18:25:07 125  ,gbp_g35
18:25:07 126  ,gbp_g36
18:25:07 127  ,gbp_g37
18:25:07 128  ,gbp_g38
18:25:07 129  ,gbp_g39
18:25:07 130  ,gbp_g40
18:25:07 131  ,gbp_g41
18:25:07 132  ,jpy_g00
18:25:07 133  ,jpy_g01
18:25:07 134  ,jpy_g02
18:25:07 135  ,jpy_g03
18:25:07 136  ,jpy_g04
18:25:07 137  ,jpy_g05
18:25:07 138  ,jpy_g06
18:25:07 139  ,jpy_g07
18:25:07 140  ,jpy_g08
18:25:07 141  ,jpy_g09
18:25:07 142  ,jpy_g10
18:25:07 143  ,jpy_g11
18:25:07 144  ,jpy_g12
18:25:07 145  ,jpy_g13
18:25:07 146  ,jpy_g14
18:25:07 147  ,jpy_g15
18:25:07 148  ,jpy_g16
18:25:07 149  ,jpy_g17
18:25:07 150  ,jpy_g18
18:25:07 151  ,jpy_g19
18:25:07 152  ,jpy_g20
18:25:07 153  ,jpy_g21
18:25:07 154  ,jpy_g22
18:25:07 155  ,jpy_g23
18:25:07 156  ,jpy_g24
18:25:07 157  ,jpy_g25
18:25:07 158  ,jpy_g26
18:25:07 159  ,jpy_g27
18:25:07 160  ,jpy_g28
18:25:07 161  ,jpy_g29
18:25:07 162  ,jpy_g30
18:25:07 163  ,jpy_g31
18:25:07 164  ,jpy_g32
18:25:07 165  ,jpy_g33
18:25:07 166  ,jpy_g34
18:25:07 167  ,jpy_g35
18:25:07 168  ,jpy_g36
18:25:07 169  ,jpy_g37
18:25:07 170  ,jpy_g38
18:25:07 171  ,jpy_g39
18:25:07 172  ,jpy_g40
18:25:07 173  ,jpy_g41
18:25:07 174  ,cad_g00
18:25:07 175  ,cad_g01
18:25:07 176  ,cad_g02
18:25:07 177  ,cad_g03
18:25:07 178  ,cad_g04
18:25:07 179  ,cad_g05
18:25:07 180  ,cad_g06
18:25:07 181  ,cad_g07
18:25:07 182  ,cad_g08
18:25:07 183  ,cad_g09
18:25:07 184  ,cad_g10
18:25:07 185  ,cad_g11
18:25:07 186  ,cad_g12
18:25:07 187  ,cad_g13
18:25:07 188  ,cad_g14
18:25:07 189  ,cad_g15
18:25:07 190  ,cad_g16
18:25:07 191  ,cad_g17
18:25:07 192  ,cad_g18
18:25:07 193  ,cad_g19
18:25:07 194  ,cad_g20
18:25:07 195  ,cad_g21
18:25:07 196  ,cad_g22
18:25:07 197  ,cad_g23
18:25:07 198  ,cad_g24
18:25:07 199  ,cad_g25
18:25:07 200  ,cad_g26
18:25:07 201  ,cad_g27
18:25:07 202  ,cad_g28
18:25:07 203  ,cad_g29
18:25:07 204  ,cad_g30
18:25:07 205  ,cad_g31
18:25:07 206  ,cad_g32
18:25:07 207  ,cad_g33
18:25:07 208  ,cad_g34
18:25:07 209  ,cad_g35
18:25:07 210  ,cad_g36
18:25:07 211  ,cad_g37
18:25:07 212  ,cad_g38
18:25:07 213  ,cad_g39
18:25:07 214  ,cad_g40
18:25:07 215  ,cad_g41
18:25:07 216  ,chf_g00
18:25:07 217  ,chf_g01
18:25:07 218  ,chf_g02
18:25:07 219  ,chf_g03
18:25:07 220  ,chf_g04
18:25:07 221  ,chf_g05
18:25:07 222  ,chf_g06
18:25:07 223  ,chf_g07
18:25:07 224  ,chf_g08
18:25:07 225  ,chf_g09
18:25:07 226  ,chf_g10
18:25:07 227  ,chf_g11
18:25:07 228  ,chf_g12
18:25:07 229  ,chf_g13
18:25:07 230  ,chf_g14
18:25:07 231  ,chf_g15
18:25:07 232  ,chf_g16
18:25:07 233  ,chf_g17
18:25:07 234  ,chf_g18
18:25:07 235  ,chf_g19
18:25:07 236  ,chf_g20
18:25:07 237  ,chf_g21
18:25:07 238  ,chf_g22
18:25:07 239  ,chf_g23
18:25:07 240  ,chf_g24
18:25:07 241  ,chf_g25
18:25:07 242  ,chf_g26
18:25:07 243  ,chf_g27
18:25:07 244  ,chf_g28
18:25:07 245  ,chf_g29
18:25:07 246  ,chf_g30
18:25:07 247  ,chf_g31
18:25:07 248  ,chf_g32
18:25:07 249  ,chf_g33
18:25:07 250  ,chf_g34
18:25:07 251  ,chf_g35
18:25:07 252  ,chf_g36
18:25:07 253  ,chf_g37
18:25:07 254  ,chf_g38
18:25:07 255  ,chf_g39
18:25:07 256  ,chf_g40
18:25:07 257  ,chf_g41
18:25:07 258  FROM aud_ms6 m
18:25:07 259  WHERE gatt IN('nup','up')
18:25:07 260  AND 1+m.ydate < '&1'||' '||'&2'
18:25:07 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'18:15:00'

View created.

Elapsed: 00:00:00.11
18:25:07 SQL> 
18:25:07 SQL> -- rpt
18:25:07 SQL> 
18:25:07 SQL> SELECT gatt, COUNT(prdate) FROM bme GROUP BY gatt
18:25:07   2  
18:25:07 SQL> SELECT MAX(prdate) FROM bme
18:25:07   2  
18:25:07 SQL> -- Now build model from bme and score sme
18:25:07 SQL> @score1.sql
18:25:07 SQL> -- score1.sql
18:25:07 SQL> 
18:25:07 SQL> -- Does the 1st SVM score
18:25:07 SQL> 
18:25:07 SQL> -- Fill up svmc_apply_prep
18:25:07 SQL> @score.sql
18:25:07 SQL> --
18:25:07 SQL> -- score.sql
18:25:07 SQL> --
18:25:07 SQL> 
18:25:07 SQL> -- usage: score.sql
18:25:07 SQL> 
18:25:07 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
18:25:07 SQL> 
18:25:07 SQL> DEFINE target	= 'gatt'
18:25:07 SQL> DEFINE model_name = 'forex14'
18:25:07 SQL> DEFINE bldtable	= 'bme'
18:25:07 SQL> DEFINE scoretable = 'sme'
18:25:07 SQL> DEFINE case_id	= 'prdate'
18:25:07 SQL> 
18:25:07 SQL> -- Define a variable to help me exclude some columns from some data mining calls
18:25:07 SQL> DEFINE exclude1 = "'&target','&case_id'"
18:25:07 SQL> 
18:25:07 SQL> -- Builds an SVM model using pl/sql.
18:25:07 SQL> 
18:25:07 SQL> -----------------------------------------------------------------------
18:25:07 SQL> --			    BUILD THE MODEL
18:25:07 SQL> -----------------------------------------------------------------------
18:25:07 SQL> 
18:25:07 SQL> -- Cleanup old build data preparation objects for repeat runs
18:25:07 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
18:25:07 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
18:25:07 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
18:25:07 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
18:25:07 SQL> 
18:25:07 SQL> 
18:25:07 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
18:25:07 SQL> --
18:25:07 SQL> -- DROP	TABLE svmc_settings ;
18:25:07 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
18:25:07 SQL> -- DELETE svmc_settings;
18:25:07 SQL> 
18:25:07 SQL> -- The default classification algorithm is Naive Bayes. So override
18:25:07 SQL> -- this choice to SVM using a settings table.
18:25:07 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
18:25:07 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
18:25:07 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
18:25:07 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
18:25:07 SQL> -- models.
18:25:07 SQL> --
18:25:07 SQL> 
18:25:07 SQL> -- Do this once and then comment it out.
18:25:07 SQL> -- That makes script go faster.
18:25:07 SQL> -- BEGIN
18:25:07 SQL> -- -- Populate settings table
18:25:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:25:07 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
18:25:07 SQL> --
18:25:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:25:07 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
18:25:07 SQL> --
18:25:07 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:25:07 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
18:25:07 SQL> --   COMMIT;
18:25:07 SQL> -- END;
18:25:07 SQL> -- /
18:25:07 SQL> 
18:25:07 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
18:25:07 SQL> 
18:25:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
18:25:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:25:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
18:25:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:25:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
18:25:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:25:07 SQL> 
18:25:07 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
18:25:07   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:07   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:25:07 SQL> 
18:25:07 SQL> --------------------------------
18:25:07 SQL> -- PREPARE BUILD (TRAINING) DATA
18:25:07 SQL> --
18:25:07 SQL> 
18:25:07 SQL> -- 1. Missing Value treatment for all Predictors and
18:25:07 SQL> -- 2. Outlier Treatment and
18:25:07 SQL> -- 3. Normalization are performed below.
18:25:07 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
18:25:07 SQL> --    normalized here.
18:25:07 SQL> 
18:25:07 SQL> BEGIN
18:25:07   2  	-- Perform missing value treatment for all predictors
18:25:07   3  	-- create miss tables
18:25:07   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
18:25:07   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
18:25:07   6  
18:25:07   7  	-- populate miss tables
18:25:07   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
18:25:07   9  	  miss_table_name => 'svmc_miss_num',
18:25:07  10  	  data_table_name => '&bldtable',
18:25:07  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:25:07  12  
18:25:07  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
18:25:07  14  	  miss_table_name => 'svmc_miss_cat',
18:25:07  15  	  data_table_name => '&bldtable',
18:25:07  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:25:07  17  
18:25:07  18  	-- xform input data to replace missing values
18:25:07  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:25:07  20  	  miss_table_name => 'svmc_miss_num',
18:25:07  21  	  data_table_name => '&bldtable',
18:25:07  22  	  xform_view_name => 'xformed_build_miss_num');
18:25:07  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:25:07  24  	  miss_table_name => 'svmc_miss_cat',
18:25:07  25  	  data_table_name => '&bldtable',
18:25:07  26  	  xform_view_name => 'xformed_build_miss_cat');
18:25:07  27  
18:25:07  28  	-- Perform outlier treatment.
18:25:07  29  	-- create clip table
18:25:07  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
18:25:07  31  
18:25:07  32  	-- populate clip table
18:25:07  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
18:25:07  34  	  clip_table_name => 'svmc_clip',
18:25:07  35  	  data_table_name => '&bldtable',
18:25:07  36  	  tail_frac	  => 0.025,
18:25:07  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:25:07  38  
18:25:07  39  	-- xform input data to winsorized data
18:25:07  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
18:25:07  41  	  clip_table_name => 'svmc_clip',
18:25:07  42  	  data_table_name => '&bldtable',
18:25:07  43  	  xform_view_name => 'svmc_winsor');
18:25:07  44  
18:25:07  45  	-- create normalization table
18:25:07  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
18:25:07  47  
18:25:07  48  	-- populate normalization table based on winsorized data
18:25:07  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
18:25:07  50  	  norm_table_name => 'svmc_norm',
18:25:07  51  	  data_table_name => 'svmc_winsor',
18:25:07  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:25:07  53  
18:25:07  54  	-- normalize the original data
18:25:07  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:25:07  56  	  norm_table_name => 'svmc_norm',
18:25:07  57  	  data_table_name => '&bldtable',
18:25:07  58  	  xform_view_name => 'svmc_build_prep');
18:25:07  59  END;
18:25:07  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gatt','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.26
18:25:24 SQL> 
18:25:24 SQL> ---------------------
18:25:24 SQL> -- CREATE A NEW MODEL
18:25:24 SQL> --
18:25:24 SQL> -- Cleanup old model with the same name for repeat runs
18:25:24 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
18:25:24   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:24   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.18
18:25:25 SQL> 
18:25:25 SQL> -- Build a new SVM Model
18:25:25 SQL> BEGIN
18:25:25   2  	DBMS_DATA_MINING.CREATE_MODEL(
18:25:25   3  	  model_name	      => '&model_name',
18:25:25   4  	  mining_function     => dbms_data_mining.classification,
18:25:25   5  	  data_table_name     => 'svmc_build_prep',
18:25:25   6  	  case_id_column_name => '&case_id',
18:25:25   7  	  target_column_name  => '&target',
18:25:25   8  	  settings_table_name => 'svmc_settings');
18:25:25   9  END;
18:25:25  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gatt',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.48
18:25:52 SQL> 
18:25:52 SQL> -----------------------------------------------------------------------
18:25:52 SQL> --			       APPLY/score THE MODEL
18:25:52 SQL> -----------------------------------------------------------------------
18:25:52 SQL> 
18:25:52 SQL> -- Cleanup old scoring data preparation objects for repeat runs
18:25:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
18:25:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:25:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
18:25:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:25:52 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
18:25:52   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:52   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:25:52 SQL> -----------------------
18:25:52 SQL> -- PREPARE SCORING DATA
18:25:52 SQL> --
18:25:52 SQL> -- If the data for model creation has been prepared, then the data
18:25:52 SQL> -- to be scored using the model must be prepared in the same manner
18:25:52 SQL> -- in order to obtain meaningful results.
18:25:52 SQL> --
18:25:52 SQL> -- 1. Missing Value treatment for all Predictors and
18:25:52 SQL> -- 2. Normalization
18:25:52 SQL> -- No outlier treatment will be performed during test and apply. The
18:25:52 SQL> -- normalization step is sufficient, since the normalization parameters
18:25:52 SQL> -- already capture the effects of outlier treatment done with build data.
18:25:52 SQL> --
18:25:52 SQL> BEGIN
18:25:52   2  	-- Xform Test data to replace missing values
18:25:52   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:25:52   4  	  miss_table_name => 'svmc_miss_num',
18:25:52   5  	  data_table_name => '&scoretable',
18:25:52   6  	  xform_view_name => 'xformed_apply_miss_num');
18:25:52   7  
18:25:52   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:25:52   9  	  miss_table_name => 'svmc_miss_cat',
18:25:52  10  	  data_table_name => '&scoretable',
18:25:52  11  	  xform_view_name => 'xformed_apply_miss_cat');
18:25:52  12  
18:25:52  13  	-- Normalize the data to be scored
18:25:52  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:25:52  15  	  norm_table_name => 'svmc_norm',
18:25:52  16  	  data_table_name => '&scoretable',
18:25:52  17  	  xform_view_name => 'svmc_apply_prep');
18:25:52  18  END;
18:25:52  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
18:25:53 SQL> 
18:25:53 SQL> -- Use same model_name used in score.sql
18:25:53 SQL> DEFINE model_name = 'forex14'
18:25:53 SQL> 
18:25:53 SQL> -- CREATE TABLE fxscores6 (prdate VARCHAR2(30),score NUMBER,rundate DATE,pair VARCHAR2(8),ydate DATE);
18:25:53 SQL> 
18:25:53 SQL> DELETE fxscores6 WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
18:25:53 SQL> 
18:25:53 SQL> INSERT INTO fxscores6 (prdate,score,rundate,pair,ydate)
18:25:53   2  SELECT
18:25:53   3  prdate
18:25:53   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
18:25:53   5  ,sysdate
18:25:53   6  ,SUBSTR(prdate,1,3)pair
18:25:53   7  ,SUBSTR(prdate,4,19)ydate
18:25:53   8  FROM svmc_apply_prep
18:25:53   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
18:25:53 SQL> @aud_score1day_gattn.sql	2010-12-28 18:00:00
18:25:53 SQL> --
18:25:53 SQL> -- aud_score1day_gattn.sql
18:25:53 SQL> --
18:25:53 SQL> 
18:25:53 SQL> CREATE OR REPLACE VIEW sme AS
18:25:53   2  SELECT
18:25:53   3  'aud'||m.ydate prdate
18:25:53   4  ,NULL gattn
18:25:53   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:25:53   6  ,eur_g00
18:25:53   7  ,eur_g01
18:25:53   8  ,eur_g02
18:25:53   9  ,eur_g03
18:25:53  10  ,eur_g04
18:25:53  11  ,eur_g05
18:25:53  12  ,eur_g06
18:25:53  13  ,eur_g07
18:25:53  14  ,eur_g08
18:25:53  15  ,eur_g09
18:25:53  16  ,eur_g10
18:25:53  17  ,eur_g11
18:25:53  18  ,eur_g12
18:25:53  19  ,eur_g13
18:25:53  20  ,eur_g14
18:25:53  21  ,eur_g15
18:25:53  22  ,eur_g16
18:25:53  23  ,eur_g17
18:25:53  24  ,eur_g18
18:25:53  25  ,eur_g19
18:25:53  26  ,eur_g20
18:25:53  27  ,eur_g21
18:25:53  28  ,eur_g22
18:25:53  29  ,eur_g23
18:25:53  30  ,eur_g24
18:25:53  31  ,eur_g25
18:25:53  32  ,eur_g26
18:25:53  33  ,eur_g27
18:25:53  34  ,eur_g28
18:25:53  35  ,eur_g29
18:25:53  36  ,eur_g30
18:25:53  37  ,eur_g31
18:25:53  38  ,eur_g32
18:25:53  39  ,eur_g33
18:25:53  40  ,eur_g34
18:25:53  41  ,eur_g35
18:25:53  42  ,eur_g36
18:25:53  43  ,eur_g37
18:25:53  44  ,eur_g38
18:25:53  45  ,eur_g39
18:25:53  46  ,eur_g40
18:25:53  47  ,eur_g41
18:25:53  48  ,aud_g00
18:25:53  49  ,aud_g01
18:25:53  50  ,aud_g02
18:25:53  51  ,aud_g03
18:25:53  52  ,aud_g04
18:25:53  53  ,aud_g05
18:25:53  54  ,aud_g06
18:25:53  55  ,aud_g07
18:25:53  56  ,aud_g08
18:25:53  57  ,aud_g09
18:25:53  58  ,aud_g10
18:25:53  59  ,aud_g11
18:25:53  60  ,aud_g12
18:25:53  61  ,aud_g13
18:25:53  62  ,aud_g14
18:25:53  63  ,aud_g15
18:25:53  64  ,aud_g16
18:25:53  65  ,aud_g17
18:25:53  66  ,aud_g18
18:25:53  67  ,aud_g19
18:25:53  68  ,aud_g20
18:25:53  69  ,aud_g21
18:25:53  70  ,aud_g22
18:25:53  71  ,aud_g23
18:25:53  72  ,aud_g24
18:25:53  73  ,aud_g25
18:25:53  74  ,aud_g26
18:25:53  75  ,aud_g27
18:25:53  76  ,aud_g28
18:25:53  77  ,aud_g29
18:25:53  78  ,aud_g30
18:25:53  79  ,aud_g31
18:25:53  80  ,aud_g32
18:25:53  81  ,aud_g33
18:25:53  82  ,aud_g34
18:25:53  83  ,aud_g35
18:25:53  84  ,aud_g36
18:25:53  85  ,aud_g37
18:25:53  86  ,aud_g38
18:25:53  87  ,aud_g39
18:25:53  88  ,aud_g40
18:25:53  89  ,aud_g41
18:25:53  90  ,gbp_g00
18:25:53  91  ,gbp_g01
18:25:53  92  ,gbp_g02
18:25:53  93  ,gbp_g03
18:25:53  94  ,gbp_g04
18:25:53  95  ,gbp_g05
18:25:53  96  ,gbp_g06
18:25:53  97  ,gbp_g07
18:25:53  98  ,gbp_g08
18:25:53  99  ,gbp_g09
18:25:53 100  ,gbp_g10
18:25:53 101  ,gbp_g11
18:25:53 102  ,gbp_g12
18:25:53 103  ,gbp_g13
18:25:53 104  ,gbp_g14
18:25:53 105  ,gbp_g15
18:25:53 106  ,gbp_g16
18:25:53 107  ,gbp_g17
18:25:53 108  ,gbp_g18
18:25:53 109  ,gbp_g19
18:25:53 110  ,gbp_g20
18:25:53 111  ,gbp_g21
18:25:53 112  ,gbp_g22
18:25:53 113  ,gbp_g23
18:25:53 114  ,gbp_g24
18:25:53 115  ,gbp_g25
18:25:53 116  ,gbp_g26
18:25:53 117  ,gbp_g27
18:25:53 118  ,gbp_g28
18:25:53 119  ,gbp_g29
18:25:53 120  ,gbp_g30
18:25:53 121  ,gbp_g31
18:25:53 122  ,gbp_g32
18:25:53 123  ,gbp_g33
18:25:53 124  ,gbp_g34
18:25:53 125  ,gbp_g35
18:25:53 126  ,gbp_g36
18:25:53 127  ,gbp_g37
18:25:53 128  ,gbp_g38
18:25:53 129  ,gbp_g39
18:25:53 130  ,gbp_g40
18:25:53 131  ,gbp_g41
18:25:53 132  ,jpy_g00
18:25:53 133  ,jpy_g01
18:25:53 134  ,jpy_g02
18:25:53 135  ,jpy_g03
18:25:53 136  ,jpy_g04
18:25:53 137  ,jpy_g05
18:25:53 138  ,jpy_g06
18:25:53 139  ,jpy_g07
18:25:53 140  ,jpy_g08
18:25:53 141  ,jpy_g09
18:25:53 142  ,jpy_g10
18:25:53 143  ,jpy_g11
18:25:53 144  ,jpy_g12
18:25:53 145  ,jpy_g13
18:25:53 146  ,jpy_g14
18:25:53 147  ,jpy_g15
18:25:53 148  ,jpy_g16
18:25:53 149  ,jpy_g17
18:25:53 150  ,jpy_g18
18:25:53 151  ,jpy_g19
18:25:53 152  ,jpy_g20
18:25:53 153  ,jpy_g21
18:25:53 154  ,jpy_g22
18:25:53 155  ,jpy_g23
18:25:53 156  ,jpy_g24
18:25:53 157  ,jpy_g25
18:25:53 158  ,jpy_g26
18:25:53 159  ,jpy_g27
18:25:53 160  ,jpy_g28
18:25:53 161  ,jpy_g29
18:25:53 162  ,jpy_g30
18:25:53 163  ,jpy_g31
18:25:53 164  ,jpy_g32
18:25:53 165  ,jpy_g33
18:25:53 166  ,jpy_g34
18:25:53 167  ,jpy_g35
18:25:53 168  ,jpy_g36
18:25:53 169  ,jpy_g37
18:25:53 170  ,jpy_g38
18:25:53 171  ,jpy_g39
18:25:53 172  ,jpy_g40
18:25:53 173  ,jpy_g41
18:25:53 174  ,cad_g00
18:25:53 175  ,cad_g01
18:25:53 176  ,cad_g02
18:25:53 177  ,cad_g03
18:25:53 178  ,cad_g04
18:25:53 179  ,cad_g05
18:25:53 180  ,cad_g06
18:25:53 181  ,cad_g07
18:25:53 182  ,cad_g08
18:25:53 183  ,cad_g09
18:25:53 184  ,cad_g10
18:25:53 185  ,cad_g11
18:25:53 186  ,cad_g12
18:25:53 187  ,cad_g13
18:25:53 188  ,cad_g14
18:25:53 189  ,cad_g15
18:25:53 190  ,cad_g16
18:25:53 191  ,cad_g17
18:25:53 192  ,cad_g18
18:25:53 193  ,cad_g19
18:25:53 194  ,cad_g20
18:25:53 195  ,cad_g21
18:25:53 196  ,cad_g22
18:25:53 197  ,cad_g23
18:25:53 198  ,cad_g24
18:25:53 199  ,cad_g25
18:25:53 200  ,cad_g26
18:25:53 201  ,cad_g27
18:25:53 202  ,cad_g28
18:25:53 203  ,cad_g29
18:25:53 204  ,cad_g30
18:25:53 205  ,cad_g31
18:25:53 206  ,cad_g32
18:25:53 207  ,cad_g33
18:25:53 208  ,cad_g34
18:25:53 209  ,cad_g35
18:25:53 210  ,cad_g36
18:25:53 211  ,cad_g37
18:25:53 212  ,cad_g38
18:25:53 213  ,cad_g39
18:25:53 214  ,cad_g40
18:25:53 215  ,cad_g41
18:25:53 216  ,chf_g00
18:25:53 217  ,chf_g01
18:25:53 218  ,chf_g02
18:25:53 219  ,chf_g03
18:25:53 220  ,chf_g04
18:25:53 221  ,chf_g05
18:25:53 222  ,chf_g06
18:25:53 223  ,chf_g07
18:25:53 224  ,chf_g08
18:25:53 225  ,chf_g09
18:25:53 226  ,chf_g10
18:25:53 227  ,chf_g11
18:25:53 228  ,chf_g12
18:25:53 229  ,chf_g13
18:25:53 230  ,chf_g14
18:25:53 231  ,chf_g15
18:25:53 232  ,chf_g16
18:25:53 233  ,chf_g17
18:25:53 234  ,chf_g18
18:25:53 235  ,chf_g19
18:25:53 236  ,chf_g20
18:25:53 237  ,chf_g21
18:25:53 238  ,chf_g22
18:25:53 239  ,chf_g23
18:25:53 240  ,chf_g24
18:25:53 241  ,chf_g25
18:25:53 242  ,chf_g26
18:25:53 243  ,chf_g27
18:25:53 244  ,chf_g28
18:25:53 245  ,chf_g29
18:25:53 246  ,chf_g30
18:25:53 247  ,chf_g31
18:25:53 248  ,chf_g32
18:25:53 249  ,chf_g33
18:25:53 250  ,chf_g34
18:25:53 251  ,chf_g35
18:25:53 252  ,chf_g36
18:25:53 253  ,chf_g37
18:25:53 254  ,chf_g38
18:25:53 255  ,chf_g39
18:25:53 256  ,chf_g40
18:25:53 257  ,chf_g41
18:25:53 258  FROM aud_ms6 m
18:25:53 259  WHERE m.ydate = '&1'||' '||'&2'
18:25:53 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'18:00:00'

View created.

Elapsed: 00:00:00.13
18:25:54 SQL> 
18:25:54 SQL> -- rpt
18:25:54 SQL> -- We should see just 1 row:
18:25:54 SQL> 
18:25:54 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
18:25:54 SQL> 
18:25:54 SQL> -- Build the model:
18:25:54 SQL> CREATE OR REPLACE VIEW bme AS
18:25:54   2  SELECT
18:25:54   3  'aud'||m.ydate prdate
18:25:54   4  ,gattn
18:25:54   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:25:54   6  ,eur_g00
18:25:54   7  ,eur_g01
18:25:54   8  ,eur_g02
18:25:54   9  ,eur_g03
18:25:54  10  ,eur_g04
18:25:54  11  ,eur_g05
18:25:54  12  ,eur_g06
18:25:54  13  ,eur_g07
18:25:54  14  ,eur_g08
18:25:54  15  ,eur_g09
18:25:54  16  ,eur_g10
18:25:54  17  ,eur_g11
18:25:54  18  ,eur_g12
18:25:54  19  ,eur_g13
18:25:54  20  ,eur_g14
18:25:54  21  ,eur_g15
18:25:54  22  ,eur_g16
18:25:54  23  ,eur_g17
18:25:54  24  ,eur_g18
18:25:54  25  ,eur_g19
18:25:54  26  ,eur_g20
18:25:54  27  ,eur_g21
18:25:54  28  ,eur_g22
18:25:54  29  ,eur_g23
18:25:54  30  ,eur_g24
18:25:54  31  ,eur_g25
18:25:54  32  ,eur_g26
18:25:54  33  ,eur_g27
18:25:54  34  ,eur_g28
18:25:54  35  ,eur_g29
18:25:54  36  ,eur_g30
18:25:54  37  ,eur_g31
18:25:54  38  ,eur_g32
18:25:54  39  ,eur_g33
18:25:54  40  ,eur_g34
18:25:54  41  ,eur_g35
18:25:54  42  ,eur_g36
18:25:54  43  ,eur_g37
18:25:54  44  ,eur_g38
18:25:54  45  ,eur_g39
18:25:54  46  ,eur_g40
18:25:54  47  ,eur_g41
18:25:54  48  ,aud_g00
18:25:54  49  ,aud_g01
18:25:54  50  ,aud_g02
18:25:54  51  ,aud_g03
18:25:54  52  ,aud_g04
18:25:54  53  ,aud_g05
18:25:54  54  ,aud_g06
18:25:54  55  ,aud_g07
18:25:54  56  ,aud_g08
18:25:54  57  ,aud_g09
18:25:54  58  ,aud_g10
18:25:54  59  ,aud_g11
18:25:54  60  ,aud_g12
18:25:54  61  ,aud_g13
18:25:54  62  ,aud_g14
18:25:54  63  ,aud_g15
18:25:54  64  ,aud_g16
18:25:54  65  ,aud_g17
18:25:54  66  ,aud_g18
18:25:54  67  ,aud_g19
18:25:54  68  ,aud_g20
18:25:54  69  ,aud_g21
18:25:54  70  ,aud_g22
18:25:54  71  ,aud_g23
18:25:54  72  ,aud_g24
18:25:54  73  ,aud_g25
18:25:54  74  ,aud_g26
18:25:54  75  ,aud_g27
18:25:54  76  ,aud_g28
18:25:54  77  ,aud_g29
18:25:54  78  ,aud_g30
18:25:54  79  ,aud_g31
18:25:54  80  ,aud_g32
18:25:54  81  ,aud_g33
18:25:54  82  ,aud_g34
18:25:54  83  ,aud_g35
18:25:54  84  ,aud_g36
18:25:54  85  ,aud_g37
18:25:54  86  ,aud_g38
18:25:54  87  ,aud_g39
18:25:54  88  ,aud_g40
18:25:54  89  ,aud_g41
18:25:54  90  ,gbp_g00
18:25:54  91  ,gbp_g01
18:25:54  92  ,gbp_g02
18:25:54  93  ,gbp_g03
18:25:54  94  ,gbp_g04
18:25:54  95  ,gbp_g05
18:25:54  96  ,gbp_g06
18:25:54  97  ,gbp_g07
18:25:54  98  ,gbp_g08
18:25:54  99  ,gbp_g09
18:25:54 100  ,gbp_g10
18:25:54 101  ,gbp_g11
18:25:54 102  ,gbp_g12
18:25:54 103  ,gbp_g13
18:25:54 104  ,gbp_g14
18:25:54 105  ,gbp_g15
18:25:54 106  ,gbp_g16
18:25:54 107  ,gbp_g17
18:25:54 108  ,gbp_g18
18:25:54 109  ,gbp_g19
18:25:54 110  ,gbp_g20
18:25:54 111  ,gbp_g21
18:25:54 112  ,gbp_g22
18:25:54 113  ,gbp_g23
18:25:54 114  ,gbp_g24
18:25:54 115  ,gbp_g25
18:25:54 116  ,gbp_g26
18:25:54 117  ,gbp_g27
18:25:54 118  ,gbp_g28
18:25:54 119  ,gbp_g29
18:25:54 120  ,gbp_g30
18:25:54 121  ,gbp_g31
18:25:54 122  ,gbp_g32
18:25:54 123  ,gbp_g33
18:25:54 124  ,gbp_g34
18:25:54 125  ,gbp_g35
18:25:54 126  ,gbp_g36
18:25:54 127  ,gbp_g37
18:25:54 128  ,gbp_g38
18:25:54 129  ,gbp_g39
18:25:54 130  ,gbp_g40
18:25:54 131  ,gbp_g41
18:25:54 132  ,jpy_g00
18:25:54 133  ,jpy_g01
18:25:54 134  ,jpy_g02
18:25:54 135  ,jpy_g03
18:25:54 136  ,jpy_g04
18:25:54 137  ,jpy_g05
18:25:54 138  ,jpy_g06
18:25:54 139  ,jpy_g07
18:25:54 140  ,jpy_g08
18:25:54 141  ,jpy_g09
18:25:54 142  ,jpy_g10
18:25:54 143  ,jpy_g11
18:25:54 144  ,jpy_g12
18:25:54 145  ,jpy_g13
18:25:54 146  ,jpy_g14
18:25:54 147  ,jpy_g15
18:25:54 148  ,jpy_g16
18:25:54 149  ,jpy_g17
18:25:54 150  ,jpy_g18
18:25:54 151  ,jpy_g19
18:25:54 152  ,jpy_g20
18:25:54 153  ,jpy_g21
18:25:54 154  ,jpy_g22
18:25:54 155  ,jpy_g23
18:25:54 156  ,jpy_g24
18:25:54 157  ,jpy_g25
18:25:54 158  ,jpy_g26
18:25:54 159  ,jpy_g27
18:25:54 160  ,jpy_g28
18:25:54 161  ,jpy_g29
18:25:54 162  ,jpy_g30
18:25:54 163  ,jpy_g31
18:25:54 164  ,jpy_g32
18:25:54 165  ,jpy_g33
18:25:54 166  ,jpy_g34
18:25:54 167  ,jpy_g35
18:25:54 168  ,jpy_g36
18:25:54 169  ,jpy_g37
18:25:54 170  ,jpy_g38
18:25:54 171  ,jpy_g39
18:25:54 172  ,jpy_g40
18:25:54 173  ,jpy_g41
18:25:54 174  ,cad_g00
18:25:54 175  ,cad_g01
18:25:54 176  ,cad_g02
18:25:54 177  ,cad_g03
18:25:54 178  ,cad_g04
18:25:54 179  ,cad_g05
18:25:54 180  ,cad_g06
18:25:54 181  ,cad_g07
18:25:54 182  ,cad_g08
18:25:54 183  ,cad_g09
18:25:54 184  ,cad_g10
18:25:54 185  ,cad_g11
18:25:54 186  ,cad_g12
18:25:54 187  ,cad_g13
18:25:54 188  ,cad_g14
18:25:54 189  ,cad_g15
18:25:54 190  ,cad_g16
18:25:54 191  ,cad_g17
18:25:54 192  ,cad_g18
18:25:54 193  ,cad_g19
18:25:54 194  ,cad_g20
18:25:54 195  ,cad_g21
18:25:54 196  ,cad_g22
18:25:54 197  ,cad_g23
18:25:54 198  ,cad_g24
18:25:54 199  ,cad_g25
18:25:54 200  ,cad_g26
18:25:54 201  ,cad_g27
18:25:54 202  ,cad_g28
18:25:54 203  ,cad_g29
18:25:54 204  ,cad_g30
18:25:54 205  ,cad_g31
18:25:54 206  ,cad_g32
18:25:54 207  ,cad_g33
18:25:54 208  ,cad_g34
18:25:54 209  ,cad_g35
18:25:54 210  ,cad_g36
18:25:54 211  ,cad_g37
18:25:54 212  ,cad_g38
18:25:54 213  ,cad_g39
18:25:54 214  ,cad_g40
18:25:54 215  ,cad_g41
18:25:54 216  ,chf_g00
18:25:54 217  ,chf_g01
18:25:54 218  ,chf_g02
18:25:54 219  ,chf_g03
18:25:54 220  ,chf_g04
18:25:54 221  ,chf_g05
18:25:54 222  ,chf_g06
18:25:54 223  ,chf_g07
18:25:54 224  ,chf_g08
18:25:54 225  ,chf_g09
18:25:54 226  ,chf_g10
18:25:54 227  ,chf_g11
18:25:54 228  ,chf_g12
18:25:54 229  ,chf_g13
18:25:54 230  ,chf_g14
18:25:54 231  ,chf_g15
18:25:54 232  ,chf_g16
18:25:54 233  ,chf_g17
18:25:54 234  ,chf_g18
18:25:54 235  ,chf_g19
18:25:54 236  ,chf_g20
18:25:54 237  ,chf_g21
18:25:54 238  ,chf_g22
18:25:54 239  ,chf_g23
18:25:54 240  ,chf_g24
18:25:54 241  ,chf_g25
18:25:54 242  ,chf_g26
18:25:54 243  ,chf_g27
18:25:54 244  ,chf_g28
18:25:54 245  ,chf_g29
18:25:54 246  ,chf_g30
18:25:54 247  ,chf_g31
18:25:54 248  ,chf_g32
18:25:54 249  ,chf_g33
18:25:54 250  ,chf_g34
18:25:54 251  ,chf_g35
18:25:54 252  ,chf_g36
18:25:54 253  ,chf_g37
18:25:54 254  ,chf_g38
18:25:54 255  ,chf_g39
18:25:54 256  ,chf_g40
18:25:54 257  ,chf_g41
18:25:54 258  FROM aud_ms6 m
18:25:54 259  WHERE gattn IN('nup','up')
18:25:54 260  AND 1+m.ydate < '&1'||' '||'&2'
18:25:54 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'18:00:00'

View created.

Elapsed: 00:00:00.13
18:25:54 SQL> 
18:25:54 SQL> -- rpt
18:25:54 SQL> 
18:25:54 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12662
up	     6324

Elapsed: 00:00:00.04
18:25:54 SQL> 
18:25:54 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-27 17:55:00

Elapsed: 00:00:00.03
18:25:54 SQL> 
18:25:54 SQL> -- Now build model from bme and score sme
18:25:54 SQL> @score1gattn.sql
18:25:54 SQL> -- score1gattn.sql
18:25:54 SQL> 
18:25:54 SQL> -- Does the 1st SVM score
18:25:54 SQL> 
18:25:54 SQL> -- Fill up svmc_apply_prep
18:25:54 SQL> @score_gattn.sql
18:25:54 SQL> --
18:25:54 SQL> -- score_gattn.sql
18:25:54 SQL> --
18:25:54 SQL> 
18:25:54 SQL> -- usage: score_gattn.sql
18:25:54 SQL> 
18:25:54 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
18:25:54 SQL> 
18:25:54 SQL> DEFINE target	= 'gattn'
18:25:54 SQL> DEFINE model_name = 'forex14'
18:25:54 SQL> DEFINE bldtable	= 'bme'
18:25:54 SQL> DEFINE scoretable = 'sme'
18:25:54 SQL> DEFINE case_id	= 'prdate'
18:25:54 SQL> 
18:25:54 SQL> -- Define a variable to help me exclude some columns from some data mining calls
18:25:54 SQL> DEFINE exclude1 = "'&target','&case_id'"
18:25:54 SQL> 
18:25:54 SQL> -- Builds an SVM model using pl/sql.
18:25:54 SQL> 
18:25:54 SQL> -----------------------------------------------------------------------
18:25:54 SQL> --			    BUILD THE MODEL
18:25:54 SQL> -----------------------------------------------------------------------
18:25:54 SQL> 
18:25:54 SQL> -- Cleanup old build data preparation objects for repeat runs
18:25:54 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
18:25:54 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
18:25:54 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
18:25:54 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
18:25:54 SQL> 
18:25:54 SQL> 
18:25:54 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
18:25:54 SQL> --
18:25:54 SQL> -- DROP	TABLE svmc_settings ;
18:25:54 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
18:25:54 SQL> -- DELETE svmc_settings;
18:25:54 SQL> 
18:25:54 SQL> -- The default classification algorithm is Naive Bayes. So override
18:25:54 SQL> -- this choice to SVM using a settings table.
18:25:54 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
18:25:54 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
18:25:54 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
18:25:54 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
18:25:54 SQL> -- models.
18:25:54 SQL> --
18:25:54 SQL> 
18:25:54 SQL> -- Do this once and then comment it out.
18:25:54 SQL> -- That makes script go faster.
18:25:54 SQL> -- BEGIN
18:25:54 SQL> -- -- Populate settings table
18:25:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:25:54 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
18:25:54 SQL> --
18:25:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:25:54 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
18:25:54 SQL> --
18:25:54 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:25:54 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
18:25:54 SQL> --   COMMIT;
18:25:54 SQL> -- END;
18:25:54 SQL> -- /
18:25:54 SQL> 
18:25:54 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
18:25:54 SQL> 
18:25:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
18:25:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:25:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
18:25:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:25:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
18:25:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:25:54 SQL> 
18:25:54 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
18:25:54   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:25:54   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:25:54 SQL> 
18:25:54 SQL> --------------------------------
18:25:54 SQL> -- PREPARE BUILD (TRAINING) DATA
18:25:54 SQL> --
18:25:54 SQL> 
18:25:54 SQL> -- 1. Missing Value treatment for all Predictors and
18:25:54 SQL> -- 2. Outlier Treatment and
18:25:54 SQL> -- 3. Normalization are performed below.
18:25:54 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
18:25:54 SQL> --    normalized here.
18:25:54 SQL> 
18:25:54 SQL> BEGIN
18:25:54   2  	-- Perform missing value treatment for all predictors
18:25:54   3  	-- create miss tables
18:25:54   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
18:25:54   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
18:25:54   6  
18:25:54   7  	-- populate miss tables
18:25:54   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
18:25:54   9  	  miss_table_name => 'svmc_miss_num',
18:25:54  10  	  data_table_name => '&bldtable',
18:25:54  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:25:54  12  
18:25:54  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
18:25:54  14  	  miss_table_name => 'svmc_miss_cat',
18:25:54  15  	  data_table_name => '&bldtable',
18:25:54  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:25:54  17  
18:25:54  18  	-- xform input data to replace missing values
18:25:54  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:25:54  20  	  miss_table_name => 'svmc_miss_num',
18:25:54  21  	  data_table_name => '&bldtable',
18:25:54  22  	  xform_view_name => 'xformed_build_miss_num');
18:25:54  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:25:54  24  	  miss_table_name => 'svmc_miss_cat',
18:25:54  25  	  data_table_name => '&bldtable',
18:25:54  26  	  xform_view_name => 'xformed_build_miss_cat');
18:25:54  27  
18:25:54  28  	-- Perform outlier treatment.
18:25:54  29  	-- create clip table
18:25:54  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
18:25:54  31  
18:25:54  32  	-- populate clip table
18:25:54  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
18:25:54  34  	  clip_table_name => 'svmc_clip',
18:25:54  35  	  data_table_name => '&bldtable',
18:25:54  36  	  tail_frac	  => 0.025,
18:25:54  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:25:54  38  
18:25:54  39  	-- xform input data to winsorized data
18:25:54  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
18:25:54  41  	  clip_table_name => 'svmc_clip',
18:25:54  42  	  data_table_name => '&bldtable',
18:25:54  43  	  xform_view_name => 'svmc_winsor');
18:25:54  44  
18:25:54  45  	-- create normalization table
18:25:54  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
18:25:54  47  
18:25:54  48  	-- populate normalization table based on winsorized data
18:25:54  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
18:25:54  50  	  norm_table_name => 'svmc_norm',
18:25:54  51  	  data_table_name => 'svmc_winsor',
18:25:54  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:25:54  53  
18:25:54  54  	-- normalize the original data
18:25:54  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:25:54  56  	  norm_table_name => 'svmc_norm',
18:25:54  57  	  data_table_name => '&bldtable',
18:25:54  58  	  xform_view_name => 'svmc_build_prep');
18:25:54  59  END;
18:25:54  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.73
18:26:12 SQL> 
18:26:12 SQL> ---------------------
18:26:12 SQL> -- CREATE A NEW MODEL
18:26:12 SQL> --
18:26:12 SQL> -- Cleanup old model with the same name for repeat runs
18:26:12 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
18:26:12   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:26:12   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.04
18:26:13 SQL> 
18:26:13 SQL> -- Build a new SVM Model
18:26:13 SQL> BEGIN
18:26:13   2  	DBMS_DATA_MINING.CREATE_MODEL(
18:26:13   3  	  model_name	      => '&model_name',
18:26:13   4  	  mining_function     => dbms_data_mining.classification,
18:26:13   5  	  data_table_name     => 'svmc_build_prep',
18:26:13   6  	  case_id_column_name => '&case_id',
18:26:13   7  	  target_column_name  => '&target',
18:26:13   8  	  settings_table_name => 'svmc_settings');
18:26:13   9  END;
18:26:13  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.80
18:26:40 SQL> 
18:26:40 SQL> -----------------------------------------------------------------------
18:26:40 SQL> --			       APPLY/score THE MODEL
18:26:40 SQL> -----------------------------------------------------------------------
18:26:40 SQL> 
18:26:40 SQL> -- Cleanup old scoring data preparation objects for repeat runs
18:26:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
18:26:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:26:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
18:26:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
18:26:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:26:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:26:40 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
18:26:40   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:26:40   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:26:40 SQL> -----------------------
18:26:40 SQL> -- PREPARE SCORING DATA
18:26:40 SQL> --
18:26:40 SQL> -- If the data for model creation has been prepared, then the data
18:26:40 SQL> -- to be scored using the model must be prepared in the same manner
18:26:40 SQL> -- in order to obtain meaningful results.
18:26:40 SQL> --
18:26:40 SQL> -- 1. Missing Value treatment for all Predictors and
18:26:40 SQL> -- 2. Normalization
18:26:40 SQL> -- No outlier treatment will be performed during test and apply. The
18:26:40 SQL> -- normalization step is sufficient, since the normalization parameters
18:26:40 SQL> -- already capture the effects of outlier treatment done with build data.
18:26:40 SQL> --
18:26:40 SQL> BEGIN
18:26:40   2  	-- Xform Test data to replace missing values
18:26:40   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:26:40   4  	  miss_table_name => 'svmc_miss_num',
18:26:40   5  	  data_table_name => '&scoretable',
18:26:40   6  	  xform_view_name => 'xformed_apply_miss_num');
18:26:40   7  
18:26:40   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:26:40   9  	  miss_table_name => 'svmc_miss_cat',
18:26:40  10  	  data_table_name => '&scoretable',
18:26:40  11  	  xform_view_name => 'xformed_apply_miss_cat');
18:26:40  12  
18:26:40  13  	-- Normalize the data to be scored
18:26:40  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:26:40  15  	  norm_table_name => 'svmc_norm',
18:26:40  16  	  data_table_name => '&scoretable',
18:26:40  17  	  xform_view_name => 'svmc_apply_prep');
18:26:40  18  END;
18:26:40  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
18:26:41 SQL> 
18:26:41 SQL> -- Use same model_name used in score_gattn.sql
18:26:41 SQL> DEFINE model_name = 'forex14'
18:26:41 SQL> 
18:26:41 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
18:26:41 SQL> 
18:26:41 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
18:26:41   2  SELECT
18:26:41   3  prdate
18:26:41   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
18:26:41   5  ,sysdate
18:26:41   6  ,SUBSTR(prdate,1,3)pair
18:26:41   7  ,SUBSTR(prdate,4,19)ydate
18:26:41   8  FROM svmc_apply_prep
18:26:41   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
18:26:41 SQL> @aud_score1day_gattn.sql	2010-12-28 18:05:00
18:26:41 SQL> --
18:26:41 SQL> -- aud_score1day_gattn.sql
18:26:41 SQL> --
18:26:41 SQL> 
18:26:41 SQL> CREATE OR REPLACE VIEW sme AS
18:26:41   2  SELECT
18:26:41   3  'aud'||m.ydate prdate
18:26:41   4  ,NULL gattn
18:26:41   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:26:41   6  ,eur_g00
18:26:41   7  ,eur_g01
18:26:41   8  ,eur_g02
18:26:41   9  ,eur_g03
18:26:41  10  ,eur_g04
18:26:41  11  ,eur_g05
18:26:41  12  ,eur_g06
18:26:41  13  ,eur_g07
18:26:41  14  ,eur_g08
18:26:41  15  ,eur_g09
18:26:41  16  ,eur_g10
18:26:41  17  ,eur_g11
18:26:41  18  ,eur_g12
18:26:41  19  ,eur_g13
18:26:41  20  ,eur_g14
18:26:41  21  ,eur_g15
18:26:41  22  ,eur_g16
18:26:41  23  ,eur_g17
18:26:41  24  ,eur_g18
18:26:41  25  ,eur_g19
18:26:41  26  ,eur_g20
18:26:41  27  ,eur_g21
18:26:41  28  ,eur_g22
18:26:41  29  ,eur_g23
18:26:41  30  ,eur_g24
18:26:41  31  ,eur_g25
18:26:41  32  ,eur_g26
18:26:41  33  ,eur_g27
18:26:41  34  ,eur_g28
18:26:41  35  ,eur_g29
18:26:41  36  ,eur_g30
18:26:41  37  ,eur_g31
18:26:41  38  ,eur_g32
18:26:41  39  ,eur_g33
18:26:41  40  ,eur_g34
18:26:41  41  ,eur_g35
18:26:41  42  ,eur_g36
18:26:41  43  ,eur_g37
18:26:41  44  ,eur_g38
18:26:41  45  ,eur_g39
18:26:41  46  ,eur_g40
18:26:41  47  ,eur_g41
18:26:41  48  ,aud_g00
18:26:41  49  ,aud_g01
18:26:41  50  ,aud_g02
18:26:41  51  ,aud_g03
18:26:41  52  ,aud_g04
18:26:41  53  ,aud_g05
18:26:41  54  ,aud_g06
18:26:41  55  ,aud_g07
18:26:41  56  ,aud_g08
18:26:41  57  ,aud_g09
18:26:41  58  ,aud_g10
18:26:41  59  ,aud_g11
18:26:41  60  ,aud_g12
18:26:41  61  ,aud_g13
18:26:41  62  ,aud_g14
18:26:41  63  ,aud_g15
18:26:41  64  ,aud_g16
18:26:41  65  ,aud_g17
18:26:41  66  ,aud_g18
18:26:41  67  ,aud_g19
18:26:41  68  ,aud_g20
18:26:41  69  ,aud_g21
18:26:41  70  ,aud_g22
18:26:41  71  ,aud_g23
18:26:41  72  ,aud_g24
18:26:41  73  ,aud_g25
18:26:41  74  ,aud_g26
18:26:41  75  ,aud_g27
18:26:41  76  ,aud_g28
18:26:41  77  ,aud_g29
18:26:41  78  ,aud_g30
18:26:41  79  ,aud_g31
18:26:41  80  ,aud_g32
18:26:41  81  ,aud_g33
18:26:41  82  ,aud_g34
18:26:41  83  ,aud_g35
18:26:41  84  ,aud_g36
18:26:41  85  ,aud_g37
18:26:41  86  ,aud_g38
18:26:41  87  ,aud_g39
18:26:41  88  ,aud_g40
18:26:41  89  ,aud_g41
18:26:41  90  ,gbp_g00
18:26:41  91  ,gbp_g01
18:26:41  92  ,gbp_g02
18:26:41  93  ,gbp_g03
18:26:41  94  ,gbp_g04
18:26:41  95  ,gbp_g05
18:26:41  96  ,gbp_g06
18:26:41  97  ,gbp_g07
18:26:41  98  ,gbp_g08
18:26:41  99  ,gbp_g09
18:26:41 100  ,gbp_g10
18:26:41 101  ,gbp_g11
18:26:41 102  ,gbp_g12
18:26:41 103  ,gbp_g13
18:26:41 104  ,gbp_g14
18:26:41 105  ,gbp_g15
18:26:41 106  ,gbp_g16
18:26:41 107  ,gbp_g17
18:26:41 108  ,gbp_g18
18:26:41 109  ,gbp_g19
18:26:41 110  ,gbp_g20
18:26:41 111  ,gbp_g21
18:26:41 112  ,gbp_g22
18:26:41 113  ,gbp_g23
18:26:41 114  ,gbp_g24
18:26:41 115  ,gbp_g25
18:26:41 116  ,gbp_g26
18:26:41 117  ,gbp_g27
18:26:41 118  ,gbp_g28
18:26:41 119  ,gbp_g29
18:26:41 120  ,gbp_g30
18:26:41 121  ,gbp_g31
18:26:41 122  ,gbp_g32
18:26:41 123  ,gbp_g33
18:26:41 124  ,gbp_g34
18:26:41 125  ,gbp_g35
18:26:41 126  ,gbp_g36
18:26:41 127  ,gbp_g37
18:26:41 128  ,gbp_g38
18:26:41 129  ,gbp_g39
18:26:41 130  ,gbp_g40
18:26:41 131  ,gbp_g41
18:26:41 132  ,jpy_g00
18:26:41 133  ,jpy_g01
18:26:41 134  ,jpy_g02
18:26:41 135  ,jpy_g03
18:26:41 136  ,jpy_g04
18:26:41 137  ,jpy_g05
18:26:41 138  ,jpy_g06
18:26:41 139  ,jpy_g07
18:26:41 140  ,jpy_g08
18:26:41 141  ,jpy_g09
18:26:41 142  ,jpy_g10
18:26:41 143  ,jpy_g11
18:26:41 144  ,jpy_g12
18:26:41 145  ,jpy_g13
18:26:41 146  ,jpy_g14
18:26:41 147  ,jpy_g15
18:26:41 148  ,jpy_g16
18:26:41 149  ,jpy_g17
18:26:41 150  ,jpy_g18
18:26:41 151  ,jpy_g19
18:26:41 152  ,jpy_g20
18:26:41 153  ,jpy_g21
18:26:41 154  ,jpy_g22
18:26:41 155  ,jpy_g23
18:26:41 156  ,jpy_g24
18:26:41 157  ,jpy_g25
18:26:41 158  ,jpy_g26
18:26:41 159  ,jpy_g27
18:26:41 160  ,jpy_g28
18:26:41 161  ,jpy_g29
18:26:41 162  ,jpy_g30
18:26:41 163  ,jpy_g31
18:26:41 164  ,jpy_g32
18:26:41 165  ,jpy_g33
18:26:41 166  ,jpy_g34
18:26:41 167  ,jpy_g35
18:26:41 168  ,jpy_g36
18:26:41 169  ,jpy_g37
18:26:41 170  ,jpy_g38
18:26:41 171  ,jpy_g39
18:26:41 172  ,jpy_g40
18:26:41 173  ,jpy_g41
18:26:41 174  ,cad_g00
18:26:41 175  ,cad_g01
18:26:41 176  ,cad_g02
18:26:41 177  ,cad_g03
18:26:41 178  ,cad_g04
18:26:41 179  ,cad_g05
18:26:41 180  ,cad_g06
18:26:41 181  ,cad_g07
18:26:41 182  ,cad_g08
18:26:41 183  ,cad_g09
18:26:41 184  ,cad_g10
18:26:41 185  ,cad_g11
18:26:41 186  ,cad_g12
18:26:41 187  ,cad_g13
18:26:41 188  ,cad_g14
18:26:41 189  ,cad_g15
18:26:41 190  ,cad_g16
18:26:41 191  ,cad_g17
18:26:41 192  ,cad_g18
18:26:41 193  ,cad_g19
18:26:41 194  ,cad_g20
18:26:41 195  ,cad_g21
18:26:41 196  ,cad_g22
18:26:41 197  ,cad_g23
18:26:41 198  ,cad_g24
18:26:41 199  ,cad_g25
18:26:41 200  ,cad_g26
18:26:41 201  ,cad_g27
18:26:41 202  ,cad_g28
18:26:41 203  ,cad_g29
18:26:41 204  ,cad_g30
18:26:41 205  ,cad_g31
18:26:41 206  ,cad_g32
18:26:41 207  ,cad_g33
18:26:41 208  ,cad_g34
18:26:41 209  ,cad_g35
18:26:41 210  ,cad_g36
18:26:41 211  ,cad_g37
18:26:41 212  ,cad_g38
18:26:41 213  ,cad_g39
18:26:41 214  ,cad_g40
18:26:41 215  ,cad_g41
18:26:41 216  ,chf_g00
18:26:41 217  ,chf_g01
18:26:41 218  ,chf_g02
18:26:41 219  ,chf_g03
18:26:41 220  ,chf_g04
18:26:41 221  ,chf_g05
18:26:41 222  ,chf_g06
18:26:41 223  ,chf_g07
18:26:41 224  ,chf_g08
18:26:41 225  ,chf_g09
18:26:41 226  ,chf_g10
18:26:41 227  ,chf_g11
18:26:41 228  ,chf_g12
18:26:41 229  ,chf_g13
18:26:41 230  ,chf_g14
18:26:41 231  ,chf_g15
18:26:41 232  ,chf_g16
18:26:41 233  ,chf_g17
18:26:41 234  ,chf_g18
18:26:41 235  ,chf_g19
18:26:41 236  ,chf_g20
18:26:41 237  ,chf_g21
18:26:41 238  ,chf_g22
18:26:41 239  ,chf_g23
18:26:41 240  ,chf_g24
18:26:41 241  ,chf_g25
18:26:41 242  ,chf_g26
18:26:41 243  ,chf_g27
18:26:41 244  ,chf_g28
18:26:41 245  ,chf_g29
18:26:41 246  ,chf_g30
18:26:41 247  ,chf_g31
18:26:41 248  ,chf_g32
18:26:41 249  ,chf_g33
18:26:41 250  ,chf_g34
18:26:41 251  ,chf_g35
18:26:41 252  ,chf_g36
18:26:41 253  ,chf_g37
18:26:41 254  ,chf_g38
18:26:41 255  ,chf_g39
18:26:41 256  ,chf_g40
18:26:41 257  ,chf_g41
18:26:41 258  FROM aud_ms6 m
18:26:41 259  WHERE m.ydate = '&1'||' '||'&2'
18:26:41 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'18:05:00'

View created.

Elapsed: 00:00:00.12
18:26:41 SQL> 
18:26:41 SQL> -- rpt
18:26:41 SQL> -- We should see just 1 row:
18:26:41 SQL> 
18:26:41 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
18:26:41 SQL> 
18:26:41 SQL> -- Build the model:
18:26:41 SQL> CREATE OR REPLACE VIEW bme AS
18:26:41   2  SELECT
18:26:41   3  'aud'||m.ydate prdate
18:26:41   4  ,gattn
18:26:41   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:26:41   6  ,eur_g00
18:26:41   7  ,eur_g01
18:26:41   8  ,eur_g02
18:26:41   9  ,eur_g03
18:26:41  10  ,eur_g04
18:26:41  11  ,eur_g05
18:26:41  12  ,eur_g06
18:26:41  13  ,eur_g07
18:26:41  14  ,eur_g08
18:26:41  15  ,eur_g09
18:26:41  16  ,eur_g10
18:26:41  17  ,eur_g11
18:26:41  18  ,eur_g12
18:26:41  19  ,eur_g13
18:26:41  20  ,eur_g14
18:26:41  21  ,eur_g15
18:26:41  22  ,eur_g16
18:26:41  23  ,eur_g17
18:26:41  24  ,eur_g18
18:26:41  25  ,eur_g19
18:26:41  26  ,eur_g20
18:26:41  27  ,eur_g21
18:26:41  28  ,eur_g22
18:26:41  29  ,eur_g23
18:26:41  30  ,eur_g24
18:26:41  31  ,eur_g25
18:26:41  32  ,eur_g26
18:26:41  33  ,eur_g27
18:26:41  34  ,eur_g28
18:26:41  35  ,eur_g29
18:26:41  36  ,eur_g30
18:26:41  37  ,eur_g31
18:26:41  38  ,eur_g32
18:26:41  39  ,eur_g33
18:26:41  40  ,eur_g34
18:26:41  41  ,eur_g35
18:26:41  42  ,eur_g36
18:26:41  43  ,eur_g37
18:26:41  44  ,eur_g38
18:26:41  45  ,eur_g39
18:26:41  46  ,eur_g40
18:26:41  47  ,eur_g41
18:26:41  48  ,aud_g00
18:26:41  49  ,aud_g01
18:26:41  50  ,aud_g02
18:26:41  51  ,aud_g03
18:26:41  52  ,aud_g04
18:26:41  53  ,aud_g05
18:26:41  54  ,aud_g06
18:26:41  55  ,aud_g07
18:26:41  56  ,aud_g08
18:26:41  57  ,aud_g09
18:26:41  58  ,aud_g10
18:26:41  59  ,aud_g11
18:26:41  60  ,aud_g12
18:26:41  61  ,aud_g13
18:26:41  62  ,aud_g14
18:26:41  63  ,aud_g15
18:26:41  64  ,aud_g16
18:26:41  65  ,aud_g17
18:26:41  66  ,aud_g18
18:26:41  67  ,aud_g19
18:26:41  68  ,aud_g20
18:26:41  69  ,aud_g21
18:26:41  70  ,aud_g22
18:26:41  71  ,aud_g23
18:26:41  72  ,aud_g24
18:26:41  73  ,aud_g25
18:26:41  74  ,aud_g26
18:26:41  75  ,aud_g27
18:26:41  76  ,aud_g28
18:26:41  77  ,aud_g29
18:26:41  78  ,aud_g30
18:26:41  79  ,aud_g31
18:26:41  80  ,aud_g32
18:26:41  81  ,aud_g33
18:26:41  82  ,aud_g34
18:26:41  83  ,aud_g35
18:26:41  84  ,aud_g36
18:26:41  85  ,aud_g37
18:26:41  86  ,aud_g38
18:26:41  87  ,aud_g39
18:26:41  88  ,aud_g40
18:26:41  89  ,aud_g41
18:26:41  90  ,gbp_g00
18:26:41  91  ,gbp_g01
18:26:41  92  ,gbp_g02
18:26:41  93  ,gbp_g03
18:26:41  94  ,gbp_g04
18:26:41  95  ,gbp_g05
18:26:41  96  ,gbp_g06
18:26:41  97  ,gbp_g07
18:26:41  98  ,gbp_g08
18:26:41  99  ,gbp_g09
18:26:41 100  ,gbp_g10
18:26:41 101  ,gbp_g11
18:26:41 102  ,gbp_g12
18:26:41 103  ,gbp_g13
18:26:41 104  ,gbp_g14
18:26:41 105  ,gbp_g15
18:26:41 106  ,gbp_g16
18:26:41 107  ,gbp_g17
18:26:41 108  ,gbp_g18
18:26:41 109  ,gbp_g19
18:26:41 110  ,gbp_g20
18:26:41 111  ,gbp_g21
18:26:41 112  ,gbp_g22
18:26:41 113  ,gbp_g23
18:26:41 114  ,gbp_g24
18:26:41 115  ,gbp_g25
18:26:41 116  ,gbp_g26
18:26:41 117  ,gbp_g27
18:26:41 118  ,gbp_g28
18:26:41 119  ,gbp_g29
18:26:41 120  ,gbp_g30
18:26:41 121  ,gbp_g31
18:26:41 122  ,gbp_g32
18:26:41 123  ,gbp_g33
18:26:41 124  ,gbp_g34
18:26:41 125  ,gbp_g35
18:26:41 126  ,gbp_g36
18:26:41 127  ,gbp_g37
18:26:41 128  ,gbp_g38
18:26:41 129  ,gbp_g39
18:26:41 130  ,gbp_g40
18:26:41 131  ,gbp_g41
18:26:41 132  ,jpy_g00
18:26:41 133  ,jpy_g01
18:26:41 134  ,jpy_g02
18:26:41 135  ,jpy_g03
18:26:41 136  ,jpy_g04
18:26:41 137  ,jpy_g05
18:26:41 138  ,jpy_g06
18:26:41 139  ,jpy_g07
18:26:41 140  ,jpy_g08
18:26:41 141  ,jpy_g09
18:26:41 142  ,jpy_g10
18:26:41 143  ,jpy_g11
18:26:41 144  ,jpy_g12
18:26:41 145  ,jpy_g13
18:26:41 146  ,jpy_g14
18:26:41 147  ,jpy_g15
18:26:41 148  ,jpy_g16
18:26:41 149  ,jpy_g17
18:26:41 150  ,jpy_g18
18:26:41 151  ,jpy_g19
18:26:41 152  ,jpy_g20
18:26:41 153  ,jpy_g21
18:26:41 154  ,jpy_g22
18:26:41 155  ,jpy_g23
18:26:41 156  ,jpy_g24
18:26:41 157  ,jpy_g25
18:26:41 158  ,jpy_g26
18:26:41 159  ,jpy_g27
18:26:41 160  ,jpy_g28
18:26:41 161  ,jpy_g29
18:26:41 162  ,jpy_g30
18:26:41 163  ,jpy_g31
18:26:41 164  ,jpy_g32
18:26:41 165  ,jpy_g33
18:26:41 166  ,jpy_g34
18:26:41 167  ,jpy_g35
18:26:41 168  ,jpy_g36
18:26:41 169  ,jpy_g37
18:26:41 170  ,jpy_g38
18:26:41 171  ,jpy_g39
18:26:41 172  ,jpy_g40
18:26:41 173  ,jpy_g41
18:26:41 174  ,cad_g00
18:26:41 175  ,cad_g01
18:26:41 176  ,cad_g02
18:26:41 177  ,cad_g03
18:26:41 178  ,cad_g04
18:26:41 179  ,cad_g05
18:26:41 180  ,cad_g06
18:26:41 181  ,cad_g07
18:26:41 182  ,cad_g08
18:26:41 183  ,cad_g09
18:26:41 184  ,cad_g10
18:26:41 185  ,cad_g11
18:26:41 186  ,cad_g12
18:26:41 187  ,cad_g13
18:26:41 188  ,cad_g14
18:26:41 189  ,cad_g15
18:26:41 190  ,cad_g16
18:26:41 191  ,cad_g17
18:26:41 192  ,cad_g18
18:26:41 193  ,cad_g19
18:26:41 194  ,cad_g20
18:26:41 195  ,cad_g21
18:26:41 196  ,cad_g22
18:26:41 197  ,cad_g23
18:26:41 198  ,cad_g24
18:26:41 199  ,cad_g25
18:26:41 200  ,cad_g26
18:26:41 201  ,cad_g27
18:26:41 202  ,cad_g28
18:26:41 203  ,cad_g29
18:26:41 204  ,cad_g30
18:26:41 205  ,cad_g31
18:26:41 206  ,cad_g32
18:26:41 207  ,cad_g33
18:26:41 208  ,cad_g34
18:26:41 209  ,cad_g35
18:26:41 210  ,cad_g36
18:26:41 211  ,cad_g37
18:26:41 212  ,cad_g38
18:26:41 213  ,cad_g39
18:26:41 214  ,cad_g40
18:26:41 215  ,cad_g41
18:26:41 216  ,chf_g00
18:26:41 217  ,chf_g01
18:26:41 218  ,chf_g02
18:26:41 219  ,chf_g03
18:26:41 220  ,chf_g04
18:26:41 221  ,chf_g05
18:26:41 222  ,chf_g06
18:26:41 223  ,chf_g07
18:26:41 224  ,chf_g08
18:26:41 225  ,chf_g09
18:26:41 226  ,chf_g10
18:26:41 227  ,chf_g11
18:26:41 228  ,chf_g12
18:26:41 229  ,chf_g13
18:26:41 230  ,chf_g14
18:26:41 231  ,chf_g15
18:26:41 232  ,chf_g16
18:26:41 233  ,chf_g17
18:26:41 234  ,chf_g18
18:26:41 235  ,chf_g19
18:26:41 236  ,chf_g20
18:26:41 237  ,chf_g21
18:26:41 238  ,chf_g22
18:26:41 239  ,chf_g23
18:26:41 240  ,chf_g24
18:26:41 241  ,chf_g25
18:26:41 242  ,chf_g26
18:26:41 243  ,chf_g27
18:26:41 244  ,chf_g28
18:26:41 245  ,chf_g29
18:26:41 246  ,chf_g30
18:26:41 247  ,chf_g31
18:26:41 248  ,chf_g32
18:26:41 249  ,chf_g33
18:26:41 250  ,chf_g34
18:26:41 251  ,chf_g35
18:26:41 252  ,chf_g36
18:26:41 253  ,chf_g37
18:26:41 254  ,chf_g38
18:26:41 255  ,chf_g39
18:26:41 256  ,chf_g40
18:26:41 257  ,chf_g41
18:26:41 258  FROM aud_ms6 m
18:26:41 259  WHERE gattn IN('nup','up')
18:26:41 260  AND 1+m.ydate < '&1'||' '||'&2'
18:26:41 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'18:05:00'

View created.

Elapsed: 00:00:00.10
18:26:41 SQL> 
18:26:41 SQL> -- rpt
18:26:41 SQL> 
18:26:41 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12663
up	     6324

Elapsed: 00:00:00.04
18:26:42 SQL> 
18:26:42 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-27 18:00:00

Elapsed: 00:00:00.03
18:26:42 SQL> 
18:26:42 SQL> -- Now build model from bme and score sme
18:26:42 SQL> @score1gattn.sql
18:26:42 SQL> -- score1gattn.sql
18:26:42 SQL> 
18:26:42 SQL> -- Does the 1st SVM score
18:26:42 SQL> 
18:26:42 SQL> -- Fill up svmc_apply_prep
18:26:42 SQL> @score_gattn.sql
18:26:42 SQL> --
18:26:42 SQL> -- score_gattn.sql
18:26:42 SQL> --
18:26:42 SQL> 
18:26:42 SQL> -- usage: score_gattn.sql
18:26:42 SQL> 
18:26:42 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
18:26:42 SQL> 
18:26:42 SQL> DEFINE target	= 'gattn'
18:26:42 SQL> DEFINE model_name = 'forex14'
18:26:42 SQL> DEFINE bldtable	= 'bme'
18:26:42 SQL> DEFINE scoretable = 'sme'
18:26:42 SQL> DEFINE case_id	= 'prdate'
18:26:42 SQL> 
18:26:42 SQL> -- Define a variable to help me exclude some columns from some data mining calls
18:26:42 SQL> DEFINE exclude1 = "'&target','&case_id'"
18:26:42 SQL> 
18:26:42 SQL> -- Builds an SVM model using pl/sql.
18:26:42 SQL> 
18:26:42 SQL> -----------------------------------------------------------------------
18:26:42 SQL> --			    BUILD THE MODEL
18:26:42 SQL> -----------------------------------------------------------------------
18:26:42 SQL> 
18:26:42 SQL> -- Cleanup old build data preparation objects for repeat runs
18:26:42 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
18:26:42 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
18:26:42 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.01
18:26:42 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
18:26:42 SQL> 
18:26:42 SQL> 
18:26:42 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
18:26:42 SQL> --
18:26:42 SQL> -- DROP	TABLE svmc_settings ;
18:26:42 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
18:26:42 SQL> -- DELETE svmc_settings;
18:26:42 SQL> 
18:26:42 SQL> -- The default classification algorithm is Naive Bayes. So override
18:26:42 SQL> -- this choice to SVM using a settings table.
18:26:42 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
18:26:42 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
18:26:42 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
18:26:42 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
18:26:42 SQL> -- models.
18:26:42 SQL> --
18:26:42 SQL> 
18:26:42 SQL> -- Do this once and then comment it out.
18:26:42 SQL> -- That makes script go faster.
18:26:42 SQL> -- BEGIN
18:26:42 SQL> -- -- Populate settings table
18:26:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:26:42 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
18:26:42 SQL> --
18:26:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:26:42 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
18:26:42 SQL> --
18:26:42 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:26:42 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
18:26:42 SQL> --   COMMIT;
18:26:42 SQL> -- END;
18:26:42 SQL> -- /
18:26:42 SQL> 
18:26:42 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
18:26:42 SQL> 
18:26:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
18:26:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:26:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:26:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
18:26:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:26:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:26:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
18:26:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:26:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:26:42 SQL> 
18:26:42 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
18:26:42   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:26:42   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:26:42 SQL> 
18:26:42 SQL> --------------------------------
18:26:42 SQL> -- PREPARE BUILD (TRAINING) DATA
18:26:42 SQL> --
18:26:42 SQL> 
18:26:42 SQL> -- 1. Missing Value treatment for all Predictors and
18:26:42 SQL> -- 2. Outlier Treatment and
18:26:42 SQL> -- 3. Normalization are performed below.
18:26:42 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
18:26:42 SQL> --    normalized here.
18:26:42 SQL> 
18:26:42 SQL> BEGIN
18:26:42   2  	-- Perform missing value treatment for all predictors
18:26:42   3  	-- create miss tables
18:26:42   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
18:26:42   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
18:26:42   6  
18:26:42   7  	-- populate miss tables
18:26:42   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
18:26:42   9  	  miss_table_name => 'svmc_miss_num',
18:26:42  10  	  data_table_name => '&bldtable',
18:26:42  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:26:42  12  
18:26:42  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
18:26:42  14  	  miss_table_name => 'svmc_miss_cat',
18:26:42  15  	  data_table_name => '&bldtable',
18:26:42  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:26:42  17  
18:26:42  18  	-- xform input data to replace missing values
18:26:42  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:26:42  20  	  miss_table_name => 'svmc_miss_num',
18:26:42  21  	  data_table_name => '&bldtable',
18:26:42  22  	  xform_view_name => 'xformed_build_miss_num');
18:26:42  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:26:42  24  	  miss_table_name => 'svmc_miss_cat',
18:26:42  25  	  data_table_name => '&bldtable',
18:26:42  26  	  xform_view_name => 'xformed_build_miss_cat');
18:26:42  27  
18:26:42  28  	-- Perform outlier treatment.
18:26:42  29  	-- create clip table
18:26:42  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
18:26:42  31  
18:26:42  32  	-- populate clip table
18:26:42  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
18:26:42  34  	  clip_table_name => 'svmc_clip',
18:26:42  35  	  data_table_name => '&bldtable',
18:26:42  36  	  tail_frac	  => 0.025,
18:26:42  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:26:42  38  
18:26:42  39  	-- xform input data to winsorized data
18:26:42  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
18:26:42  41  	  clip_table_name => 'svmc_clip',
18:26:42  42  	  data_table_name => '&bldtable',
18:26:42  43  	  xform_view_name => 'svmc_winsor');
18:26:42  44  
18:26:42  45  	-- create normalization table
18:26:42  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
18:26:42  47  
18:26:42  48  	-- populate normalization table based on winsorized data
18:26:42  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
18:26:42  50  	  norm_table_name => 'svmc_norm',
18:26:42  51  	  data_table_name => 'svmc_winsor',
18:26:42  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:26:42  53  
18:26:42  54  	-- normalize the original data
18:26:42  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:26:42  56  	  norm_table_name => 'svmc_norm',
18:26:42  57  	  data_table_name => '&bldtable',
18:26:42  58  	  xform_view_name => 'svmc_build_prep');
18:26:42  59  END;
18:26:42  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.15
18:26:59 SQL> 
18:26:59 SQL> ---------------------
18:26:59 SQL> -- CREATE A NEW MODEL
18:26:59 SQL> --
18:26:59 SQL> -- Cleanup old model with the same name for repeat runs
18:26:59 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
18:26:59   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:26:59   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.10
18:27:00 SQL> 
18:27:00 SQL> -- Build a new SVM Model
18:27:00 SQL> BEGIN
18:27:00   2  	DBMS_DATA_MINING.CREATE_MODEL(
18:27:00   3  	  model_name	      => '&model_name',
18:27:00   4  	  mining_function     => dbms_data_mining.classification,
18:27:00   5  	  data_table_name     => 'svmc_build_prep',
18:27:00   6  	  case_id_column_name => '&case_id',
18:27:00   7  	  target_column_name  => '&target',
18:27:00   8  	  settings_table_name => 'svmc_settings');
18:27:00   9  END;
18:27:00  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.04
18:27:26 SQL> 
18:27:26 SQL> -----------------------------------------------------------------------
18:27:26 SQL> --			       APPLY/score THE MODEL
18:27:26 SQL> -----------------------------------------------------------------------
18:27:26 SQL> 
18:27:26 SQL> -- Cleanup old scoring data preparation objects for repeat runs
18:27:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
18:27:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:27:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
18:27:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
18:27:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:27:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
18:27:26 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
18:27:26   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:27:26   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:27:26 SQL> -----------------------
18:27:26 SQL> -- PREPARE SCORING DATA
18:27:26 SQL> --
18:27:26 SQL> -- If the data for model creation has been prepared, then the data
18:27:26 SQL> -- to be scored using the model must be prepared in the same manner
18:27:26 SQL> -- in order to obtain meaningful results.
18:27:26 SQL> --
18:27:26 SQL> -- 1. Missing Value treatment for all Predictors and
18:27:26 SQL> -- 2. Normalization
18:27:26 SQL> -- No outlier treatment will be performed during test and apply. The
18:27:26 SQL> -- normalization step is sufficient, since the normalization parameters
18:27:26 SQL> -- already capture the effects of outlier treatment done with build data.
18:27:26 SQL> --
18:27:26 SQL> BEGIN
18:27:26   2  	-- Xform Test data to replace missing values
18:27:26   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:27:26   4  	  miss_table_name => 'svmc_miss_num',
18:27:26   5  	  data_table_name => '&scoretable',
18:27:26   6  	  xform_view_name => 'xformed_apply_miss_num');
18:27:26   7  
18:27:26   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:27:26   9  	  miss_table_name => 'svmc_miss_cat',
18:27:26  10  	  data_table_name => '&scoretable',
18:27:26  11  	  xform_view_name => 'xformed_apply_miss_cat');
18:27:26  12  
18:27:26  13  	-- Normalize the data to be scored
18:27:26  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:27:26  15  	  norm_table_name => 'svmc_norm',
18:27:26  16  	  data_table_name => '&scoretable',
18:27:26  17  	  xform_view_name => 'svmc_apply_prep');
18:27:26  18  END;
18:27:26  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.20
18:27:28 SQL> 
18:27:28 SQL> -- Use same model_name used in score_gattn.sql
18:27:28 SQL> DEFINE model_name = 'forex14'
18:27:28 SQL> 
18:27:28 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
18:27:28 SQL> 
18:27:28 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
18:27:28   2  SELECT
18:27:28   3  prdate
18:27:28   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
18:27:28   5  ,sysdate
18:27:28   6  ,SUBSTR(prdate,1,3)pair
18:27:28   7  ,SUBSTR(prdate,4,19)ydate
18:27:28   8  FROM svmc_apply_prep
18:27:28   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.16
18:27:28 SQL> @aud_score1day_gattn.sql	2010-12-28 18:10:00
18:27:28 SQL> --
18:27:28 SQL> -- aud_score1day_gattn.sql
18:27:28 SQL> --
18:27:28 SQL> 
18:27:28 SQL> CREATE OR REPLACE VIEW sme AS
18:27:28   2  SELECT
18:27:28   3  'aud'||m.ydate prdate
18:27:28   4  ,NULL gattn
18:27:28   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:27:28   6  ,eur_g00
18:27:28   7  ,eur_g01
18:27:28   8  ,eur_g02
18:27:28   9  ,eur_g03
18:27:28  10  ,eur_g04
18:27:28  11  ,eur_g05
18:27:28  12  ,eur_g06
18:27:28  13  ,eur_g07
18:27:28  14  ,eur_g08
18:27:28  15  ,eur_g09
18:27:28  16  ,eur_g10
18:27:28  17  ,eur_g11
18:27:28  18  ,eur_g12
18:27:28  19  ,eur_g13
18:27:28  20  ,eur_g14
18:27:28  21  ,eur_g15
18:27:28  22  ,eur_g16
18:27:28  23  ,eur_g17
18:27:28  24  ,eur_g18
18:27:28  25  ,eur_g19
18:27:28  26  ,eur_g20
18:27:28  27  ,eur_g21
18:27:28  28  ,eur_g22
18:27:28  29  ,eur_g23
18:27:28  30  ,eur_g24
18:27:28  31  ,eur_g25
18:27:28  32  ,eur_g26
18:27:28  33  ,eur_g27
18:27:28  34  ,eur_g28
18:27:28  35  ,eur_g29
18:27:28  36  ,eur_g30
18:27:28  37  ,eur_g31
18:27:28  38  ,eur_g32
18:27:28  39  ,eur_g33
18:27:28  40  ,eur_g34
18:27:28  41  ,eur_g35
18:27:28  42  ,eur_g36
18:27:28  43  ,eur_g37
18:27:28  44  ,eur_g38
18:27:28  45  ,eur_g39
18:27:28  46  ,eur_g40
18:27:28  47  ,eur_g41
18:27:28  48  ,aud_g00
18:27:28  49  ,aud_g01
18:27:28  50  ,aud_g02
18:27:28  51  ,aud_g03
18:27:28  52  ,aud_g04
18:27:28  53  ,aud_g05
18:27:28  54  ,aud_g06
18:27:28  55  ,aud_g07
18:27:28  56  ,aud_g08
18:27:28  57  ,aud_g09
18:27:28  58  ,aud_g10
18:27:28  59  ,aud_g11
18:27:28  60  ,aud_g12
18:27:28  61  ,aud_g13
18:27:28  62  ,aud_g14
18:27:28  63  ,aud_g15
18:27:28  64  ,aud_g16
18:27:28  65  ,aud_g17
18:27:28  66  ,aud_g18
18:27:28  67  ,aud_g19
18:27:28  68  ,aud_g20
18:27:28  69  ,aud_g21
18:27:28  70  ,aud_g22
18:27:28  71  ,aud_g23
18:27:28  72  ,aud_g24
18:27:28  73  ,aud_g25
18:27:28  74  ,aud_g26
18:27:28  75  ,aud_g27
18:27:28  76  ,aud_g28
18:27:28  77  ,aud_g29
18:27:28  78  ,aud_g30
18:27:28  79  ,aud_g31
18:27:28  80  ,aud_g32
18:27:28  81  ,aud_g33
18:27:28  82  ,aud_g34
18:27:28  83  ,aud_g35
18:27:28  84  ,aud_g36
18:27:28  85  ,aud_g37
18:27:28  86  ,aud_g38
18:27:28  87  ,aud_g39
18:27:28  88  ,aud_g40
18:27:28  89  ,aud_g41
18:27:28  90  ,gbp_g00
18:27:28  91  ,gbp_g01
18:27:28  92  ,gbp_g02
18:27:28  93  ,gbp_g03
18:27:28  94  ,gbp_g04
18:27:28  95  ,gbp_g05
18:27:28  96  ,gbp_g06
18:27:28  97  ,gbp_g07
18:27:28  98  ,gbp_g08
18:27:28  99  ,gbp_g09
18:27:28 100  ,gbp_g10
18:27:28 101  ,gbp_g11
18:27:28 102  ,gbp_g12
18:27:28 103  ,gbp_g13
18:27:28 104  ,gbp_g14
18:27:28 105  ,gbp_g15
18:27:28 106  ,gbp_g16
18:27:28 107  ,gbp_g17
18:27:28 108  ,gbp_g18
18:27:28 109  ,gbp_g19
18:27:28 110  ,gbp_g20
18:27:28 111  ,gbp_g21
18:27:28 112  ,gbp_g22
18:27:28 113  ,gbp_g23
18:27:28 114  ,gbp_g24
18:27:28 115  ,gbp_g25
18:27:28 116  ,gbp_g26
18:27:28 117  ,gbp_g27
18:27:28 118  ,gbp_g28
18:27:28 119  ,gbp_g29
18:27:28 120  ,gbp_g30
18:27:28 121  ,gbp_g31
18:27:28 122  ,gbp_g32
18:27:28 123  ,gbp_g33
18:27:28 124  ,gbp_g34
18:27:28 125  ,gbp_g35
18:27:28 126  ,gbp_g36
18:27:28 127  ,gbp_g37
18:27:28 128  ,gbp_g38
18:27:28 129  ,gbp_g39
18:27:28 130  ,gbp_g40
18:27:28 131  ,gbp_g41
18:27:28 132  ,jpy_g00
18:27:28 133  ,jpy_g01
18:27:28 134  ,jpy_g02
18:27:28 135  ,jpy_g03
18:27:28 136  ,jpy_g04
18:27:28 137  ,jpy_g05
18:27:28 138  ,jpy_g06
18:27:28 139  ,jpy_g07
18:27:28 140  ,jpy_g08
18:27:28 141  ,jpy_g09
18:27:28 142  ,jpy_g10
18:27:28 143  ,jpy_g11
18:27:28 144  ,jpy_g12
18:27:28 145  ,jpy_g13
18:27:28 146  ,jpy_g14
18:27:28 147  ,jpy_g15
18:27:28 148  ,jpy_g16
18:27:28 149  ,jpy_g17
18:27:28 150  ,jpy_g18
18:27:28 151  ,jpy_g19
18:27:28 152  ,jpy_g20
18:27:28 153  ,jpy_g21
18:27:28 154  ,jpy_g22
18:27:28 155  ,jpy_g23
18:27:28 156  ,jpy_g24
18:27:28 157  ,jpy_g25
18:27:28 158  ,jpy_g26
18:27:28 159  ,jpy_g27
18:27:28 160  ,jpy_g28
18:27:28 161  ,jpy_g29
18:27:28 162  ,jpy_g30
18:27:28 163  ,jpy_g31
18:27:28 164  ,jpy_g32
18:27:28 165  ,jpy_g33
18:27:28 166  ,jpy_g34
18:27:28 167  ,jpy_g35
18:27:28 168  ,jpy_g36
18:27:28 169  ,jpy_g37
18:27:28 170  ,jpy_g38
18:27:28 171  ,jpy_g39
18:27:28 172  ,jpy_g40
18:27:28 173  ,jpy_g41
18:27:28 174  ,cad_g00
18:27:28 175  ,cad_g01
18:27:28 176  ,cad_g02
18:27:28 177  ,cad_g03
18:27:28 178  ,cad_g04
18:27:28 179  ,cad_g05
18:27:28 180  ,cad_g06
18:27:28 181  ,cad_g07
18:27:28 182  ,cad_g08
18:27:28 183  ,cad_g09
18:27:28 184  ,cad_g10
18:27:28 185  ,cad_g11
18:27:28 186  ,cad_g12
18:27:28 187  ,cad_g13
18:27:28 188  ,cad_g14
18:27:28 189  ,cad_g15
18:27:28 190  ,cad_g16
18:27:28 191  ,cad_g17
18:27:28 192  ,cad_g18
18:27:28 193  ,cad_g19
18:27:28 194  ,cad_g20
18:27:28 195  ,cad_g21
18:27:28 196  ,cad_g22
18:27:28 197  ,cad_g23
18:27:28 198  ,cad_g24
18:27:28 199  ,cad_g25
18:27:28 200  ,cad_g26
18:27:28 201  ,cad_g27
18:27:28 202  ,cad_g28
18:27:28 203  ,cad_g29
18:27:28 204  ,cad_g30
18:27:28 205  ,cad_g31
18:27:28 206  ,cad_g32
18:27:28 207  ,cad_g33
18:27:28 208  ,cad_g34
18:27:28 209  ,cad_g35
18:27:28 210  ,cad_g36
18:27:28 211  ,cad_g37
18:27:28 212  ,cad_g38
18:27:28 213  ,cad_g39
18:27:28 214  ,cad_g40
18:27:28 215  ,cad_g41
18:27:28 216  ,chf_g00
18:27:28 217  ,chf_g01
18:27:28 218  ,chf_g02
18:27:28 219  ,chf_g03
18:27:28 220  ,chf_g04
18:27:28 221  ,chf_g05
18:27:28 222  ,chf_g06
18:27:28 223  ,chf_g07
18:27:28 224  ,chf_g08
18:27:28 225  ,chf_g09
18:27:28 226  ,chf_g10
18:27:28 227  ,chf_g11
18:27:28 228  ,chf_g12
18:27:28 229  ,chf_g13
18:27:28 230  ,chf_g14
18:27:28 231  ,chf_g15
18:27:28 232  ,chf_g16
18:27:28 233  ,chf_g17
18:27:28 234  ,chf_g18
18:27:28 235  ,chf_g19
18:27:28 236  ,chf_g20
18:27:28 237  ,chf_g21
18:27:28 238  ,chf_g22
18:27:28 239  ,chf_g23
18:27:28 240  ,chf_g24
18:27:28 241  ,chf_g25
18:27:28 242  ,chf_g26
18:27:28 243  ,chf_g27
18:27:28 244  ,chf_g28
18:27:28 245  ,chf_g29
18:27:28 246  ,chf_g30
18:27:28 247  ,chf_g31
18:27:28 248  ,chf_g32
18:27:28 249  ,chf_g33
18:27:28 250  ,chf_g34
18:27:28 251  ,chf_g35
18:27:28 252  ,chf_g36
18:27:28 253  ,chf_g37
18:27:28 254  ,chf_g38
18:27:28 255  ,chf_g39
18:27:28 256  ,chf_g40
18:27:28 257  ,chf_g41
18:27:28 258  FROM aud_ms6 m
18:27:28 259  WHERE m.ydate = '&1'||' '||'&2'
18:27:28 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'18:10:00'

View created.

Elapsed: 00:00:00.12
18:27:28 SQL> 
18:27:28 SQL> -- rpt
18:27:28 SQL> -- We should see just 1 row:
18:27:28 SQL> 
18:27:28 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.02
18:27:28 SQL> 
18:27:28 SQL> -- Build the model:
18:27:28 SQL> CREATE OR REPLACE VIEW bme AS
18:27:28   2  SELECT
18:27:28   3  'aud'||m.ydate prdate
18:27:28   4  ,gattn
18:27:28   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:27:28   6  ,eur_g00
18:27:28   7  ,eur_g01
18:27:28   8  ,eur_g02
18:27:28   9  ,eur_g03
18:27:28  10  ,eur_g04
18:27:28  11  ,eur_g05
18:27:28  12  ,eur_g06
18:27:28  13  ,eur_g07
18:27:28  14  ,eur_g08
18:27:28  15  ,eur_g09
18:27:28  16  ,eur_g10
18:27:28  17  ,eur_g11
18:27:28  18  ,eur_g12
18:27:28  19  ,eur_g13
18:27:28  20  ,eur_g14
18:27:28  21  ,eur_g15
18:27:28  22  ,eur_g16
18:27:28  23  ,eur_g17
18:27:28  24  ,eur_g18
18:27:28  25  ,eur_g19
18:27:28  26  ,eur_g20
18:27:28  27  ,eur_g21
18:27:28  28  ,eur_g22
18:27:28  29  ,eur_g23
18:27:28  30  ,eur_g24
18:27:28  31  ,eur_g25
18:27:28  32  ,eur_g26
18:27:28  33  ,eur_g27
18:27:28  34  ,eur_g28
18:27:28  35  ,eur_g29
18:27:28  36  ,eur_g30
18:27:28  37  ,eur_g31
18:27:28  38  ,eur_g32
18:27:28  39  ,eur_g33
18:27:28  40  ,eur_g34
18:27:28  41  ,eur_g35
18:27:28  42  ,eur_g36
18:27:28  43  ,eur_g37
18:27:28  44  ,eur_g38
18:27:28  45  ,eur_g39
18:27:28  46  ,eur_g40
18:27:28  47  ,eur_g41
18:27:28  48  ,aud_g00
18:27:28  49  ,aud_g01
18:27:28  50  ,aud_g02
18:27:28  51  ,aud_g03
18:27:28  52  ,aud_g04
18:27:28  53  ,aud_g05
18:27:28  54  ,aud_g06
18:27:28  55  ,aud_g07
18:27:28  56  ,aud_g08
18:27:28  57  ,aud_g09
18:27:28  58  ,aud_g10
18:27:28  59  ,aud_g11
18:27:28  60  ,aud_g12
18:27:28  61  ,aud_g13
18:27:28  62  ,aud_g14
18:27:28  63  ,aud_g15
18:27:28  64  ,aud_g16
18:27:28  65  ,aud_g17
18:27:28  66  ,aud_g18
18:27:28  67  ,aud_g19
18:27:28  68  ,aud_g20
18:27:28  69  ,aud_g21
18:27:28  70  ,aud_g22
18:27:28  71  ,aud_g23
18:27:28  72  ,aud_g24
18:27:28  73  ,aud_g25
18:27:28  74  ,aud_g26
18:27:28  75  ,aud_g27
18:27:28  76  ,aud_g28
18:27:28  77  ,aud_g29
18:27:28  78  ,aud_g30
18:27:28  79  ,aud_g31
18:27:28  80  ,aud_g32
18:27:28  81  ,aud_g33
18:27:28  82  ,aud_g34
18:27:28  83  ,aud_g35
18:27:28  84  ,aud_g36
18:27:28  85  ,aud_g37
18:27:28  86  ,aud_g38
18:27:28  87  ,aud_g39
18:27:28  88  ,aud_g40
18:27:28  89  ,aud_g41
18:27:28  90  ,gbp_g00
18:27:28  91  ,gbp_g01
18:27:28  92  ,gbp_g02
18:27:28  93  ,gbp_g03
18:27:28  94  ,gbp_g04
18:27:28  95  ,gbp_g05
18:27:28  96  ,gbp_g06
18:27:28  97  ,gbp_g07
18:27:28  98  ,gbp_g08
18:27:28  99  ,gbp_g09
18:27:28 100  ,gbp_g10
18:27:28 101  ,gbp_g11
18:27:28 102  ,gbp_g12
18:27:28 103  ,gbp_g13
18:27:28 104  ,gbp_g14
18:27:28 105  ,gbp_g15
18:27:28 106  ,gbp_g16
18:27:28 107  ,gbp_g17
18:27:28 108  ,gbp_g18
18:27:28 109  ,gbp_g19
18:27:28 110  ,gbp_g20
18:27:28 111  ,gbp_g21
18:27:28 112  ,gbp_g22
18:27:28 113  ,gbp_g23
18:27:28 114  ,gbp_g24
18:27:28 115  ,gbp_g25
18:27:28 116  ,gbp_g26
18:27:28 117  ,gbp_g27
18:27:28 118  ,gbp_g28
18:27:28 119  ,gbp_g29
18:27:28 120  ,gbp_g30
18:27:28 121  ,gbp_g31
18:27:28 122  ,gbp_g32
18:27:28 123  ,gbp_g33
18:27:28 124  ,gbp_g34
18:27:28 125  ,gbp_g35
18:27:28 126  ,gbp_g36
18:27:28 127  ,gbp_g37
18:27:28 128  ,gbp_g38
18:27:28 129  ,gbp_g39
18:27:28 130  ,gbp_g40
18:27:28 131  ,gbp_g41
18:27:28 132  ,jpy_g00
18:27:28 133  ,jpy_g01
18:27:28 134  ,jpy_g02
18:27:28 135  ,jpy_g03
18:27:28 136  ,jpy_g04
18:27:28 137  ,jpy_g05
18:27:28 138  ,jpy_g06
18:27:28 139  ,jpy_g07
18:27:28 140  ,jpy_g08
18:27:28 141  ,jpy_g09
18:27:28 142  ,jpy_g10
18:27:28 143  ,jpy_g11
18:27:28 144  ,jpy_g12
18:27:28 145  ,jpy_g13
18:27:28 146  ,jpy_g14
18:27:28 147  ,jpy_g15
18:27:28 148  ,jpy_g16
18:27:28 149  ,jpy_g17
18:27:28 150  ,jpy_g18
18:27:28 151  ,jpy_g19
18:27:28 152  ,jpy_g20
18:27:28 153  ,jpy_g21
18:27:28 154  ,jpy_g22
18:27:28 155  ,jpy_g23
18:27:28 156  ,jpy_g24
18:27:28 157  ,jpy_g25
18:27:28 158  ,jpy_g26
18:27:28 159  ,jpy_g27
18:27:28 160  ,jpy_g28
18:27:28 161  ,jpy_g29
18:27:28 162  ,jpy_g30
18:27:28 163  ,jpy_g31
18:27:28 164  ,jpy_g32
18:27:28 165  ,jpy_g33
18:27:28 166  ,jpy_g34
18:27:28 167  ,jpy_g35
18:27:28 168  ,jpy_g36
18:27:28 169  ,jpy_g37
18:27:28 170  ,jpy_g38
18:27:28 171  ,jpy_g39
18:27:28 172  ,jpy_g40
18:27:28 173  ,jpy_g41
18:27:28 174  ,cad_g00
18:27:28 175  ,cad_g01
18:27:28 176  ,cad_g02
18:27:28 177  ,cad_g03
18:27:28 178  ,cad_g04
18:27:28 179  ,cad_g05
18:27:28 180  ,cad_g06
18:27:28 181  ,cad_g07
18:27:28 182  ,cad_g08
18:27:28 183  ,cad_g09
18:27:28 184  ,cad_g10
18:27:28 185  ,cad_g11
18:27:28 186  ,cad_g12
18:27:28 187  ,cad_g13
18:27:28 188  ,cad_g14
18:27:28 189  ,cad_g15
18:27:28 190  ,cad_g16
18:27:28 191  ,cad_g17
18:27:28 192  ,cad_g18
18:27:28 193  ,cad_g19
18:27:28 194  ,cad_g20
18:27:28 195  ,cad_g21
18:27:28 196  ,cad_g22
18:27:28 197  ,cad_g23
18:27:28 198  ,cad_g24
18:27:28 199  ,cad_g25
18:27:28 200  ,cad_g26
18:27:28 201  ,cad_g27
18:27:28 202  ,cad_g28
18:27:28 203  ,cad_g29
18:27:28 204  ,cad_g30
18:27:28 205  ,cad_g31
18:27:28 206  ,cad_g32
18:27:28 207  ,cad_g33
18:27:28 208  ,cad_g34
18:27:28 209  ,cad_g35
18:27:28 210  ,cad_g36
18:27:28 211  ,cad_g37
18:27:28 212  ,cad_g38
18:27:28 213  ,cad_g39
18:27:28 214  ,cad_g40
18:27:28 215  ,cad_g41
18:27:28 216  ,chf_g00
18:27:28 217  ,chf_g01
18:27:28 218  ,chf_g02
18:27:28 219  ,chf_g03
18:27:28 220  ,chf_g04
18:27:28 221  ,chf_g05
18:27:28 222  ,chf_g06
18:27:28 223  ,chf_g07
18:27:28 224  ,chf_g08
18:27:28 225  ,chf_g09
18:27:28 226  ,chf_g10
18:27:28 227  ,chf_g11
18:27:28 228  ,chf_g12
18:27:28 229  ,chf_g13
18:27:28 230  ,chf_g14
18:27:28 231  ,chf_g15
18:27:28 232  ,chf_g16
18:27:28 233  ,chf_g17
18:27:28 234  ,chf_g18
18:27:28 235  ,chf_g19
18:27:28 236  ,chf_g20
18:27:28 237  ,chf_g21
18:27:28 238  ,chf_g22
18:27:28 239  ,chf_g23
18:27:28 240  ,chf_g24
18:27:28 241  ,chf_g25
18:27:28 242  ,chf_g26
18:27:28 243  ,chf_g27
18:27:28 244  ,chf_g28
18:27:28 245  ,chf_g29
18:27:28 246  ,chf_g30
18:27:28 247  ,chf_g31
18:27:28 248  ,chf_g32
18:27:28 249  ,chf_g33
18:27:28 250  ,chf_g34
18:27:28 251  ,chf_g35
18:27:28 252  ,chf_g36
18:27:28 253  ,chf_g37
18:27:28 254  ,chf_g38
18:27:28 255  ,chf_g39
18:27:28 256  ,chf_g40
18:27:28 257  ,chf_g41
18:27:28 258  FROM aud_ms6 m
18:27:28 259  WHERE gattn IN('nup','up')
18:27:28 260  AND 1+m.ydate < '&1'||' '||'&2'
18:27:28 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'18:10:00'

View created.

Elapsed: 00:00:00.12
18:27:28 SQL> 
18:27:28 SQL> -- rpt
18:27:28 SQL> 
18:27:28 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12664
up	     6324

Elapsed: 00:00:00.03
18:27:28 SQL> 
18:27:28 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-27 18:05:00

Elapsed: 00:00:00.03
18:27:28 SQL> 
18:27:28 SQL> -- Now build model from bme and score sme
18:27:28 SQL> @score1gattn.sql
18:27:28 SQL> -- score1gattn.sql
18:27:28 SQL> 
18:27:28 SQL> -- Does the 1st SVM score
18:27:28 SQL> 
18:27:28 SQL> -- Fill up svmc_apply_prep
18:27:28 SQL> @score_gattn.sql
18:27:28 SQL> --
18:27:28 SQL> -- score_gattn.sql
18:27:28 SQL> --
18:27:28 SQL> 
18:27:28 SQL> -- usage: score_gattn.sql
18:27:28 SQL> 
18:27:28 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
18:27:28 SQL> 
18:27:28 SQL> DEFINE target	= 'gattn'
18:27:28 SQL> DEFINE model_name = 'forex14'
18:27:28 SQL> DEFINE bldtable	= 'bme'
18:27:28 SQL> DEFINE scoretable = 'sme'
18:27:28 SQL> DEFINE case_id	= 'prdate'
18:27:28 SQL> 
18:27:28 SQL> -- Define a variable to help me exclude some columns from some data mining calls
18:27:28 SQL> DEFINE exclude1 = "'&target','&case_id'"
18:27:28 SQL> 
18:27:28 SQL> -- Builds an SVM model using pl/sql.
18:27:28 SQL> 
18:27:28 SQL> -----------------------------------------------------------------------
18:27:28 SQL> --			    BUILD THE MODEL
18:27:28 SQL> -----------------------------------------------------------------------
18:27:28 SQL> 
18:27:28 SQL> -- Cleanup old build data preparation objects for repeat runs
18:27:28 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.00
18:27:28 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
18:27:28 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
18:27:28 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.01
18:27:28 SQL> 
18:27:28 SQL> 
18:27:28 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
18:27:28 SQL> --
18:27:28 SQL> -- DROP	TABLE svmc_settings ;
18:27:28 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
18:27:28 SQL> -- DELETE svmc_settings;
18:27:28 SQL> 
18:27:28 SQL> -- The default classification algorithm is Naive Bayes. So override
18:27:28 SQL> -- this choice to SVM using a settings table.
18:27:28 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
18:27:28 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
18:27:28 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
18:27:28 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
18:27:28 SQL> -- models.
18:27:28 SQL> --
18:27:28 SQL> 
18:27:28 SQL> -- Do this once and then comment it out.
18:27:28 SQL> -- That makes script go faster.
18:27:28 SQL> -- BEGIN
18:27:28 SQL> -- -- Populate settings table
18:27:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:27:28 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
18:27:28 SQL> --
18:27:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:27:28 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
18:27:28 SQL> --
18:27:28 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:27:28 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
18:27:28 SQL> --   COMMIT;
18:27:28 SQL> -- END;
18:27:28 SQL> -- /
18:27:28 SQL> 
18:27:28 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.00
18:27:28 SQL> 
18:27:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
18:27:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:27:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:27:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
18:27:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:27:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:27:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
18:27:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:27:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:27:28 SQL> 
18:27:28 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
18:27:28   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:27:28   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:27:28 SQL> 
18:27:28 SQL> --------------------------------
18:27:28 SQL> -- PREPARE BUILD (TRAINING) DATA
18:27:28 SQL> --
18:27:28 SQL> 
18:27:28 SQL> -- 1. Missing Value treatment for all Predictors and
18:27:28 SQL> -- 2. Outlier Treatment and
18:27:28 SQL> -- 3. Normalization are performed below.
18:27:28 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
18:27:28 SQL> --    normalized here.
18:27:28 SQL> 
18:27:28 SQL> BEGIN
18:27:28   2  	-- Perform missing value treatment for all predictors
18:27:28   3  	-- create miss tables
18:27:28   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
18:27:28   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
18:27:28   6  
18:27:28   7  	-- populate miss tables
18:27:28   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
18:27:28   9  	  miss_table_name => 'svmc_miss_num',
18:27:28  10  	  data_table_name => '&bldtable',
18:27:28  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:27:28  12  
18:27:28  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
18:27:28  14  	  miss_table_name => 'svmc_miss_cat',
18:27:28  15  	  data_table_name => '&bldtable',
18:27:28  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:27:28  17  
18:27:28  18  	-- xform input data to replace missing values
18:27:28  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:27:28  20  	  miss_table_name => 'svmc_miss_num',
18:27:28  21  	  data_table_name => '&bldtable',
18:27:28  22  	  xform_view_name => 'xformed_build_miss_num');
18:27:28  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:27:28  24  	  miss_table_name => 'svmc_miss_cat',
18:27:28  25  	  data_table_name => '&bldtable',
18:27:28  26  	  xform_view_name => 'xformed_build_miss_cat');
18:27:28  27  
18:27:28  28  	-- Perform outlier treatment.
18:27:28  29  	-- create clip table
18:27:28  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
18:27:28  31  
18:27:28  32  	-- populate clip table
18:27:28  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
18:27:28  34  	  clip_table_name => 'svmc_clip',
18:27:28  35  	  data_table_name => '&bldtable',
18:27:28  36  	  tail_frac	  => 0.025,
18:27:28  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:27:28  38  
18:27:28  39  	-- xform input data to winsorized data
18:27:28  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
18:27:28  41  	  clip_table_name => 'svmc_clip',
18:27:28  42  	  data_table_name => '&bldtable',
18:27:28  43  	  xform_view_name => 'svmc_winsor');
18:27:28  44  
18:27:28  45  	-- create normalization table
18:27:28  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
18:27:28  47  
18:27:28  48  	-- populate normalization table based on winsorized data
18:27:28  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
18:27:28  50  	  norm_table_name => 'svmc_norm',
18:27:28  51  	  data_table_name => 'svmc_winsor',
18:27:28  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:27:28  53  
18:27:28  54  	-- normalize the original data
18:27:28  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:27:28  56  	  norm_table_name => 'svmc_norm',
18:27:28  57  	  data_table_name => '&bldtable',
18:27:28  58  	  xform_view_name => 'svmc_build_prep');
18:27:28  59  END;
18:27:28  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.30
18:27:46 SQL> 
18:27:46 SQL> ---------------------
18:27:46 SQL> -- CREATE A NEW MODEL
18:27:46 SQL> --
18:27:46 SQL> -- Cleanup old model with the same name for repeat runs
18:27:46 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
18:27:46   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:27:46   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.31
18:27:47 SQL> 
18:27:47 SQL> -- Build a new SVM Model
18:27:47 SQL> BEGIN
18:27:47   2  	DBMS_DATA_MINING.CREATE_MODEL(
18:27:47   3  	  model_name	      => '&model_name',
18:27:47   4  	  mining_function     => dbms_data_mining.classification,
18:27:47   5  	  data_table_name     => 'svmc_build_prep',
18:27:47   6  	  case_id_column_name => '&case_id',
18:27:47   7  	  target_column_name  => '&target',
18:27:47   8  	  settings_table_name => 'svmc_settings');
18:27:47   9  END;
18:27:47  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:27.44
18:28:14 SQL> 
18:28:14 SQL> -----------------------------------------------------------------------
18:28:14 SQL> --			       APPLY/score THE MODEL
18:28:14 SQL> -----------------------------------------------------------------------
18:28:14 SQL> 
18:28:14 SQL> -- Cleanup old scoring data preparation objects for repeat runs
18:28:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
18:28:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:28:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
18:28:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
18:28:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:28:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:28:14 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
18:28:14   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:28:14   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:28:15 SQL> -----------------------
18:28:15 SQL> -- PREPARE SCORING DATA
18:28:15 SQL> --
18:28:15 SQL> -- If the data for model creation has been prepared, then the data
18:28:15 SQL> -- to be scored using the model must be prepared in the same manner
18:28:15 SQL> -- in order to obtain meaningful results.
18:28:15 SQL> --
18:28:15 SQL> -- 1. Missing Value treatment for all Predictors and
18:28:15 SQL> -- 2. Normalization
18:28:15 SQL> -- No outlier treatment will be performed during test and apply. The
18:28:15 SQL> -- normalization step is sufficient, since the normalization parameters
18:28:15 SQL> -- already capture the effects of outlier treatment done with build data.
18:28:15 SQL> --
18:28:15 SQL> BEGIN
18:28:15   2  	-- Xform Test data to replace missing values
18:28:15   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:28:15   4  	  miss_table_name => 'svmc_miss_num',
18:28:15   5  	  data_table_name => '&scoretable',
18:28:15   6  	  xform_view_name => 'xformed_apply_miss_num');
18:28:15   7  
18:28:15   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:28:15   9  	  miss_table_name => 'svmc_miss_cat',
18:28:15  10  	  data_table_name => '&scoretable',
18:28:15  11  	  xform_view_name => 'xformed_apply_miss_cat');
18:28:15  12  
18:28:15  13  	-- Normalize the data to be scored
18:28:15  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:28:15  15  	  norm_table_name => 'svmc_norm',
18:28:15  16  	  data_table_name => '&scoretable',
18:28:15  17  	  xform_view_name => 'svmc_apply_prep');
18:28:15  18  END;
18:28:15  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.17
18:28:16 SQL> 
18:28:16 SQL> -- Use same model_name used in score_gattn.sql
18:28:16 SQL> DEFINE model_name = 'forex14'
18:28:16 SQL> 
18:28:16 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.03
18:28:16 SQL> 
18:28:16 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
18:28:16   2  SELECT
18:28:16   3  prdate
18:28:16   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
18:28:16   5  ,sysdate
18:28:16   6  ,SUBSTR(prdate,1,3)pair
18:28:16   7  ,SUBSTR(prdate,4,19)ydate
18:28:16   8  FROM svmc_apply_prep
18:28:16   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
18:28:16 SQL> @aud_score1day_gattn.sql	2010-12-28 18:15:00
18:28:16 SQL> --
18:28:16 SQL> -- aud_score1day_gattn.sql
18:28:16 SQL> --
18:28:16 SQL> 
18:28:16 SQL> CREATE OR REPLACE VIEW sme AS
18:28:16   2  SELECT
18:28:16   3  'aud'||m.ydate prdate
18:28:16   4  ,NULL gattn
18:28:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:28:16   6  ,eur_g00
18:28:16   7  ,eur_g01
18:28:16   8  ,eur_g02
18:28:16   9  ,eur_g03
18:28:16  10  ,eur_g04
18:28:16  11  ,eur_g05
18:28:16  12  ,eur_g06
18:28:16  13  ,eur_g07
18:28:16  14  ,eur_g08
18:28:16  15  ,eur_g09
18:28:16  16  ,eur_g10
18:28:16  17  ,eur_g11
18:28:16  18  ,eur_g12
18:28:16  19  ,eur_g13
18:28:16  20  ,eur_g14
18:28:16  21  ,eur_g15
18:28:16  22  ,eur_g16
18:28:16  23  ,eur_g17
18:28:16  24  ,eur_g18
18:28:16  25  ,eur_g19
18:28:16  26  ,eur_g20
18:28:16  27  ,eur_g21
18:28:16  28  ,eur_g22
18:28:16  29  ,eur_g23
18:28:16  30  ,eur_g24
18:28:16  31  ,eur_g25
18:28:16  32  ,eur_g26
18:28:16  33  ,eur_g27
18:28:16  34  ,eur_g28
18:28:16  35  ,eur_g29
18:28:16  36  ,eur_g30
18:28:16  37  ,eur_g31
18:28:16  38  ,eur_g32
18:28:16  39  ,eur_g33
18:28:16  40  ,eur_g34
18:28:16  41  ,eur_g35
18:28:16  42  ,eur_g36
18:28:16  43  ,eur_g37
18:28:16  44  ,eur_g38
18:28:16  45  ,eur_g39
18:28:16  46  ,eur_g40
18:28:16  47  ,eur_g41
18:28:16  48  ,aud_g00
18:28:16  49  ,aud_g01
18:28:16  50  ,aud_g02
18:28:16  51  ,aud_g03
18:28:16  52  ,aud_g04
18:28:16  53  ,aud_g05
18:28:16  54  ,aud_g06
18:28:16  55  ,aud_g07
18:28:16  56  ,aud_g08
18:28:16  57  ,aud_g09
18:28:16  58  ,aud_g10
18:28:16  59  ,aud_g11
18:28:16  60  ,aud_g12
18:28:16  61  ,aud_g13
18:28:16  62  ,aud_g14
18:28:16  63  ,aud_g15
18:28:16  64  ,aud_g16
18:28:16  65  ,aud_g17
18:28:16  66  ,aud_g18
18:28:16  67  ,aud_g19
18:28:16  68  ,aud_g20
18:28:16  69  ,aud_g21
18:28:16  70  ,aud_g22
18:28:16  71  ,aud_g23
18:28:16  72  ,aud_g24
18:28:16  73  ,aud_g25
18:28:16  74  ,aud_g26
18:28:16  75  ,aud_g27
18:28:16  76  ,aud_g28
18:28:16  77  ,aud_g29
18:28:16  78  ,aud_g30
18:28:16  79  ,aud_g31
18:28:16  80  ,aud_g32
18:28:16  81  ,aud_g33
18:28:16  82  ,aud_g34
18:28:16  83  ,aud_g35
18:28:16  84  ,aud_g36
18:28:16  85  ,aud_g37
18:28:16  86  ,aud_g38
18:28:16  87  ,aud_g39
18:28:16  88  ,aud_g40
18:28:16  89  ,aud_g41
18:28:16  90  ,gbp_g00
18:28:16  91  ,gbp_g01
18:28:16  92  ,gbp_g02
18:28:16  93  ,gbp_g03
18:28:16  94  ,gbp_g04
18:28:16  95  ,gbp_g05
18:28:16  96  ,gbp_g06
18:28:16  97  ,gbp_g07
18:28:16  98  ,gbp_g08
18:28:16  99  ,gbp_g09
18:28:16 100  ,gbp_g10
18:28:16 101  ,gbp_g11
18:28:16 102  ,gbp_g12
18:28:16 103  ,gbp_g13
18:28:16 104  ,gbp_g14
18:28:16 105  ,gbp_g15
18:28:16 106  ,gbp_g16
18:28:16 107  ,gbp_g17
18:28:16 108  ,gbp_g18
18:28:16 109  ,gbp_g19
18:28:16 110  ,gbp_g20
18:28:16 111  ,gbp_g21
18:28:16 112  ,gbp_g22
18:28:16 113  ,gbp_g23
18:28:16 114  ,gbp_g24
18:28:16 115  ,gbp_g25
18:28:16 116  ,gbp_g26
18:28:16 117  ,gbp_g27
18:28:16 118  ,gbp_g28
18:28:16 119  ,gbp_g29
18:28:16 120  ,gbp_g30
18:28:16 121  ,gbp_g31
18:28:16 122  ,gbp_g32
18:28:16 123  ,gbp_g33
18:28:16 124  ,gbp_g34
18:28:16 125  ,gbp_g35
18:28:16 126  ,gbp_g36
18:28:16 127  ,gbp_g37
18:28:16 128  ,gbp_g38
18:28:16 129  ,gbp_g39
18:28:16 130  ,gbp_g40
18:28:16 131  ,gbp_g41
18:28:16 132  ,jpy_g00
18:28:16 133  ,jpy_g01
18:28:16 134  ,jpy_g02
18:28:16 135  ,jpy_g03
18:28:16 136  ,jpy_g04
18:28:16 137  ,jpy_g05
18:28:16 138  ,jpy_g06
18:28:16 139  ,jpy_g07
18:28:16 140  ,jpy_g08
18:28:16 141  ,jpy_g09
18:28:16 142  ,jpy_g10
18:28:16 143  ,jpy_g11
18:28:16 144  ,jpy_g12
18:28:16 145  ,jpy_g13
18:28:16 146  ,jpy_g14
18:28:16 147  ,jpy_g15
18:28:16 148  ,jpy_g16
18:28:16 149  ,jpy_g17
18:28:16 150  ,jpy_g18
18:28:16 151  ,jpy_g19
18:28:16 152  ,jpy_g20
18:28:16 153  ,jpy_g21
18:28:16 154  ,jpy_g22
18:28:16 155  ,jpy_g23
18:28:16 156  ,jpy_g24
18:28:16 157  ,jpy_g25
18:28:16 158  ,jpy_g26
18:28:16 159  ,jpy_g27
18:28:16 160  ,jpy_g28
18:28:16 161  ,jpy_g29
18:28:16 162  ,jpy_g30
18:28:16 163  ,jpy_g31
18:28:16 164  ,jpy_g32
18:28:16 165  ,jpy_g33
18:28:16 166  ,jpy_g34
18:28:16 167  ,jpy_g35
18:28:16 168  ,jpy_g36
18:28:16 169  ,jpy_g37
18:28:16 170  ,jpy_g38
18:28:16 171  ,jpy_g39
18:28:16 172  ,jpy_g40
18:28:16 173  ,jpy_g41
18:28:16 174  ,cad_g00
18:28:16 175  ,cad_g01
18:28:16 176  ,cad_g02
18:28:16 177  ,cad_g03
18:28:16 178  ,cad_g04
18:28:16 179  ,cad_g05
18:28:16 180  ,cad_g06
18:28:16 181  ,cad_g07
18:28:16 182  ,cad_g08
18:28:16 183  ,cad_g09
18:28:16 184  ,cad_g10
18:28:16 185  ,cad_g11
18:28:16 186  ,cad_g12
18:28:16 187  ,cad_g13
18:28:16 188  ,cad_g14
18:28:16 189  ,cad_g15
18:28:16 190  ,cad_g16
18:28:16 191  ,cad_g17
18:28:16 192  ,cad_g18
18:28:16 193  ,cad_g19
18:28:16 194  ,cad_g20
18:28:16 195  ,cad_g21
18:28:16 196  ,cad_g22
18:28:16 197  ,cad_g23
18:28:16 198  ,cad_g24
18:28:16 199  ,cad_g25
18:28:16 200  ,cad_g26
18:28:16 201  ,cad_g27
18:28:16 202  ,cad_g28
18:28:16 203  ,cad_g29
18:28:16 204  ,cad_g30
18:28:16 205  ,cad_g31
18:28:16 206  ,cad_g32
18:28:16 207  ,cad_g33
18:28:16 208  ,cad_g34
18:28:16 209  ,cad_g35
18:28:16 210  ,cad_g36
18:28:16 211  ,cad_g37
18:28:16 212  ,cad_g38
18:28:16 213  ,cad_g39
18:28:16 214  ,cad_g40
18:28:16 215  ,cad_g41
18:28:16 216  ,chf_g00
18:28:16 217  ,chf_g01
18:28:16 218  ,chf_g02
18:28:16 219  ,chf_g03
18:28:16 220  ,chf_g04
18:28:16 221  ,chf_g05
18:28:16 222  ,chf_g06
18:28:16 223  ,chf_g07
18:28:16 224  ,chf_g08
18:28:16 225  ,chf_g09
18:28:16 226  ,chf_g10
18:28:16 227  ,chf_g11
18:28:16 228  ,chf_g12
18:28:16 229  ,chf_g13
18:28:16 230  ,chf_g14
18:28:16 231  ,chf_g15
18:28:16 232  ,chf_g16
18:28:16 233  ,chf_g17
18:28:16 234  ,chf_g18
18:28:16 235  ,chf_g19
18:28:16 236  ,chf_g20
18:28:16 237  ,chf_g21
18:28:16 238  ,chf_g22
18:28:16 239  ,chf_g23
18:28:16 240  ,chf_g24
18:28:16 241  ,chf_g25
18:28:16 242  ,chf_g26
18:28:16 243  ,chf_g27
18:28:16 244  ,chf_g28
18:28:16 245  ,chf_g29
18:28:16 246  ,chf_g30
18:28:16 247  ,chf_g31
18:28:16 248  ,chf_g32
18:28:16 249  ,chf_g33
18:28:16 250  ,chf_g34
18:28:16 251  ,chf_g35
18:28:16 252  ,chf_g36
18:28:16 253  ,chf_g37
18:28:16 254  ,chf_g38
18:28:16 255  ,chf_g39
18:28:16 256  ,chf_g40
18:28:16 257  ,chf_g41
18:28:16 258  FROM aud_ms6 m
18:28:16 259  WHERE m.ydate = '&1'||' '||'&2'
18:28:16 260  /
old 259: WHERE m.ydate = '&1'||' '||'&2'
new 259: WHERE m.ydate = '2010-12-28'||' '||'18:15:00'

View created.

Elapsed: 00:00:00.12
18:28:16 SQL> 
18:28:16 SQL> -- rpt
18:28:16 SQL> -- We should see just 1 row:
18:28:16 SQL> 
18:28:16 SQL> SELECT COUNT(prdate) FROM sme;

COUNT(PRDATE)
-------------
	    1

Elapsed: 00:00:00.01
18:28:16 SQL> 
18:28:16 SQL> -- Build the model:
18:28:16 SQL> CREATE OR REPLACE VIEW bme AS
18:28:16   2  SELECT
18:28:16   3  'aud'||m.ydate prdate
18:28:16   4  ,gattn
18:28:16   5  ,m.ydate - TO_DATE('2000-01-01','YYYY-MM-DD')daycount
18:28:16   6  ,eur_g00
18:28:16   7  ,eur_g01
18:28:16   8  ,eur_g02
18:28:16   9  ,eur_g03
18:28:16  10  ,eur_g04
18:28:16  11  ,eur_g05
18:28:16  12  ,eur_g06
18:28:16  13  ,eur_g07
18:28:16  14  ,eur_g08
18:28:16  15  ,eur_g09
18:28:16  16  ,eur_g10
18:28:16  17  ,eur_g11
18:28:16  18  ,eur_g12
18:28:16  19  ,eur_g13
18:28:16  20  ,eur_g14
18:28:16  21  ,eur_g15
18:28:16  22  ,eur_g16
18:28:16  23  ,eur_g17
18:28:16  24  ,eur_g18
18:28:16  25  ,eur_g19
18:28:16  26  ,eur_g20
18:28:16  27  ,eur_g21
18:28:16  28  ,eur_g22
18:28:16  29  ,eur_g23
18:28:16  30  ,eur_g24
18:28:16  31  ,eur_g25
18:28:16  32  ,eur_g26
18:28:16  33  ,eur_g27
18:28:16  34  ,eur_g28
18:28:16  35  ,eur_g29
18:28:16  36  ,eur_g30
18:28:16  37  ,eur_g31
18:28:16  38  ,eur_g32
18:28:16  39  ,eur_g33
18:28:16  40  ,eur_g34
18:28:16  41  ,eur_g35
18:28:16  42  ,eur_g36
18:28:16  43  ,eur_g37
18:28:16  44  ,eur_g38
18:28:16  45  ,eur_g39
18:28:16  46  ,eur_g40
18:28:16  47  ,eur_g41
18:28:16  48  ,aud_g00
18:28:16  49  ,aud_g01
18:28:16  50  ,aud_g02
18:28:16  51  ,aud_g03
18:28:16  52  ,aud_g04
18:28:16  53  ,aud_g05
18:28:16  54  ,aud_g06
18:28:16  55  ,aud_g07
18:28:16  56  ,aud_g08
18:28:16  57  ,aud_g09
18:28:16  58  ,aud_g10
18:28:16  59  ,aud_g11
18:28:16  60  ,aud_g12
18:28:16  61  ,aud_g13
18:28:16  62  ,aud_g14
18:28:16  63  ,aud_g15
18:28:16  64  ,aud_g16
18:28:16  65  ,aud_g17
18:28:16  66  ,aud_g18
18:28:16  67  ,aud_g19
18:28:16  68  ,aud_g20
18:28:16  69  ,aud_g21
18:28:16  70  ,aud_g22
18:28:16  71  ,aud_g23
18:28:16  72  ,aud_g24
18:28:16  73  ,aud_g25
18:28:16  74  ,aud_g26
18:28:16  75  ,aud_g27
18:28:16  76  ,aud_g28
18:28:16  77  ,aud_g29
18:28:16  78  ,aud_g30
18:28:16  79  ,aud_g31
18:28:16  80  ,aud_g32
18:28:16  81  ,aud_g33
18:28:16  82  ,aud_g34
18:28:16  83  ,aud_g35
18:28:16  84  ,aud_g36
18:28:16  85  ,aud_g37
18:28:16  86  ,aud_g38
18:28:16  87  ,aud_g39
18:28:16  88  ,aud_g40
18:28:16  89  ,aud_g41
18:28:16  90  ,gbp_g00
18:28:16  91  ,gbp_g01
18:28:16  92  ,gbp_g02
18:28:16  93  ,gbp_g03
18:28:16  94  ,gbp_g04
18:28:16  95  ,gbp_g05
18:28:16  96  ,gbp_g06
18:28:16  97  ,gbp_g07
18:28:16  98  ,gbp_g08
18:28:16  99  ,gbp_g09
18:28:16 100  ,gbp_g10
18:28:16 101  ,gbp_g11
18:28:16 102  ,gbp_g12
18:28:16 103  ,gbp_g13
18:28:16 104  ,gbp_g14
18:28:16 105  ,gbp_g15
18:28:16 106  ,gbp_g16
18:28:16 107  ,gbp_g17
18:28:16 108  ,gbp_g18
18:28:16 109  ,gbp_g19
18:28:16 110  ,gbp_g20
18:28:16 111  ,gbp_g21
18:28:16 112  ,gbp_g22
18:28:16 113  ,gbp_g23
18:28:16 114  ,gbp_g24
18:28:16 115  ,gbp_g25
18:28:16 116  ,gbp_g26
18:28:16 117  ,gbp_g27
18:28:16 118  ,gbp_g28
18:28:16 119  ,gbp_g29
18:28:16 120  ,gbp_g30
18:28:16 121  ,gbp_g31
18:28:16 122  ,gbp_g32
18:28:16 123  ,gbp_g33
18:28:16 124  ,gbp_g34
18:28:16 125  ,gbp_g35
18:28:16 126  ,gbp_g36
18:28:16 127  ,gbp_g37
18:28:16 128  ,gbp_g38
18:28:16 129  ,gbp_g39
18:28:16 130  ,gbp_g40
18:28:16 131  ,gbp_g41
18:28:16 132  ,jpy_g00
18:28:16 133  ,jpy_g01
18:28:16 134  ,jpy_g02
18:28:16 135  ,jpy_g03
18:28:16 136  ,jpy_g04
18:28:16 137  ,jpy_g05
18:28:16 138  ,jpy_g06
18:28:16 139  ,jpy_g07
18:28:16 140  ,jpy_g08
18:28:16 141  ,jpy_g09
18:28:16 142  ,jpy_g10
18:28:16 143  ,jpy_g11
18:28:16 144  ,jpy_g12
18:28:16 145  ,jpy_g13
18:28:16 146  ,jpy_g14
18:28:16 147  ,jpy_g15
18:28:16 148  ,jpy_g16
18:28:16 149  ,jpy_g17
18:28:16 150  ,jpy_g18
18:28:16 151  ,jpy_g19
18:28:16 152  ,jpy_g20
18:28:16 153  ,jpy_g21
18:28:16 154  ,jpy_g22
18:28:16 155  ,jpy_g23
18:28:16 156  ,jpy_g24
18:28:16 157  ,jpy_g25
18:28:16 158  ,jpy_g26
18:28:16 159  ,jpy_g27
18:28:16 160  ,jpy_g28
18:28:16 161  ,jpy_g29
18:28:16 162  ,jpy_g30
18:28:16 163  ,jpy_g31
18:28:16 164  ,jpy_g32
18:28:16 165  ,jpy_g33
18:28:16 166  ,jpy_g34
18:28:16 167  ,jpy_g35
18:28:16 168  ,jpy_g36
18:28:16 169  ,jpy_g37
18:28:16 170  ,jpy_g38
18:28:16 171  ,jpy_g39
18:28:16 172  ,jpy_g40
18:28:16 173  ,jpy_g41
18:28:16 174  ,cad_g00
18:28:16 175  ,cad_g01
18:28:16 176  ,cad_g02
18:28:16 177  ,cad_g03
18:28:16 178  ,cad_g04
18:28:16 179  ,cad_g05
18:28:16 180  ,cad_g06
18:28:16 181  ,cad_g07
18:28:16 182  ,cad_g08
18:28:16 183  ,cad_g09
18:28:16 184  ,cad_g10
18:28:16 185  ,cad_g11
18:28:16 186  ,cad_g12
18:28:16 187  ,cad_g13
18:28:16 188  ,cad_g14
18:28:16 189  ,cad_g15
18:28:16 190  ,cad_g16
18:28:16 191  ,cad_g17
18:28:16 192  ,cad_g18
18:28:16 193  ,cad_g19
18:28:16 194  ,cad_g20
18:28:16 195  ,cad_g21
18:28:16 196  ,cad_g22
18:28:16 197  ,cad_g23
18:28:16 198  ,cad_g24
18:28:16 199  ,cad_g25
18:28:16 200  ,cad_g26
18:28:16 201  ,cad_g27
18:28:16 202  ,cad_g28
18:28:16 203  ,cad_g29
18:28:16 204  ,cad_g30
18:28:16 205  ,cad_g31
18:28:16 206  ,cad_g32
18:28:16 207  ,cad_g33
18:28:16 208  ,cad_g34
18:28:16 209  ,cad_g35
18:28:16 210  ,cad_g36
18:28:16 211  ,cad_g37
18:28:16 212  ,cad_g38
18:28:16 213  ,cad_g39
18:28:16 214  ,cad_g40
18:28:16 215  ,cad_g41
18:28:16 216  ,chf_g00
18:28:16 217  ,chf_g01
18:28:16 218  ,chf_g02
18:28:16 219  ,chf_g03
18:28:16 220  ,chf_g04
18:28:16 221  ,chf_g05
18:28:16 222  ,chf_g06
18:28:16 223  ,chf_g07
18:28:16 224  ,chf_g08
18:28:16 225  ,chf_g09
18:28:16 226  ,chf_g10
18:28:16 227  ,chf_g11
18:28:16 228  ,chf_g12
18:28:16 229  ,chf_g13
18:28:16 230  ,chf_g14
18:28:16 231  ,chf_g15
18:28:16 232  ,chf_g16
18:28:16 233  ,chf_g17
18:28:16 234  ,chf_g18
18:28:16 235  ,chf_g19
18:28:16 236  ,chf_g20
18:28:16 237  ,chf_g21
18:28:16 238  ,chf_g22
18:28:16 239  ,chf_g23
18:28:16 240  ,chf_g24
18:28:16 241  ,chf_g25
18:28:16 242  ,chf_g26
18:28:16 243  ,chf_g27
18:28:16 244  ,chf_g28
18:28:16 245  ,chf_g29
18:28:16 246  ,chf_g30
18:28:16 247  ,chf_g31
18:28:16 248  ,chf_g32
18:28:16 249  ,chf_g33
18:28:16 250  ,chf_g34
18:28:16 251  ,chf_g35
18:28:16 252  ,chf_g36
18:28:16 253  ,chf_g37
18:28:16 254  ,chf_g38
18:28:16 255  ,chf_g39
18:28:16 256  ,chf_g40
18:28:16 257  ,chf_g41
18:28:16 258  FROM aud_ms6 m
18:28:16 259  WHERE gattn IN('nup','up')
18:28:16 260  AND 1+m.ydate < '&1'||' '||'&2'
18:28:16 261  /
old 260: AND 1+m.ydate < '&1'||' '||'&2'
new 260: AND 1+m.ydate < '2010-12-28'||' '||'18:15:00'

View created.

Elapsed: 00:00:00.17
18:28:16 SQL> 
18:28:16 SQL> -- rpt
18:28:16 SQL> 
18:28:16 SQL> SELECT gattn, COUNT(prdate) FROM bme GROUP BY gattn;

GAT COUNT(PRDATE)
--- -------------
nup	    12665
up	     6324

Elapsed: 00:00:00.04
18:28:16 SQL> 
18:28:16 SQL> SELECT MAX(prdate) FROM bme;

MAX(PRDATE)
----------------------
aud2010-12-27 18:10:00

Elapsed: 00:00:00.03
18:28:16 SQL> 
18:28:16 SQL> -- Now build model from bme and score sme
18:28:16 SQL> @score1gattn.sql
18:28:16 SQL> -- score1gattn.sql
18:28:16 SQL> 
18:28:16 SQL> -- Does the 1st SVM score
18:28:16 SQL> 
18:28:16 SQL> -- Fill up svmc_apply_prep
18:28:16 SQL> @score_gattn.sql
18:28:16 SQL> --
18:28:16 SQL> -- score_gattn.sql
18:28:16 SQL> --
18:28:16 SQL> 
18:28:16 SQL> -- usage: score_gattn.sql
18:28:16 SQL> 
18:28:16 SQL> -- A script which feeds data to SVM and captures the results in table svmc_apply_prep
18:28:16 SQL> 
18:28:16 SQL> DEFINE target	= 'gattn'
18:28:16 SQL> DEFINE model_name = 'forex14'
18:28:16 SQL> DEFINE bldtable	= 'bme'
18:28:16 SQL> DEFINE scoretable = 'sme'
18:28:16 SQL> DEFINE case_id	= 'prdate'
18:28:16 SQL> 
18:28:16 SQL> -- Define a variable to help me exclude some columns from some data mining calls
18:28:16 SQL> DEFINE exclude1 = "'&target','&case_id'"
18:28:16 SQL> 
18:28:16 SQL> -- Builds an SVM model using pl/sql.
18:28:16 SQL> 
18:28:16 SQL> -----------------------------------------------------------------------
18:28:16 SQL> --			    BUILD THE MODEL
18:28:16 SQL> -----------------------------------------------------------------------
18:28:16 SQL> 
18:28:16 SQL> -- Cleanup old build data preparation objects for repeat runs
18:28:16 SQL> DELETE svmc_miss_num;

253 rows deleted.

Elapsed: 00:00:00.01
18:28:16 SQL> DELETE svmc_miss_cat;

0 rows deleted.

Elapsed: 00:00:00.00
18:28:16 SQL> DELETE svmc_clip;

253 rows deleted.

Elapsed: 00:00:00.00
18:28:16 SQL> DELETE svmc_norm;

253 rows deleted.

Elapsed: 00:00:00.00
18:28:16 SQL> 
18:28:16 SQL> 
18:28:16 SQL> -- CREATE AND POPULATE A SETTINGS TABLE
18:28:16 SQL> --
18:28:16 SQL> -- DROP	TABLE svmc_settings ;
18:28:16 SQL> -- CREATE TABLE svmc_settings ( setting_name  VARCHAR2(30), setting_value VARCHAR2(30));
18:28:16 SQL> -- DELETE svmc_settings;
18:28:16 SQL> 
18:28:16 SQL> -- The default classification algorithm is Naive Bayes. So override
18:28:16 SQL> -- this choice to SVM using a settings table.
18:28:16 SQL> -- SVM chooses a kernel type automatically. This choice can be overriden
18:28:16 SQL> -- by the user. Linear kernel is preferred high dimensional data, and
18:28:16 SQL> -- Gaussian kernel for low dimensional data. Here we use linear kernel
18:28:16 SQL> -- to demonstrate the get_model_details_svm() API, which applies only for
18:28:16 SQL> -- models.
18:28:16 SQL> --
18:28:16 SQL> 
18:28:16 SQL> -- Do this once and then comment it out.
18:28:16 SQL> -- That makes script go faster.
18:28:16 SQL> -- BEGIN
18:28:16 SQL> -- -- Populate settings table
18:28:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:28:16 SQL> --   (dbms_data_mining.algo_name, dbms_data_mining.algo_support_vector_machines);
18:28:16 SQL> --
18:28:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:28:16 SQL> --   (dbms_data_mining.svms_kernel_function, dbms_data_mining.svms_gaussian);
18:28:16 SQL> --
18:28:16 SQL> --   INSERT INTO svmc_settings (setting_name, setting_value) VALUES
18:28:16 SQL> --   (dbms_data_mining.svms_kernel_cache_size,190123123);
18:28:16 SQL> --   COMMIT;
18:28:16 SQL> -- END;
18:28:16 SQL> -- /
18:28:16 SQL> 
18:28:16 SQL> SELECT * FROM svmc_settings;

SETTING_NAME		       SETTING_VALUE
------------------------------ ------------------------------
ALGO_NAME		       ALGO_SUPPORT_VECTOR_MACHINES
SVMS_KERNEL_FUNCTION	       SVMS_GAUSSIAN
SVMS_KERNEL_CACHE_SIZE	       320123123

Elapsed: 00:00:00.01
18:28:16 SQL> 
18:28:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_winsor';
18:28:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:28:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.07
18:28:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_build_prep';
18:28:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:28:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.08
18:28:16 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_num';
18:28:16   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:28:16   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:28:17 SQL> 
18:28:17 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_build_miss_cat';
18:28:17   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:28:17   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:28:17 SQL> 
18:28:17 SQL> --------------------------------
18:28:17 SQL> -- PREPARE BUILD (TRAINING) DATA
18:28:17 SQL> --
18:28:17 SQL> 
18:28:17 SQL> -- 1. Missing Value treatment for all Predictors and
18:28:17 SQL> -- 2. Outlier Treatment and
18:28:17 SQL> -- 3. Normalization are performed below.
18:28:17 SQL> --    NOTE: that unlike SVM regression, the classification target is NOT
18:28:17 SQL> --    normalized here.
18:28:17 SQL> 
18:28:17 SQL> BEGIN
18:28:17   2  	-- Perform missing value treatment for all predictors
18:28:17   3  	-- create miss tables
18:28:17   4  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_NUM (miss_table_name => 'svmc_miss_num');
18:28:17   5  	--  DBMS_DATA_MINING_TRANSFORM.CREATE_MISS_CAT (miss_table_name => 'svmc_miss_cat');
18:28:17   6  
18:28:17   7  	-- populate miss tables
18:28:17   8  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_NUM_MEAN (
18:28:17   9  	  miss_table_name => 'svmc_miss_num',
18:28:17  10  	  data_table_name => '&bldtable',
18:28:17  11  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:28:17  12  
18:28:17  13  	DBMS_DATA_MINING_TRANSFORM.INSERT_MISS_CAT_MODE (
18:28:17  14  	  miss_table_name => 'svmc_miss_cat',
18:28:17  15  	  data_table_name => '&bldtable',
18:28:17  16  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:28:17  17  
18:28:17  18  	-- xform input data to replace missing values
18:28:17  19  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:28:17  20  	  miss_table_name => 'svmc_miss_num',
18:28:17  21  	  data_table_name => '&bldtable',
18:28:17  22  	  xform_view_name => 'xformed_build_miss_num');
18:28:17  23  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:28:17  24  	  miss_table_name => 'svmc_miss_cat',
18:28:17  25  	  data_table_name => '&bldtable',
18:28:17  26  	  xform_view_name => 'xformed_build_miss_cat');
18:28:17  27  
18:28:17  28  	-- Perform outlier treatment.
18:28:17  29  	-- create clip table
18:28:17  30  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_CLIP (clip_table_name => 'svmc_clip');
18:28:17  31  
18:28:17  32  	-- populate clip table
18:28:17  33  	DBMS_DATA_MINING_TRANSFORM.INSERT_CLIP_WINSOR_TAIL (
18:28:17  34  	  clip_table_name => 'svmc_clip',
18:28:17  35  	  data_table_name => '&bldtable',
18:28:17  36  	  tail_frac	  => 0.025,
18:28:17  37  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:28:17  38  
18:28:17  39  	-- xform input data to winsorized data
18:28:17  40  	DBMS_DATA_MINING_TRANSFORM.XFORM_CLIP(
18:28:17  41  	  clip_table_name => 'svmc_clip',
18:28:17  42  	  data_table_name => '&bldtable',
18:28:17  43  	  xform_view_name => 'svmc_winsor');
18:28:17  44  
18:28:17  45  	-- create normalization table
18:28:17  46  	-- DBMS_DATA_MINING_TRANSFORM.CREATE_NORM_LIN (norm_table_name => 'svmc_norm');
18:28:17  47  
18:28:17  48  	-- populate normalization table based on winsorized data
18:28:17  49  	DBMS_DATA_MINING_TRANSFORM.INSERT_NORM_LIN_MINMAX (
18:28:17  50  	  norm_table_name => 'svmc_norm',
18:28:17  51  	  data_table_name => 'svmc_winsor',
18:28:17  52  	  exclude_list	  => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
18:28:17  53  
18:28:17  54  	-- normalize the original data
18:28:17  55  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:28:17  56  	  norm_table_name => 'svmc_norm',
18:28:17  57  	  data_table_name => '&bldtable',
18:28:17  58  	  xform_view_name => 'svmc_build_prep');
18:28:17  59  END;
18:28:17  60  /
old  10:     data_table_name => '&bldtable',
new  10:     data_table_name => 'bme',
old  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  11:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  15:     data_table_name => '&bldtable',
new  15:     data_table_name => 'bme',
old  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  16:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  21:     data_table_name => '&bldtable',
new  21:     data_table_name => 'bme',
old  25:     data_table_name => '&bldtable',
new  25:     data_table_name => 'bme',
old  35:     data_table_name => '&bldtable',
new  35:     data_table_name => 'bme',
old  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  37:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  42:     data_table_name => '&bldtable',
new  42:     data_table_name => 'bme',
old  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST (&exclude1));
new  52:     exclude_list    => DBMS_DATA_MINING_TRANSFORM.COLUMN_LIST ('gattn','prdate'));
old  57:     data_table_name => '&bldtable',
new  57:     data_table_name => 'bme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:17.41
18:28:34 SQL> 
18:28:34 SQL> ---------------------
18:28:34 SQL> -- CREATE A NEW MODEL
18:28:34 SQL> --
18:28:34 SQL> -- Cleanup old model with the same name for repeat runs
18:28:34 SQL> BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
18:28:34   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:28:34   3  /
old   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('&model_name');
new   1: BEGIN DBMS_DATA_MINING.DROP_MODEL('forex14');

PL/SQL procedure successfully completed.

Elapsed: 00:00:02.63
18:28:37 SQL> 
18:28:37 SQL> -- Build a new SVM Model
18:28:37 SQL> BEGIN
18:28:37   2  	DBMS_DATA_MINING.CREATE_MODEL(
18:28:37   3  	  model_name	      => '&model_name',
18:28:37   4  	  mining_function     => dbms_data_mining.classification,
18:28:37   5  	  data_table_name     => 'svmc_build_prep',
18:28:37   6  	  case_id_column_name => '&case_id',
18:28:37   7  	  target_column_name  => '&target',
18:28:37   8  	  settings_table_name => 'svmc_settings');
18:28:37   9  END;
18:28:37  10  /
old   3:     model_name 	 => '&model_name',
new   3:     model_name 	 => 'forex14',
old   6:     case_id_column_name => '&case_id',
new   6:     case_id_column_name => 'prdate',
old   7:     target_column_name  => '&target',
new   7:     target_column_name  => 'gattn',

PL/SQL procedure successfully completed.

Elapsed: 00:00:26.49
18:29:03 SQL> 
18:29:03 SQL> -----------------------------------------------------------------------
18:29:03 SQL> --			       APPLY/score THE MODEL
18:29:03 SQL> -----------------------------------------------------------------------
18:29:03 SQL> 
18:29:03 SQL> -- Cleanup old scoring data preparation objects for repeat runs
18:29:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_num';
18:29:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:29:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.05
18:29:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW xformed_apply_miss_cat';
18:29:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:29:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:29:03 SQL> BEGIN EXECUTE IMMEDIATE 'DROP VIEW svmc_apply_prep';
18:29:03   2  EXCEPTION WHEN OTHERS THEN NULL; END;
18:29:03   3  /

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.06
18:29:03 SQL> -----------------------
18:29:03 SQL> -- PREPARE SCORING DATA
18:29:03 SQL> --
18:29:03 SQL> -- If the data for model creation has been prepared, then the data
18:29:03 SQL> -- to be scored using the model must be prepared in the same manner
18:29:03 SQL> -- in order to obtain meaningful results.
18:29:03 SQL> --
18:29:03 SQL> -- 1. Missing Value treatment for all Predictors and
18:29:03 SQL> -- 2. Normalization
18:29:03 SQL> -- No outlier treatment will be performed during test and apply. The
18:29:03 SQL> -- normalization step is sufficient, since the normalization parameters
18:29:03 SQL> -- already capture the effects of outlier treatment done with build data.
18:29:03 SQL> --
18:29:03 SQL> BEGIN
18:29:03   2  	-- Xform Test data to replace missing values
18:29:03   3  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_NUM(
18:29:03   4  	  miss_table_name => 'svmc_miss_num',
18:29:03   5  	  data_table_name => '&scoretable',
18:29:03   6  	  xform_view_name => 'xformed_apply_miss_num');
18:29:03   7  
18:29:03   8  	DBMS_DATA_MINING_TRANSFORM.XFORM_MISS_CAT(
18:29:03   9  	  miss_table_name => 'svmc_miss_cat',
18:29:03  10  	  data_table_name => '&scoretable',
18:29:03  11  	  xform_view_name => 'xformed_apply_miss_cat');
18:29:03  12  
18:29:03  13  	-- Normalize the data to be scored
18:29:03  14  	DBMS_DATA_MINING_TRANSFORM.XFORM_NORM_LIN (
18:29:03  15  	  norm_table_name => 'svmc_norm',
18:29:03  16  	  data_table_name => '&scoretable',
18:29:03  17  	  xform_view_name => 'svmc_apply_prep');
18:29:03  18  END;
18:29:03  19  /
old   5:     data_table_name => '&scoretable',
new   5:     data_table_name => 'sme',
old  10:     data_table_name => '&scoretable',
new  10:     data_table_name => 'sme',
old  16:     data_table_name => '&scoretable',
new  16:     data_table_name => 'sme',

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.19
18:29:04 SQL> 
18:29:04 SQL> -- Use same model_name used in score_gattn.sql
18:29:04 SQL> DEFINE model_name = 'forex14'
18:29:04 SQL> 
18:29:04 SQL> DELETE fxscores6_gattn WHERE score > 0 AND prdate IN(SELECT prdate FROM svmc_apply_prep);

0 rows deleted.

Elapsed: 00:00:00.04
18:29:05 SQL> 
18:29:05 SQL> INSERT INTO fxscores6_gattn (prdate,score,rundate,pair,ydate)
18:29:05   2  SELECT
18:29:05   3  prdate
18:29:05   4  ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
18:29:05   5  ,sysdate
18:29:05   6  ,SUBSTR(prdate,1,3)pair
18:29:05   7  ,SUBSTR(prdate,4,19)ydate
18:29:05   8  FROM svmc_apply_prep
18:29:05   9  /
old   4: ,PREDICTION_PROBABILITY(&model_name,'up' USING *)score
new   4: ,PREDICTION_PROBABILITY(forex14,'up' USING *)score

1 row created.

Elapsed: 00:00:00.17
18:29:05 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
