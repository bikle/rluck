
SQL*Plus: Release 11.2.0.1.0 Production on Sun Nov 7 02:03:25 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

02:03:26 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
02:03:26 SQL> 02:03:26 SQL> --
02:03:26 SQL> -- bb_wom.sql
02:03:26 SQL> --
02:03:26 SQL> 
02:03:26 SQL> SET LINES 66
02:03:26 SQL> DESC hourly
 Name				  Null?    Type
 -------------------------------- -------- -----------------------
 PAIR					   VARCHAR2(15)
 YDATE					   DATE
 VOL					   NUMBER
 OPN					   NUMBER
 CLSE					   NUMBER
 MN					   NUMBER
 MX					   NUMBER

02:03:26 SQL> SET LINES 166
02:03:26 SQL> 
02:03:26 SQL> -- For each pair, look at wom WHERE ydate > '2009-01-01'
02:03:26 SQL> -- Filter out anything with abs(nhgain) < 0.0001 / 4
02:03:26 SQL> CREATE OR REPLACE VIEW bb_wom AS
02:03:26   2  SELECT
02:03:26   3  pair,week_of_month
02:03:26   4  ,ROUND(avg_nhgain,6)avg_nhgain
02:03:26   5  ,ROUND(sum_nhgain,4)sum_nhgain
02:03:26   6  ,count_nhgain
02:03:26   7  FROM
02:03:26   8  (
02:03:26   9  	SELECT
02:03:26  10  	pair,week_of_month
02:03:26  11  	,AVG(nhgain)  avg_nhgain
02:03:26  12  	,SUM(nhgain)  sum_nhgain
02:03:26  13  	,COUNT(nhgain)count_nhgain
02:03:26  14  	FROM
02:03:26  15  	(
02:03:26  16  	  SELECT
02:03:26  17  	  pair
02:03:26  18  	  ,ydate
02:03:26  19  	  ,opn
02:03:26  20  	  ,clse
02:03:26  21  	  -- Hourly gain:
02:03:26  22  	  ,(clse-opn)	  hgain
02:03:26  23  	  -- Normalized hourly gain:
02:03:26  24  	  ,(clse-opn)/opn nhgain
02:03:26  25  	  ,0+TO_CHAR(ydate,'W')week_of_month
02:03:26  26  	  FROM hourly WHERE opn>0
02:03:26  27  	)
02:03:26  28  	WHERE ydate > '2009-01-01'
02:03:26  29  	GROUP BY pair,week_of_month
02:03:26  30  )
02:03:26  31  -- I only want to see trades which give more that 1/4 pip per hour:
02:03:26  32  WHERE ABS(avg_nhgain) > (0.0001 / 4)
02:03:26  33  /

View created.

Elapsed: 00:00:00.13
02:03:26 SQL> 
02:03:26 SQL> -- I want to see USD bearish positions first.
02:03:26 SQL> SELECT * FROM bb_wom
02:03:26   2  WHERE
02:03:26   3  (
02:03:26   4  	(pair LIKE'%_usd'AND avg_nhgain>0)
02:03:26   5  	OR
02:03:26   6  	(pair LIKE'usd_%'AND avg_nhgain<0)
02:03:26   7  )
02:03:26   8  -- Sort better trades to the top:
02:03:26   9  ORDER BY ABS(avg_nhgain) DESC
02:03:26  10  /

PAIR		WEEK_OF_MONTH AVG_NHGAIN SUM_NHGAIN COUNT_NHGAIN
--------------- ------------- ---------- ---------- ------------
gbp_usd 		    5	 .000095      .0852	     896
usd_chf 		    5	-.000077     -.0691	     896
aud_usd 		    1	 .000062      .1699	    2759
usd_cad 		    2	-.000061     -.1611	    2656
aud_usd 		    2	 .000054      .1442	    2656
usd_cad 		    1	-.000053     -.1476	    2759
usd_jpy 		    2	-.000051     -.1599	    3156
usd_chf 		    2	-.000044     -.1174	    2656
eur_usd 		    2	 .000042       .112	    2656
usd_jpy 		    3	-.000037     -.1152	    3141
usd_jpy 		    5	 -.00003     -.0318	    1068
aud_usd 		    5	 .000027      .0239	     896

12 rows selected.

Elapsed: 00:00:00.17
02:03:26 SQL> 
02:03:26 SQL> 
02:03:26 SQL> -- Now show USD bullish positions:
02:03:26 SQL> SELECT * FROM bb_wom
02:03:26   2  WHERE
02:03:26   3  (
02:03:26   4  	(pair LIKE'%_usd'AND avg_nhgain<0)
02:03:26   5  	OR
02:03:26   6  	(pair LIKE'usd_%'AND avg_nhgain>0)
02:03:26   7  )
02:03:26   8  -- Sort better trades to the top:
02:03:26   9  ORDER BY ABS(avg_nhgain) DESC
02:03:26  10  /

PAIR		WEEK_OF_MONTH AVG_NHGAIN SUM_NHGAIN COUNT_NHGAIN
--------------- ------------- ---------- ---------- ------------
aud_usd 		    3	-.000036     -.0951	    2657

Elapsed: 00:00:00.13
02:03:26 SQL> 
02:03:26 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
