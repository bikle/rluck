
SQL*Plus: Release 11.2.0.1.0 Production on Sun Feb 6 22:36:34 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:36:34 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
22:36:34 SQL> 22:36:34 SQL> --
22:36:34 SQL> -- update_di5min.sql
22:36:34 SQL> --
22:36:34 SQL> 
22:36:34 SQL> -- I use this script to keep the di5min table up to date.
22:36:34 SQL> 
22:36:34 SQL> -- CREATE TABLE di5min0(prdate VARCHAR2(26),pair VARCHAR2(7),ydate DATE,clse NUMBER);
22:36:34 SQL> -- CREATE TABLE di5min (prdate VARCHAR2(26),pair VARCHAR2(7),ydate DATE,clse NUMBER);
22:36:34 SQL> 
22:36:34 SQL> TRUNCATE TABLE di5min0;

Table truncated.

Elapsed: 00:00:00.23
22:36:34 SQL> DROP TABLE di5min;

Table dropped.

Elapsed: 00:00:00.03
22:36:34 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.30
22:36:35 SQL> 
22:36:35 SQL> -- Copy in data from ibf5min:
22:36:35 SQL> 
22:36:35 SQL> INSERT INTO di5min0(prdate,pair,ydate,clse)
22:36:35   2  SELECT	     pair||ydate,pair,ydate,clse
22:36:35   3  FROM ibf5min
22:36:35   4  WHERE ydate >= '2010-11-30'
22:36:35   5  /

83295 rows created.

Elapsed: 00:00:00.22
22:36:35 SQL> 
22:36:35 SQL> -- rpt
22:36:35 SQL> SELECT
22:36:35   2  pair
22:36:35   3  ,MIN(ydate)
22:36:35   4  ,COUNT(pair)
22:36:35   5  ,MAX(ydate)
22:36:35   6  FROM di5min0
22:36:35   7  GROUP BY pair
22:36:35   8  ORDER BY pair
22:36:35   9  
22:36:35 SQL> -- Next, copy in data from dukas:
22:36:35 SQL> 
22:36:35 SQL> INSERT INTO di5min0(prdate,pair,ydate,clse)
22:36:35   2  SELECT	     pair||ydate,pair,ydate,clse
22:36:35   3  FROM dukas5min
22:36:35   4  WHERE ydate < '2010-11-30'
22:36:35   5  AND ydate > sysdate - 100
22:36:35   6  /

36738 rows created.

Elapsed: 00:00:00.07
22:36:35 SQL> 
22:36:35 SQL> -- rpt
22:36:35 SQL> SELECT
22:36:35   2  pair
22:36:35   3  ,MIN(ydate)
22:36:35   4  ,COUNT(pair)
22:36:35   5  ,MAX(ydate)
22:36:35   6  FROM dukas5min
22:36:35   7  GROUP BY pair
22:36:35   8  ORDER BY pair
22:36:35   9  
22:36:35 SQL> -- rpt
22:36:35 SQL> SELECT
22:36:35   2  pair
22:36:35   3  ,MIN(ydate)
22:36:35   4  ,COUNT(pair)
22:36:35   5  ,MAX(ydate)
22:36:35   6  FROM di5min0
22:36:35   7  GROUP BY pair
22:36:35   8  ORDER BY pair
22:36:35   9  
22:36:35 SQL> -- Create other pairs like EUR/CHF:
22:36:35 SQL> @create_other_pairs.sql
22:36:35 SQL> --
22:36:35 SQL> -- create_other_pairs.sql
22:36:35 SQL> --
22:36:35 SQL> 
22:36:35 SQL> -- I use this script to create other non-USD pairs like EUR/CHF.
22:36:35 SQL> 
22:36:35 SQL> -- DROP TABLE op5min;
22:36:35 SQL> -- CREATE TABLE op5min(prdate VARCHAR2(26),pair VARCHAR2(7), ydate DATE, clse NUMBER);
22:36:35 SQL> 
22:36:35 SQL> TRUNCATE TABLE op5min;

Table truncated.

Elapsed: 00:00:00.28
22:36:35 SQL> 
22:36:35 SQL> -- Create the EUR/AUD pair:
22:36:35 SQL> 
22:36:35 SQL> INSERT INTO op5min(prdate,pair,ydate,clse)
22:36:35   2  SELECT
22:36:35   3  'eur_aud'||e.ydate prdate
22:36:35   4  ,'eur_aud' pair
22:36:35   5  ,e.ydate
22:36:35   6  ,e.clse/g.clse clse
22:36:35   7  FROM di5min0 e, di5min0 g
22:36:35   8  WHERE e.ydate = g.ydate
22:36:35   9  AND e.pair = 'eur_usd'
22:36:35  10  AND g.pair = 'aud_usd'
22:36:35  11  /

20002 rows created.

Elapsed: 00:00:00.14
22:36:35 SQL> 
22:36:35 SQL> -- Create the EUR/CHF pair:
22:36:35 SQL> 
22:36:35 SQL> INSERT INTO op5min(prdate,pair,ydate,clse)
22:36:35   2  SELECT
22:36:35   3  'eur_chf'||e.ydate prdate
22:36:35   4  ,'eur_chf' pair
22:36:35   5  ,e.ydate
22:36:35   6  ,e.clse*c.clse clse
22:36:35   7  FROM di5min0 e, di5min0 c
22:36:35   8  WHERE e.ydate = c.ydate
22:36:35   9  AND e.pair = 'eur_usd'
22:36:35  10  AND c.pair = 'usd_chf'
22:36:35  11  /

20006 rows created.

Elapsed: 00:00:00.08
22:36:36 SQL> 
22:36:36 SQL> -- Create the EUR/GBP pair:
22:36:36 SQL> 
22:36:36 SQL> INSERT INTO op5min(prdate,pair,ydate,clse)
22:36:36   2  SELECT
22:36:36   3  'eur_gbp'||e.ydate prdate
22:36:36   4  ,'eur_gbp' pair
22:36:36   5  ,e.ydate
22:36:36   6  ,e.clse/g.clse clse
22:36:36   7  FROM di5min0 e, di5min0 g
22:36:36   8  WHERE e.ydate = g.ydate
22:36:36   9  AND e.pair = 'eur_usd'
22:36:36  10  AND g.pair = 'gbp_usd'
22:36:36  11  /

20005 rows created.

Elapsed: 00:00:00.07
22:36:36 SQL> 
22:36:36 SQL> 
22:36:36 SQL> -- Create the EUR/JPY pair:
22:36:36 SQL> 
22:36:36 SQL> INSERT INTO op5min(prdate,pair,ydate,clse)
22:36:36   2  SELECT
22:36:36   3  'eur_jpy'||e.ydate prdate
22:36:36   4  ,'eur_jpy' pair
22:36:36   5  ,e.ydate
22:36:36   6  ,e.clse*j.clse clse
22:36:36   7  FROM di5min0 e, di5min0 j
22:36:36   8  WHERE e.ydate = j.ydate
22:36:36   9  AND e.pair = 'eur_usd'
22:36:36  10  AND j.pair = 'usd_jpy'
22:36:36  11  /

20001 rows created.

Elapsed: 00:00:00.07
22:36:36 SQL> 
22:36:36 SQL> -- Create the AUD/JPY pair:
22:36:36 SQL> 
22:36:36 SQL> INSERT INTO op5min(prdate,pair,ydate,clse)
22:36:36   2  SELECT
22:36:36   3  'aud_jpy'||a.ydate prdate
22:36:36   4  ,'aud_jpy' pair
22:36:36   5  ,a.ydate
22:36:36   6  ,a.clse*j.clse clse
22:36:36   7  FROM di5min0 a, di5min0 j
22:36:36   8  WHERE a.ydate = j.ydate
22:36:36   9  AND a.pair = 'aud_usd'
22:36:36  10  AND j.pair = 'usd_jpy'
22:36:36  11  /

19997 rows created.

Elapsed: 00:00:00.06
22:36:36 SQL> 
22:36:36 SQL> -- rpt
22:36:36 SQL> 
22:36:36 SQL> SELECT * FROM op5min
22:36:36   2  WHERE ydate > sysdate - 0.5/24
22:36:36   3  ORDER BY prdate
22:36:36   4  /

PRDATE			   PAIR    YDATE		     CLSE
-------------------------- ------- ------------------- ----------
aud_jpy2011-02-06 22:15:00 aud_jpy 2011-02-06 22:15:00	83.352027
aud_jpy2011-02-06 22:20:00 aud_jpy 2011-02-06 22:20:00 83.3202475
aud_jpy2011-02-06 22:25:00 aud_jpy 2011-02-06 22:25:00 83.3407925
aud_jpy2011-02-06 22:30:00 aud_jpy 2011-02-06 22:30:00 83.3498398
eur_aud2011-02-06 22:15:00 eur_aud 2011-02-06 22:15:00 1.33787714
eur_aud2011-02-06 22:20:00 eur_aud 2011-02-06 22:20:00 1.33791148
eur_aud2011-02-06 22:25:00 eur_aud 2011-02-06 22:25:00 1.33763096
eur_aud2011-02-06 22:30:00 eur_aud 2011-02-06 22:30:00 1.33790247
eur_chf2011-02-06 22:15:00 eur_chf 2011-02-06 22:15:00 1.29791878
eur_chf2011-02-06 22:20:00 eur_chf 2011-02-06 22:20:00 1.29790919
eur_chf2011-02-06 22:25:00 eur_chf 2011-02-06 22:25:00 1.29802486
eur_chf2011-02-06 22:30:00 eur_chf 2011-02-06 22:30:00 1.29697128
eur_gbp2011-02-06 22:15:00 eur_gbp 2011-02-06 22:15:00	.84279259
eur_gbp2011-02-06 22:20:00 eur_gbp 2011-02-06 22:20:00 .842818975
eur_gbp2011-02-06 22:25:00 eur_gbp 2011-02-06 22:25:00 .842797676
eur_gbp2011-02-06 22:30:00 eur_gbp 2011-02-06 22:30:00 .842984963
eur_jpy2011-02-06 22:15:00 eur_jpy 2011-02-06 22:15:00 111.514772
eur_jpy2011-02-06 22:20:00 eur_jpy 2011-02-06 22:20:00 111.475116
eur_jpy2011-02-06 22:25:00 eur_jpy 2011-02-06 22:25:00 111.479225
eur_jpy2011-02-06 22:30:00 eur_jpy 2011-02-06 22:30:00 111.513957

20 rows selected.

Elapsed: 00:00:00.01
22:36:36 SQL> 
22:36:36 SQL> -- Dont put an exit here.
22:36:36 SQL> -- This script is called from another SQL script.
22:36:36 SQL> -- Here is what I want:
22:36:36 SQL> 
22:36:36 SQL> CREATE TABLE di5min COMPRESS AS
22:36:36   2  SELECT
22:36:36   3  prdate
22:36:36   4  ,pair
22:36:36   5  ,ydate
22:36:36   6  ,clse
22:36:36   7  FROM
22:36:36   8  (
22:36:36   9  	SELECT
22:36:36  10  	prdate
22:36:36  11  	,pair
22:36:36  12  	,ydate
22:36:36  13  	,AVG(clse)clse
22:36:36  14  	FROM di5min0
22:36:36  15  	GROUP BY
22:36:36  16  	prdate
22:36:36  17  	,pair
22:36:36  18  	,ydate
22:36:36  19  	UNION
22:36:36  20  	SELECT
22:36:36  21  	prdate
22:36:36  22  	,pair
22:36:36  23  	,ydate
22:36:36  24  	,clse
22:36:36  25  	FROM op5min
22:36:36  26  )
22:36:36  27  /

Table created.

Elapsed: 00:00:01.31
22:36:37 SQL> 
22:36:37 SQL> -- rpt
22:36:37 SQL> SELECT
22:36:37   2  pair
22:36:37   3  ,MIN(ydate)
22:36:37   4  ,COUNT(ydate)
22:36:37   5  ,MAX(ydate)
22:36:37   6  ,MIN(clse)
22:36:37   7  ,AVG(clse)
22:36:37   8  ,MAX(clse)
22:36:37   9  FROM di5min
22:36:37  10  GROUP BY pair
22:36:37  11  ORDER BY pair
22:36:37  12  /

PAIR	MIN(YDATE)	    COUNT(YDATE) MAX(YDATE)	      MIN(CLSE)  AVG(CLSE)  MAX(CLSE)
------- ------------------- ------------ ------------------- ---------- ---------- ----------
aud_jpy 2010-10-31 20:55:00	   19997 2011-02-06 22:30:00  79.022175 82.2072399 83.6669853
aud_usd 2010-10-31 20:55:00	   20003 2011-02-06 22:30:00	 .95405 .993918511     1.0246
eur_aud 2010-10-31 20:55:00	   20002 2011-02-06 22:30:00 1.29324263  1.3517753 1.41899441
eur_chf 2010-10-31 20:55:00	   20006 2011-02-06 22:30:00 1.24192946 1.30115239 1.38284305
eur_gbp 2010-10-31 20:55:00	   20005 2011-02-06 22:30:00 .829062716 .850316547 .881241482
eur_jpy 2010-10-31 20:55:00	   20001 2011-02-06 22:30:00 106.906797 111.109071  115.36994
eur_usd 2010-10-31 20:55:00	   20007 2011-02-06 22:30:00	1.28795 1.34343371     1.4273
gbp_usd 2010-10-31 20:55:00	   20007 2011-02-06 22:30:00   1.535325  1.5798232     1.6295
usd_cad 2010-10-31 20:55:00	   20005 2011-02-06 22:30:00	 .98355 1.00417316   1.028075
usd_chf 2010-10-31 20:55:00	   20008 2011-02-06 22:30:00	.931675 .968578207    1.00635
usd_jpy 2010-10-31 20:55:00	   20003 2011-02-06 22:30:00	  80.25 82.7196008     84.485

11 rows selected.

Elapsed: 00:00:00.16
22:36:37 SQL> 
22:36:37 SQL> COLUMN clse FORMAT 999.9999
22:36:37 SQL> SELECT
22:36:37   2  pair
22:36:37   3  ,ROUND(clse,4)clse
22:36:37   4  ,ydate
22:36:37   5  FROM di5min
22:36:37   6  WHERE ydate > sysdate - 3/24
22:36:37   7  ORDER BY pair,ydate
22:36:37   8  /

PAIR	     CLSE YDATE
------- --------- -------------------
aud_jpy   83.3520 2011-02-06 22:15:00
aud_jpy   83.3202 2011-02-06 22:20:00
aud_jpy   83.3408 2011-02-06 22:25:00
aud_jpy   83.3498 2011-02-06 22:30:00
aud_usd    1.0142 2011-02-06 22:15:00
aud_usd    1.0139 2011-02-06 22:20:00
aud_usd    1.0141 2011-02-06 22:25:00
aud_usd    1.0141 2011-02-06 22:30:00
eur_aud    1.3379 2011-02-06 22:15:00
eur_aud    1.3379 2011-02-06 22:20:00
eur_aud    1.3376 2011-02-06 22:25:00
eur_aud    1.3379 2011-02-06 22:30:00
eur_chf    1.2979 2011-02-06 22:15:00
eur_chf    1.2979 2011-02-06 22:20:00
eur_chf    1.2980 2011-02-06 22:25:00
eur_chf    1.2970 2011-02-06 22:30:00
eur_gbp     .8428 2011-02-06 22:15:00
eur_gbp     .8428 2011-02-06 22:20:00
eur_gbp     .8428 2011-02-06 22:25:00
eur_gbp     .8430 2011-02-06 22:30:00
eur_jpy  111.5148 2011-02-06 22:15:00
eur_jpy  111.4751 2011-02-06 22:20:00
eur_jpy  111.4792 2011-02-06 22:25:00
eur_jpy  111.5140 2011-02-06 22:30:00
eur_usd    1.3569 2011-02-06 22:15:00
eur_usd    1.3565 2011-02-06 22:20:00
eur_usd    1.3565 2011-02-06 22:25:00
eur_usd    1.3567 2011-02-06 22:30:00
gbp_usd    1.6100 2011-02-06 22:15:00
gbp_usd    1.6095 2011-02-06 22:20:00
gbp_usd    1.6096 2011-02-06 22:25:00
gbp_usd    1.6094 2011-02-06 22:30:00
usd_cad     .9869 2011-02-06 22:15:00
usd_cad     .9873 2011-02-06 22:20:00
usd_cad     .9872 2011-02-06 22:25:00
usd_cad     .9872 2011-02-06 22:30:00
usd_chf     .9566 2011-02-06 22:15:00
usd_chf     .9568 2011-02-06 22:20:00
usd_chf     .9569 2011-02-06 22:25:00
usd_chf     .9560 2011-02-06 22:30:00
usd_jpy   82.1850 2011-02-06 22:15:00
usd_jpy   82.1800 2011-02-06 22:20:00
usd_jpy   82.1800 2011-02-06 22:25:00
usd_jpy   82.1950 2011-02-06 22:30:00

44 rows selected.

Elapsed: 00:00:00.06
22:36:37 SQL> Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
