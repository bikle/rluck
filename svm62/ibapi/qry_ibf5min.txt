
SQL*Plus: Release 11.2.0.1.0 Production on Fri Feb 25 08:01:56 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

08:01:56 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
08:01:56 SQL> 08:01:56 SQL> --
08:01:56 SQL> -- qry_ibf5min.sql
08:01:56 SQL> --
08:01:56 SQL> 
08:01:56 SQL> -- I use this script to look for dups and bad data in ibf5min
08:01:56 SQL> 
08:01:56 SQL> SET LINES 66
08:01:56 SQL> DESC ibf5min
 Name				  Null?    Type
 -------------------------------- -------- -----------------------
 PAIR					   VARCHAR2(8)
 YDATE					   DATE
 CLSE					   NUMBER

08:01:56 SQL> SET LINES 166
08:01:56 SQL> 
08:01:56 SQL> SELECT
08:01:56   2  pair
08:01:56   3  ,COUNT(pair)
08:01:56   4  FROM ibf5min
08:01:56   5  GROUP BY pair
08:01:56   6  ORDER BY pair
08:01:56   7  /

PAIR	 COUNT(PAIR)
-------- -----------
aud_usd        17978
eur_usd        17983
gbp_usd        17983
usd_cad        17983
usd_chf        17987
usd_jpy        17982

6 rows selected.

Elapsed: 00:00:00.04
08:01:56 SQL> 
08:01:56 SQL> SELECT
08:01:56   2  TO_CHAR(ydate,'YYYY_MM')mnth,TO_CHAR(ydate,'W')wweek
08:01:56   3  ,COUNT(pair)
08:01:56   4  FROM ibf5min
08:01:56   5  GROUP BY TO_CHAR(ydate,'YYYY_MM'),TO_CHAR(ydate,'W')
08:01:56   6  ORDER BY TO_CHAR(ydate,'YYYY_MM'),TO_CHAR(ydate,'W')
08:01:56   7  /

MNTH	W COUNT(PAIR)
------- - -----------
2010_11 5	 1676
2010_12 1	 8550
2010_12 2	 8537
2010_12 3	 8370
2010_12 4	 8398
2010_12 5	 5001
2011_01 1	 8544
2011_01 2	 8548
2011_01 3	 8550
2011_01 4	 8550
2011_01 5	 1836
2011_02 1	 8547
2011_02 2	 8538
2011_02 3	 8545
2011_02 4	 5700
		    6

16 rows selected.

Elapsed: 00:00:00.08
08:01:56 SQL> 
08:01:56 SQL> -- Look for dups
08:01:56 SQL> SELECT COUNT(pair)FROM
08:01:56   2  (
08:01:56   3  SELECT
08:01:56   4  pair
08:01:56   5  ,ydate
08:01:56   6  ,COUNT(pair)
08:01:56   7  FROM ibf5min
08:01:56   8  GROUP BY pair,ydate
08:01:56   9  HAVING COUNT(pair)>1
08:01:56  10  )
08:01:56  11  /

COUNT(PAIR)
-----------
	  0

Elapsed: 00:00:00.09
08:01:57 SQL> 
08:01:57 SQL> -- Use LAG() to look for big jumps.
08:01:57 SQL> 
08:01:57 SQL> CREATE OR REPLACE VIEW ibf5min10 AS
08:01:57   2  SELECT
08:01:57   3  pair
08:01:57   4  -- ydate is granular down to 5 min:
08:01:57   5  ,ydate
08:01:57   6  ,clse
08:01:57   7  -- Use analytic function to get LAG()
08:01:57   8  ,LAG(ydate,1,NULL)OVER(PARTITION BY pair ORDER BY ydate)		    lag_ydate
08:01:57   9  ,(ydate - LAG(ydate,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))*24*60 minutes_diff
08:01:57  10  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate)		    lag_clse
08:01:57  11  ,(clse - LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))/clse lag_diff
08:01:57  12  FROM ibf5min
08:01:57  13  WHERE clse>0
08:01:57  14  ORDER BY pair, ydate
08:01:57  15  /

View created.

Elapsed: 00:00:00.14
08:01:57 SQL> 
08:01:57 SQL> CREATE OR REPLACE VIEW ibf5min_ld AS
08:01:57   2  SELECT
08:01:57   3  pair
08:01:57   4  ,MIN(lag_diff)	min_lag_diff
08:01:57   5  ,AVG(lag_diff)	avg_lag_diff
08:01:57   6  ,STDDEV(lag_diff) stddev_lag_diff
08:01:57   7  ,MAX(lag_diff)	max_lag_diff
08:01:57   8  ,COUNT(lag_diff)	cnt_lag_diff
08:01:57   9  FROM ibf5min10
08:01:57  10  GROUP BY pair
08:01:57  11  /

View created.

Elapsed: 00:00:00.04
08:01:57 SQL> 
08:01:57 SQL> SELECT * FROM ibf5min_ld;

PAIR	 MIN_LAG_DIFF AVG_LAG_DIFF STDDEV_LAG_DIFF MAX_LAG_DIFF CNT_LAG_DIFF
-------- ------------ ------------ --------------- ------------ ------------
aud_usd    -.00412953	2.8298E-06	.000405741   .004498551        17976
eur_usd    -.00340562	2.8944E-06	.000409029   .004815837        17981
gbp_usd    -.00596104	1.9731E-06	.000347504   .004037224        17981
usd_cad    -.00367767	-2.157E-06	.000321105   .004222134        17981
usd_chf    -.00675762	-4.494E-06	.000448438    .00538548        17985
usd_jpy    -.00797352	-1.666E-06	 .00033158   .005252714        17980

6 rows selected.

Elapsed: 00:00:00.42
08:01:57 SQL> 
08:01:57 SQL> SELECT * FROM ibf5min10 WHERE lag_diff = (SELECT MIN(min_lag_diff)FROM ibf5min_ld);

PAIR	 YDATE			   CLSE LAG_YDATE	    MINUTES_DIFF   LAG_CLSE   LAG_DIFF
-------- ------------------- ---------- ------------------- ------------ ---------- ----------
usd_jpy  2010-12-03 13:30:00	83.0875 2010-12-03 13:25:00	       5      83.75 -.00797352

Elapsed: 00:00:00.74
08:01:58 SQL> 
08:01:58 SQL> SELECT * FROM ibf5min10 WHERE lag_diff = (SELECT MAX(max_lag_diff)FROM ibf5min_ld);

PAIR	 YDATE			   CLSE LAG_YDATE	    MINUTES_DIFF   LAG_CLSE   LAG_DIFF
-------- ------------------- ---------- ------------------- ------------ ---------- ----------
usd_chf  2011-02-04 13:35:00	.956275 2011-02-04 13:30:00	       5    .951125  .00538548

Elapsed: 00:00:00.73
08:01:59 SQL> 
08:01:59 SQL> -- SELECT COUNT(*)FROM ibf5min10 WHERE lag_diff IN(SELECT max_lag_diff FROM ibf5min_ld);
08:01:59 SQL> 
08:01:59 SQL> -- Get a closer look at the smallest lag_diffs:
08:01:59 SQL> 
08:01:59 SQL> -- SELECT COUNT(l.pair)
08:01:59 SQL> SELECT
08:01:59   2  l.pair
08:01:59   3  ,TO_CHAR(i.ydate,'Day')dday
08:01:59   4  ,i.ydate
08:01:59   5  ,i.lag_clse
08:01:59   6  ,i.clse
08:01:59   7  ,i.lag_diff
08:01:59   8  ,i.lag_diff/stddev_lag_diff ld_st_ratio
08:01:59   9  ,i.minutes_diff
08:01:59  10  FROM ibf5min_ld l, ibf5min10 i
08:01:59  11  WHERE l.min_lag_diff = i.lag_diff
08:01:59  12  ORDER BY i.ydate,l.pair
08:01:59  13  /

PAIR	 DDAY	   YDATE		 LAG_CLSE	CLSE   LAG_DIFF LD_ST_RATIO MINUTES_DIFF
-------- --------- ------------------- ---------- ---------- ---------- ----------- ------------
usd_jpy  Friday    2010-12-03 13:30:00	    83.75    83.0875 -.00797352  -24.047081	       5
usd_chf  Friday    2010-12-03 13:35:00	  .990725    .984075 -.00675762  -15.069235	       5
usd_cad  Sunday    2011-01-02 22:15:00	.99783125    .994175 -.00367767  -11.453171	    2900
aud_usd  Tuesday   2011-01-25 00:30:00	   .99695     .99285 -.00412953  -10.177729	       5
gbp_usd  Tuesday   2011-01-25 09:30:00	 1.590525     1.5811 -.00596104  -17.153895	       5
eur_usd  Friday    2011-02-04 13:35:00	 1.362675    1.35805 -.00340562  -8.3260992	       5

6 rows selected.

Elapsed: 00:00:00.79
08:01:59 SQL> 
08:01:59 SQL> -- Get a closer look at the largest lag_diffs:
08:01:59 SQL> 
08:01:59 SQL> -- SELECT COUNT(l.pair)
08:01:59 SQL> SELECT
08:01:59   2  l.pair
08:01:59   3  ,TO_CHAR(i.ydate,'Day')dday
08:01:59   4  ,i.ydate
08:01:59   5  ,i.lag_clse
08:01:59   6  ,i.clse
08:01:59   7  ,i.lag_diff
08:01:59   8  ,i.lag_diff/stddev_lag_diff ld_st_ratio
08:01:59   9  ,i.minutes_diff
08:01:59  10  FROM ibf5min_ld l, ibf5min10 i
08:01:59  11  WHERE l.max_lag_diff = i.lag_diff
08:01:59  12  ORDER BY i.ydate,l.pair
08:01:59  13  /

PAIR	 DDAY	   YDATE		 LAG_CLSE	CLSE   LAG_DIFF LD_ST_RATIO MINUTES_DIFF
-------- --------- ------------------- ---------- ---------- ---------- ----------- ------------
usd_cad  Friday    2010-12-03 13:30:00	  1.00235     1.0066 .004222134   13.148757	       5
aud_usd  Thursday  2010-12-09 00:30:00	  .979225     .98365 .004498551  11.0872368	       5
eur_usd  Thursday  2010-12-23 16:15:00	  1.30705   1.313375 .004815837  11.7738199	       5
usd_jpy  Wednesday 2011-01-05 13:15:00 82.3004167     82.735 .005252714  15.8414877	       5
gbp_usd  Tuesday   2011-01-18 09:30:00	  1.59735   1.603825 .004037224  11.6177902	       5
usd_chf  Friday    2011-02-04 13:35:00	  .951125    .956275  .00538548  12.0094239	       5

6 rows selected.

Elapsed: 00:00:00.81
08:02:00 SQL> 
08:02:00 SQL> -- I want to see rows around the rows which are connected to the max/min clse values
08:02:00 SQL> 
08:02:00 SQL> CREATE OR REPLACE VIEW ibf5min12 AS
08:02:00   2  SELECT
08:02:00   3  pair
08:02:00   4  -- ydate is granular down to 5 min:
08:02:00   5  ,ydate
08:02:00   6  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse3
08:02:00   7  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse2
08:02:00   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse1
08:02:00   9  ,clse
08:02:00  10  ,LEAD(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse1
08:02:00  11  ,LEAD(clse,2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse2
08:02:00  12  ,LEAD(clse,3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse3
08:02:00  13  ,(clse - LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))/clse lag_diff
08:02:00  14  FROM ibf5min
08:02:00  15  WHERE clse>0
08:02:00  16  ORDER BY pair, ydate
08:02:00  17  /

View created.

Elapsed: 00:00:00.08
08:02:00 SQL> 
08:02:00 SQL> -- Now join ibf5min12 with ibf5min_ld
08:02:00 SQL> 
08:02:00 SQL> SELECT
08:02:00   2  l.pair
08:02:00   3  ,i.ydate
08:02:00   4  ,lag_clse3
08:02:00   5  ,lag_clse2
08:02:00   6  ,lag_clse1
08:02:00   7  ,lag_diff
08:02:00   8  ,i.clse
08:02:00   9  ,lead_clse1
08:02:00  10  ,lead_clse2
08:02:00  11  ,lead_clse3
08:02:00  12  FROM ibf5min_ld l, ibf5min12 i
08:02:00  13  WHERE l.max_lag_diff = i.lag_diff
08:02:00  14  OR    l.min_lag_diff = i.lag_diff
08:02:00  15  ORDER BY i.ydate,l.pair
08:02:00  16  /

PAIR	 YDATE		      LAG_CLSE3  LAG_CLSE2  LAG_CLSE1	LAG_DIFF       CLSE LEAD_CLSE1 LEAD_CLSE2 LEAD_CLSE3
-------- ------------------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
usd_cad  2010-12-03 13:30:00   1.002175   1.002525    1.00235 .004222134     1.0066	1.0042	 1.005775     1.0071
usd_jpy  2010-12-03 13:30:00	 83.745     83.785	83.75 -.00797352    83.0875    82.8875	  82.8825     82.705
usd_chf  2010-12-03 13:35:00	.992425     .99135    .990725 -.00675762    .984075	 .9829	  .981675     .98125
aud_usd  2010-12-09 00:30:00	.978775     .97935    .979225 .004498551     .98365    .983675	  .984925      .9849
eur_usd  2010-12-23 16:15:00	1.30685     1.3071    1.30705 .004815837   1.313375	1.3115	  1.31175    1.31125
usd_cad  2011-01-02 22:15:00	 .99785    .997825  .99783125 -.00367767    .994175	.99475	   .99475     .99475
usd_jpy  2011-01-05 13:15:00	  82.24     82.225 82.3004167 .005252714     82.735   82.79375	  83.0475     82.875
gbp_usd  2011-01-18 09:30:00   1.598025    1.59815    1.59735 .004037224   1.603825    1.60465	 1.603175     1.6045
aud_usd  2011-01-25 00:30:00	.997525    .997475     .99695 -.00412953     .99285	.99325	    .9932     .99355
gbp_usd  2011-01-25 09:30:00   1.590875    1.59065   1.590525 -.00596104     1.5811    1.58245	   1.5802    1.57875
eur_usd  2011-02-04 13:35:00   1.364425   1.364725   1.362675 -.00340562    1.35805    1.35925	  1.35875    1.35875
usd_chf  2011-02-04 13:35:00	  .9494    .949075    .951125  .00538548    .956275	 .9541	   .95475      .9549

12 rows selected.

Elapsed: 00:00:02.35
08:02:03 SQL> 
08:02:03 SQL> -- Look at what is recent
08:02:03 SQL> 
08:02:03 SQL> SELECT
08:02:03   2  pair
08:02:03   3  ,ydate
08:02:03   4  ,clse
08:02:03   5  FROM ibf5min
08:02:03   6  WHERE ydate > sysdate - 1.5/24
08:02:03   7  ORDER BY pair,ydate
08:02:03   8  /

PAIR	 YDATE			   CLSE
-------- ------------------- ----------
aud_usd  2011-02-25 06:35:00	 1.0123
aud_usd  2011-02-25 06:40:00   1.012225
aud_usd  2011-02-25 06:45:00   1.012175
aud_usd  2011-02-25 06:50:00  1.0123125
aud_usd  2011-02-25 06:55:00  1.0128125
aud_usd  2011-02-25 07:00:00   1.013125
aud_usd  2011-02-25 07:05:00	1.01335
aud_usd  2011-02-25 07:10:00	1.01315
aud_usd  2011-02-25 07:15:00  1.0128625
aud_usd  2011-02-25 07:20:00   1.012525
aud_usd  2011-02-25 07:25:00	1.01255
aud_usd  2011-02-25 07:30:00   1.012775
aud_usd  2011-02-25 07:35:00	 1.0125
aud_usd  2011-02-25 07:40:00  1.0126625
aud_usd  2011-02-25 07:45:00	1.01245
aud_usd  2011-02-25 07:50:00	 1.0127
eur_usd  2011-02-25 06:35:00	1.38235
eur_usd  2011-02-25 06:40:00   1.382475
eur_usd  2011-02-25 06:45:00   1.382075
eur_usd  2011-02-25 06:50:00  1.3822875
eur_usd  2011-02-25 06:55:00	 1.3824
eur_usd  2011-02-25 07:00:00  1.3827125
eur_usd  2011-02-25 07:05:00   1.383375
eur_usd  2011-02-25 07:10:00	1.38305
eur_usd  2011-02-25 07:15:00  1.3828375
eur_usd  2011-02-25 07:20:00	1.38245
eur_usd  2011-02-25 07:25:00   1.381975
eur_usd  2011-02-25 07:30:00	1.38195
eur_usd  2011-02-25 07:35:00	1.38195
eur_usd  2011-02-25 07:40:00	1.38225
eur_usd  2011-02-25 07:45:00	1.38235
eur_usd  2011-02-25 07:50:00   1.382325
gbp_usd  2011-02-25 06:35:00  1.6149375
gbp_usd  2011-02-25 06:40:00	1.61475
gbp_usd  2011-02-25 06:45:00   1.614325
gbp_usd  2011-02-25 06:50:00  1.6144625
gbp_usd  2011-02-25 06:55:00   1.614425
gbp_usd  2011-02-25 07:00:00  1.6146625
gbp_usd  2011-02-25 07:05:00  1.6147375
gbp_usd  2011-02-25 07:10:00	 1.6151
gbp_usd  2011-02-25 07:15:00  1.6153375
gbp_usd  2011-02-25 07:20:00   1.615225
gbp_usd  2011-02-25 07:25:00   1.614825
gbp_usd  2011-02-25 07:30:00   1.614575
gbp_usd  2011-02-25 07:35:00   1.613625
gbp_usd  2011-02-25 07:40:00   1.612725
gbp_usd  2011-02-25 07:45:00   1.613275
gbp_usd  2011-02-25 07:50:00	1.61335
usd_cad  2011-02-25 06:35:00	.981525
usd_cad  2011-02-25 06:40:00   .9813875
usd_cad  2011-02-25 06:45:00	.981425
usd_cad  2011-02-25 06:50:00	 .98145
usd_cad  2011-02-25 06:55:00	.981375
usd_cad  2011-02-25 07:00:00	 .98135
usd_cad  2011-02-25 07:05:00	.981275
usd_cad  2011-02-25 07:10:00	  .9814
usd_cad  2011-02-25 07:15:00	 .98125
usd_cad  2011-02-25 07:20:00	.981475
usd_cad  2011-02-25 07:25:00   .9814875
usd_cad  2011-02-25 07:30:00   .9813375
usd_cad  2011-02-25 07:35:00	.981425
usd_cad  2011-02-25 07:40:00	.981625
usd_cad  2011-02-25 07:45:00	  .9817
usd_cad  2011-02-25 07:50:00	.981475
usd_chf  2011-02-25 06:35:00	 .92545
usd_chf  2011-02-25 06:40:00   .9251875
usd_chf  2011-02-25 06:45:00	 .92545
usd_chf  2011-02-25 06:50:00	  .9254
usd_chf  2011-02-25 06:55:00	.924875
usd_chf  2011-02-25 07:00:00   .9250125
usd_chf  2011-02-25 07:05:00	.924675
usd_chf  2011-02-25 07:10:00	 .92475
usd_chf  2011-02-25 07:15:00   .9247875
usd_chf  2011-02-25 07:20:00	 .92495
usd_chf  2011-02-25 07:25:00   .9247125
usd_chf  2011-02-25 07:30:00	  .9246
usd_chf  2011-02-25 07:35:00	 .92485
usd_chf  2011-02-25 07:40:00	  .9244
usd_chf  2011-02-25 07:45:00	.924725
usd_chf  2011-02-25 07:50:00	 .92465
usd_jpy  2011-02-25 06:35:00	  81.96
usd_jpy  2011-02-25 06:40:00	81.9575
usd_jpy  2011-02-25 06:45:00	 81.945
usd_jpy  2011-02-25 06:50:00	  81.93
usd_jpy  2011-02-25 06:55:00	 81.915
usd_jpy  2011-02-25 07:00:00   81.87625
usd_jpy  2011-02-25 07:05:00	81.8275
usd_jpy  2011-02-25 07:10:00	 81.835
usd_jpy  2011-02-25 07:15:00   81.82875
usd_jpy  2011-02-25 07:20:00	 81.855
usd_jpy  2011-02-25 07:25:00	81.8425
usd_jpy  2011-02-25 07:30:00	 81.825
usd_jpy  2011-02-25 07:35:00	 81.845
usd_jpy  2011-02-25 07:40:00	  81.82
usd_jpy  2011-02-25 07:45:00	81.8475
usd_jpy  2011-02-25 07:50:00	 81.835

96 rows selected.

Elapsed: 00:00:00.05
08:02:03 SQL> 
08:02:03 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
