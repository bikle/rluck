
SQL*Plus: Release 11.2.0.1.0 Production on Sun Mar 27 23:31:31 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

23:31:31 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
23:31:31 SQL> 23:31:31 SQL> --
23:31:31 SQL> -- qry_ibf5min.sql
23:31:31 SQL> --
23:31:31 SQL> 
23:31:31 SQL> -- I use this script to look for dups and bad data in ibf5min
23:31:31 SQL> 
23:31:31 SQL> SET LINES 66
23:31:31 SQL> DESC ibf5min
 Name				  Null?    Type
 -------------------------------- -------- -----------------------
 PAIR					   VARCHAR2(8)
 YDATE					   DATE
 CLSE					   NUMBER

23:31:31 SQL> SET LINES 166
23:31:31 SQL> 
23:31:31 SQL> SELECT
23:31:31   2  pair
23:31:31   3  ,COUNT(pair)
23:31:31   4  FROM ibf5min
23:31:31   5  GROUP BY pair
23:31:31   6  ORDER BY pair
23:31:31   7  /

PAIR	 COUNT(PAIR)
-------- -----------
aud_usd        23848
eur_usd        23854
gbp_usd        23854
usd_cad        23853
usd_chf        23859
usd_jpy        23853

6 rows selected.

Elapsed: 00:00:00.03
23:31:31 SQL> 
23:31:31 SQL> SELECT
23:31:31   2  TO_CHAR(ydate,'YYYY_MM')mnth,TO_CHAR(ydate,'W')wweek
23:31:31   3  ,COUNT(pair)
23:31:31   4  FROM ibf5min
23:31:31   5  GROUP BY TO_CHAR(ydate,'YYYY_MM'),TO_CHAR(ydate,'W')
23:31:31   6  ORDER BY TO_CHAR(ydate,'YYYY_MM'),TO_CHAR(ydate,'W')
23:31:31   7  /

MNTH	W COUNT(PAIR)
------- - -----------
2010_11 5	 1676
2010_12 1	 8550
2010_12 2	 8537
2010_12 3	 8370
2010_12 4	 8398
2010_12 5	 5001
2011_01 1	 8544
2011_01 2	 8548
2011_01 3	 8550
2011_01 4	 8550
2011_01 5	 1836
2011_02 1	 8547
2011_02 2	 8538
2011_02 3	 8545
2011_02 4	 8550
2011_03 1	 8539
2011_03 2	 8621
2011_03 3	 8549
2011_03 4	 6666
		    6

20 rows selected.

Elapsed: 00:00:00.11
23:31:31 SQL> 
23:31:31 SQL> -- Look for dups
23:31:31 SQL> SELECT COUNT(pair)FROM
23:31:31   2  (
23:31:31   3  SELECT
23:31:31   4  pair
23:31:31   5  ,ydate
23:31:31   6  ,COUNT(pair)
23:31:31   7  FROM ibf5min
23:31:31   8  GROUP BY pair,ydate
23:31:31   9  HAVING COUNT(pair)>1
23:31:31  10  )
23:31:31  11  /

COUNT(PAIR)
-----------
	  0

Elapsed: 00:00:00.09
23:31:31 SQL> 
23:31:31 SQL> -- Use LAG() to look for big jumps.
23:31:31 SQL> 
23:31:31 SQL> CREATE OR REPLACE VIEW ibf5min10 AS
23:31:31   2  SELECT
23:31:31   3  pair
23:31:31   4  -- ydate is granular down to 5 min:
23:31:31   5  ,ydate
23:31:31   6  ,clse
23:31:31   7  -- Use analytic function to get LAG()
23:31:31   8  ,LAG(ydate,1,NULL)OVER(PARTITION BY pair ORDER BY ydate)		    lag_ydate
23:31:31   9  ,(ydate - LAG(ydate,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))*24*60 minutes_diff
23:31:31  10  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate)		    lag_clse
23:31:31  11  ,(clse - LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))/clse lag_diff
23:31:31  12  FROM ibf5min
23:31:31  13  WHERE clse>0
23:31:31  14  ORDER BY pair, ydate
23:31:31  15  /

View created.

Elapsed: 00:00:00.16
23:31:31 SQL> 
23:31:31 SQL> CREATE OR REPLACE VIEW ibf5min_ld AS
23:31:31   2  SELECT
23:31:31   3  pair
23:31:31   4  ,MIN(lag_diff)	min_lag_diff
23:31:31   5  ,AVG(lag_diff)	avg_lag_diff
23:31:31   6  ,STDDEV(lag_diff) stddev_lag_diff
23:31:31   7  ,MAX(lag_diff)	max_lag_diff
23:31:31   8  ,COUNT(lag_diff)	cnt_lag_diff
23:31:31   9  FROM ibf5min10
23:31:31  10  GROUP BY pair
23:31:31  11  /

View created.

Elapsed: 00:00:00.06
23:31:31 SQL> 
23:31:31 SQL> SELECT * FROM ibf5min_ld;

PAIR	 MIN_LAG_DIFF AVG_LAG_DIFF STDDEV_LAG_DIFF MAX_LAG_DIFF CNT_LAG_DIFF
-------- ------------ ------------ --------------- ------------ ------------
aud_usd    -.00875518	2.5647E-06	.000416424   .005683188        23846
eur_usd    -.00340562	2.8522E-06	.000392975   .005109004        23852
gbp_usd    -.00596104	1.1516E-06	.000342289   .004037224        23852
usd_cad    -.00367767	-1.606E-06	.000320487   .004222134        23851
usd_chf    -.00761532	-3.577E-06	.000443444    .00538548        23857
usd_jpy    -.03034585	-1.553E-06	.000429906   .012754501        23851

6 rows selected.

Elapsed: 00:00:00.56
23:31:32 SQL> 
23:31:32 SQL> SELECT * FROM ibf5min10 WHERE lag_diff = (SELECT MIN(min_lag_diff)FROM ibf5min_ld);

PAIR	 YDATE			   CLSE LAG_YDATE	    MINUTES_DIFF   LAG_CLSE   LAG_DIFF
-------- ------------------- ---------- ------------------- ------------ ---------- ----------
usd_jpy  2011-03-16 21:15:00 77.2483333 2011-03-16 20:55:00	      20    79.5925 -.03034585

Elapsed: 00:00:01.03
23:31:33 SQL> 
23:31:33 SQL> SELECT * FROM ibf5min10 WHERE lag_diff = (SELECT MAX(max_lag_diff)FROM ibf5min_ld);

PAIR	 YDATE			   CLSE LAG_YDATE	    MINUTES_DIFF   LAG_CLSE   LAG_DIFF
-------- ------------------- ---------- ------------------- ------------ ---------- ----------
usd_jpy  2011-03-18 00:00:00	80.5575 2011-03-17 23:55:00	       5 79.5300293 .012754501

Elapsed: 00:00:00.96
23:31:34 SQL> 
23:31:34 SQL> -- SELECT COUNT(*)FROM ibf5min10 WHERE lag_diff IN(SELECT max_lag_diff FROM ibf5min_ld);
23:31:34 SQL> 
23:31:34 SQL> -- Get a closer look at the smallest lag_diffs:
23:31:34 SQL> 
23:31:34 SQL> -- SELECT COUNT(l.pair)
23:31:34 SQL> SELECT
23:31:34   2  l.pair
23:31:34   3  ,TO_CHAR(i.ydate,'Day')dday
23:31:34   4  ,i.ydate
23:31:34   5  ,i.lag_clse
23:31:34   6  ,i.clse
23:31:34   7  ,i.lag_diff
23:31:34   8  ,i.lag_diff/stddev_lag_diff ld_st_ratio
23:31:34   9  ,i.minutes_diff
23:31:34  10  FROM ibf5min_ld l, ibf5min10 i
23:31:34  11  WHERE l.min_lag_diff = i.lag_diff
23:31:34  12  ORDER BY i.ydate,l.pair
23:31:34  13  /

PAIR	 DDAY	   YDATE		 LAG_CLSE	CLSE   LAG_DIFF LD_ST_RATIO MINUTES_DIFF
-------- --------- ------------------- ---------- ---------- ---------- ----------- ------------
usd_cad  Sunday    2011-01-02 22:15:00	.99783125    .994175 -.00367767  -11.475268	    2900
gbp_usd  Tuesday   2011-01-25 09:30:00	 1.590525     1.5811 -.00596104  -17.415245	       5
eur_usd  Friday    2011-02-04 13:35:00	 1.362675    1.35805 -.00340562  -8.6662563	       5
aud_usd  Wednesday 2011-03-16 21:15:00	  .983675   .9751375 -.00875518  -21.024674	      20
usd_jpy  Wednesday 2011-03-16 21:15:00	  79.5925 77.2483333 -.03034585  -70.587234	      20
usd_chf  Wednesday 2011-03-16 21:20:00 .901941667    .895125 -.00761532  -17.173144	       5

6 rows selected.

Elapsed: 00:00:01.08
23:31:35 SQL> 
23:31:35 SQL> -- Get a closer look at the largest lag_diffs:
23:31:35 SQL> 
23:31:35 SQL> -- SELECT COUNT(l.pair)
23:31:35 SQL> SELECT
23:31:35   2  l.pair
23:31:35   3  ,TO_CHAR(i.ydate,'Day')dday
23:31:35   4  ,i.ydate
23:31:35   5  ,i.lag_clse
23:31:35   6  ,i.clse
23:31:35   7  ,i.lag_diff
23:31:35   8  ,i.lag_diff/stddev_lag_diff ld_st_ratio
23:31:35   9  ,i.minutes_diff
23:31:35  10  FROM ibf5min_ld l, ibf5min10 i
23:31:35  11  WHERE l.max_lag_diff = i.lag_diff
23:31:35  12  ORDER BY i.ydate,l.pair
23:31:35  13  /

PAIR	 DDAY	   YDATE		 LAG_CLSE	CLSE   LAG_DIFF LD_ST_RATIO MINUTES_DIFF
-------- --------- ------------------- ---------- ---------- ---------- ----------- ------------
usd_cad  Friday    2010-12-03 13:30:00	  1.00235     1.0066 .004222134   13.174125	       5
gbp_usd  Tuesday   2011-01-18 09:30:00	  1.59735   1.603825 .004037224  11.7947939	       5
usd_chf  Friday    2011-02-04 13:35:00	  .951125    .956275  .00538548  12.1446739	       5
eur_usd  Thursday  2011-03-03 13:30:00	1.3850375    1.39215 .005109004  13.0008515	       5
usd_jpy  Friday    2011-03-18 00:00:00 79.5300293    80.5575 .012754501   29.668136	       5
aud_usd  Friday    2011-03-18 00:20:00	   .98605 .991685938 .005683188  13.6476044	       5

6 rows selected.

Elapsed: 00:00:01.04
23:31:36 SQL> 
23:31:36 SQL> -- I want to see rows around the rows which are connected to the max/min clse values
23:31:36 SQL> 
23:31:36 SQL> CREATE OR REPLACE VIEW ibf5min12 AS
23:31:36   2  SELECT
23:31:36   3  pair
23:31:36   4  -- ydate is granular down to 5 min:
23:31:36   5  ,ydate
23:31:36   6  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse3
23:31:36   7  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse2
23:31:36   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse1
23:31:36   9  ,clse
23:31:36  10  ,LEAD(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse1
23:31:36  11  ,LEAD(clse,2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse2
23:31:36  12  ,LEAD(clse,3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse3
23:31:36  13  ,(clse - LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))/clse lag_diff
23:31:36  14  FROM ibf5min
23:31:36  15  WHERE clse>0
23:31:36  16  ORDER BY pair, ydate
23:31:36  17  /

View created.

Elapsed: 00:00:00.06
23:31:36 SQL> 
23:31:36 SQL> -- Now join ibf5min12 with ibf5min_ld
23:31:36 SQL> 
23:31:36 SQL> SELECT
23:31:36   2  l.pair
23:31:36   3  ,i.ydate
23:31:36   4  ,lag_clse3
23:31:36   5  ,lag_clse2
23:31:36   6  ,lag_clse1
23:31:36   7  ,lag_diff
23:31:36   8  ,i.clse
23:31:36   9  ,lead_clse1
23:31:36  10  ,lead_clse2
23:31:36  11  ,lead_clse3
23:31:36  12  FROM ibf5min_ld l, ibf5min12 i
23:31:36  13  WHERE l.max_lag_diff = i.lag_diff
23:31:36  14  OR    l.min_lag_diff = i.lag_diff
23:31:36  15  ORDER BY i.ydate,l.pair
23:31:36  16  /

PAIR	 YDATE		      LAG_CLSE3  LAG_CLSE2  LAG_CLSE1	LAG_DIFF       CLSE LEAD_CLSE1 LEAD_CLSE2 LEAD_CLSE3
-------- ------------------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
usd_cad  2010-12-03 13:30:00   1.002175   1.002525    1.00235 .004222134     1.0066	1.0042	 1.005775     1.0071
usd_cad  2011-01-02 22:15:00	 .99785    .997825  .99783125 -.00367767    .994175	.99475	   .99475     .99475
gbp_usd  2011-01-18 09:30:00   1.598025    1.59815    1.59735 .004037224   1.603825    1.60465	 1.603175     1.6045
gbp_usd  2011-01-25 09:30:00   1.590875    1.59065   1.590525 -.00596104     1.5811    1.58245	   1.5802    1.57875
eur_usd  2011-02-04 13:35:00   1.364425   1.364725   1.362675 -.00340562    1.35805    1.35925	  1.35875    1.35875
usd_chf  2011-02-04 13:35:00	  .9494    .949075    .951125  .00538548    .956275	 .9541	   .95475      .9549
eur_usd  2011-03-03 13:30:00   1.385075      1.385  1.3850375 .005109004    1.39215  1.3931125	 1.394075    1.39625
aud_usd  2011-03-16 21:15:00	  .9842   .9839875    .983675 -.00875518   .9751375   .9766125	  .975825   .9774875
usd_jpy  2011-03-16 21:15:00   79.82375   79.78625    79.5925 -.03034585 77.2483333    77.5075	 77.45625    77.3175
usd_chf  2011-03-16 21:20:00   .9081625      .9082 .901941667 -.00761532    .895125   .8974125	  .898975    .899325
usd_jpy  2011-03-18 00:00:00 79.3525146    79.4225 79.5300293 .012754501    80.5575 80.8152637 80.8246265     80.895
aud_usd  2011-03-18 00:20:00	  .9846 .984599561     .98605 .005683188 .991685938 .989399414	    .9886 .988073755

12 rows selected.

Elapsed: 00:00:03.10
23:31:39 SQL> 
23:31:39 SQL> -- Look at what is recent
23:31:39 SQL> 
23:31:39 SQL> SELECT
23:31:39   2  pair
23:31:39   3  ,ydate
23:31:39   4  ,clse
23:31:39   5  FROM ibf5min
23:31:39   6  WHERE ydate > sysdate - 1.5/24
23:31:39   7  ORDER BY pair,ydate
23:31:39   8  /

no rows selected

Elapsed: 00:00:00.01
23:31:39 SQL> 
23:31:39 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
