
SQL*Plus: Release 11.2.0.1.0 Production on Sun Jan 30 23:08:52 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

23:08:52 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
23:08:52 SQL> 23:08:52 SQL> --
23:08:52 SQL> -- qry_ibf5min.sql
23:08:52 SQL> --
23:08:52 SQL> 
23:08:52 SQL> -- I use this script to look for dups and bad data in ibf5min
23:08:52 SQL> 
23:08:52 SQL> SET LINES 66
23:08:52 SQL> DESC ibf5min
 Name				  Null?    Type
 -------------------------------- -------- -----------------------
 PAIR					   VARCHAR2(8)
 YDATE					   DATE
 CLSE					   NUMBER

23:08:52 SQL> SET LINES 166
23:08:52 SQL> 
23:08:52 SQL> SELECT
23:08:52   2  pair
23:08:52   3  ,COUNT(pair)
23:08:52   4  FROM ibf5min
23:08:52   5  GROUP BY pair
23:08:52   6  ORDER BY pair
23:08:52   7  /

PAIR	 COUNT(PAIR)
-------- -----------
aud_usd        12465
eur_usd        12468
gbp_usd        12467
usd_cad        12465
usd_chf        12468
usd_jpy        12463

6 rows selected.

Elapsed: 00:00:00.02
23:08:52 SQL> 
23:08:52 SQL> SELECT
23:08:52   2  TO_CHAR(ydate,'YYYY_MM')mnth,TO_CHAR(ydate,'W')wweek
23:08:52   3  ,COUNT(pair)
23:08:52   4  FROM ibf5min
23:08:52   5  GROUP BY TO_CHAR(ydate,'YYYY_MM'),TO_CHAR(ydate,'W')
23:08:52   6  ORDER BY TO_CHAR(ydate,'YYYY_MM'),TO_CHAR(ydate,'W')
23:08:52   7  /

MNTH	W COUNT(PAIR)
------- - -----------
2010_11 5	 1676
2010_12 1	 8550
2010_12 2	 8537
2010_12 3	 8370
2010_12 4	 8398
2010_12 5	 5001
2011_01 1	 8544
2011_01 2	 8548
2011_01 3	 8550
2011_01 4	 8550
2011_01 5	   66
		    6

12 rows selected.

Elapsed: 00:00:00.06
23:08:53 SQL> 
23:08:53 SQL> -- Look for dups
23:08:53 SQL> SELECT COUNT(pair)FROM
23:08:53   2  (
23:08:53   3  SELECT
23:08:53   4  pair
23:08:53   5  ,ydate
23:08:53   6  ,COUNT(pair)
23:08:53   7  FROM ibf5min
23:08:53   8  GROUP BY pair,ydate
23:08:53   9  HAVING COUNT(pair)>1
23:08:53  10  )
23:08:53  11  /

COUNT(PAIR)
-----------
	  0

Elapsed: 00:00:00.04
23:08:53 SQL> 
23:08:53 SQL> -- Use LAG() to look for big jumps.
23:08:53 SQL> 
23:08:53 SQL> CREATE OR REPLACE VIEW ibf5min10 AS
23:08:53   2  SELECT
23:08:53   3  pair
23:08:53   4  -- ydate is granular down to 5 min:
23:08:53   5  ,ydate
23:08:53   6  ,clse
23:08:53   7  -- Use analytic function to get LAG()
23:08:53   8  ,LAG(ydate,1,NULL)OVER(PARTITION BY pair ORDER BY ydate)		    lag_ydate
23:08:53   9  ,(ydate - LAG(ydate,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))*24*60 minutes_diff
23:08:53  10  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate)		    lag_clse
23:08:53  11  ,(clse - LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))/clse lag_diff
23:08:53  12  FROM ibf5min
23:08:53  13  WHERE clse>0
23:08:53  14  ORDER BY pair, ydate
23:08:53  15  /

View created.

Elapsed: 00:00:00.04
23:08:53 SQL> 
23:08:53 SQL> CREATE OR REPLACE VIEW ibf5min_ld AS
23:08:53   2  SELECT
23:08:53   3  pair
23:08:53   4  ,MIN(lag_diff)	min_lag_diff
23:08:53   5  ,AVG(lag_diff)	avg_lag_diff
23:08:53   6  ,STDDEV(lag_diff) stddev_lag_diff
23:08:53   7  ,MAX(lag_diff)	max_lag_diff
23:08:53   8  ,COUNT(lag_diff)	cnt_lag_diff
23:08:53   9  FROM ibf5min10
23:08:53  10  GROUP BY pair
23:08:53  11  /

View created.

Elapsed: 00:00:00.04
23:08:53 SQL> 
23:08:53 SQL> SELECT * FROM ibf5min_ld;

PAIR	 MIN_LAG_DIFF AVG_LAG_DIFF STDDEV_LAG_DIFF MAX_LAG_DIFF CNT_LAG_DIFF
-------- ------------ ------------ --------------- ------------ ------------
aud_usd    -.00412953	2.2562E-06	.000416235   .004498551        12463
eur_usd    -.00286964	2.8163E-06	.000428907   .004815837        12466
gbp_usd    -.00596104	1.3938E-06	.000357988   .004037224        12465
usd_cad    -.00367767	-1.481E-06	.000331821   .004222134        12463
usd_chf    -.00675762	-.00000495	.000463614   .004077816        12466
usd_jpy    -.00797352	-2.081E-06	.000346193   .005252714        12461

6 rows selected.

Elapsed: 00:00:00.29
23:08:53 SQL> 
23:08:53 SQL> SELECT * FROM ibf5min10 WHERE lag_diff = (SELECT MIN(min_lag_diff)FROM ibf5min_ld);

PAIR	 YDATE			   CLSE LAG_YDATE	    MINUTES_DIFF   LAG_CLSE   LAG_DIFF
-------- ------------------- ---------- ------------------- ------------ ---------- ----------
usd_jpy  2010-12-03 13:30:00	83.0875 2010-12-03 13:25:00	       5      83.75 -.00797352

Elapsed: 00:00:00.52
23:08:53 SQL> 
23:08:53 SQL> SELECT * FROM ibf5min10 WHERE lag_diff = (SELECT MAX(max_lag_diff)FROM ibf5min_ld);

PAIR	 YDATE			   CLSE LAG_YDATE	    MINUTES_DIFF   LAG_CLSE   LAG_DIFF
-------- ------------------- ---------- ------------------- ------------ ---------- ----------
usd_jpy  2011-01-05 13:15:00	 82.735 2011-01-05 13:10:00	       5 82.3004167 .005252714

Elapsed: 00:00:00.49
23:08:54 SQL> 
23:08:54 SQL> -- SELECT COUNT(*)FROM ibf5min10 WHERE lag_diff IN(SELECT max_lag_diff FROM ibf5min_ld);
23:08:54 SQL> 
23:08:54 SQL> -- Get a closer look at the smallest lag_diffs:
23:08:54 SQL> 
23:08:54 SQL> -- SELECT COUNT(l.pair)
23:08:54 SQL> SELECT
23:08:54   2  l.pair
23:08:54   3  ,TO_CHAR(i.ydate,'Day')dday
23:08:54   4  ,i.ydate
23:08:54   5  ,i.lag_clse
23:08:54   6  ,i.clse
23:08:54   7  ,i.lag_diff
23:08:54   8  ,i.lag_diff/stddev_lag_diff ld_st_ratio
23:08:54   9  ,i.minutes_diff
23:08:54  10  FROM ibf5min_ld l, ibf5min10 i
23:08:54  11  WHERE l.min_lag_diff = i.lag_diff
23:08:54  12  ORDER BY i.ydate,l.pair
23:08:54  13  /

PAIR	 DDAY	   YDATE		 LAG_CLSE	CLSE   LAG_DIFF LD_ST_RATIO MINUTES_DIFF
-------- --------- ------------------- ---------- ---------- ---------- ----------- ------------
usd_jpy  Friday    2010-12-03 13:30:00	    83.75    83.0875 -.00797352  -23.032022	       5
usd_chf  Friday    2010-12-03 13:35:00	  .990725    .984075 -.00675762   -14.57595	       5
usd_cad  Sunday    2011-01-02 22:15:00	.99783125    .994175 -.00367767  -11.083311	    2900
eur_usd  Wednesday 2011-01-05 13:15:00 1.32145625   1.317675 -.00286964  -6.6905765	       5
aud_usd  Tuesday   2011-01-25 00:30:00	   .99695     .99285 -.00412953  -9.9211458	       5
gbp_usd  Tuesday   2011-01-25 09:30:00	 1.590525     1.5811 -.00596104  -16.651515	       5

6 rows selected.

Elapsed: 00:00:00.54
23:08:54 SQL> 
23:08:54 SQL> -- Get a closer look at the largest lag_diffs:
23:08:54 SQL> 
23:08:54 SQL> -- SELECT COUNT(l.pair)
23:08:54 SQL> SELECT
23:08:54   2  l.pair
23:08:54   3  ,TO_CHAR(i.ydate,'Day')dday
23:08:54   4  ,i.ydate
23:08:54   5  ,i.lag_clse
23:08:54   6  ,i.clse
23:08:54   7  ,i.lag_diff
23:08:54   8  ,i.lag_diff/stddev_lag_diff ld_st_ratio
23:08:54   9  ,i.minutes_diff
23:08:54  10  FROM ibf5min_ld l, ibf5min10 i
23:08:54  11  WHERE l.max_lag_diff = i.lag_diff
23:08:54  12  ORDER BY i.ydate,l.pair
23:08:54  13  /

PAIR	 DDAY	   YDATE		 LAG_CLSE	CLSE   LAG_DIFF LD_ST_RATIO MINUTES_DIFF
-------- --------- ------------------- ---------- ---------- ---------- ----------- ------------
usd_cad  Friday    2010-12-03 13:30:00	  1.00235     1.0066 .004222134  12.7241413	       5
aud_usd  Thursday  2010-12-09 00:30:00	  .979225     .98365 .004498551  10.8077252	       5
eur_usd  Thursday  2010-12-23 16:15:00	  1.30705   1.313375 .004815837  11.2281508	       5
usd_jpy  Wednesday 2011-01-05 13:15:00 82.3004167     82.735 .005252714  15.1727977	       5
gbp_usd  Tuesday   2011-01-18 09:30:00	  1.59735   1.603825 .004037224  11.2775441	       5
usd_chf  Wednesday 2011-01-19 12:10:00	    .9586    .962525 .004077816  8.79571324	       5

6 rows selected.

Elapsed: 00:00:00.54
23:08:55 SQL> 
23:08:55 SQL> -- I want to see rows around the rows which are connected to the max/min clse values
23:08:55 SQL> 
23:08:55 SQL> CREATE OR REPLACE VIEW ibf5min12 AS
23:08:55   2  SELECT
23:08:55   3  pair
23:08:55   4  -- ydate is granular down to 5 min:
23:08:55   5  ,ydate
23:08:55   6  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse3
23:08:55   7  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse2
23:08:55   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse1
23:08:55   9  ,clse
23:08:55  10  ,LEAD(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse1
23:08:55  11  ,LEAD(clse,2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse2
23:08:55  12  ,LEAD(clse,3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse3
23:08:55  13  ,(clse - LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))/clse lag_diff
23:08:55  14  FROM ibf5min
23:08:55  15  WHERE clse>0
23:08:55  16  ORDER BY pair, ydate
23:08:55  17  /

View created.

Elapsed: 00:00:00.04
23:08:55 SQL> 
23:08:55 SQL> -- Now join ibf5min12 with ibf5min_ld
23:08:55 SQL> 
23:08:55 SQL> SELECT
23:08:55   2  l.pair
23:08:55   3  ,i.ydate
23:08:55   4  ,lag_clse3
23:08:55   5  ,lag_clse2
23:08:55   6  ,lag_clse1
23:08:55   7  ,lag_diff
23:08:55   8  ,i.clse
23:08:55   9  ,lead_clse1
23:08:55  10  ,lead_clse2
23:08:55  11  ,lead_clse3
23:08:55  12  FROM ibf5min_ld l, ibf5min12 i
23:08:55  13  WHERE l.max_lag_diff = i.lag_diff
23:08:55  14  OR    l.min_lag_diff = i.lag_diff
23:08:55  15  ORDER BY i.ydate,l.pair
23:08:55  16  /

PAIR	 YDATE		      LAG_CLSE3  LAG_CLSE2  LAG_CLSE1	LAG_DIFF       CLSE LEAD_CLSE1 LEAD_CLSE2 LEAD_CLSE3
-------- ------------------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
usd_cad  2010-12-03 13:30:00   1.002175   1.002525    1.00235 .004222134     1.0066	1.0042	 1.005775     1.0071
usd_jpy  2010-12-03 13:30:00	 83.745     83.785	83.75 -.00797352    83.0875    82.8875	  82.8825     82.705
usd_chf  2010-12-03 13:35:00	.992425     .99135    .990725 -.00675762    .984075	 .9829	  .981675     .98125
aud_usd  2010-12-09 00:30:00	.978775     .97935    .979225 .004498551     .98365    .983675	  .984925      .9849
eur_usd  2010-12-23 16:15:00	1.30685     1.3071    1.30705 .004815837   1.313375	1.3115	  1.31175    1.31125
usd_cad  2011-01-02 22:15:00	 .99785    .997825  .99783125 -.00367767    .994175	.99475	   .99475     .99475
eur_usd  2011-01-05 13:15:00   1.321725    1.32155 1.32145625 -.00286964   1.317675    1.31835	  1.31695    1.31845
usd_jpy  2011-01-05 13:15:00	  82.24     82.225 82.3004167 .005252714     82.735   82.79375	  83.0475     82.875
gbp_usd  2011-01-18 09:30:00   1.598025    1.59815    1.59735 .004037224   1.603825    1.60465	 1.603175     1.6045
usd_chf  2011-01-19 12:10:00	.959175   .9590875	.9586 .004077816    .962525	.96205	  .961775    .962525
aud_usd  2011-01-25 00:30:00	.997525    .997475     .99695 -.00412953     .99285	.99325	    .9932     .99355
gbp_usd  2011-01-25 09:30:00   1.590875    1.59065   1.590525 -.00596104     1.5811    1.58245	   1.5802    1.57875

12 rows selected.

Elapsed: 00:00:01.57
23:08:57 SQL> 
23:08:57 SQL> -- Look at what is recent
23:08:57 SQL> 
23:08:57 SQL> SELECT
23:08:57   2  pair
23:08:57   3  ,ydate
23:08:57   4  ,clse
23:08:57   5  FROM ibf5min
23:08:57   6  WHERE ydate > sysdate - 1.5/24
23:08:57   7  ORDER BY pair,ydate
23:08:57   8  /

PAIR	 YDATE			   CLSE
-------- ------------------- ----------
aud_usd  2011-01-30 22:15:00   .9900625
aud_usd  2011-01-30 22:20:00	.989975
aud_usd  2011-01-30 22:25:00	.990225
aud_usd  2011-01-30 22:30:00   .9903625
aud_usd  2011-01-30 22:35:00	.989975
aud_usd  2011-01-30 22:40:00	    .99
aud_usd  2011-01-30 22:45:00	.989725
aud_usd  2011-01-30 22:50:00	 .98915
aud_usd  2011-01-30 22:55:00	.989025
aud_usd  2011-01-30 23:00:00	  .9895
aud_usd  2011-01-30 23:05:00	.989525
eur_usd  2011-01-30 22:15:00	 1.3588
eur_usd  2011-01-30 22:20:00	1.35925
eur_usd  2011-01-30 22:25:00   1.359575
eur_usd  2011-01-30 22:30:00   1.359575
eur_usd  2011-01-30 22:35:00	1.35935
eur_usd  2011-01-30 22:40:00   1.359375
eur_usd  2011-01-30 22:45:00	1.35885
eur_usd  2011-01-30 22:50:00   1.357925
eur_usd  2011-01-30 22:55:00   1.357825
eur_usd  2011-01-30 23:00:00   1.358325
eur_usd  2011-01-30 23:05:00   1.358625
gbp_usd  2011-01-30 22:15:00  1.5841625
gbp_usd  2011-01-30 22:20:00	 1.5837
gbp_usd  2011-01-30 22:25:00	 1.5836
gbp_usd  2011-01-30 22:30:00  1.5839125
gbp_usd  2011-01-30 22:35:00	 1.5838
gbp_usd  2011-01-30 22:40:00   1.583725
gbp_usd  2011-01-30 22:45:00	1.58365
gbp_usd  2011-01-30 22:50:00  1.5832875
gbp_usd  2011-01-30 22:55:00	 1.5831
gbp_usd  2011-01-30 23:00:00	 1.5833
gbp_usd  2011-01-30 23:05:00	1.58395
usd_cad  2011-01-30 22:15:00 1.00139156
usd_cad  2011-01-30 22:20:00	 1.0016
usd_cad  2011-01-30 22:25:00   1.001575
usd_cad  2011-01-30 22:30:00  1.0014875
usd_cad  2011-01-30 22:35:00	 1.0016
usd_cad  2011-01-30 22:40:00	 1.0013
usd_cad  2011-01-30 22:45:00	1.00125
usd_cad  2011-01-30 22:50:00  1.0014625
usd_cad  2011-01-30 22:55:00	 1.0015
usd_cad  2011-01-30 23:00:00	 1.0018
usd_cad  2011-01-30 23:05:00	 1.0014
usd_chf  2011-01-30 22:15:00	.941525
usd_chf  2011-01-30 22:20:00	  .9417
usd_chf  2011-01-30 22:25:00	  .9417
usd_chf  2011-01-30 22:30:00   .9417875
usd_chf  2011-01-30 22:35:00	 .94215
usd_chf  2011-01-30 22:40:00   .9420875
usd_chf  2011-01-30 22:45:00	.942375
usd_chf  2011-01-30 22:50:00   .9425375
usd_chf  2011-01-30 22:55:00	 .94225
usd_chf  2011-01-30 23:00:00	.942175
usd_chf  2011-01-30 23:05:00	 .94205
usd_jpy  2011-01-30 22:15:00 82.1474951
usd_jpy  2011-01-30 22:20:00	 82.125
usd_jpy  2011-01-30 22:25:00   82.12375
usd_jpy  2011-01-30 22:30:00	  82.13
usd_jpy  2011-01-30 22:35:00	 82.135
usd_jpy  2011-01-30 22:40:00	82.1275
usd_jpy  2011-01-30 22:45:00	82.1325
usd_jpy  2011-01-30 22:50:00	  82.14
usd_jpy  2011-01-30 22:55:00	82.1575
usd_jpy  2011-01-30 23:00:00	 82.155
usd_jpy  2011-01-30 23:05:00	 82.145

66 rows selected.

Elapsed: 00:00:00.01
23:08:57 SQL> 
23:08:57 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
