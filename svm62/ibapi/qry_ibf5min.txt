
SQL*Plus: Release 11.2.0.1.0 Production on Tue Feb 22 23:27:25 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

23:27:25 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
23:27:25 SQL> 23:27:25 SQL> --
23:27:25 SQL> -- qry_ibf5min.sql
23:27:25 SQL> --
23:27:25 SQL> 
23:27:25 SQL> -- I use this script to look for dups and bad data in ibf5min
23:27:25 SQL> 
23:27:25 SQL> SET LINES 66
23:27:25 SQL> DESC ibf5min
 Name				  Null?    Type
 -------------------------------- -------- -----------------------
 PAIR					   VARCHAR2(8)
 YDATE					   DATE
 CLSE					   NUMBER

23:27:25 SQL> SET LINES 166
23:27:25 SQL> 
23:27:25 SQL> SELECT
23:27:25   2  pair
23:27:25   3  ,COUNT(pair)
23:27:25   4  FROM ibf5min
23:27:25   5  GROUP BY pair
23:27:25   6  ORDER BY pair
23:27:25   7  /

PAIR	 COUNT(PAIR)
-------- -----------
aud_usd        17305
eur_usd        17310
gbp_usd        17310
usd_cad        17310
usd_chf        17314
usd_jpy        17309

6 rows selected.

Elapsed: 00:00:00.03
23:27:25 SQL> 
23:27:25 SQL> SELECT
23:27:25   2  TO_CHAR(ydate,'YYYY_MM')mnth,TO_CHAR(ydate,'W')wweek
23:27:25   3  ,COUNT(pair)
23:27:25   4  FROM ibf5min
23:27:25   5  GROUP BY TO_CHAR(ydate,'YYYY_MM'),TO_CHAR(ydate,'W')
23:27:25   6  ORDER BY TO_CHAR(ydate,'YYYY_MM'),TO_CHAR(ydate,'W')
23:27:25   7  /

MNTH	W COUNT(PAIR)
------- - -----------
2010_11 5	 1676
2010_12 1	 8550
2010_12 2	 8537
2010_12 3	 8370
2010_12 4	 8398
2010_12 5	 5001
2011_01 1	 8544
2011_01 2	 8548
2011_01 3	 8550
2011_01 4	 8550
2011_01 5	 1836
2011_02 1	 8547
2011_02 2	 8538
2011_02 3	 8545
2011_02 4	 1662
		    6

16 rows selected.

Elapsed: 00:00:00.07
23:27:25 SQL> 
23:27:25 SQL> -- Look for dups
23:27:25 SQL> SELECT COUNT(pair)FROM
23:27:25   2  (
23:27:25   3  SELECT
23:27:25   4  pair
23:27:25   5  ,ydate
23:27:25   6  ,COUNT(pair)
23:27:25   7  FROM ibf5min
23:27:25   8  GROUP BY pair,ydate
23:27:25   9  HAVING COUNT(pair)>1
23:27:25  10  )
23:27:25  11  /

COUNT(PAIR)
-----------
	  0

Elapsed: 00:00:00.06
23:27:25 SQL> 
23:27:25 SQL> -- Use LAG() to look for big jumps.
23:27:25 SQL> 
23:27:25 SQL> CREATE OR REPLACE VIEW ibf5min10 AS
23:27:25   2  SELECT
23:27:25   3  pair
23:27:25   4  -- ydate is granular down to 5 min:
23:27:25   5  ,ydate
23:27:25   6  ,clse
23:27:25   7  -- Use analytic function to get LAG()
23:27:25   8  ,LAG(ydate,1,NULL)OVER(PARTITION BY pair ORDER BY ydate)		    lag_ydate
23:27:25   9  ,(ydate - LAG(ydate,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))*24*60 minutes_diff
23:27:25  10  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate)		    lag_clse
23:27:25  11  ,(clse - LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))/clse lag_diff
23:27:25  12  FROM ibf5min
23:27:25  13  WHERE clse>0
23:27:25  14  ORDER BY pair, ydate
23:27:25  15  /

View created.

Elapsed: 00:00:00.06
23:27:25 SQL> 
23:27:25 SQL> CREATE OR REPLACE VIEW ibf5min_ld AS
23:27:25   2  SELECT
23:27:25   3  pair
23:27:25   4  ,MIN(lag_diff)	min_lag_diff
23:27:25   5  ,AVG(lag_diff)	avg_lag_diff
23:27:25   6  ,STDDEV(lag_diff) stddev_lag_diff
23:27:25   7  ,MAX(lag_diff)	max_lag_diff
23:27:25   8  ,COUNT(lag_diff)	cnt_lag_diff
23:27:25   9  FROM ibf5min10
23:27:25  10  GROUP BY pair
23:27:25  11  /

View created.

Elapsed: 00:00:00.04
23:27:25 SQL> 
23:27:25 SQL> SELECT * FROM ibf5min_ld;

PAIR	 MIN_LAG_DIFF AVG_LAG_DIFF STDDEV_LAG_DIFF MAX_LAG_DIFF CNT_LAG_DIFF
-------- ------------ ------------ --------------- ------------ ------------
aud_usd    -.00412953	.000002241	.000406275   .004498551        17303
eur_usd    -.00340562	2.3596E-06	.000412104   .004815837        17308
gbp_usd    -.00596104	2.1236E-06	.000348046   .004037224        17308
usd_cad    -.00367767	-1.735E-06	.000321744   .004222134        17308
usd_chf    -.00675762	-3.844E-06	.000450772    .00538548        17312
usd_jpy    -.00797352	-1.073E-06	.000332889   .005252714        17307

6 rows selected.

Elapsed: 00:00:00.41
23:27:25 SQL> 
23:27:25 SQL> SELECT * FROM ibf5min10 WHERE lag_diff = (SELECT MIN(min_lag_diff)FROM ibf5min_ld);

PAIR	 YDATE			   CLSE LAG_YDATE	    MINUTES_DIFF   LAG_CLSE   LAG_DIFF
-------- ------------------- ---------- ------------------- ------------ ---------- ----------
usd_jpy  2010-12-03 13:30:00	83.0875 2010-12-03 13:25:00	       5      83.75 -.00797352

Elapsed: 00:00:00.71
23:27:26 SQL> 
23:27:26 SQL> SELECT * FROM ibf5min10 WHERE lag_diff = (SELECT MAX(max_lag_diff)FROM ibf5min_ld);

PAIR	 YDATE			   CLSE LAG_YDATE	    MINUTES_DIFF   LAG_CLSE   LAG_DIFF
-------- ------------------- ---------- ------------------- ------------ ---------- ----------
usd_chf  2011-02-04 13:35:00	.956275 2011-02-04 13:30:00	       5    .951125  .00538548

Elapsed: 00:00:00.70
23:27:27 SQL> 
23:27:27 SQL> -- SELECT COUNT(*)FROM ibf5min10 WHERE lag_diff IN(SELECT max_lag_diff FROM ibf5min_ld);
23:27:27 SQL> 
23:27:27 SQL> -- Get a closer look at the smallest lag_diffs:
23:27:27 SQL> 
23:27:27 SQL> -- SELECT COUNT(l.pair)
23:27:27 SQL> SELECT
23:27:27   2  l.pair
23:27:27   3  ,TO_CHAR(i.ydate,'Day')dday
23:27:27   4  ,i.ydate
23:27:27   5  ,i.lag_clse
23:27:27   6  ,i.clse
23:27:27   7  ,i.lag_diff
23:27:27   8  ,i.lag_diff/stddev_lag_diff ld_st_ratio
23:27:27   9  ,i.minutes_diff
23:27:27  10  FROM ibf5min_ld l, ibf5min10 i
23:27:27  11  WHERE l.min_lag_diff = i.lag_diff
23:27:27  12  ORDER BY i.ydate,l.pair
23:27:27  13  /

PAIR	 DDAY	   YDATE		 LAG_CLSE	CLSE   LAG_DIFF LD_ST_RATIO MINUTES_DIFF
-------- --------- ------------------- ---------- ---------- ---------- ----------- ------------
usd_jpy  Friday    2010-12-03 13:30:00	    83.75    83.0875 -.00797352  -23.952479	       5
usd_chf  Friday    2010-12-03 13:35:00	  .990725    .984075 -.00675762  -14.991197	       5
usd_cad  Sunday    2011-01-02 22:15:00	.99783125    .994175 -.00367767   -11.43044	    2900
aud_usd  Tuesday   2011-01-25 00:30:00	   .99695     .99285 -.00412953  -10.164358	       5
gbp_usd  Tuesday   2011-01-25 09:30:00	 1.590525     1.5811 -.00596104  -17.127156	       5
eur_usd  Friday    2011-02-04 13:35:00	 1.362675    1.35805 -.00340562  -8.2639819	       5

6 rows selected.

Elapsed: 00:00:00.77
23:27:28 SQL> 
23:27:28 SQL> -- Get a closer look at the largest lag_diffs:
23:27:28 SQL> 
23:27:28 SQL> -- SELECT COUNT(l.pair)
23:27:28 SQL> SELECT
23:27:28   2  l.pair
23:27:28   3  ,TO_CHAR(i.ydate,'Day')dday
23:27:28   4  ,i.ydate
23:27:28   5  ,i.lag_clse
23:27:28   6  ,i.clse
23:27:28   7  ,i.lag_diff
23:27:28   8  ,i.lag_diff/stddev_lag_diff ld_st_ratio
23:27:28   9  ,i.minutes_diff
23:27:28  10  FROM ibf5min_ld l, ibf5min10 i
23:27:28  11  WHERE l.max_lag_diff = i.lag_diff
23:27:28  12  ORDER BY i.ydate,l.pair
23:27:28  13  /

PAIR	 DDAY	   YDATE		 LAG_CLSE	CLSE   LAG_DIFF LD_ST_RATIO MINUTES_DIFF
-------- --------- ------------------- ---------- ---------- ---------- ----------- ------------
usd_cad  Friday    2010-12-03 13:30:00	  1.00235     1.0066 .004222134  13.1226613	       5
aud_usd  Thursday  2010-12-09 00:30:00	  .979225     .98365 .004498551  11.0726713	       5
eur_usd  Thursday  2010-12-23 16:15:00	  1.30705   1.313375 .004815837  11.6859808	       5
usd_jpy  Wednesday 2011-01-05 13:15:00 82.3004167     82.735 .005252714  15.7791672	       5
gbp_usd  Tuesday   2011-01-18 09:30:00	  1.59735   1.603825 .004037224  11.5996805	       5
usd_chf  Friday    2011-02-04 13:35:00	  .951125    .956275  .00538548  11.9472321	       5

6 rows selected.

Elapsed: 00:00:00.77
23:27:28 SQL> 
23:27:28 SQL> -- I want to see rows around the rows which are connected to the max/min clse values
23:27:28 SQL> 
23:27:28 SQL> CREATE OR REPLACE VIEW ibf5min12 AS
23:27:28   2  SELECT
23:27:28   3  pair
23:27:28   4  -- ydate is granular down to 5 min:
23:27:28   5  ,ydate
23:27:28   6  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse3
23:27:28   7  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse2
23:27:28   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse1
23:27:28   9  ,clse
23:27:28  10  ,LEAD(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse1
23:27:28  11  ,LEAD(clse,2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse2
23:27:28  12  ,LEAD(clse,3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse3
23:27:28  13  ,(clse - LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))/clse lag_diff
23:27:28  14  FROM ibf5min
23:27:28  15  WHERE clse>0
23:27:28  16  ORDER BY pair, ydate
23:27:28  17  /

View created.

Elapsed: 00:00:00.04
23:27:28 SQL> 
23:27:28 SQL> -- Now join ibf5min12 with ibf5min_ld
23:27:28 SQL> 
23:27:28 SQL> SELECT
23:27:28   2  l.pair
23:27:28   3  ,i.ydate
23:27:28   4  ,lag_clse3
23:27:28   5  ,lag_clse2
23:27:28   6  ,lag_clse1
23:27:28   7  ,lag_diff
23:27:28   8  ,i.clse
23:27:28   9  ,lead_clse1
23:27:28  10  ,lead_clse2
23:27:28  11  ,lead_clse3
23:27:28  12  FROM ibf5min_ld l, ibf5min12 i
23:27:28  13  WHERE l.max_lag_diff = i.lag_diff
23:27:28  14  OR    l.min_lag_diff = i.lag_diff
23:27:28  15  ORDER BY i.ydate,l.pair
23:27:28  16  /

PAIR	 YDATE		      LAG_CLSE3  LAG_CLSE2  LAG_CLSE1	LAG_DIFF       CLSE LEAD_CLSE1 LEAD_CLSE2 LEAD_CLSE3
-------- ------------------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
usd_cad  2010-12-03 13:30:00   1.002175   1.002525    1.00235 .004222134     1.0066	1.0042	 1.005775     1.0071
usd_jpy  2010-12-03 13:30:00	 83.745     83.785	83.75 -.00797352    83.0875    82.8875	  82.8825     82.705
usd_chf  2010-12-03 13:35:00	.992425     .99135    .990725 -.00675762    .984075	 .9829	  .981675     .98125
aud_usd  2010-12-09 00:30:00	.978775     .97935    .979225 .004498551     .98365    .983675	  .984925      .9849
eur_usd  2010-12-23 16:15:00	1.30685     1.3071    1.30705 .004815837   1.313375	1.3115	  1.31175    1.31125
usd_cad  2011-01-02 22:15:00	 .99785    .997825  .99783125 -.00367767    .994175	.99475	   .99475     .99475
usd_jpy  2011-01-05 13:15:00	  82.24     82.225 82.3004167 .005252714     82.735   82.79375	  83.0475     82.875
gbp_usd  2011-01-18 09:30:00   1.598025    1.59815    1.59735 .004037224   1.603825    1.60465	 1.603175     1.6045
aud_usd  2011-01-25 00:30:00	.997525    .997475     .99695 -.00412953     .99285	.99325	    .9932     .99355
gbp_usd  2011-01-25 09:30:00   1.590875    1.59065   1.590525 -.00596104     1.5811    1.58245	   1.5802    1.57875
eur_usd  2011-02-04 13:35:00   1.364425   1.364725   1.362675 -.00340562    1.35805    1.35925	  1.35875    1.35875
usd_chf  2011-02-04 13:35:00	  .9494    .949075    .951125  .00538548    .956275	 .9541	   .95475      .9549

12 rows selected.

Elapsed: 00:00:02.33
23:27:31 SQL> 
23:27:31 SQL> -- Look at what is recent
23:27:31 SQL> 
23:27:31 SQL> SELECT
23:27:31   2  pair
23:27:31   3  ,ydate
23:27:31   4  ,clse
23:27:31   5  FROM ibf5min
23:27:31   6  WHERE ydate > sysdate - 1.5/24
23:27:31   7  ORDER BY pair,ydate
23:27:31   8  /

PAIR	 YDATE			   CLSE
-------- ------------------- ----------
aud_usd  2011-02-22 22:15:00	.999375
aud_usd  2011-02-22 22:20:00	 .99945
aud_usd  2011-02-22 22:25:00   .9992625
aud_usd  2011-02-22 22:30:00	.999075
aud_usd  2011-02-22 22:35:00   .9990625
aud_usd  2011-02-22 22:40:00	 .99865
aud_usd  2011-02-22 22:45:00   .9989125
aud_usd  2011-02-22 22:50:00	.998625
aud_usd  2011-02-22 22:55:00	  .9988
aud_usd  2011-02-22 23:00:00	.999425
aud_usd  2011-02-22 23:05:00   1.000025
aud_usd  2011-02-22 23:10:00	1.00045
aud_usd  2011-02-22 23:15:00   1.000475
eur_usd  2011-02-22 22:15:00  1.3654875
eur_usd  2011-02-22 22:20:00  1.3658125
eur_usd  2011-02-22 22:25:00	1.36565
eur_usd  2011-02-22 22:30:00	 1.3659
eur_usd  2011-02-22 22:35:00	1.36585
eur_usd  2011-02-22 22:40:00   1.365875
eur_usd  2011-02-22 22:45:00   1.365775
eur_usd  2011-02-22 22:50:00	 1.3658
eur_usd  2011-02-22 22:55:00   1.365575
eur_usd  2011-02-22 23:00:00	1.36565
eur_usd  2011-02-22 23:05:00	1.36615
eur_usd  2011-02-22 23:10:00	1.36685
eur_usd  2011-02-22 23:15:00   1.366875
gbp_usd  2011-02-22 22:15:00   1.613675
gbp_usd  2011-02-22 22:20:00  1.6140125
gbp_usd  2011-02-22 22:25:00   1.613575
gbp_usd  2011-02-22 22:30:00	  1.614
gbp_usd  2011-02-22 22:35:00	1.61405
gbp_usd  2011-02-22 22:40:00   1.614175
gbp_usd  2011-02-22 22:45:00  1.6141875
gbp_usd  2011-02-22 22:50:00   1.614325
gbp_usd  2011-02-22 22:55:00	1.61425
gbp_usd  2011-02-22 23:00:00	1.61455
gbp_usd  2011-02-22 23:05:00  1.6149875
gbp_usd  2011-02-22 23:10:00	1.61555
gbp_usd  2011-02-22 23:15:00	1.61535
usd_cad  2011-02-22 22:15:00   .9902875
usd_cad  2011-02-22 22:20:00   .9899375
usd_cad  2011-02-22 22:25:00	 .99015
usd_cad  2011-02-22 22:30:00   .9901625
usd_cad  2011-02-22 22:35:00   .9899875
usd_cad  2011-02-22 22:40:00	.990075
usd_cad  2011-02-22 22:45:00	  .9904
usd_cad  2011-02-22 22:50:00	  .9899
usd_cad  2011-02-22 22:55:00   .9901125
usd_cad  2011-02-22 23:00:00	.990125
usd_cad  2011-02-22 23:05:00   .9901875
usd_cad  2011-02-22 23:10:00	.990025
usd_cad  2011-02-22 23:15:00	.990075
usd_chf  2011-02-22 22:15:00   .9384375
usd_chf  2011-02-22 22:20:00	 .93825
usd_chf  2011-02-22 22:25:00	  .9384
usd_chf  2011-02-22 22:30:00   .9384625
usd_chf  2011-02-22 22:35:00   .9384375
usd_chf  2011-02-22 22:40:00	.938375
usd_chf  2011-02-22 22:45:00	 .93835
usd_chf  2011-02-22 22:50:00	.938275
usd_chf  2011-02-22 22:55:00   .9384375
usd_chf  2011-02-22 23:00:00	.938275
usd_chf  2011-02-22 23:05:00   .9380625
usd_chf  2011-02-22 23:10:00	  .9378
usd_chf  2011-02-22 23:15:00	  .9379
usd_jpy  2011-02-22 22:15:00   82.83875
usd_jpy  2011-02-22 22:20:00	  82.83
usd_jpy  2011-02-22 22:25:00	82.8175
usd_jpy  2011-02-22 22:30:00   82.80625
usd_jpy  2011-02-22 22:35:00	  82.82
usd_jpy  2011-02-22 22:40:00	82.7875
usd_jpy  2011-02-22 22:45:00	  82.77
usd_jpy  2011-02-22 22:50:00	82.7775
usd_jpy  2011-02-22 22:55:00	82.7775
usd_jpy  2011-02-22 23:00:00	 82.785
usd_jpy  2011-02-22 23:05:00	82.7675
usd_jpy  2011-02-22 23:10:00	82.7775
usd_jpy  2011-02-22 23:15:00	  82.77

78 rows selected.

Elapsed: 00:00:00.01
23:27:31 SQL> 
23:27:31 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
