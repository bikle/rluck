
SQL*Plus: Release 11.2.0.1.0 Production on Fri Mar 11 06:33:03 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

06:33:03 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
06:33:03 SQL> 06:33:03 SQL> --
06:33:03 SQL> -- qry_ibf5min.sql
06:33:03 SQL> --
06:33:03 SQL> 
06:33:03 SQL> -- I use this script to look for dups and bad data in ibf5min
06:33:03 SQL> 
06:33:03 SQL> SET LINES 66
06:33:03 SQL> DESC ibf5min
 Name				  Null?    Type
 -------------------------------- -------- -----------------------
 PAIR					   VARCHAR2(8)
 YDATE					   DATE
 CLSE					   NUMBER

06:33:03 SQL> SET LINES 166
06:33:03 SQL> 
06:33:03 SQL> SELECT
06:33:03   2  pair
06:33:03   3  ,COUNT(pair)
06:33:03   4  FROM ibf5min
06:33:03   5  GROUP BY pair
06:33:03   6  ORDER BY pair
06:33:03   7  /

PAIR	 COUNT(PAIR)
-------- -----------
aud_usd        20806
eur_usd        20812
gbp_usd        20812
usd_cad        20811
usd_chf        20817
usd_jpy        20812

6 rows selected.

Elapsed: 00:00:00.03
06:33:03 SQL> 
06:33:03 SQL> SELECT
06:33:03   2  TO_CHAR(ydate,'YYYY_MM')mnth,TO_CHAR(ydate,'W')wweek
06:33:03   3  ,COUNT(pair)
06:33:03   4  FROM ibf5min
06:33:03   5  GROUP BY TO_CHAR(ydate,'YYYY_MM'),TO_CHAR(ydate,'W')
06:33:03   6  ORDER BY TO_CHAR(ydate,'YYYY_MM'),TO_CHAR(ydate,'W')
06:33:03   7  /

MNTH	W COUNT(PAIR)
------- - -----------
2010_11 5	 1676
2010_12 1	 8550
2010_12 2	 8537
2010_12 3	 8370
2010_12 4	 8398
2010_12 5	 5001
2011_01 1	 8544
2011_01 2	 8548
2011_01 3	 8550
2011_01 4	 8550
2011_01 5	 1836
2011_02 1	 8547
2011_02 2	 8538
2011_02 3	 8545
2011_02 4	 8550
2011_03 1	 8539
2011_03 2	 5585
		    6

18 rows selected.

Elapsed: 00:00:00.10
06:33:03 SQL> 
06:33:03 SQL> -- Look for dups
06:33:03 SQL> SELECT COUNT(pair)FROM
06:33:03   2  (
06:33:03   3  SELECT
06:33:03   4  pair
06:33:03   5  ,ydate
06:33:03   6  ,COUNT(pair)
06:33:03   7  FROM ibf5min
06:33:03   8  GROUP BY pair,ydate
06:33:03   9  HAVING COUNT(pair)>1
06:33:03  10  )
06:33:03  11  /

COUNT(PAIR)
-----------
	  0

Elapsed: 00:00:00.07
06:33:03 SQL> 
06:33:03 SQL> -- Use LAG() to look for big jumps.
06:33:03 SQL> 
06:33:03 SQL> CREATE OR REPLACE VIEW ibf5min10 AS
06:33:03   2  SELECT
06:33:03   3  pair
06:33:03   4  -- ydate is granular down to 5 min:
06:33:03   5  ,ydate
06:33:03   6  ,clse
06:33:03   7  -- Use analytic function to get LAG()
06:33:03   8  ,LAG(ydate,1,NULL)OVER(PARTITION BY pair ORDER BY ydate)		    lag_ydate
06:33:03   9  ,(ydate - LAG(ydate,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))*24*60 minutes_diff
06:33:03  10  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate)		    lag_clse
06:33:03  11  ,(clse - LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))/clse lag_diff
06:33:03  12  FROM ibf5min
06:33:03  13  WHERE clse>0
06:33:03  14  ORDER BY pair, ydate
06:33:03  15  /

View created.

Elapsed: 00:00:00.04
06:33:03 SQL> 
06:33:03 SQL> CREATE OR REPLACE VIEW ibf5min_ld AS
06:33:03   2  SELECT
06:33:03   3  pair
06:33:03   4  ,MIN(lag_diff)	min_lag_diff
06:33:03   5  ,AVG(lag_diff)	avg_lag_diff
06:33:03   6  ,STDDEV(lag_diff) stddev_lag_diff
06:33:03   7  ,MAX(lag_diff)	max_lag_diff
06:33:03   8  ,COUNT(lag_diff)	cnt_lag_diff
06:33:03   9  FROM ibf5min10
06:33:03  10  GROUP BY pair
06:33:03  11  /

View created.

Elapsed: 00:00:00.04
06:33:03 SQL> 
06:33:03 SQL> SELECT * FROM ibf5min_ld;

PAIR	 MIN_LAG_DIFF AVG_LAG_DIFF STDDEV_LAG_DIFF MAX_LAG_DIFF CNT_LAG_DIFF
-------- ------------ ------------ --------------- ------------ ------------
aud_usd    -.00412953	1.8331E-06	.000397496   .004498551        20804
eur_usd    -.00340562	2.4537E-06	.000396636   .005109004        20810
gbp_usd    -.00596104	.000001472	 .00034088   .004037224        20810
usd_cad    -.00367767	-2.142E-06	.000311284   .004222134        20809
usd_chf    -.00675762	-3.431E-06	.000436146    .00538548        20815
usd_jpy    -.00797352	-5.945E-07	.000323651   .005252714        20810

6 rows selected.

Elapsed: 00:00:00.47
06:33:04 SQL> 
06:33:04 SQL> SELECT * FROM ibf5min10 WHERE lag_diff = (SELECT MIN(min_lag_diff)FROM ibf5min_ld);

PAIR	 YDATE			   CLSE LAG_YDATE	    MINUTES_DIFF   LAG_CLSE   LAG_DIFF
-------- ------------------- ---------- ------------------- ------------ ---------- ----------
usd_jpy  2010-12-03 13:30:00	83.0875 2010-12-03 13:25:00	       5      83.75 -.00797352

Elapsed: 00:00:00.87
06:33:04 SQL> 
06:33:04 SQL> SELECT * FROM ibf5min10 WHERE lag_diff = (SELECT MAX(max_lag_diff)FROM ibf5min_ld);

PAIR	 YDATE			   CLSE LAG_YDATE	    MINUTES_DIFF   LAG_CLSE   LAG_DIFF
-------- ------------------- ---------- ------------------- ------------ ---------- ----------
usd_chf  2011-02-04 13:35:00	.956275 2011-02-04 13:30:00	       5    .951125  .00538548

Elapsed: 00:00:00.87
06:33:05 SQL> 
06:33:05 SQL> -- SELECT COUNT(*)FROM ibf5min10 WHERE lag_diff IN(SELECT max_lag_diff FROM ibf5min_ld);
06:33:05 SQL> 
06:33:05 SQL> -- Get a closer look at the smallest lag_diffs:
06:33:05 SQL> 
06:33:05 SQL> -- SELECT COUNT(l.pair)
06:33:05 SQL> SELECT
06:33:05   2  l.pair
06:33:05   3  ,TO_CHAR(i.ydate,'Day')dday
06:33:05   4  ,i.ydate
06:33:05   5  ,i.lag_clse
06:33:05   6  ,i.clse
06:33:05   7  ,i.lag_diff
06:33:05   8  ,i.lag_diff/stddev_lag_diff ld_st_ratio
06:33:05   9  ,i.minutes_diff
06:33:05  10  FROM ibf5min_ld l, ibf5min10 i
06:33:05  11  WHERE l.min_lag_diff = i.lag_diff
06:33:05  12  ORDER BY i.ydate,l.pair
06:33:05  13  /

PAIR	 DDAY	   YDATE		 LAG_CLSE	CLSE   LAG_DIFF LD_ST_RATIO MINUTES_DIFF
-------- --------- ------------------- ---------- ---------- ---------- ----------- ------------
usd_jpy  Friday    2010-12-03 13:30:00	    83.75    83.0875 -.00797352  -24.636169	       5
usd_chf  Friday    2010-12-03 13:35:00	  .990725    .984075 -.00675762  -15.493921	       5
usd_cad  Sunday    2011-01-02 22:15:00	.99783125    .994175 -.00367767  -11.814518	    2900
aud_usd  Tuesday   2011-01-25 00:30:00	   .99695     .99285 -.00412953  -10.388861	       5
gbp_usd  Tuesday   2011-01-25 09:30:00	 1.590525     1.5811 -.00596104   -17.48719	       5
eur_usd  Friday    2011-02-04 13:35:00	 1.362675    1.35805 -.00340562  -8.5862487	       5

6 rows selected.

Elapsed: 00:00:00.92
06:33:06 SQL> 
06:33:06 SQL> -- Get a closer look at the largest lag_diffs:
06:33:06 SQL> 
06:33:06 SQL> -- SELECT COUNT(l.pair)
06:33:06 SQL> SELECT
06:33:06   2  l.pair
06:33:06   3  ,TO_CHAR(i.ydate,'Day')dday
06:33:06   4  ,i.ydate
06:33:06   5  ,i.lag_clse
06:33:06   6  ,i.clse
06:33:06   7  ,i.lag_diff
06:33:06   8  ,i.lag_diff/stddev_lag_diff ld_st_ratio
06:33:06   9  ,i.minutes_diff
06:33:06  10  FROM ibf5min_ld l, ibf5min10 i
06:33:06  11  WHERE l.max_lag_diff = i.lag_diff
06:33:06  12  ORDER BY i.ydate,l.pair
06:33:06  13  /

PAIR	 DDAY	   YDATE		 LAG_CLSE	CLSE   LAG_DIFF LD_ST_RATIO MINUTES_DIFF
-------- --------- ------------------- ---------- ---------- ---------- ----------- ------------
usd_cad  Friday    2010-12-03 13:30:00	  1.00235     1.0066 .004222134  13.5636001	       5
aud_usd  Thursday  2010-12-09 00:30:00	  .979225     .98365 .004498551  11.3172362	       5
usd_jpy  Wednesday 2011-01-05 13:15:00 82.3004167     82.735 .005252714  16.2295614	       5
gbp_usd  Tuesday   2011-01-18 09:30:00	  1.59735   1.603825 .004037224  11.8435203	       5
usd_chf  Friday    2011-02-04 13:35:00	  .951125    .956275  .00538548  12.3478774	       5
eur_usd  Thursday  2011-03-03 13:30:00	1.3850375    1.39215 .005109004  12.8808266	       5

6 rows selected.

Elapsed: 00:00:00.92
06:33:07 SQL> 
06:33:07 SQL> -- I want to see rows around the rows which are connected to the max/min clse values
06:33:07 SQL> 
06:33:07 SQL> CREATE OR REPLACE VIEW ibf5min12 AS
06:33:07   2  SELECT
06:33:07   3  pair
06:33:07   4  -- ydate is granular down to 5 min:
06:33:07   5  ,ydate
06:33:07   6  ,LAG(clse,3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse3
06:33:07   7  ,LAG(clse,2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse2
06:33:07   8  ,LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lag_clse1
06:33:07   9  ,clse
06:33:07  10  ,LEAD(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse1
06:33:07  11  ,LEAD(clse,2,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse2
06:33:07  12  ,LEAD(clse,3,NULL)OVER(PARTITION BY pair ORDER BY ydate) lead_clse3
06:33:07  13  ,(clse - LAG(clse,1,NULL)OVER(PARTITION BY pair ORDER BY ydate))/clse lag_diff
06:33:07  14  FROM ibf5min
06:33:07  15  WHERE clse>0
06:33:07  16  ORDER BY pair, ydate
06:33:07  17  /

View created.

Elapsed: 00:00:00.04
06:33:07 SQL> 
06:33:07 SQL> -- Now join ibf5min12 with ibf5min_ld
06:33:07 SQL> 
06:33:07 SQL> SELECT
06:33:07   2  l.pair
06:33:07   3  ,i.ydate
06:33:07   4  ,lag_clse3
06:33:07   5  ,lag_clse2
06:33:07   6  ,lag_clse1
06:33:07   7  ,lag_diff
06:33:07   8  ,i.clse
06:33:07   9  ,lead_clse1
06:33:07  10  ,lead_clse2
06:33:07  11  ,lead_clse3
06:33:07  12  FROM ibf5min_ld l, ibf5min12 i
06:33:07  13  WHERE l.max_lag_diff = i.lag_diff
06:33:07  14  OR    l.min_lag_diff = i.lag_diff
06:33:07  15  ORDER BY i.ydate,l.pair
06:33:07  16  /

PAIR	 YDATE		      LAG_CLSE3  LAG_CLSE2  LAG_CLSE1	LAG_DIFF       CLSE LEAD_CLSE1 LEAD_CLSE2 LEAD_CLSE3
-------- ------------------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
usd_cad  2010-12-03 13:30:00   1.002175   1.002525    1.00235 .004222134     1.0066	1.0042	 1.005775     1.0071
usd_jpy  2010-12-03 13:30:00	 83.745     83.785	83.75 -.00797352    83.0875    82.8875	  82.8825     82.705
usd_chf  2010-12-03 13:35:00	.992425     .99135    .990725 -.00675762    .984075	 .9829	  .981675     .98125
aud_usd  2010-12-09 00:30:00	.978775     .97935    .979225 .004498551     .98365    .983675	  .984925      .9849
usd_cad  2011-01-02 22:15:00	 .99785    .997825  .99783125 -.00367767    .994175	.99475	   .99475     .99475
usd_jpy  2011-01-05 13:15:00	  82.24     82.225 82.3004167 .005252714     82.735   82.79375	  83.0475     82.875
gbp_usd  2011-01-18 09:30:00   1.598025    1.59815    1.59735 .004037224   1.603825    1.60465	 1.603175     1.6045
aud_usd  2011-01-25 00:30:00	.997525    .997475     .99695 -.00412953     .99285	.99325	    .9932     .99355
gbp_usd  2011-01-25 09:30:00   1.590875    1.59065   1.590525 -.00596104     1.5811    1.58245	   1.5802    1.57875
eur_usd  2011-02-04 13:35:00   1.364425   1.364725   1.362675 -.00340562    1.35805    1.35925	  1.35875    1.35875
usd_chf  2011-02-04 13:35:00	  .9494    .949075    .951125  .00538548    .956275	 .9541	   .95475      .9549
eur_usd  2011-03-03 13:30:00   1.385075      1.385  1.3850375 .005109004    1.39215  1.3931125	 1.394075    1.39625

12 rows selected.

Elapsed: 00:00:02.70
06:33:10 SQL> 
06:33:10 SQL> -- Look at what is recent
06:33:10 SQL> 
06:33:10 SQL> SELECT
06:33:10   2  pair
06:33:10   3  ,ydate
06:33:10   4  ,clse
06:33:10   5  FROM ibf5min
06:33:10   6  WHERE ydate > sysdate - 1.5/24
06:33:10   7  ORDER BY pair,ydate
06:33:10   8  /

PAIR	 YDATE			   CLSE
-------- ------------------- ----------
aud_usd  2011-03-11 05:05:00	1.00315
aud_usd  2011-03-11 05:10:00	 1.0032
aud_usd  2011-03-11 05:15:00	1.00305
aud_usd  2011-03-11 05:20:00  1.0028125
aud_usd  2011-03-11 05:25:00	 1.0025
aud_usd  2011-03-11 05:30:00  1.0027625
aud_usd  2011-03-11 05:35:00	1.00285
aud_usd  2011-03-11 05:40:00	1.00275
aud_usd  2011-03-11 05:45:00	1.00205
aud_usd  2011-03-11 05:50:00   1.002175
aud_usd  2011-03-11 05:55:00	1.00195
aud_usd  2011-03-11 06:00:00   1.001575
aud_usd  2011-03-11 06:05:00   1.001425
aud_usd  2011-03-11 06:10:00  1.0010375
aud_usd  2011-03-11 06:15:00	1.00005
eur_usd  2011-03-11 05:05:00  1.3825625
eur_usd  2011-03-11 05:10:00	 1.3824
eur_usd  2011-03-11 05:15:00	 1.3825
eur_usd  2011-03-11 05:20:00   1.382125
eur_usd  2011-03-11 05:25:00	1.38225
eur_usd  2011-03-11 05:30:00	1.38235
eur_usd  2011-03-11 05:35:00   1.382775
eur_usd  2011-03-11 05:40:00	 1.3827
eur_usd  2011-03-11 05:45:00	 1.3825
eur_usd  2011-03-11 05:50:00   1.382425
eur_usd  2011-03-11 05:55:00	 1.3824
eur_usd  2011-03-11 06:00:00   1.382225
eur_usd  2011-03-11 06:05:00   1.382325
eur_usd  2011-03-11 06:10:00  1.3821375
eur_usd  2011-03-11 06:15:00	1.38115
gbp_usd  2011-03-11 05:05:00	 1.6067
gbp_usd  2011-03-11 05:10:00   1.606875
gbp_usd  2011-03-11 05:15:00   1.607075
gbp_usd  2011-03-11 05:20:00  1.6068875
gbp_usd  2011-03-11 05:25:00   1.606925
gbp_usd  2011-03-11 05:30:00	 1.6071
gbp_usd  2011-03-11 05:35:00   1.607125
gbp_usd  2011-03-11 05:40:00	1.60715
gbp_usd  2011-03-11 05:45:00   1.606325
gbp_usd  2011-03-11 05:50:00   1.606125
gbp_usd  2011-03-11 05:55:00	1.60625
gbp_usd  2011-03-11 06:00:00	 1.6063
gbp_usd  2011-03-11 06:05:00	1.60655
gbp_usd  2011-03-11 06:10:00	 1.6063
gbp_usd  2011-03-11 06:15:00	1.60575
usd_cad  2011-03-11 05:05:00   .9744125
usd_cad  2011-03-11 05:10:00	.974475
usd_cad  2011-03-11 05:15:00	  .9745
usd_cad  2011-03-11 05:20:00	.974575
usd_cad  2011-03-11 05:25:00	 .97465
usd_cad  2011-03-11 05:30:00   .9747375
usd_cad  2011-03-11 05:35:00	  .9747
usd_cad  2011-03-11 05:40:00   .9747625
usd_cad  2011-03-11 05:45:00	.975025
usd_cad  2011-03-11 05:50:00	   .975
usd_cad  2011-03-11 05:55:00	.975175
usd_cad  2011-03-11 06:00:00   .9752375
usd_cad  2011-03-11 06:05:00	.975175
usd_cad  2011-03-11 06:10:00	  .9753
usd_cad  2011-03-11 06:15:00	  .9759
usd_chf  2011-03-11 05:05:00	.930875
usd_chf  2011-03-11 05:10:00	 .93095
usd_chf  2011-03-11 05:15:00	 .93095
usd_chf  2011-03-11 05:20:00	.930925
usd_chf  2011-03-11 05:25:00	  .9312
usd_chf  2011-03-11 05:30:00	.931225
usd_chf  2011-03-11 05:35:00	.930925
usd_chf  2011-03-11 05:40:00   .9307625
usd_chf  2011-03-11 05:45:00	.931625
usd_chf  2011-03-11 05:50:00   .9321375
usd_chf  2011-03-11 05:55:00	  .9319
usd_chf  2011-03-11 06:00:00	 .93185
usd_chf  2011-03-11 06:05:00	  .9323
usd_chf  2011-03-11 06:10:00   .9326125
usd_chf  2011-03-11 06:15:00	 .93355
usd_jpy  2011-03-11 05:05:00	 82.795
usd_jpy  2011-03-11 05:10:00	   82.8
usd_jpy  2011-03-11 05:15:00	82.7975
usd_jpy  2011-03-11 05:20:00	 82.815
usd_jpy  2011-03-11 05:25:00	 82.815
usd_jpy  2011-03-11 05:30:00	 82.815
usd_jpy  2011-03-11 05:35:00	 82.815
usd_jpy  2011-03-11 05:40:00   82.80375
usd_jpy  2011-03-11 05:45:00	82.9825
usd_jpy  2011-03-11 05:50:00   82.88625
usd_jpy  2011-03-11 05:55:00	82.9025
usd_jpy  2011-03-11 06:00:00	82.9575
usd_jpy  2011-03-11 06:05:00	83.0425
usd_jpy  2011-03-11 06:10:00   83.12375
usd_jpy  2011-03-11 06:15:00	 83.295

90 rows selected.

Elapsed: 00:00:00.01
06:33:10 SQL> 
06:33:10 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
