
SQL*Plus: Release 11.2.0.1.0 Production on Sat Mar 5 18:02:01 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

18:02:01 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
18:02:01 SQL> 
18:02:01 SQL> 18:02:01 SQL> --
18:02:01 SQL> -- stk10.sql
18:02:01 SQL> --
18:02:01 SQL> 
18:02:01 SQL> -- Creates views and tables for demonstrating SVM.
18:02:01 SQL> 
18:02:01 SQL> CREATE OR REPLACE VIEW stk_svmd10 AS
18:02:01   2  SELECT
18:02:01   3  tkr
18:02:01   4  ,ydate
18:02:01   5  ,tkr||ydate tkrdate
18:02:01   6  ,clse
18:02:01   7  ,rownum rnum -- acts as t in my time-series
18:02:01   8  -- Derive some attributes from clse.
18:02:01   9  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)min3
18:02:01  10  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)min4
18:02:01  11  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)min5
18:02:01  12  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)min6
18:02:01  13  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)min7
18:02:01  14  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)min8
18:02:01  15  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)min9
18:02:01  16  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)avg3
18:02:01  17  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)avg4
18:02:01  18  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)avg5
18:02:01  19  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)avg6
18:02:01  20  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)avg7
18:02:01  21  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)avg8
18:02:01  22  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)avg9
18:02:01  23  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)max3
18:02:01  24  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)max4
18:02:01  25  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)max5
18:02:01  26  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)max6
18:02:01  27  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)max7
18:02:01  28  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)max8
18:02:01  29  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)max9
18:02:01  30  ,LEAD(clse,1,NULL)OVER(PARTITION BY tkr ORDER BY ydate)ld
18:02:01  31  FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
18:02:01  32  ORDER BY ydate
18:02:01  33  /
old  31: FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
new  31: FROM ystk WHERE UPPER(tkr)='XOM'AND ydate > '1990-01-01'

View created.

Elapsed: 00:00:00.05
18:02:01 SQL> 
18:02:01 SQL> -- rpt
18:02:01 SQL> 
18:02:01 SQL> SELECT
18:02:01   2  tkr
18:02:01   3  ,COUNT(tkr)
18:02:01   4  ,MIN(clse),MAX(clse)
18:02:01   5  ,MIN(avg4),MAX(avg4)
18:02:01   6  ,MIN(ydate),MAX(ydate)
18:02:01   7  FROM stk_svmd10
18:02:01   8  GROUP BY tkr
18:02:01   9  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE)  MIN(AVG4)  MAX(AVG4) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
XOM		5338	   6.01      88.55	6.042	  87.684 1990-01-02 2011-03-04

Elapsed: 00:00:00.19
18:02:01 SQL> 
18:02:01 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
18:02:01 SQL> DROP TABLE stk_svmd12;

Table dropped.

Elapsed: 00:00:00.18
18:02:01 SQL> CREATE TABLE stk_svmd12 COMPRESS AS
18:02:01   2  SELECT
18:02:01   3  tkr
18:02:01   4  ,ydate
18:02:01   5  ,tkrdate
18:02:01   6  ,clse
18:02:01   7  ,rnum
18:02:01   8  -- g1 is important. I want to predict g1:
18:02:01   9  ,ld - clse g1
18:02:01  10  ,SIGN(avg4 - LAG(avg4,2,NULL)OVER(PARTITION BY tkr ORDER BY ydate))trend
18:02:01  11  -- I want more attributes from the ones I derived above:
18:02:01  12  -- clse relation to moving-min
18:02:01  13  ,clse-min3  cm3
18:02:01  14  ,clse-min4  cm4
18:02:01  15  ,clse-min5  cm5
18:02:01  16  ,clse-min6  cm6
18:02:01  17  ,clse-min7  cm7
18:02:01  18  ,clse-min8  cm8
18:02:01  19  ,clse-min9  cm9
18:02:01  20  -- clse relation to moving-avg
18:02:01  21  ,clse-avg3  ca3
18:02:01  22  ,clse-avg4  ca4
18:02:01  23  ,clse-avg5  ca5
18:02:01  24  ,clse-avg6  ca6
18:02:01  25  ,clse-avg7  ca7
18:02:01  26  ,clse-avg8  ca8
18:02:01  27  ,clse-avg9  ca9
18:02:01  28  -- clse relation to moving-max
18:02:01  29  ,clse-max3  cx3
18:02:01  30  ,clse-max4  cx4
18:02:01  31  ,clse-max5  cx5
18:02:01  32  ,clse-max6  cx6
18:02:01  33  ,clse-max7  cx7
18:02:01  34  ,clse-max8  cx8
18:02:01  35  ,clse-max9  cx9
18:02:01  36  -- Derive date related attributes:
18:02:01  37  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:02:01  38  ,0+TO_CHAR(ydate,'D')d
18:02:01  39  ,0+TO_CHAR(ydate,'W')w
18:02:01  40  -- mpm stands for minutes-past-midnight:
18:02:01  41  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:02:01  42  -- mph stands for minutes-past-hour:
18:02:01  43  ,0+TO_CHAR(ydate,'MI')mph
18:02:01  44  FROM stk_svmd10
18:02:01  45  ORDER BY ydate
18:02:01  46  /

Table created.

Elapsed: 00:00:00.50
18:02:02 SQL> 
18:02:02 SQL> -- rpt
18:02:02 SQL> 
18:02:02 SQL> SELECT
18:02:02   2  tkr
18:02:02   3  ,COUNT(tkr)
18:02:02   4  ,MIN(clse),MAX(clse)
18:02:02   5  ,MIN(ydate),MAX(ydate)
18:02:02   6  FROM stk_svmd12
18:02:02   7  GROUP BY tkr
18:02:02   8  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ----------
XOM		5338	   6.01      88.55 1990-01-02 2011-03-04

Elapsed: 00:00:00.02
18:02:02 SQL> 
18:02:02 SQL> -- Prepare for derivation of NTILE based parameters.
18:02:02 SQL> -- Also derive the "trend" parameter:
18:02:02 SQL> 
18:02:02 SQL> DROP TABLE stk_svmd14;

Table dropped.

Elapsed: 00:00:00.12
18:02:02 SQL> CREATE TABLE stk_svmd14 COMPRESS AS
18:02:02   2  SELECT
18:02:02   3  tkr
18:02:02   4  ,ydate
18:02:02   5  ,tkrdate
18:02:02   6  ,clse
18:02:02   7  ,g1
18:02:02   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse >	0.30/100 THEN 'up' ELSE 'nup' END gatt
18:02:02   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse < -0.30/100 THEN 'up' ELSE 'nup' END gattn
18:02:02  10  ,CASE WHEN trend IS NULL THEN 1
18:02:02  11  	    WHEN trend =0      THEN 1
18:02:02  12  	    ELSE trend END trend
18:02:02  13  ,cm3
18:02:02  14  ,cm4
18:02:02  15  ,cm5
18:02:02  16  ,cm6
18:02:02  17  ,cm7
18:02:02  18  ,cm8
18:02:02  19  ,cm9
18:02:02  20  ,ca3
18:02:02  21  ,ca4
18:02:02  22  ,ca5
18:02:02  23  ,ca6
18:02:02  24  ,ca7
18:02:02  25  ,ca8
18:02:02  26  ,ca9
18:02:02  27  ,cx3
18:02:02  28  ,cx4
18:02:02  29  ,cx5
18:02:02  30  ,cx6
18:02:02  31  ,cx7
18:02:02  32  ,cx8
18:02:02  33  ,cx9
18:02:02  34  ,hh
18:02:02  35  ,d
18:02:02  36  ,w
18:02:02  37  ,mpm
18:02:02  38  ,mph
18:02:02  39  FROM stk_svmd12
18:02:02  40  -- Guard against divide by 0:
18:02:02  41  WHERE clse > 0
18:02:02  42  ORDER BY ydate
18:02:02  43  /

Table created.

Elapsed: 00:00:00.10
18:02:02 SQL> 
18:02:02 SQL> -- rpt
18:02:02 SQL> 
18:02:02 SQL> SELECT
18:02:02   2  tkr
18:02:02   3  ,trend
18:02:02   4  ,gatt
18:02:02   5  ,COUNT(tkr)
18:02:02   6  ,AVG(g1)
18:02:02   7  FROM stk_svmd14
18:02:02   8  GROUP BY tkr,trend,gatt
18:02:02   9  ORDER BY tkr,trend,gatt
18:02:02  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
XOM		  -1 nup       1251 -.35397282
XOM		  -1 up        1054  .51813093
XOM		  -1		  1
XOM		   1 nup       1847 -.30956145
XOM		   1 up        1185  .46156962

Elapsed: 00:00:00.01
18:02:02 SQL> 
18:02:02 SQL> -- Derive NTILE based params:
18:02:02 SQL> 
18:02:02 SQL> DROP TABLE stk_svmd16;

Table dropped.

Elapsed: 00:00:00.10
18:02:02 SQL> CREATE TABLE stk_svmd16 COMPRESS AS
18:02:02   2  SELECT
18:02:02   3  tkr
18:02:02   4  ,ydate
18:02:02   5  ,tkrdate
18:02:02   6  ,clse
18:02:02   7  ,g1
18:02:02   8  ,gatt
18:02:02   9  ,gattn
18:02:02  10  ,trend
18:02:02  11  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm3)att00
18:02:02  12  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm4)att01
18:02:02  13  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm5)att02
18:02:02  14  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm6)att03
18:02:02  15  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm7)att04
18:02:02  16  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm8)att05
18:02:02  17  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm9)att06
18:02:02  18  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca3)att07
18:02:02  19  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca4)att08
18:02:02  20  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca5)att09
18:02:02  21  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca6)att10
18:02:02  22  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca7)att11
18:02:02  23  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca8)att12
18:02:02  24  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca9)att13
18:02:02  25  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx3)att14
18:02:02  26  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx4)att15
18:02:02  27  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx5)att16
18:02:02  28  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx6)att17
18:02:02  29  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx7)att18
18:02:02  30  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx8)att19
18:02:02  31  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx9)att20
18:02:02  32  ,hh  att21
18:02:02  33  ,d   att22
18:02:02  34  ,w   att23
18:02:02  35  ,mpm att24
18:02:02  36  ,mph att25
18:02:02  37  ,trend att26
18:02:02  38  FROM stk_svmd14
18:02:02  39  ORDER BY ydate
18:02:02  40  /

Table created.

Elapsed: 00:00:00.64
18:02:03 SQL> 
18:02:03 SQL> -- rpt
18:02:03 SQL> 
18:02:03 SQL> SELECT
18:02:03   2  tkr
18:02:03   3  ,trend
18:02:03   4  ,gatt
18:02:03   5  ,COUNT(tkr)
18:02:03   6  ,AVG(g1)
18:02:03   7  FROM stk_svmd16
18:02:03   8  GROUP BY tkr,trend,gatt
18:02:03   9  ORDER BY tkr,trend,gatt
18:02:03  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
XOM		  -1 nup       1251 -.35397282
XOM		  -1 up        1054  .51813093
XOM		  -1		  1
XOM		   1 nup       1847 -.30956145
XOM		   1 up        1185  .46156962

Elapsed: 00:00:00.01
18:02:03 SQL> 
18:02:03 SQL> CREATE OR REPLACE VIEW sc12tkr AS
18:02:03   2  SELECT
18:02:03   3  m.tkr
18:02:03   4  ,m.ydate
18:02:03   5  ,m.tkrdate
18:02:03   6  ,l.score score_long
18:02:03   7  ,s.score score_short
18:02:03   8  ,m.g1
18:02:03   9  FROM ystkscores l,ystkscores s,stk_svmd16 m
18:02:03  10  WHERE l.targ='gatt'
18:02:03  11  AND   s.targ='gattn'
18:02:03  12  AND l.tkrdate = s.tkrdate
18:02:03  13  AND l.tkrdate = m.tkrdate
18:02:03  14  -- Speed things up:
18:02:03  15  AND l.tkr = '&1'
18:02:03  16  AND s.tkr = '&1'
18:02:03  17  /
old  15: AND l.tkr = '&1'
new  15: AND l.tkr = 'XOM'
old  16: AND s.tkr = '&1'
new  16: AND s.tkr = 'XOM'

View created.

Elapsed: 00:00:00.04
18:02:03 SQL> 
18:02:03 SQL> -- DROP TABLE score_corr_tkr;
18:02:03 SQL> --
18:02:03 SQL> -- CREATE TABLE score_corr_tkr COMPRESS AS
18:02:03 SQL> -- SELECT tkrdate,AVG(sc_corr)sc_corr FROM
18:02:03 SQL> -- (
18:02:03 SQL> --   SELECT
18:02:03 SQL> --   tkrdate
18:02:03 SQL> --   -- Find corr() tween score and g1 over 8 day period:
18:02:03 SQL> --   ,CORR((score_long - score_short),g1)
18:02:03 SQL> --     OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)sc_corr
18:02:03 SQL> --   FROM sc12tkr
18:02:03 SQL> -- )
18:02:03 SQL> -- GROUP BY tkrdate
18:02:03 SQL> -- /
18:02:03 SQL> --
18:02:03 SQL> -- -- rpt
18:02:03 SQL> -- SELECT AVG(sc_corr),COUNT(sc_corr)FROM score_corr_tkr;
18:02:03 SQL> 
18:02:03 SQL> -- Now I derive goodness attributes:
18:02:03 SQL> 
18:02:03 SQL> DROP TABLE stk_ms;

Table dropped.

Elapsed: 00:00:00.19
18:02:03 SQL> 
18:02:03 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.26
18:02:03 SQL> 
18:02:03 SQL> CREATE TABLE stk_ms COMPRESS AS
18:02:03   2  SELECT
18:02:03   3  tkr
18:02:03   4  ,ydate
18:02:03   5  ,s.tkrdate
18:02:03   6  ,trend
18:02:03   7  ,g1
18:02:03   8  ,gatt
18:02:03   9  ,gattn
18:02:03  10  -- Recent CORR()tween scores and gains:
18:02:03  11  -- ,NVL(sc_corr,0)sc_corr
18:02:03  12  -- Goodness attributes:
18:02:03  13  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g00
18:02:03  14  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g01
18:02:03  15  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g02
18:02:03  16  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g03
18:02:03  17  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g04
18:02:03  18  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g05
18:02:03  19  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g06
18:02:03  20  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g07
18:02:03  21  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g08
18:02:03  22  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g09
18:02:03  23  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g10
18:02:03  24  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g11
18:02:03  25  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g12
18:02:03  26  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g13
18:02:03  27  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g14
18:02:03  28  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g15
18:02:03  29  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g16
18:02:03  30  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g17
18:02:03  31  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g18
18:02:03  32  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g19
18:02:03  33  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g20
18:02:03  34  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g21
18:02:03  35  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g22
18:02:03  36  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g23
18:02:03  37  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g24
18:02:03  38  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g25
18:02:03  39  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g26
18:02:03  40  -- att26 is trend which is a powerful attribute so I derive 3 more goodness attributes from trend:
18:02:03  41  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 60 PRECEDING AND CURRENT ROW)g27
18:02:03  42  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 30 PRECEDING AND CURRENT ROW)g28
18:02:03  43  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 10 PRECEDING AND CURRENT ROW)g29
18:02:03  44  -- FROM stk_svmd16 s,score_corr_tkr c
18:02:03  45  -- WHERE s.tkrdate = c.tkrdate(+)
18:02:03  46  FROM stk_svmd16 s
18:02:03  47  /

Table created.

Elapsed: 00:00:00.95
18:02:04 SQL> 
18:02:04 SQL> -- rpt
18:02:04 SQL> 
18:02:04 SQL> SELECT
18:02:04   2  tkr
18:02:04   3  ,trend
18:02:04   4  ,gatt
18:02:04   5  ,COUNT(tkr)
18:02:04   6  ,AVG(g1)
18:02:04   7  -- ,AVG(sc_corr)
18:02:04   8  FROM stk_ms
18:02:04   9  GROUP BY tkr,trend,gatt
18:02:04  10  ORDER BY tkr,trend,gatt
18:02:04  11  /

TKR	       TREND GAT COUNT(TKR) AVG(G1)--,AVG(SC_CORR)
--------- ---------- --- ---------- ----------------------
XOM		  -1 nup       1251		-.35397282
XOM		  -1 up        1054		 .51813093
XOM		  -1		  1
XOM		   1 nup       1847		-.30956145
XOM		   1 up        1185		 .46156962

Elapsed: 00:00:00.02
18:02:04 SQL> 
18:02:04 SQL> SELECT
18:02:04   2  tkr
18:02:04   3  ,trend
18:02:04   4  ,gattn
18:02:04   5  ,MIN(ydate)
18:02:04   6  ,COUNT(tkr)
18:02:04   7  ,MAX(ydate)
18:02:04   8  ,AVG(g1)
18:02:04   9  -- ,AVG(sc_corr)
18:02:04  10  FROM stk_ms
18:02:04  11  GROUP BY tkr,trend,gattn
18:02:04  12  ORDER BY tkr,trend,gattn
18:02:04  13  /

TKR	       TREND GAT MIN(YDATE) COUNT(TKR) MAX(YDATE) AVG(G1)--,AVG(SC_CORR)
--------- ---------- --- ---------- ---------- ---------- ----------------------
XOM		  -1 nup 1990-01-05	  1456 2011-03-02	      .375370879
XOM		  -1 up  1990-01-04	   849 2011-03-03	      -.52208481
XOM		  -1	 2011-03-04	     1 2011-03-04
XOM		   1 nup 1990-02-01	  1824 2011-03-01	      .301858553
XOM		   1 up  1990-01-02	  1208 2011-02-28	      -.47631623

Elapsed: 00:00:00.01
18:02:04 SQL> 
18:02:04 SQL> SELECT
18:02:04   2  tkr
18:02:04   3  ,COUNT(tkr)
18:02:04   4  ,MIN(ydate),MAX(ydate)
18:02:04   5  FROM stk_ms
18:02:04   6  GROUP BY tkr
18:02:04   7  /

TKR	  COUNT(TKR) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ----------
XOM		5338 1990-01-02 2011-03-04

Elapsed: 00:00:00.01
18:02:04 SQL> 
18:02:04 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
