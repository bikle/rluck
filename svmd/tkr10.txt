
SQL*Plus: Release 11.2.0.1.0 Production on Fri Jan 28 18:51:27 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

18:51:27 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
18:51:27 SQL> 
18:51:27 SQL> 18:51:27 SQL> --
18:51:27 SQL> -- stk10.sql
18:51:27 SQL> --
18:51:27 SQL> 
18:51:27 SQL> -- Creates views and tables for demonstrating SVM.
18:51:27 SQL> 
18:51:27 SQL> CREATE OR REPLACE VIEW stk_svmd10 AS
18:51:27   2  SELECT
18:51:27   3  tkr
18:51:27   4  ,ydate
18:51:27   5  ,tkr||ydate tkrdate
18:51:27   6  ,clse
18:51:27   7  ,rownum rnum -- acts as t in my time-series
18:51:27   8  -- Derive some attributes from clse.
18:51:27   9  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)min3
18:51:27  10  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)min4
18:51:27  11  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)min5
18:51:27  12  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)min6
18:51:27  13  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)min7
18:51:27  14  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)min8
18:51:27  15  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)min9
18:51:27  16  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)avg3
18:51:27  17  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)avg4
18:51:27  18  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)avg5
18:51:27  19  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)avg6
18:51:27  20  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)avg7
18:51:27  21  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)avg8
18:51:27  22  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)avg9
18:51:27  23  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)max3
18:51:27  24  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)max4
18:51:27  25  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)max5
18:51:27  26  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)max6
18:51:27  27  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)max7
18:51:27  28  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)max8
18:51:27  29  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)max9
18:51:27  30  ,LEAD(clse,1,NULL)OVER(PARTITION BY tkr ORDER BY ydate)ld
18:51:27  31  FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
18:51:27  32  ORDER BY ydate
18:51:27  33  /
old  31: FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
new  31: FROM ystk WHERE UPPER(tkr)='SPY'AND ydate > '1990-01-01'

View created.

Elapsed: 00:00:00.06
18:51:27 SQL> 
18:51:27 SQL> -- rpt
18:51:27 SQL> 
18:51:27 SQL> SELECT
18:51:27   2  tkr
18:51:27   3  ,COUNT(tkr)
18:51:27   4  ,MIN(clse),MAX(clse)
18:51:27   5  ,MIN(avg4),MAX(avg4)
18:51:27   6  ,MIN(ydate),MAX(ydate)
18:51:27   7  FROM stk_svmd10
18:51:27   8  GROUP BY tkr
18:51:27   9  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE)  MIN(AVG4)  MAX(AVG4) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
SPY		4533	  31.74      146.3	31.82	 145.758 1993-01-29 2011-01-26

Elapsed: 00:00:00.16
18:51:27 SQL> 
18:51:27 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
18:51:27 SQL> DROP TABLE stk_svmd12;

Table dropped.

Elapsed: 00:00:00.12
18:51:27 SQL> CREATE TABLE stk_svmd12 COMPRESS AS
18:51:27   2  SELECT
18:51:27   3  tkr
18:51:27   4  ,ydate
18:51:27   5  ,tkrdate
18:51:27   6  ,clse
18:51:27   7  ,rnum
18:51:27   8  -- g1 is important. I want to predict g1:
18:51:27   9  ,ld - clse g1
18:51:27  10  ,SIGN(avg4 - LAG(avg4,2,NULL)OVER(PARTITION BY tkr ORDER BY ydate))trend
18:51:27  11  -- I want more attributes from the ones I derived above:
18:51:27  12  -- clse relation to moving-min
18:51:27  13  ,clse-min3  cm3
18:51:27  14  ,clse-min4  cm4
18:51:27  15  ,clse-min5  cm5
18:51:27  16  ,clse-min6  cm6
18:51:27  17  ,clse-min7  cm7
18:51:27  18  ,clse-min8  cm8
18:51:27  19  ,clse-min9  cm9
18:51:27  20  -- clse relation to moving-avg
18:51:27  21  ,clse-avg3  ca3
18:51:27  22  ,clse-avg4  ca4
18:51:27  23  ,clse-avg5  ca5
18:51:27  24  ,clse-avg6  ca6
18:51:27  25  ,clse-avg7  ca7
18:51:27  26  ,clse-avg8  ca8
18:51:27  27  ,clse-avg9  ca9
18:51:27  28  -- clse relation to moving-max
18:51:27  29  ,clse-max3  cx3
18:51:27  30  ,clse-max4  cx4
18:51:27  31  ,clse-max5  cx5
18:51:27  32  ,clse-max6  cx6
18:51:27  33  ,clse-max7  cx7
18:51:27  34  ,clse-max8  cx8
18:51:27  35  ,clse-max9  cx9
18:51:27  36  -- Derive date related attributes:
18:51:27  37  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
18:51:27  38  ,0+TO_CHAR(ydate,'D')d
18:51:27  39  ,0+TO_CHAR(ydate,'W')w
18:51:27  40  -- mpm stands for minutes-past-midnight:
18:51:27  41  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
18:51:27  42  -- mph stands for minutes-past-hour:
18:51:27  43  ,0+TO_CHAR(ydate,'MI')mph
18:51:27  44  FROM stk_svmd10
18:51:27  45  ORDER BY ydate
18:51:27  46  /

Table created.

Elapsed: 00:00:00.48
18:51:27 SQL> 
18:51:27 SQL> -- rpt
18:51:27 SQL> 
18:51:27 SQL> SELECT
18:51:27   2  tkr
18:51:27   3  ,COUNT(tkr)
18:51:27   4  ,MIN(clse),MAX(clse)
18:51:27   5  ,MIN(ydate),MAX(ydate)
18:51:27   6  FROM stk_svmd12
18:51:27   7  GROUP BY tkr
18:51:27   8  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ----------
SPY		4533	  31.74      146.3 1993-01-29 2011-01-26

Elapsed: 00:00:00.02
18:51:27 SQL> 
18:51:27 SQL> -- Prepare for derivation of NTILE based parameters.
18:51:27 SQL> -- Also derive the "trend" parameter:
18:51:27 SQL> 
18:51:27 SQL> DROP TABLE stk_svmd14;

Table dropped.

Elapsed: 00:00:00.10
18:51:28 SQL> CREATE TABLE stk_svmd14 COMPRESS AS
18:51:28   2  SELECT
18:51:28   3  tkr
18:51:28   4  ,ydate
18:51:28   5  ,tkrdate
18:51:28   6  ,clse
18:51:28   7  ,g1
18:51:28   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse >	0.30/100 THEN 'up' ELSE 'nup' END gatt
18:51:28   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse < -0.30/100 THEN 'up' ELSE 'nup' END gattn
18:51:28  10  ,CASE WHEN trend IS NULL THEN 1
18:51:28  11  	    WHEN trend =0      THEN 1
18:51:28  12  	    ELSE trend END trend
18:51:28  13  ,cm3
18:51:28  14  ,cm4
18:51:28  15  ,cm5
18:51:28  16  ,cm6
18:51:28  17  ,cm7
18:51:28  18  ,cm8
18:51:28  19  ,cm9
18:51:28  20  ,ca3
18:51:28  21  ,ca4
18:51:28  22  ,ca5
18:51:28  23  ,ca6
18:51:28  24  ,ca7
18:51:28  25  ,ca8
18:51:28  26  ,ca9
18:51:28  27  ,cx3
18:51:28  28  ,cx4
18:51:28  29  ,cx5
18:51:28  30  ,cx6
18:51:28  31  ,cx7
18:51:28  32  ,cx8
18:51:28  33  ,cx9
18:51:28  34  ,hh
18:51:28  35  ,d
18:51:28  36  ,w
18:51:28  37  ,mpm
18:51:28  38  ,mph
18:51:28  39  FROM stk_svmd12
18:51:28  40  -- Guard against divide by 0:
18:51:28  41  WHERE clse > 0
18:51:28  42  ORDER BY ydate
18:51:28  43  /

Table created.

Elapsed: 00:00:00.12
18:51:28 SQL> 
18:51:28 SQL> -- rpt
18:51:28 SQL> 
18:51:28 SQL> SELECT
18:51:28   2  tkr
18:51:28   3  ,trend
18:51:28   4  ,gatt
18:51:28   5  ,COUNT(tkr)
18:51:28   6  ,AVG(g1)
18:51:28   7  FROM stk_svmd14
18:51:28   8  GROUP BY tkr,trend,gatt
18:51:28   9  ORDER BY tkr,trend,gatt
18:51:28  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
SPY		  -1 nup       1098 -.75956284
SPY		  -1 up 	829 1.13349819
SPY		   1 nup       1700 -.45753529
SPY		   1 up 	905 .850475138
SPY		   1		  1

Elapsed: 00:00:00.02
18:51:28 SQL> 
18:51:28 SQL> -- Derive NTILE based params:
18:51:28 SQL> 
18:51:28 SQL> DROP TABLE stk_svmd16;

Table dropped.

Elapsed: 00:00:00.10
18:51:28 SQL> CREATE TABLE stk_svmd16 COMPRESS AS
18:51:28   2  SELECT
18:51:28   3  tkr
18:51:28   4  ,ydate
18:51:28   5  ,tkrdate
18:51:28   6  ,clse
18:51:28   7  ,g1
18:51:28   8  ,gatt
18:51:28   9  ,gattn
18:51:28  10  ,trend
18:51:28  11  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm3)att00
18:51:28  12  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm4)att01
18:51:28  13  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm5)att02
18:51:28  14  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm6)att03
18:51:28  15  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm7)att04
18:51:28  16  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm8)att05
18:51:28  17  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm9)att06
18:51:28  18  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca3)att07
18:51:28  19  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca4)att08
18:51:28  20  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca5)att09
18:51:28  21  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca6)att10
18:51:28  22  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca7)att11
18:51:28  23  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca8)att12
18:51:28  24  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca9)att13
18:51:28  25  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx3)att14
18:51:28  26  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx4)att15
18:51:28  27  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx5)att16
18:51:28  28  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx6)att17
18:51:28  29  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx7)att18
18:51:28  30  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx8)att19
18:51:28  31  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx9)att20
18:51:28  32  ,hh  att21
18:51:28  33  ,d   att22
18:51:28  34  ,w   att23
18:51:28  35  ,mpm att24
18:51:28  36  ,mph att25
18:51:28  37  ,trend att26
18:51:28  38  FROM stk_svmd14
18:51:28  39  ORDER BY ydate
18:51:28  40  /

Table created.

Elapsed: 00:00:00.49
18:51:28 SQL> 
18:51:28 SQL> -- rpt
18:51:28 SQL> 
18:51:28 SQL> SELECT
18:51:28   2  tkr
18:51:28   3  ,trend
18:51:28   4  ,gatt
18:51:28   5  ,COUNT(tkr)
18:51:28   6  ,AVG(g1)
18:51:28   7  FROM stk_svmd16
18:51:28   8  GROUP BY tkr,trend,gatt
18:51:28   9  ORDER BY tkr,trend,gatt
18:51:28  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
SPY		  -1 nup       1098 -.75956284
SPY		  -1 up 	829 1.13349819
SPY		   1 nup       1700 -.45753529
SPY		   1 up 	905 .850475138
SPY		   1		  1

Elapsed: 00:00:00.01
18:51:28 SQL> 
18:51:28 SQL> CREATE OR REPLACE VIEW sc12tkr AS
18:51:28   2  SELECT
18:51:28   3  m.tkr
18:51:28   4  ,m.ydate
18:51:28   5  ,m.tkrdate
18:51:28   6  ,l.score score_long
18:51:28   7  ,s.score score_short
18:51:28   8  ,m.g1
18:51:28   9  FROM ystkscores l,ystkscores s,stk_svmd16 m
18:51:28  10  WHERE l.targ='gatt'
18:51:28  11  AND   s.targ='gattn'
18:51:28  12  AND l.tkrdate = s.tkrdate
18:51:28  13  AND l.tkrdate = m.tkrdate
18:51:28  14  -- Speed things up:
18:51:28  15  AND l.tkr = '&1'
18:51:28  16  AND s.tkr = '&1'
18:51:28  17  /
old  15: AND l.tkr = '&1'
new  15: AND l.tkr = 'SPY'
old  16: AND s.tkr = '&1'
new  16: AND s.tkr = 'SPY'

View created.

Elapsed: 00:00:00.03
18:51:28 SQL> 
18:51:28 SQL> DROP TABLE score_corr_tkr;

Table dropped.

Elapsed: 00:00:00.05
18:51:28 SQL> 
18:51:28 SQL> CREATE TABLE score_corr_tkr COMPRESS AS
18:51:28   2  SELECT tkrdate,AVG(sc_corr)sc_corr FROM
18:51:28   3  (
18:51:28   4  	SELECT
18:51:28   5  	tkrdate
18:51:28   6  	-- Find corr() tween score and g1 over 8 day period:
18:51:28   7  	,CORR((score_long - score_short),g1)
18:51:28   8  	  OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)sc_corr
18:51:28   9  	FROM sc12tkr
18:51:28  10  )
18:51:28  11  GROUP BY tkrdate
18:51:28  12  /

Table created.

Elapsed: 00:00:00.07
18:51:28 SQL> 
18:51:28 SQL> -- Now I derive goodness attributes:
18:51:28 SQL> 
18:51:28 SQL> DROP TABLE stk_ms;

Table dropped.

Elapsed: 00:00:00.13
18:51:29 SQL> 
18:51:29 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.26
18:51:29 SQL> 
18:51:29 SQL> CREATE TABLE stk_ms COMPRESS AS
18:51:29   2  SELECT
18:51:29   3  tkr
18:51:29   4  ,ydate
18:51:29   5  ,s.tkrdate
18:51:29   6  ,trend
18:51:29   7  ,g1
18:51:29   8  ,gatt
18:51:29   9  ,gattn
18:51:29  10  -- Recent CORR()tween scores and gains:
18:51:29  11  ,NVL(sc_corr,0)sc_corr
18:51:29  12  -- Goodness attributes:
18:51:29  13  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g00
18:51:29  14  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g01
18:51:29  15  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g02
18:51:29  16  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g03
18:51:29  17  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g04
18:51:29  18  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g05
18:51:29  19  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g06
18:51:29  20  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g07
18:51:29  21  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g08
18:51:29  22  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g09
18:51:29  23  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g10
18:51:29  24  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g11
18:51:29  25  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g12
18:51:29  26  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g13
18:51:29  27  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g14
18:51:29  28  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g15
18:51:29  29  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g16
18:51:29  30  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g17
18:51:29  31  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g18
18:51:29  32  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g19
18:51:29  33  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g20
18:51:29  34  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g21
18:51:29  35  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g22
18:51:29  36  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g23
18:51:29  37  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g24
18:51:29  38  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g25
18:51:29  39  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g26
18:51:29  40  -- att26 is trend which is a powerful attribute so I derive 3 more goodness attributes from trend:
18:51:29  41  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 60 PRECEDING AND CURRENT ROW)g27
18:51:29  42  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 30 PRECEDING AND CURRENT ROW)g28
18:51:29  43  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 10 PRECEDING AND CURRENT ROW)g29
18:51:29  44  FROM stk_svmd16 s,score_corr_tkr c
18:51:29  45  WHERE s.tkrdate = c.tkrdate(+)
18:51:29  46  /

Table created.

Elapsed: 00:00:00.84
18:51:30 SQL> 
18:51:30 SQL> -- rpt
18:51:30 SQL> 
18:51:30 SQL> SELECT
18:51:30   2  tkr
18:51:30   3  ,trend
18:51:30   4  ,gatt
18:51:30   5  ,COUNT(tkr)
18:51:30   6  ,AVG(g1)
18:51:30   7  ,AVG(sc_corr)
18:51:30   8  FROM stk_ms
18:51:30   9  GROUP BY tkr,trend,gatt
18:51:30  10  ORDER BY tkr,trend,gatt
18:51:30  11  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1) AVG(SC_CORR)
--------- ---------- --- ---------- ---------- ------------
SPY		  -1 nup       1098 -.75956284		  0
SPY		  -1 up 	829 1.13349819		  0
SPY		   1 nup       1700 -.45753529		  0
SPY		   1 up 	905 .850475138		  0
SPY		   1		  1			  0

Elapsed: 00:00:00.01
18:51:30 SQL> 
18:51:30 SQL> SELECT
18:51:30   2  tkr
18:51:30   3  ,COUNT(tkr)
18:51:30   4  ,MIN(ydate),MAX(ydate)
18:51:30   5  FROM stk_ms
18:51:30   6  GROUP BY tkr
18:51:30   7  /

TKR	  COUNT(TKR) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ----------
SPY		4533 1993-01-29 2011-01-26

Elapsed: 00:00:00.01
18:51:30 SQL> 
18:51:30 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
