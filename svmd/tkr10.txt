
SQL*Plus: Release 11.2.0.1.0 Production on Sun Feb 13 22:07:51 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:07:51 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
22:07:51 SQL> 
22:07:51 SQL> 22:07:51 SQL> --
22:07:51 SQL> -- stk10.sql
22:07:51 SQL> --
22:07:51 SQL> 
22:07:51 SQL> -- Creates views and tables for demonstrating SVM.
22:07:51 SQL> 
22:07:51 SQL> CREATE OR REPLACE VIEW stk_svmd10 AS
22:07:51   2  SELECT
22:07:51   3  tkr
22:07:51   4  ,ydate
22:07:51   5  ,tkr||ydate tkrdate
22:07:51   6  ,clse
22:07:51   7  ,rownum rnum -- acts as t in my time-series
22:07:51   8  -- Derive some attributes from clse.
22:07:51   9  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)min3
22:07:51  10  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)min4
22:07:51  11  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)min5
22:07:51  12  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)min6
22:07:51  13  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)min7
22:07:51  14  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)min8
22:07:51  15  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)min9
22:07:51  16  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)avg3
22:07:51  17  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)avg4
22:07:51  18  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)avg5
22:07:51  19  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)avg6
22:07:51  20  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)avg7
22:07:51  21  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)avg8
22:07:51  22  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)avg9
22:07:51  23  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)max3
22:07:51  24  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)max4
22:07:51  25  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)max5
22:07:51  26  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)max6
22:07:51  27  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)max7
22:07:51  28  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)max8
22:07:51  29  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)max9
22:07:51  30  ,LEAD(clse,1,NULL)OVER(PARTITION BY tkr ORDER BY ydate)ld
22:07:51  31  FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
22:07:51  32  ORDER BY ydate
22:07:51  33  /
old  31: FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
new  31: FROM ystk WHERE UPPER(tkr)='HES'AND ydate > '1990-01-01'

View created.

Elapsed: 00:00:00.05
22:07:52 SQL> 
22:07:52 SQL> -- rpt
22:07:52 SQL> 
22:07:52 SQL> SELECT
22:07:52   2  tkr
22:07:52   3  ,COUNT(tkr)
22:07:52   4  ,MIN(clse),MAX(clse)
22:07:52   5  ,MIN(avg4),MAX(avg4)
22:07:52   6  ,MIN(ydate),MAX(ydate)
22:07:52   7  FROM stk_svmd10
22:07:52   8  GROUP BY tkr
22:07:52   9  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE)  MIN(AVG4)  MAX(AVG4) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
HES		5318	   9.02     131.46	9.068	 127.984 1990-01-02 2011-02-11

Elapsed: 00:00:00.19
22:07:52 SQL> 
22:07:52 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
22:07:52 SQL> DROP TABLE stk_svmd12;

Table dropped.

Elapsed: 00:00:00.28
22:07:52 SQL> CREATE TABLE stk_svmd12 COMPRESS AS
22:07:52   2  SELECT
22:07:52   3  tkr
22:07:52   4  ,ydate
22:07:52   5  ,tkrdate
22:07:52   6  ,clse
22:07:52   7  ,rnum
22:07:52   8  -- g1 is important. I want to predict g1:
22:07:52   9  ,ld - clse g1
22:07:52  10  ,SIGN(avg4 - LAG(avg4,2,NULL)OVER(PARTITION BY tkr ORDER BY ydate))trend
22:07:52  11  -- I want more attributes from the ones I derived above:
22:07:52  12  -- clse relation to moving-min
22:07:52  13  ,clse-min3  cm3
22:07:52  14  ,clse-min4  cm4
22:07:52  15  ,clse-min5  cm5
22:07:52  16  ,clse-min6  cm6
22:07:52  17  ,clse-min7  cm7
22:07:52  18  ,clse-min8  cm8
22:07:52  19  ,clse-min9  cm9
22:07:52  20  -- clse relation to moving-avg
22:07:52  21  ,clse-avg3  ca3
22:07:52  22  ,clse-avg4  ca4
22:07:52  23  ,clse-avg5  ca5
22:07:52  24  ,clse-avg6  ca6
22:07:52  25  ,clse-avg7  ca7
22:07:52  26  ,clse-avg8  ca8
22:07:52  27  ,clse-avg9  ca9
22:07:52  28  -- clse relation to moving-max
22:07:52  29  ,clse-max3  cx3
22:07:52  30  ,clse-max4  cx4
22:07:52  31  ,clse-max5  cx5
22:07:52  32  ,clse-max6  cx6
22:07:52  33  ,clse-max7  cx7
22:07:52  34  ,clse-max8  cx8
22:07:52  35  ,clse-max9  cx9
22:07:52  36  -- Derive date related attributes:
22:07:52  37  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:07:52  38  ,0+TO_CHAR(ydate,'D')d
22:07:52  39  ,0+TO_CHAR(ydate,'W')w
22:07:52  40  -- mpm stands for minutes-past-midnight:
22:07:52  41  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:07:52  42  -- mph stands for minutes-past-hour:
22:07:52  43  ,0+TO_CHAR(ydate,'MI')mph
22:07:52  44  FROM stk_svmd10
22:07:52  45  ORDER BY ydate
22:07:52  46  /

Table created.

Elapsed: 00:00:00.63
22:07:53 SQL> 
22:07:53 SQL> -- rpt
22:07:53 SQL> 
22:07:53 SQL> SELECT
22:07:53   2  tkr
22:07:53   3  ,COUNT(tkr)
22:07:53   4  ,MIN(clse),MAX(clse)
22:07:53   5  ,MIN(ydate),MAX(ydate)
22:07:53   6  FROM stk_svmd12
22:07:53   7  GROUP BY tkr
22:07:53   8  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ----------
HES		5318	   9.02     131.46 1990-01-02 2011-02-11

Elapsed: 00:00:00.01
22:07:53 SQL> 
22:07:53 SQL> -- Prepare for derivation of NTILE based parameters.
22:07:53 SQL> -- Also derive the "trend" parameter:
22:07:53 SQL> 
22:07:53 SQL> DROP TABLE stk_svmd14;

Table dropped.

Elapsed: 00:00:00.20
22:07:53 SQL> CREATE TABLE stk_svmd14 COMPRESS AS
22:07:53   2  SELECT
22:07:53   3  tkr
22:07:53   4  ,ydate
22:07:53   5  ,tkrdate
22:07:53   6  ,clse
22:07:53   7  ,g1
22:07:53   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse >	0.30/100 THEN 'up' ELSE 'nup' END gatt
22:07:53   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse < -0.30/100 THEN 'up' ELSE 'nup' END gattn
22:07:53  10  ,CASE WHEN trend IS NULL THEN 1
22:07:53  11  	    WHEN trend =0      THEN 1
22:07:53  12  	    ELSE trend END trend
22:07:53  13  ,cm3
22:07:53  14  ,cm4
22:07:53  15  ,cm5
22:07:53  16  ,cm6
22:07:53  17  ,cm7
22:07:53  18  ,cm8
22:07:53  19  ,cm9
22:07:53  20  ,ca3
22:07:53  21  ,ca4
22:07:53  22  ,ca5
22:07:53  23  ,ca6
22:07:53  24  ,ca7
22:07:53  25  ,ca8
22:07:53  26  ,ca9
22:07:53  27  ,cx3
22:07:53  28  ,cx4
22:07:53  29  ,cx5
22:07:53  30  ,cx6
22:07:53  31  ,cx7
22:07:53  32  ,cx8
22:07:53  33  ,cx9
22:07:53  34  ,hh
22:07:53  35  ,d
22:07:53  36  ,w
22:07:53  37  ,mpm
22:07:53  38  ,mph
22:07:53  39  FROM stk_svmd12
22:07:53  40  -- Guard against divide by 0:
22:07:53  41  WHERE clse > 0
22:07:53  42  ORDER BY ydate
22:07:53  43  /

Table created.

Elapsed: 00:00:00.11
22:07:53 SQL> 
22:07:53 SQL> -- rpt
22:07:53 SQL> 
22:07:53 SQL> SELECT
22:07:53   2  tkr
22:07:53   3  ,trend
22:07:53   4  ,gatt
22:07:53   5  ,COUNT(tkr)
22:07:53   6  ,AVG(g1)
22:07:53   7  FROM stk_svmd14
22:07:53   8  GROUP BY tkr,trend,gatt
22:07:53   9  ORDER BY tkr,trend,gatt
22:07:53  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
HES		  -1 nup       1420 -.43553521
HES		  -1 up        1051 .627840152
HES		  -1		  1
HES		   1 nup       1645 -.41485714
HES		   1 up        1201 .591590341

Elapsed: 00:00:00.02
22:07:53 SQL> 
22:07:53 SQL> -- Derive NTILE based params:
22:07:53 SQL> 
22:07:53 SQL> DROP TABLE stk_svmd16;

Table dropped.

Elapsed: 00:00:00.11
22:07:53 SQL> CREATE TABLE stk_svmd16 COMPRESS AS
22:07:53   2  SELECT
22:07:53   3  tkr
22:07:53   4  ,ydate
22:07:53   5  ,tkrdate
22:07:53   6  ,clse
22:07:53   7  ,g1
22:07:53   8  ,gatt
22:07:53   9  ,gattn
22:07:53  10  ,trend
22:07:53  11  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm3)att00
22:07:53  12  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm4)att01
22:07:53  13  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm5)att02
22:07:53  14  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm6)att03
22:07:53  15  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm7)att04
22:07:53  16  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm8)att05
22:07:53  17  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm9)att06
22:07:53  18  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca3)att07
22:07:53  19  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca4)att08
22:07:53  20  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca5)att09
22:07:53  21  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca6)att10
22:07:53  22  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca7)att11
22:07:53  23  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca8)att12
22:07:53  24  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca9)att13
22:07:53  25  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx3)att14
22:07:53  26  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx4)att15
22:07:53  27  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx5)att16
22:07:53  28  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx6)att17
22:07:53  29  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx7)att18
22:07:53  30  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx8)att19
22:07:53  31  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx9)att20
22:07:53  32  ,hh  att21
22:07:53  33  ,d   att22
22:07:53  34  ,w   att23
22:07:53  35  ,mpm att24
22:07:53  36  ,mph att25
22:07:53  37  ,trend att26
22:07:53  38  FROM stk_svmd14
22:07:53  39  ORDER BY ydate
22:07:53  40  /

Table created.

Elapsed: 00:00:00.56
22:07:54 SQL> 
22:07:54 SQL> -- rpt
22:07:54 SQL> 
22:07:54 SQL> SELECT
22:07:54   2  tkr
22:07:54   3  ,trend
22:07:54   4  ,gatt
22:07:54   5  ,COUNT(tkr)
22:07:54   6  ,AVG(g1)
22:07:54   7  FROM stk_svmd16
22:07:54   8  GROUP BY tkr,trend,gatt
22:07:54   9  ORDER BY tkr,trend,gatt
22:07:54  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
HES		  -1 nup       1420 -.43553521
HES		  -1 up        1051 .627840152
HES		  -1		  1
HES		   1 nup       1645 -.41485714
HES		   1 up        1201 .591590341

Elapsed: 00:00:00.01
22:07:54 SQL> 
22:07:54 SQL> CREATE OR REPLACE VIEW sc12tkr AS
22:07:54   2  SELECT
22:07:54   3  m.tkr
22:07:54   4  ,m.ydate
22:07:54   5  ,m.tkrdate
22:07:54   6  ,l.score score_long
22:07:54   7  ,s.score score_short
22:07:54   8  ,m.g1
22:07:54   9  FROM ystkscores l,ystkscores s,stk_svmd16 m
22:07:54  10  WHERE l.targ='gatt'
22:07:54  11  AND   s.targ='gattn'
22:07:54  12  AND l.tkrdate = s.tkrdate
22:07:54  13  AND l.tkrdate = m.tkrdate
22:07:54  14  -- Speed things up:
22:07:54  15  AND l.tkr = '&1'
22:07:54  16  AND s.tkr = '&1'
22:07:54  17  /
old  15: AND l.tkr = '&1'
new  15: AND l.tkr = 'HES'
old  16: AND s.tkr = '&1'
new  16: AND s.tkr = 'HES'

View created.

Elapsed: 00:00:00.05
22:07:54 SQL> 
22:07:54 SQL> -- DROP TABLE score_corr_tkr;
22:07:54 SQL> --
22:07:54 SQL> -- CREATE TABLE score_corr_tkr COMPRESS AS
22:07:54 SQL> -- SELECT tkrdate,AVG(sc_corr)sc_corr FROM
22:07:54 SQL> -- (
22:07:54 SQL> --   SELECT
22:07:54 SQL> --   tkrdate
22:07:54 SQL> --   -- Find corr() tween score and g1 over 8 day period:
22:07:54 SQL> --   ,CORR((score_long - score_short),g1)
22:07:54 SQL> --     OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)sc_corr
22:07:54 SQL> --   FROM sc12tkr
22:07:54 SQL> -- )
22:07:54 SQL> -- GROUP BY tkrdate
22:07:54 SQL> -- /
22:07:54 SQL> --
22:07:54 SQL> -- -- rpt
22:07:54 SQL> -- SELECT AVG(sc_corr),COUNT(sc_corr)FROM score_corr_tkr;
22:07:54 SQL> 
22:07:54 SQL> -- Now I derive goodness attributes:
22:07:54 SQL> 
22:07:54 SQL> DROP TABLE stk_ms;

Table dropped.

Elapsed: 00:00:00.17
22:07:54 SQL> 
22:07:54 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.25
22:07:54 SQL> 
22:07:54 SQL> CREATE TABLE stk_ms COMPRESS AS
22:07:54   2  SELECT
22:07:54   3  tkr
22:07:54   4  ,ydate
22:07:54   5  ,s.tkrdate
22:07:54   6  ,trend
22:07:54   7  ,g1
22:07:54   8  ,gatt
22:07:54   9  ,gattn
22:07:54  10  -- Recent CORR()tween scores and gains:
22:07:54  11  -- ,NVL(sc_corr,0)sc_corr
22:07:54  12  -- Goodness attributes:
22:07:54  13  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g00
22:07:54  14  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g01
22:07:54  15  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g02
22:07:54  16  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g03
22:07:54  17  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g04
22:07:54  18  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g05
22:07:54  19  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g06
22:07:54  20  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g07
22:07:54  21  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g08
22:07:54  22  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g09
22:07:54  23  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g10
22:07:54  24  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g11
22:07:54  25  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g12
22:07:54  26  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g13
22:07:54  27  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g14
22:07:54  28  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g15
22:07:54  29  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g16
22:07:54  30  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g17
22:07:54  31  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g18
22:07:54  32  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g19
22:07:54  33  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g20
22:07:54  34  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g21
22:07:54  35  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g22
22:07:54  36  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g23
22:07:54  37  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g24
22:07:54  38  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g25
22:07:54  39  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g26
22:07:54  40  -- att26 is trend which is a powerful attribute so I derive 3 more goodness attributes from trend:
22:07:54  41  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 60 PRECEDING AND CURRENT ROW)g27
22:07:54  42  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 30 PRECEDING AND CURRENT ROW)g28
22:07:54  43  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 10 PRECEDING AND CURRENT ROW)g29
22:07:54  44  -- FROM stk_svmd16 s,score_corr_tkr c
22:07:54  45  -- WHERE s.tkrdate = c.tkrdate(+)
22:07:54  46  FROM stk_svmd16 s
22:07:54  47  /

Table created.

Elapsed: 00:00:01.03
22:07:55 SQL> 
22:07:55 SQL> -- rpt
22:07:55 SQL> 
22:07:55 SQL> SELECT
22:07:55   2  tkr
22:07:55   3  ,trend
22:07:55   4  ,gatt
22:07:55   5  ,COUNT(tkr)
22:07:55   6  ,AVG(g1)
22:07:55   7  -- ,AVG(sc_corr)
22:07:55   8  FROM stk_ms
22:07:55   9  GROUP BY tkr,trend,gatt
22:07:55  10  ORDER BY tkr,trend,gatt
22:07:55  11  /

TKR	       TREND GAT COUNT(TKR) AVG(G1)--,AVG(SC_CORR)
--------- ---------- --- ---------- ----------------------
HES		  -1 nup       1420		-.43553521
HES		  -1 up        1051		.627840152
HES		  -1		  1
HES		   1 nup       1645		-.41485714
HES		   1 up        1201		.591590341

Elapsed: 00:00:00.01
22:07:55 SQL> 
22:07:55 SQL> SELECT
22:07:55   2  tkr
22:07:55   3  ,trend
22:07:55   4  ,gattn
22:07:55   5  ,MIN(ydate)
22:07:55   6  ,COUNT(tkr)
22:07:55   7  ,MAX(ydate)
22:07:55   8  ,AVG(g1)
22:07:55   9  -- ,AVG(sc_corr)
22:07:55  10  FROM stk_ms
22:07:55  11  GROUP BY tkr,trend,gattn
22:07:55  12  ORDER BY tkr,trend,gattn
22:07:55  13  /

TKR	       TREND GAT MIN(YDATE) COUNT(TKR) MAX(YDATE) AVG(G1)--,AVG(SC_CORR)
--------- ---------- --- ---------- ---------- ---------- ----------------------
HES		  -1 nup 1990-01-05	  1446 2011-02-09		.4554426
HES		  -1 up  1990-01-04	  1025 2011-02-10	      -.60211707
HES		  -1	 2011-02-11	     1 2011-02-11
HES		   1 nup 1990-01-22	  1686 2011-02-04	      .420427046
HES		   1 up  1990-01-02	  1160 2011-02-03	      -.58687931

Elapsed: 00:00:00.01
22:07:55 SQL> 
22:07:55 SQL> SELECT
22:07:55   2  tkr
22:07:55   3  ,COUNT(tkr)
22:07:55   4  ,MIN(ydate),MAX(ydate)
22:07:55   5  FROM stk_ms
22:07:55   6  GROUP BY tkr
22:07:55   7  /

TKR	  COUNT(TKR) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ----------
HES		5318 1990-01-02 2011-02-11

Elapsed: 00:00:00.01
22:07:55 SQL> 
22:07:55 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
