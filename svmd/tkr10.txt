
SQL*Plus: Release 11.2.0.1.0 Production on Sun Jan 9 22:18:32 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

22:18:33 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
22:18:33 SQL> 22:18:33 SQL> --
22:18:33 SQL> -- stk10.sql
22:18:33 SQL> --
22:18:33 SQL> 
22:18:33 SQL> -- Creates views and tables for demonstrating SVM.
22:18:33 SQL> 
22:18:33 SQL> CREATE OR REPLACE VIEW stk10 AS
22:18:33   2  SELECT
22:18:33   3  tkr
22:18:33   4  ,ydate
22:18:33   5  ,tkr||ydate tkrdate
22:18:33   6  ,clse
22:18:33   7  ,rownum rnum -- acts as t in my time-series
22:18:33   8  -- Derive some attributes from clse.
22:18:33   9  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)min3
22:18:33  10  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)min4
22:18:33  11  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)min5
22:18:33  12  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)min6
22:18:33  13  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)min7
22:18:33  14  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)min8
22:18:33  15  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)min9
22:18:33  16  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)avg3
22:18:33  17  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)avg4
22:18:33  18  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)avg5
22:18:33  19  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)avg6
22:18:33  20  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)avg7
22:18:33  21  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)avg8
22:18:33  22  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)avg9
22:18:33  23  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)max3
22:18:33  24  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)max4
22:18:33  25  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)max5
22:18:33  26  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)max6
22:18:33  27  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)max7
22:18:33  28  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)max8
22:18:33  29  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)max9
22:18:33  30  ,LEAD(clse,1,NULL)OVER(PARTITION BY tkr ORDER BY ydate)ld
22:18:33  31  FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
22:18:33  32  ORDER BY ydate
22:18:33  33  /
old  31: FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
new  31: FROM ystk WHERE UPPER(tkr)='APA'AND ydate > '1990-01-01'

View created.

Elapsed: 00:00:00.11
22:18:33 SQL> 
22:18:33 SQL> -- rpt
22:18:33 SQL> 
22:18:33 SQL> SELECT
22:18:33   2  tkr
22:18:33   3  ,COUNT(tkr)
22:18:33   4  ,MIN(clse),MAX(clse)
22:18:33   5  ,MIN(avg4),MAX(avg4)
22:18:33   6  ,MIN(ydate),MAX(ydate)
22:18:33   7  FROM stk10
22:18:33   8  GROUP BY tkr
22:18:33   9  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE)  MIN(AVG4)  MAX(AVG4) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
APA		5300	   4.47     144.32	4.584	 142.188 1990-01-02 2011-01-07

Elapsed: 00:00:00.21
22:18:33 SQL> 
22:18:33 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
22:18:33 SQL> DROP TABLE stk12;

Table dropped.

Elapsed: 00:00:00.31
22:18:33 SQL> CREATE TABLE stk12 COMPRESS AS
22:18:33   2  SELECT
22:18:33   3  tkr
22:18:33   4  ,ydate
22:18:33   5  ,tkrdate
22:18:33   6  ,clse
22:18:33   7  ,rnum
22:18:33   8  -- g1 is important. I want to predict g1:
22:18:33   9  ,ld - clse g1
22:18:33  10  ,SIGN(avg4 - LAG(avg4,2,NULL)OVER(PARTITION BY tkr ORDER BY ydate))trend
22:18:33  11  -- I want more attributes from the ones I derived above:
22:18:33  12  -- clse relation to moving-min
22:18:33  13  ,clse-min3  cm3
22:18:33  14  ,clse-min4  cm4
22:18:33  15  ,clse-min5  cm5
22:18:33  16  ,clse-min6  cm6
22:18:33  17  ,clse-min7  cm7
22:18:33  18  ,clse-min8  cm8
22:18:33  19  ,clse-min9  cm9
22:18:33  20  -- clse relation to moving-avg
22:18:33  21  ,clse-avg3  ca3
22:18:33  22  ,clse-avg4  ca4
22:18:33  23  ,clse-avg5  ca5
22:18:33  24  ,clse-avg6  ca6
22:18:33  25  ,clse-avg7  ca7
22:18:33  26  ,clse-avg8  ca8
22:18:33  27  ,clse-avg9  ca9
22:18:33  28  -- clse relation to moving-max
22:18:33  29  ,clse-max3  cx3
22:18:33  30  ,clse-max4  cx4
22:18:33  31  ,clse-max5  cx5
22:18:33  32  ,clse-max6  cx6
22:18:33  33  ,clse-max7  cx7
22:18:33  34  ,clse-max8  cx8
22:18:33  35  ,clse-max9  cx9
22:18:33  36  -- Derive date related attributes:
22:18:33  37  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
22:18:33  38  ,0+TO_CHAR(ydate,'D')d
22:18:33  39  ,0+TO_CHAR(ydate,'W')w
22:18:33  40  -- mpm stands for minutes-past-midnight:
22:18:33  41  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
22:18:33  42  -- mph stands for minutes-past-hour:
22:18:33  43  ,0+TO_CHAR(ydate,'MI')mph
22:18:33  44  FROM stk10
22:18:33  45  ORDER BY ydate
22:18:33  46  /

Table created.

Elapsed: 00:00:00.52
22:18:34 SQL> 
22:18:34 SQL> -- rpt
22:18:34 SQL> 
22:18:34 SQL> SELECT
22:18:34   2  tkr
22:18:34   3  ,COUNT(tkr)
22:18:34   4  ,MIN(clse),MAX(clse)
22:18:34   5  ,MIN(ydate),MAX(ydate)
22:18:34   6  FROM stk12
22:18:34   7  GROUP BY tkr
22:18:34   8  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ----------
APA		5300	   4.47     144.32 1990-01-02 2011-01-07

Elapsed: 00:00:00.02
22:18:34 SQL> 
22:18:34 SQL> -- Prepare for derivation of NTILE based parameters.
22:18:34 SQL> -- Also derive the "trend" parameter:
22:18:34 SQL> 
22:18:34 SQL> DROP TABLE stk14;

Table dropped.

Elapsed: 00:00:00.10
22:18:34 SQL> CREATE TABLE stk14 COMPRESS AS
22:18:34   2  SELECT
22:18:34   3  tkr
22:18:34   4  ,ydate
22:18:34   5  ,tkrdate
22:18:34   6  ,clse
22:18:34   7  ,g1
22:18:34   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse >	0.30/100 THEN 'up' ELSE 'nup' END gatt
22:18:34   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse < -0.30/100 THEN 'up' ELSE 'nup' END gattn
22:18:34  10  ,CASE WHEN trend IS NULL THEN 1
22:18:34  11  	    WHEN trend =0      THEN 1
22:18:34  12  	    ELSE trend END trend
22:18:34  13  ,cm3
22:18:34  14  ,cm4
22:18:34  15  ,cm5
22:18:34  16  ,cm6
22:18:34  17  ,cm7
22:18:34  18  ,cm8
22:18:34  19  ,cm9
22:18:34  20  ,ca3
22:18:34  21  ,ca4
22:18:34  22  ,ca5
22:18:34  23  ,ca6
22:18:34  24  ,ca7
22:18:34  25  ,ca8
22:18:34  26  ,ca9
22:18:34  27  ,cx3
22:18:34  28  ,cx4
22:18:34  29  ,cx5
22:18:34  30  ,cx6
22:18:34  31  ,cx7
22:18:34  32  ,cx8
22:18:34  33  ,cx9
22:18:34  34  ,hh
22:18:34  35  ,d
22:18:34  36  ,w
22:18:34  37  ,mpm
22:18:34  38  ,mph
22:18:34  39  FROM stk12
22:18:34  40  -- Guard against divide by 0:
22:18:34  41  WHERE clse > 0
22:18:34  42  ORDER BY ydate
22:18:34  43  /

Table created.

Elapsed: 00:00:00.18
22:18:34 SQL> 
22:18:34 SQL> -- rpt
22:18:34 SQL> 
22:18:34 SQL> SELECT
22:18:34   2  tkr
22:18:34   3  ,trend
22:18:34   4  ,gatt
22:18:34   5  ,COUNT(tkr)
22:18:34   6  ,AVG(g1)
22:18:34   7  FROM stk14
22:18:34   8  GROUP BY tkr,trend,gatt
22:18:34   9  ORDER BY tkr,trend,gatt
22:18:34  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
APA		  -1 nup       1308 -.56492355
APA		  -1 up        1179 .716505513
APA		   1 nup       1595 -.54066458
APA		   1 up        1217 .717723911
APA		   1		  1

Elapsed: 00:00:00.02
22:18:34 SQL> 
22:18:34 SQL> -- Derive NTILE based params:
22:18:34 SQL> 
22:18:34 SQL> DROP TABLE stk16;

Table dropped.

Elapsed: 00:00:00.06
22:18:34 SQL> CREATE TABLE stk16 COMPRESS AS
22:18:34   2  SELECT
22:18:34   3  tkr
22:18:34   4  ,ydate
22:18:34   5  ,tkrdate
22:18:34   6  ,clse
22:18:34   7  ,g1
22:18:34   8  ,gatt
22:18:34   9  ,gattn
22:18:34  10  ,trend
22:18:34  11  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm3)att00
22:18:34  12  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm4)att01
22:18:34  13  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm5)att02
22:18:34  14  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm6)att03
22:18:34  15  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm7)att04
22:18:34  16  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm8)att05
22:18:34  17  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm9)att06
22:18:34  18  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca3)att07
22:18:34  19  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca4)att08
22:18:34  20  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca5)att09
22:18:34  21  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca6)att10
22:18:34  22  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca7)att11
22:18:34  23  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca8)att12
22:18:34  24  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca9)att13
22:18:34  25  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx3)att14
22:18:34  26  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx4)att15
22:18:34  27  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx5)att16
22:18:34  28  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx6)att17
22:18:34  29  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx7)att18
22:18:34  30  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx8)att19
22:18:34  31  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx9)att20
22:18:34  32  ,hh  att21
22:18:34  33  ,d   att22
22:18:34  34  ,w   att23
22:18:34  35  ,mpm att24
22:18:34  36  ,mph att25
22:18:34  37  ,trend att26
22:18:34  38  FROM stk14
22:18:34  39  ORDER BY ydate
22:18:34  40  /

Table created.

Elapsed: 00:00:00.61
22:18:35 SQL> 
22:18:35 SQL> -- rpt
22:18:35 SQL> 
22:18:35 SQL> SELECT
22:18:35   2  tkr
22:18:35   3  ,trend
22:18:35   4  ,gatt
22:18:35   5  ,COUNT(tkr)
22:18:35   6  ,AVG(g1)
22:18:35   7  FROM stk16
22:18:35   8  GROUP BY tkr,trend,gatt
22:18:35   9  ORDER BY tkr,trend,gatt
22:18:35  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
APA		  -1 nup       1308 -.56492355
APA		  -1 up        1179 .716505513
APA		   1 nup       1595 -.54066458
APA		   1 up        1217 .717723911
APA		   1		  1

Elapsed: 00:00:00.02
22:18:35 SQL> 
22:18:35 SQL> -- Now I derive goodness attributes:
22:18:35 SQL> 
22:18:35 SQL> DROP TABLE stk_ms;

Table dropped.

Elapsed: 00:00:00.04
22:18:35 SQL> CREATE TABLE stk_ms COMPRESS AS
22:18:35   2  SELECT
22:18:35   3  tkr
22:18:35   4  ,ydate
22:18:35   5  ,tkrdate
22:18:35   6  ,trend
22:18:35   7  ,g1
22:18:35   8  ,gatt
22:18:35   9  ,gattn
22:18:35  10  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g00
22:18:35  11  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g01
22:18:35  12  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g02
22:18:35  13  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g03
22:18:35  14  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g04
22:18:35  15  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g05
22:18:35  16  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g06
22:18:35  17  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g07
22:18:35  18  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g08
22:18:35  19  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g09
22:18:35  20  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g10
22:18:35  21  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g11
22:18:35  22  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g12
22:18:35  23  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g13
22:18:35  24  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g14
22:18:35  25  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g15
22:18:35  26  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g16
22:18:35  27  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g17
22:18:35  28  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g18
22:18:35  29  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g19
22:18:35  30  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g20
22:18:35  31  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g21
22:18:35  32  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g22
22:18:35  33  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g23
22:18:35  34  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g24
22:18:35  35  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g25
22:18:35  36  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g26
22:18:35  37  -- att26 is trend which is a powerful attribute so I derive 3 more goodness attributes from trend:
22:18:35  38  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 60 PRECEDING AND CURRENT ROW)g27
22:18:35  39  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 30 PRECEDING AND CURRENT ROW)g28
22:18:35  40  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 10 PRECEDING AND CURRENT ROW)g29
22:18:35  41  FROM stk16
22:18:35  42  /

Table created.

Elapsed: 00:00:00.95
22:18:36 SQL> 
22:18:36 SQL> -- rpt
22:18:36 SQL> 
22:18:36 SQL> SELECT
22:18:36   2  tkr
22:18:36   3  ,trend
22:18:36   4  ,gatt
22:18:36   5  ,COUNT(tkr)
22:18:36   6  ,AVG(g1)
22:18:36   7  FROM stk_ms
22:18:36   8  GROUP BY tkr,trend,gatt
22:18:36   9  ORDER BY tkr,trend,gatt
22:18:36  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
APA		  -1 nup       1308 -.56492355
APA		  -1 up        1179 .716505513
APA		   1 nup       1595 -.54066458
APA		   1 up        1217 .717723911
APA		   1		  1

Elapsed: 00:00:00.02
22:18:36 SQL> 
22:18:36 SQL> SELECT
22:18:36   2  tkr
22:18:36   3  ,COUNT(tkr)
22:18:36   4  ,MIN(ydate),MAX(ydate)
22:18:36   5  FROM stk_ms
22:18:36   6  GROUP BY tkr
22:18:36   7  /

TKR	  COUNT(TKR) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ----------
APA		5300 1990-01-02 2011-01-07

Elapsed: 00:00:00.00
22:18:36 SQL> 
22:18:36 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
