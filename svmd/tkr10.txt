
SQL*Plus: Release 11.2.0.1.0 Production on Sat Apr 2 04:17:59 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

04:17:59 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
04:17:59 SQL> 
04:17:59 SQL> 04:17:59 SQL> --
04:17:59 SQL> -- stk10.sql
04:17:59 SQL> --
04:17:59 SQL> 
04:17:59 SQL> -- Creates views and tables for demonstrating SVM.
04:17:59 SQL> 
04:17:59 SQL> CREATE OR REPLACE VIEW stk_svmd10 AS
04:17:59   2  SELECT
04:17:59   3  tkr
04:17:59   4  ,ydate
04:17:59   5  ,tkr||ydate tkrdate
04:17:59   6  ,clse
04:17:59   7  ,rownum rnum -- acts as t in my time-series
04:17:59   8  -- Derive some attributes from clse.
04:17:59   9  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)min3
04:17:59  10  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)min4
04:17:59  11  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)min5
04:17:59  12  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)min6
04:17:59  13  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)min7
04:17:59  14  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)min8
04:17:59  15  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)min9
04:17:59  16  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)avg3
04:17:59  17  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)avg4
04:17:59  18  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)avg5
04:17:59  19  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)avg6
04:17:59  20  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)avg7
04:17:59  21  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)avg8
04:17:59  22  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)avg9
04:17:59  23  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)max3
04:17:59  24  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)max4
04:17:59  25  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)max5
04:17:59  26  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)max6
04:17:59  27  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)max7
04:17:59  28  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)max8
04:17:59  29  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)max9
04:17:59  30  ,LEAD(clse,1,NULL)OVER(PARTITION BY tkr ORDER BY ydate)ld
04:17:59  31  FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
04:17:59  32  ORDER BY ydate
04:17:59  33  /
old  31: FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
new  31: FROM ystk WHERE UPPER(tkr)='XOM'AND ydate > '1990-01-01'

View created.

Elapsed: 00:00:00.05
04:17:59 SQL> 
04:17:59 SQL> -- rpt
04:17:59 SQL> 
04:17:59 SQL> SELECT
04:17:59   2  tkr
04:17:59   3  ,COUNT(tkr)
04:17:59   4  ,MIN(clse),MAX(clse)
04:17:59   5  ,MIN(avg4),MAX(avg4)
04:17:59   6  ,MIN(ydate),MAX(ydate)
04:17:59   7  FROM stk_svmd10
04:17:59   8  GROUP BY tkr
04:17:59   9  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE)  MIN(AVG4)  MAX(AVG4) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
XOM		5358	   6.01      88.55	6.042	  87.684 1990-01-02 2011-04-01

Elapsed: 00:00:00.19
04:17:59 SQL> 
04:17:59 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
04:17:59 SQL> DROP TABLE stk_svmd12;

Table dropped.

Elapsed: 00:00:00.21
04:17:59 SQL> CREATE TABLE stk_svmd12 COMPRESS AS
04:17:59   2  SELECT
04:17:59   3  tkr
04:17:59   4  ,ydate
04:17:59   5  ,tkrdate
04:17:59   6  ,clse
04:17:59   7  ,rnum
04:17:59   8  -- g1 is important. I want to predict g1:
04:17:59   9  ,ld - clse g1
04:17:59  10  ,SIGN(avg4 - LAG(avg4,2,NULL)OVER(PARTITION BY tkr ORDER BY ydate))trend
04:17:59  11  -- I want more attributes from the ones I derived above:
04:17:59  12  -- clse relation to moving-min
04:17:59  13  ,clse-min3  cm3
04:17:59  14  ,clse-min4  cm4
04:17:59  15  ,clse-min5  cm5
04:17:59  16  ,clse-min6  cm6
04:17:59  17  ,clse-min7  cm7
04:17:59  18  ,clse-min8  cm8
04:17:59  19  ,clse-min9  cm9
04:17:59  20  -- clse relation to moving-avg
04:17:59  21  ,clse-avg3  ca3
04:17:59  22  ,clse-avg4  ca4
04:17:59  23  ,clse-avg5  ca5
04:17:59  24  ,clse-avg6  ca6
04:17:59  25  ,clse-avg7  ca7
04:17:59  26  ,clse-avg8  ca8
04:17:59  27  ,clse-avg9  ca9
04:17:59  28  -- clse relation to moving-max
04:17:59  29  ,clse-max3  cx3
04:17:59  30  ,clse-max4  cx4
04:17:59  31  ,clse-max5  cx5
04:17:59  32  ,clse-max6  cx6
04:17:59  33  ,clse-max7  cx7
04:17:59  34  ,clse-max8  cx8
04:17:59  35  ,clse-max9  cx9
04:17:59  36  -- Derive date related attributes:
04:17:59  37  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
04:17:59  38  ,0+TO_CHAR(ydate,'D')d
04:17:59  39  ,0+TO_CHAR(ydate,'W')w
04:17:59  40  -- mpm stands for minutes-past-midnight:
04:17:59  41  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
04:17:59  42  -- mph stands for minutes-past-hour:
04:17:59  43  ,0+TO_CHAR(ydate,'MI')mph
04:17:59  44  FROM stk_svmd10
04:17:59  45  ORDER BY ydate
04:17:59  46  /

Table created.

Elapsed: 00:00:00.54
04:18:00 SQL> 
04:18:00 SQL> -- rpt
04:18:00 SQL> 
04:18:00 SQL> SELECT
04:18:00   2  tkr
04:18:00   3  ,COUNT(tkr)
04:18:00   4  ,MIN(clse),MAX(clse)
04:18:00   5  ,MIN(ydate),MAX(ydate)
04:18:00   6  FROM stk_svmd12
04:18:00   7  GROUP BY tkr
04:18:00   8  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ----------
XOM		5358	   6.01      88.55 1990-01-02 2011-04-01

Elapsed: 00:00:00.02
04:18:00 SQL> 
04:18:00 SQL> -- Prepare for derivation of NTILE based parameters.
04:18:00 SQL> -- Also derive the "trend" parameter:
04:18:00 SQL> 
04:18:00 SQL> DROP TABLE stk_svmd14;

Table dropped.

Elapsed: 00:00:00.14
04:18:00 SQL> CREATE TABLE stk_svmd14 COMPRESS AS
04:18:00   2  SELECT
04:18:00   3  tkr
04:18:00   4  ,ydate
04:18:00   5  ,tkrdate
04:18:00   6  ,clse
04:18:00   7  ,g1
04:18:00   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse >	0.30/100 THEN 'up' ELSE 'nup' END gatt
04:18:00   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse < -0.30/100 THEN 'up' ELSE 'nup' END gattn
04:18:00  10  ,CASE WHEN trend IS NULL THEN 1
04:18:00  11  	    WHEN trend =0      THEN 1
04:18:00  12  	    ELSE trend END trend
04:18:00  13  ,cm3
04:18:00  14  ,cm4
04:18:00  15  ,cm5
04:18:00  16  ,cm6
04:18:00  17  ,cm7
04:18:00  18  ,cm8
04:18:00  19  ,cm9
04:18:00  20  ,ca3
04:18:00  21  ,ca4
04:18:00  22  ,ca5
04:18:00  23  ,ca6
04:18:00  24  ,ca7
04:18:00  25  ,ca8
04:18:00  26  ,ca9
04:18:00  27  ,cx3
04:18:00  28  ,cx4
04:18:00  29  ,cx5
04:18:00  30  ,cx6
04:18:00  31  ,cx7
04:18:00  32  ,cx8
04:18:00  33  ,cx9
04:18:00  34  ,hh
04:18:00  35  ,d
04:18:00  36  ,w
04:18:00  37  ,mpm
04:18:00  38  ,mph
04:18:00  39  FROM stk_svmd12
04:18:00  40  -- Guard against divide by 0:
04:18:00  41  WHERE clse > 0
04:18:00  42  ORDER BY ydate
04:18:00  43  /

Table created.

Elapsed: 00:00:00.11
04:18:00 SQL> 
04:18:00 SQL> -- rpt
04:18:00 SQL> 
04:18:00 SQL> SELECT
04:18:00   2  tkr
04:18:00   3  ,trend
04:18:00   4  ,gatt
04:18:00   5  ,COUNT(tkr)
04:18:00   6  ,AVG(g1)
04:18:00   7  FROM stk_svmd14
04:18:00   8  GROUP BY tkr,trend,gatt
04:18:00   9  ORDER BY tkr,trend,gatt
04:18:00  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
XOM		  -1 nup       1259  -.3575695
XOM		  -1 up        1058 .520746692
XOM		   1 nup       1852 -.30902808
XOM		   1 up        1188 .462659933
XOM		   1		  1

Elapsed: 00:00:00.01
04:18:00 SQL> 
04:18:00 SQL> -- Derive NTILE based params:
04:18:00 SQL> 
04:18:00 SQL> DROP TABLE stk_svmd16;

Table dropped.

Elapsed: 00:00:00.11
04:18:00 SQL> CREATE TABLE stk_svmd16 COMPRESS AS
04:18:00   2  SELECT
04:18:00   3  tkr
04:18:00   4  ,ydate
04:18:00   5  ,tkrdate
04:18:00   6  ,clse
04:18:00   7  ,g1
04:18:00   8  ,gatt
04:18:00   9  ,gattn
04:18:00  10  ,trend
04:18:00  11  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm3)att00
04:18:00  12  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm4)att01
04:18:00  13  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm5)att02
04:18:00  14  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm6)att03
04:18:00  15  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm7)att04
04:18:00  16  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm8)att05
04:18:00  17  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm9)att06
04:18:00  18  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca3)att07
04:18:00  19  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca4)att08
04:18:00  20  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca5)att09
04:18:00  21  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca6)att10
04:18:00  22  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca7)att11
04:18:00  23  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca8)att12
04:18:00  24  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca9)att13
04:18:00  25  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx3)att14
04:18:00  26  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx4)att15
04:18:00  27  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx5)att16
04:18:00  28  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx6)att17
04:18:00  29  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx7)att18
04:18:00  30  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx8)att19
04:18:00  31  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx9)att20
04:18:00  32  ,hh  att21
04:18:00  33  ,d   att22
04:18:00  34  ,w   att23
04:18:00  35  ,mpm att24
04:18:00  36  ,mph att25
04:18:00  37  ,trend att26
04:18:00  38  FROM stk_svmd14
04:18:00  39  ORDER BY ydate
04:18:00  40  /

Table created.

Elapsed: 00:00:00.62
04:18:01 SQL> 
04:18:01 SQL> -- rpt
04:18:01 SQL> 
04:18:01 SQL> SELECT
04:18:01   2  tkr
04:18:01   3  ,trend
04:18:01   4  ,gatt
04:18:01   5  ,COUNT(tkr)
04:18:01   6  ,AVG(g1)
04:18:01   7  FROM stk_svmd16
04:18:01   8  GROUP BY tkr,trend,gatt
04:18:01   9  ORDER BY tkr,trend,gatt
04:18:01  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
XOM		  -1 nup       1259  -.3575695
XOM		  -1 up        1058 .520746692
XOM		   1 nup       1852 -.30902808
XOM		   1 up        1188 .462659933
XOM		   1		  1

Elapsed: 00:00:00.01
04:18:01 SQL> 
04:18:01 SQL> CREATE OR REPLACE VIEW sc12tkr AS
04:18:01   2  SELECT
04:18:01   3  m.tkr
04:18:01   4  ,m.ydate
04:18:01   5  ,m.tkrdate
04:18:01   6  ,l.score score_long
04:18:01   7  ,s.score score_short
04:18:01   8  ,m.g1
04:18:01   9  FROM ystkscores l,ystkscores s,stk_svmd16 m
04:18:01  10  WHERE l.targ='gatt'
04:18:01  11  AND   s.targ='gattn'
04:18:01  12  AND l.tkrdate = s.tkrdate
04:18:01  13  AND l.tkrdate = m.tkrdate
04:18:01  14  -- Speed things up:
04:18:01  15  AND l.tkr = '&1'
04:18:01  16  AND s.tkr = '&1'
04:18:01  17  /
old  15: AND l.tkr = '&1'
new  15: AND l.tkr = 'XOM'
old  16: AND s.tkr = '&1'
new  16: AND s.tkr = 'XOM'

View created.

Elapsed: 00:00:00.04
04:18:01 SQL> 
04:18:01 SQL> -- DROP TABLE score_corr_tkr;
04:18:01 SQL> --
04:18:01 SQL> -- CREATE TABLE score_corr_tkr COMPRESS AS
04:18:01 SQL> -- SELECT tkrdate,AVG(sc_corr)sc_corr FROM
04:18:01 SQL> -- (
04:18:01 SQL> --   SELECT
04:18:01 SQL> --   tkrdate
04:18:01 SQL> --   -- Find corr() tween score and g1 over 8 day period:
04:18:01 SQL> --   ,CORR((score_long - score_short),g1)
04:18:01 SQL> --     OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)sc_corr
04:18:01 SQL> --   FROM sc12tkr
04:18:01 SQL> -- )
04:18:01 SQL> -- GROUP BY tkrdate
04:18:01 SQL> -- /
04:18:01 SQL> --
04:18:01 SQL> -- -- rpt
04:18:01 SQL> -- SELECT AVG(sc_corr),COUNT(sc_corr)FROM score_corr_tkr;
04:18:01 SQL> 
04:18:01 SQL> -- Now I derive goodness attributes:
04:18:01 SQL> 
04:18:01 SQL> DROP TABLE stk_ms;

Table dropped.

Elapsed: 00:00:00.19
04:18:01 SQL> 
04:18:01 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.45
04:18:01 SQL> 
04:18:01 SQL> CREATE TABLE stk_ms COMPRESS AS
04:18:01   2  SELECT
04:18:01   3  tkr
04:18:01   4  ,ydate
04:18:01   5  ,s.tkrdate
04:18:01   6  ,trend
04:18:01   7  ,g1
04:18:01   8  ,gatt
04:18:01   9  ,gattn
04:18:01  10  -- Recent CORR()tween scores and gains:
04:18:01  11  -- ,NVL(sc_corr,0)sc_corr
04:18:01  12  -- Goodness attributes:
04:18:01  13  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g00
04:18:01  14  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g01
04:18:01  15  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g02
04:18:01  16  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g03
04:18:01  17  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g04
04:18:01  18  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g05
04:18:01  19  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g06
04:18:01  20  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g07
04:18:01  21  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g08
04:18:01  22  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g09
04:18:01  23  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g10
04:18:01  24  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g11
04:18:01  25  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g12
04:18:01  26  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g13
04:18:01  27  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g14
04:18:01  28  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g15
04:18:01  29  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g16
04:18:01  30  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g17
04:18:01  31  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g18
04:18:01  32  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g19
04:18:01  33  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g20
04:18:01  34  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g21
04:18:01  35  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g22
04:18:01  36  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g23
04:18:01  37  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g24
04:18:01  38  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g25
04:18:01  39  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g26
04:18:01  40  -- att26 is trend which is a powerful attribute so I derive 3 more goodness attributes from trend:
04:18:01  41  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 60 PRECEDING AND CURRENT ROW)g27
04:18:01  42  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 30 PRECEDING AND CURRENT ROW)g28
04:18:01  43  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 10 PRECEDING AND CURRENT ROW)g29
04:18:01  44  -- FROM stk_svmd16 s,score_corr_tkr c
04:18:01  45  -- WHERE s.tkrdate = c.tkrdate(+)
04:18:01  46  FROM stk_svmd16 s
04:18:01  47  /

Table created.

Elapsed: 00:00:00.99
04:18:02 SQL> 
04:18:02 SQL> -- rpt
04:18:02 SQL> 
04:18:02 SQL> SELECT
04:18:02   2  tkr
04:18:02   3  ,trend
04:18:02   4  ,gatt
04:18:02   5  ,COUNT(tkr)
04:18:02   6  ,AVG(g1)
04:18:02   7  -- ,AVG(sc_corr)
04:18:02   8  FROM stk_ms
04:18:02   9  GROUP BY tkr,trend,gatt
04:18:02  10  ORDER BY tkr,trend,gatt
04:18:02  11  /

TKR	       TREND GAT COUNT(TKR) AVG(G1)--,AVG(SC_CORR)
--------- ---------- --- ---------- ----------------------
XOM		  -1 nup       1259		 -.3575695
XOM		  -1 up        1058		.520746692
XOM		   1 nup       1852		-.30902808
XOM		   1 up        1188		.462659933
XOM		   1		  1

Elapsed: 00:00:00.02
04:18:02 SQL> 
04:18:02 SQL> SELECT
04:18:02   2  tkr
04:18:02   3  ,trend
04:18:02   4  ,gattn
04:18:02   5  ,MIN(ydate)
04:18:02   6  ,COUNT(tkr)
04:18:02   7  ,MAX(ydate)
04:18:02   8  ,AVG(g1)
04:18:02   9  -- ,AVG(sc_corr)
04:18:02  10  FROM stk_ms
04:18:02  11  GROUP BY tkr,trend,gattn
04:18:02  12  ORDER BY tkr,trend,gattn
04:18:02  13  /

TKR	       TREND GAT MIN(YDATE) COUNT(TKR) MAX(YDATE) AVG(G1)--,AVG(SC_CORR)
--------- ---------- --- ---------- ---------- ---------- ----------------------
XOM		  -1 nup 1990-01-05	  1462 2011-03-18	      .376908345
XOM		  -1 up  1990-01-04	   855 2011-03-21	      -.52663158
XOM		   1 nup 1990-02-01	  1831 2011-03-31	      .302058984
XOM		   1 up  1990-01-02	  1209 2011-03-30	      -.47622002
XOM		   1	 2011-04-01	     1 2011-04-01

Elapsed: 00:00:00.01
04:18:02 SQL> 
04:18:02 SQL> SELECT
04:18:02   2  tkr
04:18:02   3  ,COUNT(tkr)
04:18:02   4  ,MIN(ydate),MAX(ydate)
04:18:02   5  FROM stk_ms
04:18:02   6  GROUP BY tkr
04:18:02   7  /

TKR	  COUNT(TKR) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ----------
XOM		5358 1990-01-02 2011-04-01

Elapsed: 00:00:00.00
04:18:02 SQL> 
04:18:02 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
