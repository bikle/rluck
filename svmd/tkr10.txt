
SQL*Plus: Release 11.2.0.1.0 Production on Wed Apr 20 06:37:03 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

06:37:03 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
06:37:03 SQL> 
06:37:03 SQL> 06:37:03 SQL> --
06:37:03 SQL> -- stk10.sql
06:37:03 SQL> --
06:37:03 SQL> 
06:37:03 SQL> -- Creates views and tables for demonstrating SVM.
06:37:03 SQL> 
06:37:03 SQL> CREATE OR REPLACE VIEW stk_svmd10 AS
06:37:03   2  SELECT
06:37:03   3  tkr
06:37:03   4  ,ydate
06:37:03   5  ,tkr||ydate tkrdate
06:37:03   6  ,clse
06:37:03   7  ,rownum rnum -- acts as t in my time-series
06:37:03   8  -- Derive some attributes from clse.
06:37:03   9  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)min3
06:37:03  10  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)min4
06:37:03  11  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)min5
06:37:03  12  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)min6
06:37:03  13  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)min7
06:37:03  14  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)min8
06:37:03  15  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)min9
06:37:03  16  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)avg3
06:37:03  17  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)avg4
06:37:03  18  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)avg5
06:37:03  19  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)avg6
06:37:03  20  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)avg7
06:37:03  21  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)avg8
06:37:03  22  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)avg9
06:37:03  23  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)max3
06:37:03  24  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)max4
06:37:03  25  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)max5
06:37:03  26  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)max6
06:37:03  27  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)max7
06:37:03  28  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)max8
06:37:03  29  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)max9
06:37:03  30  ,LEAD(clse,1,NULL)OVER(PARTITION BY tkr ORDER BY ydate)ld
06:37:03  31  FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
06:37:03  32  ORDER BY ydate
06:37:03  33  /
old  31: FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
new  31: FROM ystk WHERE UPPER(tkr)='XOM'AND ydate > '1990-01-01'

View created.

Elapsed: 00:00:00.03
06:37:03 SQL> 
06:37:03 SQL> -- rpt
06:37:03 SQL> 
06:37:03 SQL> SELECT
06:37:03   2  tkr
06:37:03   3  ,COUNT(tkr)
06:37:03   4  ,MIN(clse),MAX(clse)
06:37:03   5  ,MIN(avg4),MAX(avg4)
06:37:03   6  ,MIN(ydate),MAX(ydate)
06:37:03   7  FROM stk_svmd10
06:37:03   8  GROUP BY tkr
06:37:03   9  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE)  MIN(AVG4)  MAX(AVG4) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
XOM		5370	   6.01      88.55	6.042	  87.684 1990-01-02 2011-04-19

Elapsed: 00:00:00.19
06:37:03 SQL> 
06:37:03 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
06:37:03 SQL> DROP TABLE stk_svmd12;

Table dropped.

Elapsed: 00:00:00.24
06:37:03 SQL> CREATE TABLE stk_svmd12 COMPRESS AS
06:37:03   2  SELECT
06:37:03   3  tkr
06:37:03   4  ,ydate
06:37:03   5  ,tkrdate
06:37:03   6  ,clse
06:37:03   7  ,rnum
06:37:03   8  -- g1 is important. I want to predict g1:
06:37:03   9  ,ld - clse g1
06:37:03  10  ,SIGN(avg4 - LAG(avg4,2,NULL)OVER(PARTITION BY tkr ORDER BY ydate))trend
06:37:03  11  -- I want more attributes from the ones I derived above:
06:37:03  12  -- clse relation to moving-min
06:37:03  13  ,clse-min3  cm3
06:37:03  14  ,clse-min4  cm4
06:37:03  15  ,clse-min5  cm5
06:37:03  16  ,clse-min6  cm6
06:37:03  17  ,clse-min7  cm7
06:37:03  18  ,clse-min8  cm8
06:37:03  19  ,clse-min9  cm9
06:37:03  20  -- clse relation to moving-avg
06:37:03  21  ,clse-avg3  ca3
06:37:03  22  ,clse-avg4  ca4
06:37:03  23  ,clse-avg5  ca5
06:37:03  24  ,clse-avg6  ca6
06:37:03  25  ,clse-avg7  ca7
06:37:03  26  ,clse-avg8  ca8
06:37:03  27  ,clse-avg9  ca9
06:37:03  28  -- clse relation to moving-max
06:37:03  29  ,clse-max3  cx3
06:37:03  30  ,clse-max4  cx4
06:37:03  31  ,clse-max5  cx5
06:37:03  32  ,clse-max6  cx6
06:37:03  33  ,clse-max7  cx7
06:37:03  34  ,clse-max8  cx8
06:37:03  35  ,clse-max9  cx9
06:37:03  36  -- Derive date related attributes:
06:37:03  37  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
06:37:03  38  ,0+TO_CHAR(ydate,'D')d
06:37:03  39  ,0+TO_CHAR(ydate,'W')w
06:37:03  40  -- mpm stands for minutes-past-midnight:
06:37:03  41  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
06:37:03  42  -- mph stands for minutes-past-hour:
06:37:03  43  ,0+TO_CHAR(ydate,'MI')mph
06:37:03  44  FROM stk_svmd10
06:37:03  45  ORDER BY ydate
06:37:03  46  /

Table created.

Elapsed: 00:00:00.55
06:37:04 SQL> 
06:37:04 SQL> -- rpt
06:37:04 SQL> 
06:37:04 SQL> SELECT
06:37:04   2  tkr
06:37:04   3  ,COUNT(tkr)
06:37:04   4  ,MIN(clse),MAX(clse)
06:37:04   5  ,MIN(ydate),MAX(ydate)
06:37:04   6  FROM stk_svmd12
06:37:04   7  GROUP BY tkr
06:37:04   8  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ----------
XOM		5370	   6.01      88.55 1990-01-02 2011-04-19

Elapsed: 00:00:00.02
06:37:04 SQL> 
06:37:04 SQL> -- Prepare for derivation of NTILE based parameters.
06:37:04 SQL> -- Also derive the "trend" parameter:
06:37:04 SQL> 
06:37:04 SQL> DROP TABLE stk_svmd14;

Table dropped.

Elapsed: 00:00:00.40
06:37:04 SQL> CREATE TABLE stk_svmd14 COMPRESS AS
06:37:04   2  SELECT
06:37:04   3  tkr
06:37:04   4  ,ydate
06:37:04   5  ,tkrdate
06:37:04   6  ,clse
06:37:04   7  ,g1
06:37:04   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse >	0.30/100 THEN 'up' ELSE 'nup' END gatt
06:37:04   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse < -0.30/100 THEN 'up' ELSE 'nup' END gattn
06:37:04  10  ,CASE WHEN trend IS NULL THEN 1
06:37:04  11  	    WHEN trend =0      THEN 1
06:37:04  12  	    ELSE trend END trend
06:37:04  13  ,cm3
06:37:04  14  ,cm4
06:37:04  15  ,cm5
06:37:04  16  ,cm6
06:37:04  17  ,cm7
06:37:04  18  ,cm8
06:37:04  19  ,cm9
06:37:04  20  ,ca3
06:37:04  21  ,ca4
06:37:04  22  ,ca5
06:37:04  23  ,ca6
06:37:04  24  ,ca7
06:37:04  25  ,ca8
06:37:04  26  ,ca9
06:37:04  27  ,cx3
06:37:04  28  ,cx4
06:37:04  29  ,cx5
06:37:04  30  ,cx6
06:37:04  31  ,cx7
06:37:04  32  ,cx8
06:37:04  33  ,cx9
06:37:04  34  ,hh
06:37:04  35  ,d
06:37:04  36  ,w
06:37:04  37  ,mpm
06:37:04  38  ,mph
06:37:04  39  FROM stk_svmd12
06:37:04  40  -- Guard against divide by 0:
06:37:04  41  WHERE clse > 0
06:37:04  42  ORDER BY ydate
06:37:04  43  /

Table created.

Elapsed: 00:00:00.13
06:37:04 SQL> 
06:37:04 SQL> -- rpt
06:37:04 SQL> 
06:37:04 SQL> SELECT
06:37:04   2  tkr
06:37:04   3  ,trend
06:37:04   4  ,gatt
06:37:04   5  ,COUNT(tkr)
06:37:04   6  ,AVG(g1)
06:37:04   7  FROM stk_svmd14
06:37:04   8  GROUP BY tkr,trend,gatt
06:37:04   9  ORDER BY tkr,trend,gatt
06:37:04  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
XOM		  -1 nup       1261 -.35796193
XOM		  -1 up        1061 .520999057
XOM		  -1		  1
XOM		   1 nup       1857 -.30961228
XOM		   1 up        1190 .462831933

Elapsed: 00:00:00.03
06:37:04 SQL> 
06:37:04 SQL> -- Derive NTILE based params:
06:37:04 SQL> 
06:37:04 SQL> DROP TABLE stk_svmd16;

Table dropped.

Elapsed: 00:00:00.17
06:37:04 SQL> CREATE TABLE stk_svmd16 COMPRESS AS
06:37:04   2  SELECT
06:37:04   3  tkr
06:37:04   4  ,ydate
06:37:04   5  ,tkrdate
06:37:04   6  ,clse
06:37:04   7  ,g1
06:37:04   8  ,gatt
06:37:04   9  ,gattn
06:37:04  10  ,trend
06:37:04  11  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm3)att00
06:37:04  12  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm4)att01
06:37:04  13  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm5)att02
06:37:04  14  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm6)att03
06:37:04  15  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm7)att04
06:37:04  16  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm8)att05
06:37:04  17  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm9)att06
06:37:04  18  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca3)att07
06:37:04  19  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca4)att08
06:37:04  20  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca5)att09
06:37:04  21  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca6)att10
06:37:04  22  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca7)att11
06:37:04  23  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca8)att12
06:37:04  24  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca9)att13
06:37:04  25  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx3)att14
06:37:04  26  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx4)att15
06:37:04  27  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx5)att16
06:37:04  28  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx6)att17
06:37:04  29  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx7)att18
06:37:04  30  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx8)att19
06:37:04  31  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx9)att20
06:37:04  32  ,hh  att21
06:37:04  33  ,d   att22
06:37:04  34  ,w   att23
06:37:04  35  ,mpm att24
06:37:04  36  ,mph att25
06:37:04  37  ,trend att26
06:37:04  38  FROM stk_svmd14
06:37:04  39  ORDER BY ydate
06:37:04  40  /

Table created.

Elapsed: 00:00:00.59
06:37:05 SQL> 
06:37:05 SQL> -- rpt
06:37:05 SQL> 
06:37:05 SQL> SELECT
06:37:05   2  tkr
06:37:05   3  ,trend
06:37:05   4  ,gatt
06:37:05   5  ,COUNT(tkr)
06:37:05   6  ,AVG(g1)
06:37:05   7  FROM stk_svmd16
06:37:05   8  GROUP BY tkr,trend,gatt
06:37:05   9  ORDER BY tkr,trend,gatt
06:37:05  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
XOM		  -1 nup       1261 -.35796193
XOM		  -1 up        1061 .520999057
XOM		  -1		  1
XOM		   1 nup       1857 -.30961228
XOM		   1 up        1190 .462831933

Elapsed: 00:00:00.01
06:37:05 SQL> 
06:37:05 SQL> CREATE OR REPLACE VIEW sc12tkr AS
06:37:05   2  SELECT
06:37:05   3  m.tkr
06:37:05   4  ,m.ydate
06:37:05   5  ,m.tkrdate
06:37:05   6  ,l.score score_long
06:37:05   7  ,s.score score_short
06:37:05   8  ,m.g1
06:37:05   9  FROM ystkscores l,ystkscores s,stk_svmd16 m
06:37:05  10  WHERE l.targ='gatt'
06:37:05  11  AND   s.targ='gattn'
06:37:05  12  AND l.tkrdate = s.tkrdate
06:37:05  13  AND l.tkrdate = m.tkrdate
06:37:05  14  -- Speed things up:
06:37:05  15  AND l.tkr = '&1'
06:37:05  16  AND s.tkr = '&1'
06:37:05  17  /
old  15: AND l.tkr = '&1'
new  15: AND l.tkr = 'XOM'
old  16: AND s.tkr = '&1'
new  16: AND s.tkr = 'XOM'

View created.

Elapsed: 00:00:00.04
06:37:05 SQL> 
06:37:05 SQL> -- DROP TABLE score_corr_tkr;
06:37:05 SQL> --
06:37:05 SQL> -- CREATE TABLE score_corr_tkr COMPRESS AS
06:37:05 SQL> -- SELECT tkrdate,AVG(sc_corr)sc_corr FROM
06:37:05 SQL> -- (
06:37:05 SQL> --   SELECT
06:37:05 SQL> --   tkrdate
06:37:05 SQL> --   -- Find corr() tween score and g1 over 8 day period:
06:37:05 SQL> --   ,CORR((score_long - score_short),g1)
06:37:05 SQL> --     OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)sc_corr
06:37:05 SQL> --   FROM sc12tkr
06:37:05 SQL> -- )
06:37:05 SQL> -- GROUP BY tkrdate
06:37:05 SQL> -- /
06:37:05 SQL> --
06:37:05 SQL> -- -- rpt
06:37:05 SQL> -- SELECT AVG(sc_corr),COUNT(sc_corr)FROM score_corr_tkr;
06:37:05 SQL> 
06:37:05 SQL> -- Now I derive goodness attributes:
06:37:05 SQL> 
06:37:05 SQL> DROP TABLE stk_ms;

Table dropped.

Elapsed: 00:00:00.12
06:37:05 SQL> 
06:37:05 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.26
06:37:06 SQL> 
06:37:06 SQL> CREATE TABLE stk_ms COMPRESS AS
06:37:06   2  SELECT
06:37:06   3  tkr
06:37:06   4  ,ydate
06:37:06   5  ,s.tkrdate
06:37:06   6  ,trend
06:37:06   7  ,g1
06:37:06   8  ,gatt
06:37:06   9  ,gattn
06:37:06  10  -- Recent CORR()tween scores and gains:
06:37:06  11  -- ,NVL(sc_corr,0)sc_corr
06:37:06  12  -- Goodness attributes:
06:37:06  13  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g00
06:37:06  14  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g01
06:37:06  15  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g02
06:37:06  16  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g03
06:37:06  17  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g04
06:37:06  18  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g05
06:37:06  19  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g06
06:37:06  20  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g07
06:37:06  21  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g08
06:37:06  22  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g09
06:37:06  23  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g10
06:37:06  24  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g11
06:37:06  25  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g12
06:37:06  26  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g13
06:37:06  27  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g14
06:37:06  28  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g15
06:37:06  29  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g16
06:37:06  30  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g17
06:37:06  31  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g18
06:37:06  32  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g19
06:37:06  33  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g20
06:37:06  34  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g21
06:37:06  35  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g22
06:37:06  36  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g23
06:37:06  37  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g24
06:37:06  38  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g25
06:37:06  39  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g26
06:37:06  40  -- att26 is trend which is a powerful attribute so I derive 3 more goodness attributes from trend:
06:37:06  41  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 60 PRECEDING AND CURRENT ROW)g27
06:37:06  42  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 30 PRECEDING AND CURRENT ROW)g28
06:37:06  43  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 10 PRECEDING AND CURRENT ROW)g29
06:37:06  44  -- FROM stk_svmd16 s,score_corr_tkr c
06:37:06  45  -- WHERE s.tkrdate = c.tkrdate(+)
06:37:06  46  FROM stk_svmd16 s
06:37:06  47  /

Table created.

Elapsed: 00:00:00.94
06:37:06 SQL> 
06:37:06 SQL> -- rpt
06:37:06 SQL> 
06:37:06 SQL> SELECT
06:37:06   2  tkr
06:37:06   3  ,trend
06:37:06   4  ,gatt
06:37:06   5  ,COUNT(tkr)
06:37:06   6  ,AVG(g1)
06:37:06   7  -- ,AVG(sc_corr)
06:37:06   8  FROM stk_ms
06:37:06   9  GROUP BY tkr,trend,gatt
06:37:06  10  ORDER BY tkr,trend,gatt
06:37:06  11  /

TKR	       TREND GAT COUNT(TKR) AVG(G1)--,AVG(SC_CORR)
--------- ---------- --- ---------- ----------------------
XOM		  -1 nup       1261		-.35796193
XOM		  -1 up        1061		.520999057
XOM		  -1		  1
XOM		   1 nup       1857		-.30961228
XOM		   1 up        1190		.462831933

Elapsed: 00:00:00.02
06:37:06 SQL> 
06:37:06 SQL> SELECT
06:37:06   2  tkr
06:37:06   3  ,trend
06:37:06   4  ,gattn
06:37:06   5  ,MIN(ydate)
06:37:06   6  ,COUNT(tkr)
06:37:06   7  ,MAX(ydate)
06:37:06   8  ,AVG(g1)
06:37:06   9  -- ,AVG(sc_corr)
06:37:06  10  FROM stk_ms
06:37:06  11  GROUP BY tkr,trend,gattn
06:37:06  12  ORDER BY tkr,trend,gattn
06:37:06  13  /

TKR	       TREND GAT MIN(YDATE) COUNT(TKR) MAX(YDATE) AVG(G1)--,AVG(SC_CORR)
--------- ---------- --- ---------- ---------- ---------- ----------------------
XOM		  -1 nup 1990-01-05	  1466 2011-04-18	      .377114598
XOM		  -1 up  1990-01-04	   856 2011-04-15	      -.52740654
XOM		  -1	 2011-04-19	     1 2011-04-19
XOM		   1 nup 1990-02-01	  1836 2011-04-07	      .301928105
XOM		   1 up  1990-01-02	  1211 2011-04-11	      -.47772089

Elapsed: 00:00:00.01
06:37:06 SQL> 
06:37:06 SQL> SELECT
06:37:06   2  tkr
06:37:06   3  ,COUNT(tkr)
06:37:06   4  ,MIN(ydate),MAX(ydate)
06:37:06   5  FROM stk_ms
06:37:06   6  GROUP BY tkr
06:37:06   7  /

TKR	  COUNT(TKR) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ----------
XOM		5370 1990-01-02 2011-04-19

Elapsed: 00:00:00.01
06:37:06 SQL> 
06:37:06 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
