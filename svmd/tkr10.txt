
SQL*Plus: Release 11.2.0.1.0 Production on Sat Jan 29 09:17:02 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

09:17:03 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

Session altered.

Elapsed: 00:00:00.00
09:17:03 SQL> 
09:17:03 SQL> 09:17:03 SQL> --
09:17:03 SQL> -- stk10.sql
09:17:03 SQL> --
09:17:03 SQL> 
09:17:03 SQL> -- Creates views and tables for demonstrating SVM.
09:17:03 SQL> 
09:17:03 SQL> CREATE OR REPLACE VIEW stk_svmd10 AS
09:17:03   2  SELECT
09:17:03   3  tkr
09:17:03   4  ,ydate
09:17:03   5  ,tkr||ydate tkrdate
09:17:03   6  ,clse
09:17:03   7  ,rownum rnum -- acts as t in my time-series
09:17:03   8  -- Derive some attributes from clse.
09:17:03   9  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)min3
09:17:03  10  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)min4
09:17:03  11  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)min5
09:17:03  12  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)min6
09:17:03  13  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)min7
09:17:03  14  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)min8
09:17:03  15  ,MIN(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)min9
09:17:03  16  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)avg3
09:17:03  17  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)avg4
09:17:03  18  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)avg5
09:17:03  19  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)avg6
09:17:03  20  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)avg7
09:17:03  21  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)avg8
09:17:03  22  ,AVG(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)avg9
09:17:03  23  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW)max3
09:17:03  24  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)max4
09:17:03  25  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND CURRENT ROW)max5
09:17:03  26  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)max6
09:17:03  27  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND CURRENT ROW)max7
09:17:03  28  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)max8
09:17:03  29  ,MAX(clse)OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)max9
09:17:03  30  ,LEAD(clse,1,NULL)OVER(PARTITION BY tkr ORDER BY ydate)ld
09:17:03  31  FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
09:17:03  32  ORDER BY ydate
09:17:03  33  /
old  31: FROM ystk WHERE UPPER(tkr)='&1'AND ydate > '1990-01-01'
new  31: FROM ystk WHERE UPPER(tkr)='XOM'AND ydate > '1990-01-01'

View created.

Elapsed: 00:00:00.05
09:17:03 SQL> 
09:17:03 SQL> -- rpt
09:17:03 SQL> 
09:17:03 SQL> SELECT
09:17:03   2  tkr
09:17:03   3  ,COUNT(tkr)
09:17:03   4  ,MIN(clse),MAX(clse)
09:17:03   5  ,MIN(avg4),MAX(avg4)
09:17:03   6  ,MIN(ydate),MAX(ydate)
09:17:03   7  FROM stk_svmd10
09:17:03   8  GROUP BY tkr
09:17:03   9  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE)  MIN(AVG4)  MAX(AVG4) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
XOM		5314	   6.04      89.02	6.078	  88.146 1990-01-02 2011-01-28

Elapsed: 00:00:00.18
09:17:03 SQL> 
09:17:03 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
09:17:03 SQL> DROP TABLE stk_svmd12;

Table dropped.

Elapsed: 00:00:00.15
09:17:03 SQL> CREATE TABLE stk_svmd12 COMPRESS AS
09:17:03   2  SELECT
09:17:03   3  tkr
09:17:03   4  ,ydate
09:17:03   5  ,tkrdate
09:17:03   6  ,clse
09:17:03   7  ,rnum
09:17:03   8  -- g1 is important. I want to predict g1:
09:17:03   9  ,ld - clse g1
09:17:03  10  ,SIGN(avg4 - LAG(avg4,2,NULL)OVER(PARTITION BY tkr ORDER BY ydate))trend
09:17:03  11  -- I want more attributes from the ones I derived above:
09:17:03  12  -- clse relation to moving-min
09:17:03  13  ,clse-min3  cm3
09:17:03  14  ,clse-min4  cm4
09:17:03  15  ,clse-min5  cm5
09:17:03  16  ,clse-min6  cm6
09:17:03  17  ,clse-min7  cm7
09:17:03  18  ,clse-min8  cm8
09:17:03  19  ,clse-min9  cm9
09:17:03  20  -- clse relation to moving-avg
09:17:03  21  ,clse-avg3  ca3
09:17:03  22  ,clse-avg4  ca4
09:17:03  23  ,clse-avg5  ca5
09:17:03  24  ,clse-avg6  ca6
09:17:03  25  ,clse-avg7  ca7
09:17:03  26  ,clse-avg8  ca8
09:17:03  27  ,clse-avg9  ca9
09:17:03  28  -- clse relation to moving-max
09:17:03  29  ,clse-max3  cx3
09:17:03  30  ,clse-max4  cx4
09:17:03  31  ,clse-max5  cx5
09:17:03  32  ,clse-max6  cx6
09:17:03  33  ,clse-max7  cx7
09:17:03  34  ,clse-max8  cx8
09:17:03  35  ,clse-max9  cx9
09:17:03  36  -- Derive date related attributes:
09:17:03  37  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
09:17:03  38  ,0+TO_CHAR(ydate,'D')d
09:17:03  39  ,0+TO_CHAR(ydate,'W')w
09:17:03  40  -- mpm stands for minutes-past-midnight:
09:17:03  41  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
09:17:03  42  -- mph stands for minutes-past-hour:
09:17:03  43  ,0+TO_CHAR(ydate,'MI')mph
09:17:03  44  FROM stk_svmd10
09:17:03  45  ORDER BY ydate
09:17:03  46  /

Table created.

Elapsed: 00:00:00.46
09:17:03 SQL> 
09:17:03 SQL> -- rpt
09:17:03 SQL> 
09:17:03 SQL> SELECT
09:17:03   2  tkr
09:17:03   3  ,COUNT(tkr)
09:17:03   4  ,MIN(clse),MAX(clse)
09:17:03   5  ,MIN(ydate),MAX(ydate)
09:17:03   6  FROM stk_svmd12
09:17:03   7  GROUP BY tkr
09:17:03   8  /

TKR	  COUNT(TKR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ---------- ---------- ----------
XOM		5314	   6.04      89.02 1990-01-02 2011-01-28

Elapsed: 00:00:00.02
09:17:03 SQL> 
09:17:03 SQL> -- Prepare for derivation of NTILE based parameters.
09:17:03 SQL> -- Also derive the "trend" parameter:
09:17:03 SQL> 
09:17:03 SQL> DROP TABLE stk_svmd14;

Table dropped.

Elapsed: 00:00:00.10
09:17:04 SQL> CREATE TABLE stk_svmd14 COMPRESS AS
09:17:04   2  SELECT
09:17:04   3  tkr
09:17:04   4  ,ydate
09:17:04   5  ,tkrdate
09:17:04   6  ,clse
09:17:04   7  ,g1
09:17:04   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse >	0.30/100 THEN 'up' ELSE 'nup' END gatt
09:17:04   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1/clse < -0.30/100 THEN 'up' ELSE 'nup' END gattn
09:17:04  10  ,CASE WHEN trend IS NULL THEN 1
09:17:04  11  	    WHEN trend =0      THEN 1
09:17:04  12  	    ELSE trend END trend
09:17:04  13  ,cm3
09:17:04  14  ,cm4
09:17:04  15  ,cm5
09:17:04  16  ,cm6
09:17:04  17  ,cm7
09:17:04  18  ,cm8
09:17:04  19  ,cm9
09:17:04  20  ,ca3
09:17:04  21  ,ca4
09:17:04  22  ,ca5
09:17:04  23  ,ca6
09:17:04  24  ,ca7
09:17:04  25  ,ca8
09:17:04  26  ,ca9
09:17:04  27  ,cx3
09:17:04  28  ,cx4
09:17:04  29  ,cx5
09:17:04  30  ,cx6
09:17:04  31  ,cx7
09:17:04  32  ,cx8
09:17:04  33  ,cx9
09:17:04  34  ,hh
09:17:04  35  ,d
09:17:04  36  ,w
09:17:04  37  ,mpm
09:17:04  38  ,mph
09:17:04  39  FROM stk_svmd12
09:17:04  40  -- Guard against divide by 0:
09:17:04  41  WHERE clse > 0
09:17:04  42  ORDER BY ydate
09:17:04  43  /

Table created.

Elapsed: 00:00:00.12
09:17:04 SQL> 
09:17:04 SQL> -- rpt
09:17:04 SQL> 
09:17:04 SQL> SELECT
09:17:04   2  tkr
09:17:04   3  ,trend
09:17:04   4  ,gatt
09:17:04   5  ,COUNT(tkr)
09:17:04   6  ,AVG(g1)
09:17:04   7  FROM stk_svmd14
09:17:04   8  GROUP BY tkr,trend,gatt
09:17:04   9  ORDER BY tkr,trend,gatt
09:17:04  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
XOM		  -1 nup       1259 -.35269261
XOM		  -1 up        1047 .523008596
XOM		   1 nup       1835 -.31031063
XOM		   1 up        1172 .459240614
XOM		   1		  1

Elapsed: 00:00:00.01
09:17:04 SQL> 
09:17:04 SQL> -- Derive NTILE based params:
09:17:04 SQL> 
09:17:04 SQL> DROP TABLE stk_svmd16;

Table dropped.

Elapsed: 00:00:00.10
09:17:04 SQL> CREATE TABLE stk_svmd16 COMPRESS AS
09:17:04   2  SELECT
09:17:04   3  tkr
09:17:04   4  ,ydate
09:17:04   5  ,tkrdate
09:17:04   6  ,clse
09:17:04   7  ,g1
09:17:04   8  ,gatt
09:17:04   9  ,gattn
09:17:04  10  ,trend
09:17:04  11  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm3)att00
09:17:04  12  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm4)att01
09:17:04  13  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm5)att02
09:17:04  14  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm6)att03
09:17:04  15  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm7)att04
09:17:04  16  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm8)att05
09:17:04  17  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cm9)att06
09:17:04  18  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca3)att07
09:17:04  19  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca4)att08
09:17:04  20  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca5)att09
09:17:04  21  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca6)att10
09:17:04  22  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca7)att11
09:17:04  23  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca8)att12
09:17:04  24  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY ca9)att13
09:17:04  25  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx3)att14
09:17:04  26  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx4)att15
09:17:04  27  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx5)att16
09:17:04  28  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx6)att17
09:17:04  29  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx7)att18
09:17:04  30  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx8)att19
09:17:04  31  ,NTILE(9)OVER(PARTITION BY trend,tkr ORDER BY cx9)att20
09:17:04  32  ,hh  att21
09:17:04  33  ,d   att22
09:17:04  34  ,w   att23
09:17:04  35  ,mpm att24
09:17:04  36  ,mph att25
09:17:04  37  ,trend att26
09:17:04  38  FROM stk_svmd14
09:17:04  39  ORDER BY ydate
09:17:04  40  /

Table created.

Elapsed: 00:00:00.59
09:17:04 SQL> 
09:17:04 SQL> -- rpt
09:17:04 SQL> 
09:17:04 SQL> SELECT
09:17:04   2  tkr
09:17:04   3  ,trend
09:17:04   4  ,gatt
09:17:04   5  ,COUNT(tkr)
09:17:04   6  ,AVG(g1)
09:17:04   7  FROM stk_svmd16
09:17:04   8  GROUP BY tkr,trend,gatt
09:17:04   9  ORDER BY tkr,trend,gatt
09:17:04  10  /

TKR	       TREND GAT COUNT(TKR)    AVG(G1)
--------- ---------- --- ---------- ----------
XOM		  -1 nup       1259 -.35269261
XOM		  -1 up        1047 .523008596
XOM		   1 nup       1835 -.31031063
XOM		   1 up        1172 .459240614
XOM		   1		  1

Elapsed: 00:00:00.01
09:17:04 SQL> 
09:17:04 SQL> CREATE OR REPLACE VIEW sc12tkr AS
09:17:04   2  SELECT
09:17:04   3  m.tkr
09:17:04   4  ,m.ydate
09:17:04   5  ,m.tkrdate
09:17:04   6  ,l.score score_long
09:17:04   7  ,s.score score_short
09:17:04   8  ,m.g1
09:17:04   9  FROM ystkscores l,ystkscores s,stk_svmd16 m
09:17:04  10  WHERE l.targ='gatt'
09:17:04  11  AND   s.targ='gattn'
09:17:04  12  AND l.tkrdate = s.tkrdate
09:17:04  13  AND l.tkrdate = m.tkrdate
09:17:04  14  -- Speed things up:
09:17:04  15  AND l.tkr = '&1'
09:17:04  16  AND s.tkr = '&1'
09:17:04  17  /
old  15: AND l.tkr = '&1'
new  15: AND l.tkr = 'XOM'
old  16: AND s.tkr = '&1'
new  16: AND s.tkr = 'XOM'

View created.

Elapsed: 00:00:00.04
09:17:04 SQL> 
09:17:04 SQL> -- DROP TABLE score_corr_tkr;
09:17:04 SQL> --
09:17:04 SQL> -- CREATE TABLE score_corr_tkr COMPRESS AS
09:17:04 SQL> -- SELECT tkrdate,AVG(sc_corr)sc_corr FROM
09:17:04 SQL> -- (
09:17:04 SQL> --   SELECT
09:17:04 SQL> --   tkrdate
09:17:04 SQL> --   -- Find corr() tween score and g1 over 8 day period:
09:17:04 SQL> --   ,CORR((score_long - score_short),g1)
09:17:04 SQL> --     OVER(PARTITION BY tkr ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)sc_corr
09:17:04 SQL> --   FROM sc12tkr
09:17:04 SQL> -- )
09:17:04 SQL> -- GROUP BY tkrdate
09:17:04 SQL> -- /
09:17:04 SQL> --
09:17:04 SQL> -- -- rpt
09:17:04 SQL> -- SELECT AVG(sc_corr),COUNT(sc_corr)FROM score_corr_tkr;
09:17:04 SQL> 
09:17:04 SQL> -- Now I derive goodness attributes:
09:17:04 SQL> 
09:17:04 SQL> DROP TABLE stk_ms;

Table dropped.

Elapsed: 00:00:00.13
09:17:05 SQL> 
09:17:05 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.34
09:17:05 SQL> 
09:17:05 SQL> CREATE TABLE stk_ms COMPRESS AS
09:17:05   2  SELECT
09:17:05   3  tkr
09:17:05   4  ,ydate
09:17:05   5  ,s.tkrdate
09:17:05   6  ,trend
09:17:05   7  ,g1
09:17:05   8  ,gatt
09:17:05   9  ,gattn
09:17:05  10  -- Recent CORR()tween scores and gains:
09:17:05  11  -- ,NVL(sc_corr,0)sc_corr
09:17:05  12  -- Goodness attributes:
09:17:05  13  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g00
09:17:05  14  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g01
09:17:05  15  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g02
09:17:05  16  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g03
09:17:05  17  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g04
09:17:05  18  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g05
09:17:05  19  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g06
09:17:05  20  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g07
09:17:05  21  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g08
09:17:05  22  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g09
09:17:05  23  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g10
09:17:05  24  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g11
09:17:05  25  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g12
09:17:05  26  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g13
09:17:05  27  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g14
09:17:05  28  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g15
09:17:05  29  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g16
09:17:05  30  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g17
09:17:05  31  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g18
09:17:05  32  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g19
09:17:05  33  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g20
09:17:05  34  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g21
09:17:05  35  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g22
09:17:05  36  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g23
09:17:05  37  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g24
09:17:05  38  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g25
09:17:05  39  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)g26
09:17:05  40  -- att26 is trend which is a powerful attribute so I derive 3 more goodness attributes from trend:
09:17:05  41  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 60 PRECEDING AND CURRENT ROW)g27
09:17:05  42  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 30 PRECEDING AND CURRENT ROW)g28
09:17:05  43  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 10 PRECEDING AND CURRENT ROW)g29
09:17:05  44  -- FROM stk_svmd16 s,score_corr_tkr c
09:17:05  45  -- WHERE s.tkrdate = c.tkrdate(+)
09:17:05  46  FROM stk_svmd16 s
09:17:05  47  /

Table created.

Elapsed: 00:00:00.95
09:17:06 SQL> 
09:17:06 SQL> -- rpt
09:17:06 SQL> 
09:17:06 SQL> SELECT
09:17:06   2  tkr
09:17:06   3  ,trend
09:17:06   4  ,gatt
09:17:06   5  ,COUNT(tkr)
09:17:06   6  ,AVG(g1)
09:17:06   7  -- ,AVG(sc_corr)
09:17:06   8  FROM stk_ms
09:17:06   9  GROUP BY tkr,trend,gatt
09:17:06  10  ORDER BY tkr,trend,gatt
09:17:06  11  /

TKR	       TREND GAT COUNT(TKR) AVG(G1)--,AVG(SC_CORR)
--------- ---------- --- ---------- ----------------------
XOM		  -1 nup       1259		-.35269261
XOM		  -1 up        1047		.523008596
XOM		   1 nup       1835		-.31031063
XOM		   1 up        1172		.459240614
XOM		   1		  1

Elapsed: 00:00:00.02
09:17:06 SQL> 
09:17:06 SQL> SELECT
09:17:06   2  tkr
09:17:06   3  ,trend
09:17:06   4  ,gattn
09:17:06   5  ,MIN(ydate)
09:17:06   6  ,COUNT(tkr)
09:17:06   7  ,MAX(ydate)
09:17:06   8  ,AVG(g1)
09:17:06   9  -- ,AVG(sc_corr)
09:17:06  10  FROM stk_ms
09:17:06  11  GROUP BY tkr,trend,gattn
09:17:06  12  ORDER BY tkr,trend,gattn
09:17:06  13  /

TKR	       TREND GAT MIN(YDATE) COUNT(TKR) MAX(YDATE) AVG(G1)--,AVG(SC_CORR)
--------- ---------- --- ---------- ---------- ---------- ----------------------
XOM		  -1 nup 1990-01-05	  1463 2010-12-20	      .374442925
XOM		  -1 up  1990-01-04	   843 2010-11-22	      -.52699881
XOM		   1 nup 1990-02-01	  1809 2011-01-26	       .29920398
XOM		   1 up  1990-01-02	  1198 2011-01-27	      -.47783806
XOM		   1	 2011-01-28	     1 2011-01-28

Elapsed: 00:00:00.01
09:17:06 SQL> 
09:17:06 SQL> SELECT
09:17:06   2  tkr
09:17:06   3  ,COUNT(tkr)
09:17:06   4  ,MIN(ydate),MAX(ydate)
09:17:06   5  FROM stk_ms
09:17:06   6  GROUP BY tkr
09:17:06   7  /

TKR	  COUNT(TKR) MIN(YDATE) MAX(YDATE)
--------- ---------- ---------- ----------
XOM		5314 1990-01-02 2011-01-28

Elapsed: 00:00:00.00
09:17:06 SQL> 
09:17:06 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
