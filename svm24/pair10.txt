
SQL*Plus: Release 11.2.0.1.0 Production on Wed Feb 2 20:37:37 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

20:37:37 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
20:37:37 SQL> 20:37:37 SQL> --
20:37:38 SQL> -- pair10.sql
20:37:38 SQL> --
20:37:38 SQL> 
20:37:38 SQL> -- Creates views and tables needed by SVM.
20:37:38 SQL> 
20:37:38 SQL> -- Start by sanding off some dukas data so it resembles IB data:
20:37:38 SQL> DROP TABLE di5min24;

Table dropped.

Elapsed: 00:00:00.39
20:37:38 SQL> 
20:37:38 SQL> CREATE TABLE di5min24 COMPRESS AS SELECT * FROM di5min;

Table created.

Elapsed: 00:00:00.87
20:37:39 SQL> 
20:37:39 SQL> DELETE di5min24 WHERE TO_CHAR(ydate,'HH24 MI')IN('22 00','22 05','22 10');

858 rows deleted.

Elapsed: 00:00:00.22
20:37:39 SQL> 
20:37:39 SQL> CREATE OR REPLACE VIEW svm2410 AS
20:37:39   2  SELECT
20:37:39   3  pair
20:37:39   4  ,ydate
20:37:39   5  ,prdate
20:37:39   6  ,rownum rnum -- acts as t in my time-series
20:37:39   7  ,clse
20:37:39   8  -- Derive a bunch of attributes from clse, the latest price:
20:37:39   9  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)min12
20:37:39  10  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)min18
20:37:39  11  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)min24
20:37:39  12  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)min30
20:37:39  13  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)min36
20:37:39  14  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)min48
20:37:39  15  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)min60
20:37:39  16  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)min72
20:37:39  17  --
20:37:39  18  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)avg12
20:37:39  19  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)avg18
20:37:39  20  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)avg24
20:37:39  21  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)avg30
20:37:39  22  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)avg36
20:37:39  23  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)avg48
20:37:39  24  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)avg60
20:37:39  25  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)avg72
20:37:39  26  --
20:37:39  27  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)max12
20:37:39  28  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)max18
20:37:39  29  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)max24
20:37:39  30  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)max30
20:37:39  31  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)max36
20:37:39  32  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)max48
20:37:39  33  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)max60
20:37:39  34  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)max72
20:37:39  35  --
20:37:39  36  ,LEAD(clse,12*24-3,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld1day
20:37:39  37  ,LEAD(ydate,12*24-3,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld_ydate
20:37:39  38  FROM di5min24 WHERE pair = '&1'
20:37:39  39  AND ydate > sysdate - 200
20:37:39  40  ORDER BY ydate
20:37:39  41  /
old  38: FROM di5min24 WHERE pair = '&1'
new  38: FROM di5min24 WHERE pair = 'usd_jpy'

View created.

Elapsed: 00:00:00.16
20:37:39 SQL> 
20:37:39 SQL> -- rpt
20:37:39 SQL> 
20:37:39 SQL> -- I should see that ld_ydate is exactly 1 trading day ahead of ydate:
20:37:39 SQL> 
20:37:39 SQL> SELECT
20:37:39   2  TO_CHAR(ydate,'YYYY-MM-DD HH24:MI Dy')dday
20:37:39   3  ,TO_CHAR(ld_ydate,'YYYY-MM-DD HH24:MI Dy')ldday
20:37:39   4  from svm2410
20:37:39   5  WHERE pair='&1'
20:37:39   6  AND ld_ydate > (SELECT MAX(ld_ydate)-1 from svm2410)
20:37:39   7  ORDER BY ydate
20:37:39   8  /
old   5: WHERE pair='&1'
new   5: WHERE pair='usd_jpy'

DDAY		     LDDAY
-------------------- --------------------
2011-01-31 19:45 Mon 2011-02-01 19:45 Tue
2011-01-31 19:50 Mon 2011-02-01 19:50 Tue
2011-01-31 19:55 Mon 2011-02-01 19:55 Tue
2011-01-31 20:00 Mon 2011-02-01 20:00 Tue
2011-01-31 20:05 Mon 2011-02-01 20:05 Tue
2011-01-31 20:10 Mon 2011-02-01 20:10 Tue
2011-01-31 20:15 Mon 2011-02-01 20:15 Tue
2011-01-31 20:20 Mon 2011-02-01 20:20 Tue
2011-01-31 20:25 Mon 2011-02-01 20:25 Tue
2011-01-31 20:30 Mon 2011-02-01 20:30 Tue
2011-01-31 20:35 Mon 2011-02-01 20:35 Tue
2011-01-31 20:40 Mon 2011-02-01 20:40 Tue
2011-01-31 20:45 Mon 2011-02-01 20:45 Tue
2011-01-31 20:50 Mon 2011-02-01 20:50 Tue
2011-01-31 20:55 Mon 2011-02-01 20:55 Tue
2011-01-31 21:00 Mon 2011-02-01 21:00 Tue
2011-01-31 21:05 Mon 2011-02-01 21:05 Tue
2011-01-31 21:10 Mon 2011-02-01 21:10 Tue
2011-01-31 21:15 Mon 2011-02-01 21:15 Tue
2011-01-31 21:20 Mon 2011-02-01 21:20 Tue
2011-01-31 21:25 Mon 2011-02-01 21:25 Tue
2011-01-31 21:30 Mon 2011-02-01 21:30 Tue
2011-01-31 21:35 Mon 2011-02-01 21:35 Tue
2011-01-31 21:40 Mon 2011-02-01 21:40 Tue
2011-01-31 21:45 Mon 2011-02-01 21:45 Tue
2011-01-31 21:50 Mon 2011-02-01 21:50 Tue
2011-01-31 21:55 Mon 2011-02-01 21:55 Tue
2011-01-31 22:15 Mon 2011-02-01 22:15 Tue
2011-01-31 22:20 Mon 2011-02-01 22:20 Tue
2011-01-31 22:25 Mon 2011-02-01 22:25 Tue
2011-01-31 22:30 Mon 2011-02-01 22:30 Tue
2011-01-31 22:35 Mon 2011-02-01 22:35 Tue
2011-01-31 22:40 Mon 2011-02-01 22:40 Tue
2011-01-31 22:45 Mon 2011-02-01 22:45 Tue
2011-01-31 22:50 Mon 2011-02-01 22:50 Tue
2011-01-31 22:55 Mon 2011-02-01 22:55 Tue
2011-01-31 23:00 Mon 2011-02-01 23:00 Tue
2011-01-31 23:05 Mon 2011-02-01 23:05 Tue
2011-01-31 23:10 Mon 2011-02-01 23:10 Tue
2011-01-31 23:15 Mon 2011-02-01 23:15 Tue
2011-01-31 23:20 Mon 2011-02-01 23:20 Tue
2011-01-31 23:25 Mon 2011-02-01 23:25 Tue
2011-01-31 23:30 Mon 2011-02-01 23:30 Tue
2011-01-31 23:35 Mon 2011-02-01 23:35 Tue
2011-01-31 23:40 Mon 2011-02-01 23:40 Tue
2011-01-31 23:45 Mon 2011-02-01 23:45 Tue
2011-01-31 23:50 Mon 2011-02-01 23:50 Tue
2011-01-31 23:55 Mon 2011-02-01 23:55 Tue
2011-02-01 00:00 Tue 2011-02-02 00:00 Wed
2011-02-01 00:05 Tue 2011-02-02 00:05 Wed
2011-02-01 00:10 Tue 2011-02-02 00:10 Wed
2011-02-01 00:15 Tue 2011-02-02 00:15 Wed
2011-02-01 00:20 Tue 2011-02-02 00:20 Wed
2011-02-01 00:25 Tue 2011-02-02 00:25 Wed
2011-02-01 00:30 Tue 2011-02-02 00:30 Wed
2011-02-01 00:35 Tue 2011-02-02 00:35 Wed
2011-02-01 00:40 Tue 2011-02-02 00:40 Wed
2011-02-01 00:45 Tue 2011-02-02 00:45 Wed
2011-02-01 00:50 Tue 2011-02-02 00:50 Wed
2011-02-01 00:55 Tue 2011-02-02 00:55 Wed
2011-02-01 01:00 Tue 2011-02-02 01:00 Wed
2011-02-01 01:05 Tue 2011-02-02 01:05 Wed
2011-02-01 01:10 Tue 2011-02-02 01:10 Wed
2011-02-01 01:15 Tue 2011-02-02 01:15 Wed
2011-02-01 01:20 Tue 2011-02-02 01:20 Wed
2011-02-01 01:25 Tue 2011-02-02 01:25 Wed
2011-02-01 01:30 Tue 2011-02-02 01:30 Wed
2011-02-01 01:35 Tue 2011-02-02 01:35 Wed
2011-02-01 01:40 Tue 2011-02-02 01:40 Wed
2011-02-01 01:45 Tue 2011-02-02 01:45 Wed
2011-02-01 01:50 Tue 2011-02-02 01:50 Wed
2011-02-01 01:55 Tue 2011-02-02 01:55 Wed
2011-02-01 02:00 Tue 2011-02-02 02:00 Wed
2011-02-01 02:05 Tue 2011-02-02 02:05 Wed
2011-02-01 02:10 Tue 2011-02-02 02:10 Wed
2011-02-01 02:15 Tue 2011-02-02 02:15 Wed
2011-02-01 02:20 Tue 2011-02-02 02:20 Wed
2011-02-01 02:25 Tue 2011-02-02 02:25 Wed
2011-02-01 02:30 Tue 2011-02-02 02:30 Wed
2011-02-01 02:35 Tue 2011-02-02 02:35 Wed
2011-02-01 02:40 Tue 2011-02-02 02:40 Wed
2011-02-01 02:45 Tue 2011-02-02 02:45 Wed
2011-02-01 02:50 Tue 2011-02-02 02:50 Wed
2011-02-01 02:55 Tue 2011-02-02 02:55 Wed
2011-02-01 03:00 Tue 2011-02-02 03:00 Wed
2011-02-01 03:05 Tue 2011-02-02 03:05 Wed
2011-02-01 03:10 Tue 2011-02-02 03:10 Wed
2011-02-01 03:15 Tue 2011-02-02 03:15 Wed
2011-02-01 03:20 Tue 2011-02-02 03:20 Wed
2011-02-01 03:25 Tue 2011-02-02 03:25 Wed
2011-02-01 03:30 Tue 2011-02-02 03:30 Wed
2011-02-01 03:35 Tue 2011-02-02 03:35 Wed
2011-02-01 03:40 Tue 2011-02-02 03:40 Wed
2011-02-01 03:45 Tue 2011-02-02 03:45 Wed
2011-02-01 03:50 Tue 2011-02-02 03:50 Wed
2011-02-01 03:55 Tue 2011-02-02 03:55 Wed
2011-02-01 04:00 Tue 2011-02-02 04:00 Wed
2011-02-01 04:05 Tue 2011-02-02 04:05 Wed
2011-02-01 04:10 Tue 2011-02-02 04:10 Wed
2011-02-01 04:15 Tue 2011-02-02 04:15 Wed
2011-02-01 04:20 Tue 2011-02-02 04:20 Wed
2011-02-01 04:25 Tue 2011-02-02 04:25 Wed
2011-02-01 04:30 Tue 2011-02-02 04:30 Wed
2011-02-01 04:35 Tue 2011-02-02 04:35 Wed
2011-02-01 04:40 Tue 2011-02-02 04:40 Wed
2011-02-01 04:45 Tue 2011-02-02 04:45 Wed
2011-02-01 04:50 Tue 2011-02-02 04:50 Wed
2011-02-01 04:55 Tue 2011-02-02 04:55 Wed
2011-02-01 05:00 Tue 2011-02-02 05:00 Wed
2011-02-01 05:05 Tue 2011-02-02 05:05 Wed
2011-02-01 05:10 Tue 2011-02-02 05:10 Wed
2011-02-01 05:15 Tue 2011-02-02 05:15 Wed
2011-02-01 05:20 Tue 2011-02-02 05:20 Wed
2011-02-01 05:25 Tue 2011-02-02 05:25 Wed
2011-02-01 05:30 Tue 2011-02-02 05:30 Wed
2011-02-01 05:35 Tue 2011-02-02 05:35 Wed
2011-02-01 05:40 Tue 2011-02-02 05:40 Wed
2011-02-01 05:45 Tue 2011-02-02 05:45 Wed
2011-02-01 05:50 Tue 2011-02-02 05:50 Wed
2011-02-01 05:55 Tue 2011-02-02 05:55 Wed

DDAY		     LDDAY
-------------------- --------------------
2011-02-01 06:00 Tue 2011-02-02 06:00 Wed
2011-02-01 06:05 Tue 2011-02-02 06:05 Wed
2011-02-01 06:10 Tue 2011-02-02 06:10 Wed
2011-02-01 06:15 Tue 2011-02-02 06:15 Wed
2011-02-01 06:20 Tue 2011-02-02 06:20 Wed
2011-02-01 06:25 Tue 2011-02-02 06:25 Wed
2011-02-01 06:30 Tue 2011-02-02 06:30 Wed
2011-02-01 06:35 Tue 2011-02-02 06:35 Wed
2011-02-01 06:40 Tue 2011-02-02 06:40 Wed
2011-02-01 06:45 Tue 2011-02-02 06:45 Wed
2011-02-01 06:50 Tue 2011-02-02 06:50 Wed
2011-02-01 06:55 Tue 2011-02-02 06:55 Wed
2011-02-01 07:00 Tue 2011-02-02 07:00 Wed
2011-02-01 07:05 Tue 2011-02-02 07:05 Wed
2011-02-01 07:10 Tue 2011-02-02 07:10 Wed
2011-02-01 07:15 Tue 2011-02-02 07:15 Wed
2011-02-01 07:20 Tue 2011-02-02 07:20 Wed
2011-02-01 07:25 Tue 2011-02-02 07:25 Wed
2011-02-01 07:30 Tue 2011-02-02 07:30 Wed
2011-02-01 07:35 Tue 2011-02-02 07:35 Wed
2011-02-01 07:40 Tue 2011-02-02 07:40 Wed
2011-02-01 07:45 Tue 2011-02-02 07:45 Wed
2011-02-01 07:50 Tue 2011-02-02 07:50 Wed
2011-02-01 07:55 Tue 2011-02-02 07:55 Wed
2011-02-01 08:00 Tue 2011-02-02 08:00 Wed
2011-02-01 08:05 Tue 2011-02-02 08:05 Wed
2011-02-01 08:10 Tue 2011-02-02 08:10 Wed
2011-02-01 08:15 Tue 2011-02-02 08:15 Wed
2011-02-01 08:20 Tue 2011-02-02 08:20 Wed
2011-02-01 08:25 Tue 2011-02-02 08:25 Wed
2011-02-01 08:30 Tue 2011-02-02 08:30 Wed
2011-02-01 08:35 Tue 2011-02-02 08:35 Wed
2011-02-01 08:40 Tue 2011-02-02 08:40 Wed
2011-02-01 08:45 Tue 2011-02-02 08:45 Wed
2011-02-01 08:50 Tue 2011-02-02 08:50 Wed
2011-02-01 08:55 Tue 2011-02-02 08:55 Wed
2011-02-01 09:00 Tue 2011-02-02 09:00 Wed
2011-02-01 09:05 Tue 2011-02-02 09:05 Wed
2011-02-01 09:10 Tue 2011-02-02 09:10 Wed
2011-02-01 09:15 Tue 2011-02-02 09:15 Wed
2011-02-01 09:20 Tue 2011-02-02 09:20 Wed
2011-02-01 09:25 Tue 2011-02-02 09:25 Wed
2011-02-01 09:30 Tue 2011-02-02 09:30 Wed
2011-02-01 09:35 Tue 2011-02-02 09:35 Wed
2011-02-01 09:40 Tue 2011-02-02 09:40 Wed
2011-02-01 09:45 Tue 2011-02-02 09:45 Wed
2011-02-01 09:50 Tue 2011-02-02 09:50 Wed
2011-02-01 09:55 Tue 2011-02-02 09:55 Wed
2011-02-01 10:00 Tue 2011-02-02 10:00 Wed
2011-02-01 10:05 Tue 2011-02-02 10:05 Wed
2011-02-01 10:10 Tue 2011-02-02 10:10 Wed
2011-02-01 10:15 Tue 2011-02-02 10:15 Wed
2011-02-01 10:20 Tue 2011-02-02 10:20 Wed
2011-02-01 10:25 Tue 2011-02-02 10:25 Wed
2011-02-01 10:30 Tue 2011-02-02 10:30 Wed
2011-02-01 10:35 Tue 2011-02-02 10:35 Wed
2011-02-01 10:40 Tue 2011-02-02 10:40 Wed
2011-02-01 10:45 Tue 2011-02-02 10:45 Wed
2011-02-01 10:50 Tue 2011-02-02 10:50 Wed
2011-02-01 10:55 Tue 2011-02-02 10:55 Wed
2011-02-01 11:00 Tue 2011-02-02 11:00 Wed
2011-02-01 11:05 Tue 2011-02-02 11:05 Wed
2011-02-01 11:10 Tue 2011-02-02 11:10 Wed
2011-02-01 11:15 Tue 2011-02-02 11:15 Wed
2011-02-01 11:20 Tue 2011-02-02 11:20 Wed
2011-02-01 11:25 Tue 2011-02-02 11:25 Wed
2011-02-01 11:30 Tue 2011-02-02 11:30 Wed
2011-02-01 11:35 Tue 2011-02-02 11:35 Wed
2011-02-01 11:40 Tue 2011-02-02 11:40 Wed
2011-02-01 11:45 Tue 2011-02-02 11:45 Wed
2011-02-01 11:50 Tue 2011-02-02 11:50 Wed
2011-02-01 11:55 Tue 2011-02-02 11:55 Wed
2011-02-01 12:00 Tue 2011-02-02 12:00 Wed
2011-02-01 12:05 Tue 2011-02-02 12:05 Wed
2011-02-01 12:10 Tue 2011-02-02 12:10 Wed
2011-02-01 12:15 Tue 2011-02-02 12:15 Wed
2011-02-01 12:20 Tue 2011-02-02 12:20 Wed
2011-02-01 12:25 Tue 2011-02-02 12:25 Wed
2011-02-01 12:30 Tue 2011-02-02 12:30 Wed
2011-02-01 12:35 Tue 2011-02-02 12:35 Wed
2011-02-01 12:40 Tue 2011-02-02 12:40 Wed
2011-02-01 12:45 Tue 2011-02-02 12:45 Wed
2011-02-01 12:50 Tue 2011-02-02 12:50 Wed
2011-02-01 12:55 Tue 2011-02-02 12:55 Wed
2011-02-01 13:00 Tue 2011-02-02 13:00 Wed
2011-02-01 13:05 Tue 2011-02-02 13:05 Wed
2011-02-01 13:10 Tue 2011-02-02 13:10 Wed
2011-02-01 13:15 Tue 2011-02-02 13:15 Wed
2011-02-01 13:20 Tue 2011-02-02 13:20 Wed
2011-02-01 13:25 Tue 2011-02-02 13:25 Wed
2011-02-01 13:30 Tue 2011-02-02 13:30 Wed
2011-02-01 13:35 Tue 2011-02-02 13:35 Wed
2011-02-01 13:40 Tue 2011-02-02 13:40 Wed
2011-02-01 13:45 Tue 2011-02-02 13:45 Wed
2011-02-01 13:50 Tue 2011-02-02 13:50 Wed
2011-02-01 13:55 Tue 2011-02-02 13:55 Wed
2011-02-01 14:00 Tue 2011-02-02 14:00 Wed
2011-02-01 14:05 Tue 2011-02-02 14:05 Wed
2011-02-01 14:10 Tue 2011-02-02 14:10 Wed
2011-02-01 14:15 Tue 2011-02-02 14:15 Wed
2011-02-01 14:20 Tue 2011-02-02 14:20 Wed
2011-02-01 14:25 Tue 2011-02-02 14:25 Wed
2011-02-01 14:30 Tue 2011-02-02 14:30 Wed
2011-02-01 14:35 Tue 2011-02-02 14:35 Wed
2011-02-01 14:40 Tue 2011-02-02 14:40 Wed
2011-02-01 14:45 Tue 2011-02-02 14:45 Wed
2011-02-01 14:50 Tue 2011-02-02 14:50 Wed
2011-02-01 14:55 Tue 2011-02-02 14:55 Wed
2011-02-01 15:00 Tue 2011-02-02 15:00 Wed
2011-02-01 15:05 Tue 2011-02-02 15:05 Wed
2011-02-01 15:10 Tue 2011-02-02 15:10 Wed
2011-02-01 15:15 Tue 2011-02-02 15:15 Wed
2011-02-01 15:20 Tue 2011-02-02 15:20 Wed
2011-02-01 15:25 Tue 2011-02-02 15:25 Wed
2011-02-01 15:30 Tue 2011-02-02 15:30 Wed
2011-02-01 15:35 Tue 2011-02-02 15:35 Wed
2011-02-01 15:40 Tue 2011-02-02 15:40 Wed
2011-02-01 15:45 Tue 2011-02-02 15:45 Wed
2011-02-01 15:50 Tue 2011-02-02 15:50 Wed
2011-02-01 15:55 Tue 2011-02-02 15:55 Wed

DDAY		     LDDAY
-------------------- --------------------
2011-02-01 16:00 Tue 2011-02-02 16:00 Wed
2011-02-01 16:05 Tue 2011-02-02 16:05 Wed
2011-02-01 16:10 Tue 2011-02-02 16:10 Wed
2011-02-01 16:15 Tue 2011-02-02 16:15 Wed
2011-02-01 16:20 Tue 2011-02-02 16:20 Wed
2011-02-01 16:25 Tue 2011-02-02 16:25 Wed
2011-02-01 16:30 Tue 2011-02-02 16:30 Wed
2011-02-01 16:35 Tue 2011-02-02 16:35 Wed
2011-02-01 16:40 Tue 2011-02-02 16:40 Wed
2011-02-01 16:45 Tue 2011-02-02 16:45 Wed
2011-02-01 16:50 Tue 2011-02-02 16:50 Wed
2011-02-01 16:55 Tue 2011-02-02 16:55 Wed
2011-02-01 17:00 Tue 2011-02-02 17:00 Wed
2011-02-01 17:05 Tue 2011-02-02 17:05 Wed
2011-02-01 17:10 Tue 2011-02-02 17:10 Wed
2011-02-01 17:15 Tue 2011-02-02 17:15 Wed
2011-02-01 17:20 Tue 2011-02-02 17:20 Wed
2011-02-01 17:25 Tue 2011-02-02 17:25 Wed
2011-02-01 17:30 Tue 2011-02-02 17:30 Wed
2011-02-01 17:35 Tue 2011-02-02 17:35 Wed
2011-02-01 17:40 Tue 2011-02-02 17:40 Wed
2011-02-01 17:45 Tue 2011-02-02 17:45 Wed
2011-02-01 17:50 Tue 2011-02-02 17:50 Wed
2011-02-01 17:55 Tue 2011-02-02 17:55 Wed
2011-02-01 18:00 Tue 2011-02-02 18:00 Wed
2011-02-01 18:05 Tue 2011-02-02 18:05 Wed
2011-02-01 18:10 Tue 2011-02-02 18:10 Wed
2011-02-01 18:15 Tue 2011-02-02 18:15 Wed
2011-02-01 18:20 Tue 2011-02-02 18:20 Wed
2011-02-01 18:25 Tue 2011-02-02 18:25 Wed
2011-02-01 18:30 Tue 2011-02-02 18:30 Wed
2011-02-01 18:35 Tue 2011-02-02 18:35 Wed
2011-02-01 18:40 Tue 2011-02-02 18:40 Wed
2011-02-01 18:45 Tue 2011-02-02 18:45 Wed
2011-02-01 18:50 Tue 2011-02-02 18:50 Wed
2011-02-01 18:55 Tue 2011-02-02 18:55 Wed
2011-02-01 19:00 Tue 2011-02-02 19:00 Wed
2011-02-01 19:05 Tue 2011-02-02 19:05 Wed
2011-02-01 19:10 Tue 2011-02-02 19:10 Wed
2011-02-01 19:15 Tue 2011-02-02 19:15 Wed
2011-02-01 19:20 Tue 2011-02-02 19:20 Wed
2011-02-01 19:25 Tue 2011-02-02 19:25 Wed
2011-02-01 19:30 Tue 2011-02-02 19:30 Wed
2011-02-01 19:35 Tue 2011-02-02 19:35 Wed
2011-02-01 19:40 Tue 2011-02-02 19:40 Wed

285 rows selected.

Elapsed: 00:00:02.71
20:37:42 SQL> 
20:37:42 SQL> -- I should see that hr 22 is missing 3 rows of data: 00, 05, 10
20:37:42 SQL> SELECT
20:37:42   2  TO_CHAR(ydate,'MI')
20:37:42   3  ,COUNT(TO_CHAR(ydate,'MI'))
20:37:42   4  FROM svm2410
20:37:42   5  WHERE TO_CHAR(ydate,'HH24')='22'
20:37:42   6  AND ydate > sysdate - 30
20:37:42   7  GROUP BY TO_CHAR(ydate,'MI')
20:37:42   8  ORDER BY 0+TO_CHAR(ydate,'MI')
20:37:42   9  /

TO COUNT(TO_CHAR(YDATE,'MI'))
-- --------------------------
15			   22
20			   22
25			   22
30			   22
35			   22
40			   22
45			   22
50			   22
55			   22

9 rows selected.

Elapsed: 00:00:01.32
20:37:43 SQL> 
20:37:43 SQL> -- I should see that other hours have all 12 rows of data
20:37:43 SQL> SELECT
20:37:43   2  TO_CHAR(ydate,'MI')
20:37:43   3  ,COUNT(TO_CHAR(ydate,'MI'))
20:37:43   4  FROM svm2410
20:37:43   5  WHERE TO_CHAR(ydate,'HH24')!='22'
20:37:43   6  AND ydate > sysdate - 30
20:37:43   7  GROUP BY TO_CHAR(ydate,'MI')
20:37:43   8  ORDER BY 0+TO_CHAR(ydate,'MI')
20:37:43   9  /

TO COUNT(TO_CHAR(YDATE,'MI'))
-- --------------------------
00			  505
05			  505
10			  505
15			  505
20			  505
25			  505
30			  505
35			  505
40			  506
45			  505
50			  504
55			  503

12 rows selected.

Elapsed: 00:00:01.40
20:37:45 SQL> 
20:37:45 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
20:37:45 SQL> 
20:37:45 SQL> DROP TABLE svm2412;

Table dropped.

Elapsed: 00:00:00.08
20:37:45 SQL> CREATE TABLE svm2412 COMPRESS AS
20:37:45   2  SELECT
20:37:45   3  pair
20:37:45   4  ,ydate
20:37:45   5  ,prdate
20:37:45   6  ,clse
20:37:45   7  -- g1 is important. I want to predict g1:
20:37:45   8  ,(ld1day - clse)/clse g1
20:37:45   9  ,SIGN(avg24 - LAG(avg24,2,NULL)OVER(PARTITION BY pair ORDER BY ydate))trend
20:37:45  10  -- I want more attributes from the ones I derived above:
20:37:45  11  -- clse relation to moving-min
20:37:45  12  ,clse-min12 cm12
20:37:45  13  ,clse-min18 cm18
20:37:45  14  ,clse-min24 cm24
20:37:45  15  ,clse-min30 cm30
20:37:45  16  ,clse-min36 cm36
20:37:45  17  ,clse-min48 cm48
20:37:45  18  ,clse-min60 cm60
20:37:45  19  ,clse-min72 cm72
20:37:45  20  -- clse relation to moving-avg
20:37:45  21  ,clse-avg12 ca12
20:37:45  22  ,clse-avg18 ca18
20:37:45  23  ,clse-avg24 ca24
20:37:45  24  ,clse-avg30 ca30
20:37:45  25  ,clse-avg36 ca36
20:37:45  26  ,clse-avg48 ca48
20:37:45  27  ,clse-avg60 ca60
20:37:45  28  ,clse-avg72 ca72
20:37:45  29  -- clse relation to moving-max
20:37:45  30  ,clse-max12 cx12
20:37:45  31  ,clse-max18 cx18
20:37:45  32  ,clse-max24 cx24
20:37:45  33  ,clse-max30 cx30
20:37:45  34  ,clse-max36 cx36
20:37:45  35  ,clse-max48 cx48
20:37:45  36  ,clse-max60 cx60
20:37:45  37  ,clse-max72 cx72
20:37:45  38  -- Derive more attributes.
20:37:45  39  -- I want to use CORR() here to help SVM see the shape of the series.
20:37:45  40  -- But COVAR_POP is more stable:
20:37:45  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:37:45  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
20:37:45  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:37:45  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)crr30
20:37:45  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)crr36
20:37:45  46  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)crr48
20:37:45  47  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)crr60
20:37:45  48  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:37:45  49  -- Derive date related attributes:
20:37:45  50  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:37:45  51  ,0+TO_CHAR(ydate,'D')d
20:37:45  52  ,0+TO_CHAR(ydate,'W')w
20:37:45  53  -- mpm stands for minutes-past-midnight:
20:37:45  54  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:37:45  55  -- mph stands for minutes-past-hour:
20:37:45  56  ,0+TO_CHAR(ydate,'MI')mph
20:37:45  57  FROM svm2410
20:37:45  58  -- Protect against divide by zero:
20:37:45  59  WHERE clse > 0
20:37:45  60  ORDER BY ydate
20:37:45  61  /

Table created.

Elapsed: 00:00:02.53
20:37:47 SQL> 
20:37:47 SQL> -- rpt
20:37:47 SQL> 
20:37:47 SQL> SELECT
20:37:47   2  pair
20:37:47   3  ,TO_CHAR(ydate,'D')dnum
20:37:47   4  ,TO_CHAR(ydate,'dy')dday
20:37:47   5  ,AVG(g1)
20:37:47   6  ,COUNT(pair)
20:37:47   7  ,MIN(clse),MAX(clse)
20:37:47   8  ,MIN(ydate),MAX(ydate)
20:37:47   9  FROM svm2412
20:37:47  10  GROUP BY pair,TO_CHAR(ydate,'D'),TO_CHAR(ydate,'dy')
20:37:47  11  ORDER BY pair,TO_CHAR(ydate,'D'),TO_CHAR(ydate,'dy')
20:37:47  12  /

PAIR	D DDA	 AVG(G1) COUNT(PAIR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE)	       MAX(YDATE)
------- - --- ---------- ----------- ---------- ---------- ------------------- -------------------
usd_jpy 1 sun .000150801	 359	  80.25      84.18 2010-10-31 20:55:00 2011-01-30 23:55:00
usd_jpy 2 mon -.00090776	4035	  80.35      84.38 2010-10-25 19:45:00 2011-01-31 23:55:00
usd_jpy 3 tue .002542984	4238	   80.5     84.265 2010-10-26 00:00:00 2011-02-01 23:55:00
usd_jpy 4 wed .000288715	4201	   80.6     84.485 2010-10-27 00:00:00 2011-02-02 19:40:00
usd_jpy 5 thu  -.0012015	3980	   80.6    84.4375 2010-10-28 00:00:00 2011-01-27 23:55:00
usd_jpy 6 fri  -.0003901	3689	  80.31    84.1975 2010-10-29 00:00:00 2011-01-28 21:55:00

6 rows selected.

Elapsed: 00:00:00.07
20:37:47 SQL> 
20:37:47 SQL> -- Prepare for derivation of NTILE based params:
20:37:47 SQL> 
20:37:47 SQL> DROP TABLE svm2414;

Table dropped.

Elapsed: 00:00:00.16
20:37:47 SQL> CREATE TABLE svm2414 COMPRESS AS
20:37:47   2  SELECT
20:37:47   3  pair
20:37:47   4  ,ydate
20:37:47   5  ,prdate
20:37:47   6  ,clse
20:37:47   7  ,g1
20:37:47   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1>0.0020 THEN'up'ELSE'nup'END gatt
20:37:47   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1<-0.0020 THEN'up'ELSE'nup'END gattn
20:37:47  10  ,CASE WHEN trend IS NULL THEN 1
20:37:47  11  	    WHEN trend =0      THEN 1
20:37:47  12  	    ELSE trend END trend
20:37:47  13  ,cm12
20:37:47  14  ,cm18
20:37:47  15  ,cm24
20:37:47  16  ,cm30
20:37:47  17  ,cm36
20:37:47  18  ,cm48
20:37:47  19  ,cm60
20:37:47  20  ,cm72
20:37:47  21  --
20:37:47  22  ,ca12
20:37:47  23  ,ca18
20:37:47  24  ,ca24
20:37:47  25  ,ca30
20:37:47  26  ,ca36
20:37:47  27  ,ca48
20:37:47  28  ,ca60
20:37:47  29  ,ca72
20:37:47  30  --
20:37:47  31  ,cx12
20:37:47  32  ,cx18
20:37:47  33  ,cx24
20:37:47  34  ,cx30
20:37:47  35  ,cx36
20:37:47  36  ,cx48
20:37:47  37  ,cx60
20:37:47  38  ,cx72
20:37:47  39  --
20:37:47  40  ,crr12
20:37:47  41  ,crr18
20:37:47  42  ,crr24
20:37:47  43  ,crr30
20:37:47  44  ,crr36
20:37:47  45  ,crr48
20:37:47  46  ,crr60
20:37:47  47  ,crr72
20:37:47  48  --
20:37:47  49  ,hh
20:37:47  50  ,d
20:37:47  51  ,w
20:37:47  52  ,mpm
20:37:47  53  ,mph
20:37:47  54  FROM svm2412
20:37:47  55  ORDER BY ydate
20:37:47  56  /

Table created.

Elapsed: 00:00:00.49
20:37:48 SQL> 
20:37:48 SQL> -- rpt
20:37:48 SQL> 
20:37:48 SQL> SELECT
20:37:48   2  pair
20:37:48   3  ,trend
20:37:48   4  ,gatt
20:37:48   5  ,d
20:37:48   6  ,hh
20:37:48   7  ,COUNT(pair)
20:37:48   8  ,AVG(g1)
20:37:48   9  FROM svm2414
20:37:48  10  GROUP BY pair,trend,gatt,d,hh
20:37:48  11  ORDER BY AVG(g1),pair,trend,gatt,d,hh
20:37:48  12  -- 500 rows
20:37:48  13  
20:37:48 SQL> -- Derive NTILE based params:
20:37:48 SQL> 
20:37:48 SQL> DROP TABLE svm2416;

Table dropped.

Elapsed: 00:00:00.05
20:37:48 SQL> CREATE TABLE svm2416 COMPRESS AS
20:37:48   2  SELECT
20:37:48   3  pair
20:37:48   4  ,ydate
20:37:48   5  ,prdate
20:37:48   6  ,clse
20:37:48   7  ,g1
20:37:48   8  ,gatt
20:37:48   9  ,gattn
20:37:48  10  ,trend
20:37:48  11  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm12)att00
20:37:48  12  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm18)att01
20:37:48  13  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm24)att02
20:37:48  14  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm30)att03
20:37:48  15  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm36)att04
20:37:48  16  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm48)att05
20:37:48  17  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm60)att06
20:37:48  18  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm72)att07
20:37:48  19  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca12)att08
20:37:48  20  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca18)att09
20:37:48  21  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca24)att10
20:37:48  22  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca30)att11
20:37:48  23  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca36)att12
20:37:48  24  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca48)att13
20:37:48  25  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca60)att14
20:37:48  26  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca72)att15
20:37:48  27  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx12)att16
20:37:48  28  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx18)att17
20:37:48  29  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx24)att18
20:37:48  30  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx30)att19
20:37:48  31  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx36)att20
20:37:48  32  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx48)att21
20:37:48  33  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx60)att22
20:37:48  34  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx72)att23
20:37:48  35  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr12)att24
20:37:48  36  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr18)att25
20:37:48  37  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr24)att26
20:37:48  38  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr30)att27
20:37:48  39  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr36)att28
20:37:48  40  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr48)att29
20:37:48  41  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr60)att30
20:37:48  42  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr72)att31
20:37:48  43  ,hh  att32
20:37:48  44  ,d   att33
20:37:48  45  ,w   att34
20:37:48  46  ,mpm att35
20:37:48  47  ,mph att36
20:37:48  48  ,trend att37
20:37:48  49  FROM svm2414
20:37:48  50  ORDER BY ydate
20:37:48  51  /

Table created.

Elapsed: 00:00:05.17
20:37:53 SQL> 
20:37:53 SQL> -- rpt
20:37:53 SQL> 
20:37:53 SQL> SELECT
20:37:53   2  pair
20:37:53   3  ,trend
20:37:53   4  ,gatt
20:37:53   5  ,att33 daynum
20:37:53   6  ,COUNT(pair)
20:37:53   7  ,AVG(g1)
20:37:53   8  FROM svm2416
20:37:53   9  GROUP BY pair,trend,gatt,att33
20:37:53  10  ORDER BY pair,trend,gatt,att33
20:37:53  11  /

PAIR	     TREND GAT	   DAYNUM COUNT(PAIR)	 AVG(G1)
------- ---------- --- ---------- ----------- ----------
usd_jpy 	-1 nup		1	  145  -.0018477
usd_jpy 	-1 nup		2	 1848 -.00292307
usd_jpy 	-1 nup		3	 1465 -.00277553
usd_jpy 	-1 nup		4	  793  -.0036294
usd_jpy 	-1 nup		5	 1543 -.00335863
usd_jpy 	-1 nup		6	 1609 -.00247149
usd_jpy 	-1 up		1	   70 .005458523
usd_jpy 	-1 up		2	  520 .006733787
usd_jpy 	-1 up		3	 1064 .009255058
usd_jpy 	-1 up		4	  754  .00735237
usd_jpy 	-1 up		5	  463 .006078451
usd_jpy 	-1 up		6	  691 .005427269
usd_jpy 	-1		3	   48
usd_jpy 	-1		4	  189
usd_jpy 	 1 nup		1	  102 -.00260816
usd_jpy 	 1 nup		2	 1176 -.00369773
usd_jpy 	 1 nup		3	  721 -.00251067
usd_jpy 	 1 nup		4	 1705  -.0030567
usd_jpy 	 1 nup		5	 1427 -.00346206
usd_jpy 	 1 nup		6	 1034	-.002431
usd_jpy 	 1 up		1	   42 .004904509
usd_jpy 	 1 up		2	  491 .005266759
usd_jpy 	 1 up		3	  940 .007110706
usd_jpy 	 1 up		4	  712 .005183387
usd_jpy 	 1 up		5	  547 .004618741
usd_jpy 	 1 up		6	  355 .003664648
usd_jpy 	 1		4	   48

27 rows selected.

Elapsed: 00:00:00.04
20:37:53 SQL> 
20:37:53 SQL> -- Join scores and gains:
20:37:53 SQL> 
20:37:53 SQL> CREATE OR REPLACE VIEW sc12 AS
20:37:53   2  SELECT
20:37:53   3  m.pair
20:37:53   4  ,m.ydate
20:37:53   5  ,m.prdate
20:37:53   6  ,l.score score_long
20:37:53   7  ,s.score score_short
20:37:53   8  ,ROUND(l.score,1) rscore_long
20:37:53   9  ,ROUND(s.score,1) rscore_short
20:37:53  10  ,m.g1
20:37:53  11  FROM svm24scores l,svm24scores s,svm2416 m
20:37:53  12  WHERE l.targ='gatt'
20:37:53  13  AND   s.targ='gattn'
20:37:53  14  AND l.prdate = s.prdate
20:37:53  15  AND l.prdate = m.prdate
20:37:53  16  -- Speed things up:
20:37:53  17  AND l.pair = '&1'
20:37:53  18  AND s.pair = '&1'
20:37:53  19  /
old  17: AND l.pair = '&1'
new  17: AND l.pair = 'usd_jpy'
old  18: AND s.pair = '&1'
new  18: AND s.pair = 'usd_jpy'

View created.

Elapsed: 00:00:00.08
20:37:53 SQL> 
20:37:53 SQL> -- rpt
20:37:53 SQL> SELECT pair,rscore_long,AVG(g1),MIN(ydate),COUNT(pair),MAX(ydate)FROM sc12
20:37:53   2  GROUP BY pair,rscore_long
20:37:53   3  ORDER BY pair,rscore_long
20:37:53   4  /

PAIR	RSCORE_LONG    AVG(G1) MIN(YDATE)	   COUNT(PAIR) MAX(YDATE)
------- ----------- ---------- ------------------- ----------- -------------------
usd_jpy 	  0 -.00484669 2011-01-17 03:55:00	    29 2011-01-27 13:45:00
usd_jpy 	 .1 -.00457054 2011-01-12 04:35:00	   291 2011-02-02 14:45:00
usd_jpy 	 .2 -.00274738 2011-01-12 00:30:00	   402 2011-02-02 17:10:00
usd_jpy 	 .3 -.00179601 2011-01-11 17:20:00	   711 2011-02-02 16:10:00
usd_jpy 	 .4 -.00054771 2011-01-09 22:35:00	  1164 2011-02-02 15:35:00
usd_jpy 	 .5  .00040561 2011-01-09 22:15:00	  1071 2011-02-02 14:10:00
usd_jpy 	 .6 .000292035 2011-01-09 22:30:00	   642 2011-02-02 17:15:00
usd_jpy 	 .7 .000245363 2011-01-10 00:05:00	   304 2011-02-02 17:00:00
usd_jpy 	 .8 .002012598 2011-01-10 02:20:00	    81 2011-02-02 17:05:00
usd_jpy 	 .9 .002203086 2011-01-11 02:20:00	    31 2011-02-02 16:55:00
usd_jpy 	  1 .002650933 2011-01-11 03:15:00	     4 2011-02-02 16:35:00

11 rows selected.

Elapsed: 00:00:00.34
20:37:54 SQL> 
20:37:54 SQL> DROP TABLE score_corr;

Table dropped.

Elapsed: 00:00:00.03
20:37:54 SQL> 
20:37:54 SQL> CREATE TABLE score_corr COMPRESS AS
20:37:54   2  SELECT
20:37:54   3  pair
20:37:54   4  -- ,ydate
20:37:54   5  ,prdate
20:37:54   6  -- Find corr() tween score and g1 over 11 day period:
20:37:54   7  ,CORR((score_long - score_short),g1)
20:37:54   8  	OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24*5 PRECEDING AND CURRENT ROW)sc_corr
20:37:54   9  FROM sc12
20:37:54  10  /

Table created.

Elapsed: 00:00:00.21
20:37:54 SQL> 
20:37:54 SQL> -- rpt
20:37:54 SQL> 
20:37:54 SQL> SELECT pair,AVG(sc_corr),COUNT(sc_corr)FROM score_corr GROUP BY pair;

PAIR	AVG(SC_CORR) COUNT(SC_CORR)
------- ------------ --------------
usd_jpy   .312745767	       4729

Elapsed: 00:00:00.01
20:37:54 SQL> 
20:37:54 SQL> DROP TABLE modsrc24;

Table dropped.

Elapsed: 00:00:00.07
20:37:54 SQL> 
20:37:54 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.45
20:37:54 SQL> 
20:37:54 SQL> CREATE TABLE modsrc24 COMPRESS AS
20:37:54   2  SELECT
20:37:54   3  s.pair
20:37:54   4  ,ydate
20:37:54   5  ,s.prdate
20:37:54   6  ,trend
20:37:54   7  ,g1
20:37:54   8  ,gatt
20:37:54   9  ,gattn
20:37:54  10  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g00
20:37:54  11  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g01
20:37:54  12  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g02
20:37:54  13  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g03
20:37:54  14  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g04
20:37:54  15  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g05
20:37:54  16  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g06
20:37:54  17  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g07
20:37:54  18  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g08
20:37:54  19  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g09
20:37:54  20  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g10
20:37:54  21  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g11
20:37:54  22  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g12
20:37:54  23  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g13
20:37:54  24  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g14
20:37:54  25  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g15
20:37:54  26  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g16
20:37:54  27  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g17
20:37:54  28  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g18
20:37:54  29  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g19
20:37:54  30  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g20
20:37:54  31  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g21
20:37:54  32  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g22
20:37:54  33  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g23
20:37:54  34  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g24
20:37:54  35  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g25
20:37:54  36  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g26
20:37:54  37  ,SUM(g1)OVER(PARTITION BY trend,att27 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g27
20:37:54  38  ,SUM(g1)OVER(PARTITION BY trend,att28 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g28
20:37:54  39  ,SUM(g1)OVER(PARTITION BY trend,att29 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g29
20:37:54  40  ,SUM(g1)OVER(PARTITION BY trend,att30 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g30
20:37:54  41  ,SUM(g1)OVER(PARTITION BY trend,att31 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g31
20:37:54  42  ,SUM(g1)OVER(PARTITION BY trend,att32 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g32
20:37:54  43  ,SUM(g1)OVER(PARTITION BY trend,att33 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g33
20:37:54  44  ,SUM(g1)OVER(PARTITION BY trend,att34 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g34
20:37:54  45  ,SUM(g1)OVER(PARTITION BY trend,att35 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g35
20:37:54  46  ,SUM(g1)OVER(PARTITION BY trend,att36 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g36
20:37:54  47  -- Add extra goodness attributes related to trend:
20:37:54  48  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*40 PRECEDING AND CURRENT ROW)g37
20:37:54  49  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g38
20:37:54  50  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*20 PRECEDING AND CURRENT ROW)g39
20:37:54  51  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*10 PRECEDING AND CURRENT ROW)g40
20:37:54  52  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*5  PRECEDING AND CURRENT ROW)g41
20:37:54  53  -- Recent CORR()tween scores and gains:
20:37:54  54  ,NVL(sc_corr,0)sc_corr
20:37:54  55  FROM svm2416 s,score_corr c
20:37:54  56  WHERE s.prdate = c.prdate(+)
20:37:54  57  /

Table created.

Elapsed: 00:00:06.94
20:38:01 SQL> 
20:38:01 SQL> ANALYZE TABLE modsrc24 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:02.95
20:38:04 SQL> 
20:38:04 SQL> -- rpt
20:38:04 SQL> 
20:38:04 SQL> SELECT
20:38:04   2  pair
20:38:04   3  ,trend
20:38:04   4  ,gatt
20:38:04   5  ,COUNT(pair)
20:38:04   6  ,AVG(g41)
20:38:04   7  FROM modsrc24
20:38:04   8  GROUP BY pair,trend,gatt
20:38:04   9  ORDER BY pair,trend,gatt
20:38:04  10  /

PAIR	     TREND GAT COUNT(PAIR)   AVG(G41)
------- ---------- --- ----------- ----------
usd_jpy 	-1 nup	      7403  .34804113
usd_jpy 	-1 up	      3562  1.4900087
usd_jpy 	-1	       237 -2.0975073
usd_jpy 	 1 nup	      6165 .018732628
usd_jpy 	 1 up	      3087 .025668094
usd_jpy 	 1		48 -3.9159774

6 rows selected.

Elapsed: 00:00:00.05
20:38:04 SQL> 
20:38:04 SQL> 
20:38:04 SQL> SELECT pair,COUNT(pair)FROM svm2410 GROUP BY pair;

PAIR	COUNT(PAIR)
------- -----------
usd_jpy       20502

Elapsed: 00:00:01.38
20:38:06 SQL> 
20:38:06 SQL> SELECT pair,COUNT(pair)FROM modsrc24 GROUP BY pair;

PAIR	COUNT(PAIR)
------- -----------
usd_jpy       20502

Elapsed: 00:00:00.01
20:38:06 SQL> 
20:38:06 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
