
SQL*Plus: Release 11.2.0.1.0 Production on Sat Feb 5 04:14:37 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

04:14:37 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
04:14:37 SQL> 04:14:37 SQL> --
04:14:37 SQL> -- pair10.sql
04:14:37 SQL> --
04:14:37 SQL> 
04:14:37 SQL> -- Creates views and tables needed by SVM.
04:14:37 SQL> 
04:14:37 SQL> -- Start by sanding off some dukas data so it resembles IB data:
04:14:37 SQL> DROP TABLE di5min24;

Table dropped.

Elapsed: 00:00:00.26
04:14:38 SQL> 
04:14:38 SQL> CREATE TABLE di5min24 COMPRESS AS SELECT * FROM di5min;

Table created.

Elapsed: 00:00:00.80
04:14:39 SQL> 
04:14:39 SQL> DELETE di5min24 WHERE TO_CHAR(ydate,'HH24 MI')IN('22 00','22 05','22 10');

759 rows deleted.

Elapsed: 00:00:00.13
04:14:39 SQL> 
04:14:39 SQL> CREATE OR REPLACE VIEW svm2410 AS
04:14:39   2  SELECT
04:14:39   3  pair
04:14:39   4  ,ydate
04:14:39   5  ,prdate
04:14:39   6  ,rownum rnum -- acts as t in my time-series
04:14:39   7  ,clse
04:14:39   8  -- Derive a bunch of attributes from clse, the latest price:
04:14:39   9  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)min12
04:14:39  10  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)min18
04:14:39  11  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)min24
04:14:39  12  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)min30
04:14:39  13  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)min36
04:14:39  14  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)min48
04:14:39  15  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)min60
04:14:39  16  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)min72
04:14:39  17  --
04:14:39  18  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)avg12
04:14:39  19  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)avg18
04:14:39  20  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)avg24
04:14:39  21  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)avg30
04:14:39  22  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)avg36
04:14:39  23  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)avg48
04:14:39  24  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)avg60
04:14:39  25  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)avg72
04:14:39  26  --
04:14:39  27  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)max12
04:14:39  28  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)max18
04:14:39  29  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)max24
04:14:39  30  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)max30
04:14:39  31  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)max36
04:14:39  32  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)max48
04:14:39  33  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)max60
04:14:39  34  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)max72
04:14:39  35  --
04:14:39  36  ,LEAD(clse,12*24-3,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld1day
04:14:39  37  ,LEAD(ydate,12*24-3,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld_ydate
04:14:39  38  FROM di5min24 WHERE pair = '&1'
04:14:39  39  AND ydate > sysdate - 200
04:14:39  40  ORDER BY ydate
04:14:39  41  /
old  38: FROM di5min24 WHERE pair = '&1'
new  38: FROM di5min24 WHERE pair = 'usd_cad'

View created.

Elapsed: 00:00:00.14
04:14:39 SQL> 
04:14:39 SQL> -- rpt
04:14:39 SQL> 
04:14:39 SQL> -- I should see that ld_ydate is exactly 1 trading day ahead of ydate:
04:14:39 SQL> 
04:14:39 SQL> SELECT
04:14:39   2  TO_CHAR(ydate,'YYYY-MM-DD HH24:MI Dy')dday
04:14:39   3  ,TO_CHAR(ld_ydate,'YYYY-MM-DD HH24:MI Dy')ldday
04:14:39   4  from svm2410
04:14:39   5  WHERE pair='&1'
04:14:39   6  AND ld_ydate > (SELECT MAX(ld_ydate)-1 from svm2410)
04:14:39   7  ORDER BY ydate
04:14:39   8  /
old   5: WHERE pair='&1'
new   5: WHERE pair='usd_cad'

DDAY		     LDDAY
-------------------- --------------------
2011-02-02 22:15 Wed 2011-02-03 22:15 Thu
2011-02-02 22:20 Wed 2011-02-03 22:20 Thu
2011-02-02 22:25 Wed 2011-02-03 22:25 Thu
2011-02-02 22:30 Wed 2011-02-03 22:30 Thu
2011-02-02 22:35 Wed 2011-02-03 22:35 Thu
2011-02-02 22:40 Wed 2011-02-03 22:40 Thu
2011-02-02 22:45 Wed 2011-02-03 22:45 Thu
2011-02-02 22:50 Wed 2011-02-03 22:50 Thu
2011-02-02 22:55 Wed 2011-02-03 22:55 Thu
2011-02-02 23:00 Wed 2011-02-03 23:00 Thu
2011-02-02 23:05 Wed 2011-02-03 23:05 Thu
2011-02-02 23:10 Wed 2011-02-03 23:10 Thu
2011-02-02 23:15 Wed 2011-02-03 23:15 Thu
2011-02-02 23:20 Wed 2011-02-03 23:20 Thu
2011-02-02 23:25 Wed 2011-02-03 23:25 Thu
2011-02-02 23:30 Wed 2011-02-03 23:30 Thu
2011-02-02 23:35 Wed 2011-02-03 23:35 Thu
2011-02-02 23:40 Wed 2011-02-03 23:40 Thu
2011-02-02 23:45 Wed 2011-02-03 23:45 Thu
2011-02-02 23:50 Wed 2011-02-03 23:50 Thu
2011-02-02 23:55 Wed 2011-02-03 23:55 Thu
2011-02-03 00:00 Thu 2011-02-04 00:00 Fri
2011-02-03 00:05 Thu 2011-02-04 00:05 Fri
2011-02-03 00:10 Thu 2011-02-04 00:10 Fri
2011-02-03 00:15 Thu 2011-02-04 00:15 Fri
2011-02-03 00:20 Thu 2011-02-04 00:20 Fri
2011-02-03 00:25 Thu 2011-02-04 00:25 Fri
2011-02-03 00:30 Thu 2011-02-04 00:30 Fri
2011-02-03 00:35 Thu 2011-02-04 00:35 Fri
2011-02-03 00:40 Thu 2011-02-04 00:40 Fri
2011-02-03 00:45 Thu 2011-02-04 00:45 Fri
2011-02-03 00:50 Thu 2011-02-04 00:50 Fri
2011-02-03 00:55 Thu 2011-02-04 00:55 Fri
2011-02-03 01:00 Thu 2011-02-04 01:00 Fri
2011-02-03 01:05 Thu 2011-02-04 01:05 Fri
2011-02-03 01:10 Thu 2011-02-04 01:10 Fri
2011-02-03 01:15 Thu 2011-02-04 01:15 Fri
2011-02-03 01:20 Thu 2011-02-04 01:20 Fri
2011-02-03 01:25 Thu 2011-02-04 01:25 Fri
2011-02-03 01:30 Thu 2011-02-04 01:30 Fri
2011-02-03 01:35 Thu 2011-02-04 01:35 Fri
2011-02-03 01:40 Thu 2011-02-04 01:40 Fri
2011-02-03 01:45 Thu 2011-02-04 01:45 Fri
2011-02-03 01:50 Thu 2011-02-04 01:50 Fri
2011-02-03 01:55 Thu 2011-02-04 01:55 Fri
2011-02-03 02:00 Thu 2011-02-04 02:00 Fri
2011-02-03 02:05 Thu 2011-02-04 02:05 Fri
2011-02-03 02:10 Thu 2011-02-04 02:10 Fri
2011-02-03 02:15 Thu 2011-02-04 02:15 Fri
2011-02-03 02:20 Thu 2011-02-04 02:20 Fri
2011-02-03 02:25 Thu 2011-02-04 02:25 Fri
2011-02-03 02:30 Thu 2011-02-04 02:30 Fri
2011-02-03 02:35 Thu 2011-02-04 02:35 Fri
2011-02-03 02:40 Thu 2011-02-04 02:40 Fri
2011-02-03 02:45 Thu 2011-02-04 02:45 Fri
2011-02-03 02:50 Thu 2011-02-04 02:50 Fri
2011-02-03 02:55 Thu 2011-02-04 02:55 Fri
2011-02-03 03:00 Thu 2011-02-04 03:00 Fri
2011-02-03 03:05 Thu 2011-02-04 03:05 Fri
2011-02-03 03:10 Thu 2011-02-04 03:10 Fri
2011-02-03 03:15 Thu 2011-02-04 03:15 Fri
2011-02-03 03:20 Thu 2011-02-04 03:20 Fri
2011-02-03 03:25 Thu 2011-02-04 03:25 Fri
2011-02-03 03:30 Thu 2011-02-04 03:30 Fri
2011-02-03 03:35 Thu 2011-02-04 03:35 Fri
2011-02-03 03:40 Thu 2011-02-04 03:40 Fri
2011-02-03 03:45 Thu 2011-02-04 03:45 Fri
2011-02-03 03:50 Thu 2011-02-04 03:50 Fri
2011-02-03 03:55 Thu 2011-02-04 03:55 Fri
2011-02-03 04:00 Thu 2011-02-04 04:00 Fri
2011-02-03 04:05 Thu 2011-02-04 04:05 Fri
2011-02-03 04:10 Thu 2011-02-04 04:10 Fri
2011-02-03 04:15 Thu 2011-02-04 04:15 Fri
2011-02-03 04:20 Thu 2011-02-04 04:20 Fri
2011-02-03 04:25 Thu 2011-02-04 04:25 Fri
2011-02-03 04:30 Thu 2011-02-04 04:30 Fri
2011-02-03 04:35 Thu 2011-02-04 04:35 Fri
2011-02-03 04:40 Thu 2011-02-04 04:40 Fri
2011-02-03 04:45 Thu 2011-02-04 04:45 Fri
2011-02-03 04:50 Thu 2011-02-04 04:50 Fri
2011-02-03 04:55 Thu 2011-02-04 04:55 Fri
2011-02-03 05:00 Thu 2011-02-04 05:00 Fri
2011-02-03 05:05 Thu 2011-02-04 05:05 Fri
2011-02-03 05:10 Thu 2011-02-04 05:10 Fri
2011-02-03 05:15 Thu 2011-02-04 05:15 Fri
2011-02-03 05:20 Thu 2011-02-04 05:20 Fri
2011-02-03 05:25 Thu 2011-02-04 05:25 Fri
2011-02-03 05:30 Thu 2011-02-04 05:30 Fri
2011-02-03 05:35 Thu 2011-02-04 05:35 Fri
2011-02-03 05:40 Thu 2011-02-04 05:40 Fri
2011-02-03 05:45 Thu 2011-02-04 05:45 Fri
2011-02-03 05:50 Thu 2011-02-04 05:50 Fri
2011-02-03 05:55 Thu 2011-02-04 05:55 Fri
2011-02-03 06:00 Thu 2011-02-04 06:00 Fri
2011-02-03 06:05 Thu 2011-02-04 06:05 Fri
2011-02-03 06:10 Thu 2011-02-04 06:10 Fri
2011-02-03 06:15 Thu 2011-02-04 06:15 Fri
2011-02-03 06:20 Thu 2011-02-04 06:20 Fri
2011-02-03 06:25 Thu 2011-02-04 06:25 Fri
2011-02-03 06:30 Thu 2011-02-04 06:30 Fri
2011-02-03 06:35 Thu 2011-02-04 06:35 Fri
2011-02-03 06:40 Thu 2011-02-04 06:40 Fri
2011-02-03 06:45 Thu 2011-02-04 06:45 Fri
2011-02-03 06:50 Thu 2011-02-04 06:50 Fri
2011-02-03 06:55 Thu 2011-02-04 06:55 Fri
2011-02-03 07:00 Thu 2011-02-04 07:00 Fri
2011-02-03 07:05 Thu 2011-02-04 07:05 Fri
2011-02-03 07:10 Thu 2011-02-04 07:10 Fri
2011-02-03 07:15 Thu 2011-02-04 07:15 Fri
2011-02-03 07:20 Thu 2011-02-04 07:20 Fri
2011-02-03 07:25 Thu 2011-02-04 07:25 Fri
2011-02-03 07:30 Thu 2011-02-04 07:30 Fri
2011-02-03 07:35 Thu 2011-02-04 07:35 Fri
2011-02-03 07:40 Thu 2011-02-04 07:40 Fri
2011-02-03 07:45 Thu 2011-02-04 07:45 Fri
2011-02-03 07:50 Thu 2011-02-04 07:50 Fri
2011-02-03 07:55 Thu 2011-02-04 07:55 Fri
2011-02-03 08:00 Thu 2011-02-04 08:00 Fri
2011-02-03 08:05 Thu 2011-02-04 08:05 Fri
2011-02-03 08:10 Thu 2011-02-04 08:10 Fri

DDAY		     LDDAY
-------------------- --------------------
2011-02-03 08:15 Thu 2011-02-04 08:15 Fri
2011-02-03 08:20 Thu 2011-02-04 08:20 Fri
2011-02-03 08:25 Thu 2011-02-04 08:25 Fri
2011-02-03 08:30 Thu 2011-02-04 08:30 Fri
2011-02-03 08:35 Thu 2011-02-04 08:35 Fri
2011-02-03 08:40 Thu 2011-02-04 08:40 Fri
2011-02-03 08:45 Thu 2011-02-04 08:45 Fri
2011-02-03 08:50 Thu 2011-02-04 08:50 Fri
2011-02-03 08:55 Thu 2011-02-04 08:55 Fri
2011-02-03 09:00 Thu 2011-02-04 09:00 Fri
2011-02-03 09:05 Thu 2011-02-04 09:05 Fri
2011-02-03 09:10 Thu 2011-02-04 09:10 Fri
2011-02-03 09:15 Thu 2011-02-04 09:15 Fri
2011-02-03 09:20 Thu 2011-02-04 09:20 Fri
2011-02-03 09:25 Thu 2011-02-04 09:25 Fri
2011-02-03 09:30 Thu 2011-02-04 09:30 Fri
2011-02-03 09:35 Thu 2011-02-04 09:35 Fri
2011-02-03 09:40 Thu 2011-02-04 09:40 Fri
2011-02-03 09:45 Thu 2011-02-04 09:45 Fri
2011-02-03 09:50 Thu 2011-02-04 09:50 Fri
2011-02-03 09:55 Thu 2011-02-04 09:55 Fri
2011-02-03 10:00 Thu 2011-02-04 10:00 Fri
2011-02-03 10:05 Thu 2011-02-04 10:05 Fri
2011-02-03 10:10 Thu 2011-02-04 10:10 Fri
2011-02-03 10:15 Thu 2011-02-04 10:15 Fri
2011-02-03 10:20 Thu 2011-02-04 10:20 Fri
2011-02-03 10:25 Thu 2011-02-04 10:25 Fri
2011-02-03 10:30 Thu 2011-02-04 10:30 Fri
2011-02-03 10:35 Thu 2011-02-04 10:35 Fri
2011-02-03 10:40 Thu 2011-02-04 10:40 Fri
2011-02-03 10:45 Thu 2011-02-04 10:45 Fri
2011-02-03 10:50 Thu 2011-02-04 10:50 Fri
2011-02-03 10:55 Thu 2011-02-04 10:55 Fri
2011-02-03 11:00 Thu 2011-02-04 11:00 Fri
2011-02-03 11:05 Thu 2011-02-04 11:05 Fri
2011-02-03 11:10 Thu 2011-02-04 11:10 Fri
2011-02-03 11:15 Thu 2011-02-04 11:15 Fri
2011-02-03 11:20 Thu 2011-02-04 11:20 Fri
2011-02-03 11:25 Thu 2011-02-04 11:25 Fri
2011-02-03 11:30 Thu 2011-02-04 11:30 Fri
2011-02-03 11:35 Thu 2011-02-04 11:35 Fri
2011-02-03 11:40 Thu 2011-02-04 11:40 Fri
2011-02-03 11:45 Thu 2011-02-04 11:45 Fri
2011-02-03 11:50 Thu 2011-02-04 11:50 Fri
2011-02-03 11:55 Thu 2011-02-04 11:55 Fri
2011-02-03 12:00 Thu 2011-02-04 12:00 Fri
2011-02-03 12:05 Thu 2011-02-04 12:05 Fri
2011-02-03 12:10 Thu 2011-02-04 12:10 Fri
2011-02-03 12:15 Thu 2011-02-04 12:15 Fri
2011-02-03 12:20 Thu 2011-02-04 12:20 Fri
2011-02-03 12:25 Thu 2011-02-04 12:25 Fri
2011-02-03 12:30 Thu 2011-02-04 12:30 Fri
2011-02-03 12:35 Thu 2011-02-04 12:35 Fri
2011-02-03 12:40 Thu 2011-02-04 12:40 Fri
2011-02-03 12:45 Thu 2011-02-04 12:45 Fri
2011-02-03 12:50 Thu 2011-02-04 12:50 Fri
2011-02-03 12:55 Thu 2011-02-04 12:55 Fri
2011-02-03 13:00 Thu 2011-02-04 13:00 Fri
2011-02-03 13:05 Thu 2011-02-04 13:05 Fri
2011-02-03 13:10 Thu 2011-02-04 13:10 Fri
2011-02-03 13:15 Thu 2011-02-04 13:15 Fri
2011-02-03 13:20 Thu 2011-02-04 13:20 Fri
2011-02-03 13:25 Thu 2011-02-04 13:25 Fri
2011-02-03 13:30 Thu 2011-02-04 13:30 Fri
2011-02-03 13:35 Thu 2011-02-04 13:35 Fri
2011-02-03 13:40 Thu 2011-02-04 13:40 Fri
2011-02-03 13:45 Thu 2011-02-04 13:45 Fri
2011-02-03 13:50 Thu 2011-02-04 13:50 Fri
2011-02-03 13:55 Thu 2011-02-04 13:55 Fri
2011-02-03 14:00 Thu 2011-02-04 14:00 Fri
2011-02-03 14:05 Thu 2011-02-04 14:05 Fri
2011-02-03 14:10 Thu 2011-02-04 14:10 Fri
2011-02-03 14:15 Thu 2011-02-04 14:15 Fri
2011-02-03 14:20 Thu 2011-02-04 14:20 Fri
2011-02-03 14:25 Thu 2011-02-04 14:25 Fri
2011-02-03 14:30 Thu 2011-02-04 14:30 Fri
2011-02-03 14:35 Thu 2011-02-04 14:35 Fri
2011-02-03 14:40 Thu 2011-02-04 14:40 Fri
2011-02-03 14:45 Thu 2011-02-04 14:45 Fri
2011-02-03 14:50 Thu 2011-02-04 14:50 Fri
2011-02-03 14:55 Thu 2011-02-04 14:55 Fri
2011-02-03 15:00 Thu 2011-02-04 15:00 Fri
2011-02-03 15:05 Thu 2011-02-04 15:05 Fri
2011-02-03 15:10 Thu 2011-02-04 15:10 Fri
2011-02-03 15:15 Thu 2011-02-04 15:15 Fri
2011-02-03 15:20 Thu 2011-02-04 15:20 Fri
2011-02-03 15:25 Thu 2011-02-04 15:25 Fri
2011-02-03 15:30 Thu 2011-02-04 15:30 Fri
2011-02-03 15:35 Thu 2011-02-04 15:35 Fri
2011-02-03 15:40 Thu 2011-02-04 15:40 Fri
2011-02-03 15:45 Thu 2011-02-04 15:45 Fri
2011-02-03 15:50 Thu 2011-02-04 15:50 Fri
2011-02-03 15:55 Thu 2011-02-04 15:55 Fri
2011-02-03 16:00 Thu 2011-02-04 16:00 Fri
2011-02-03 16:05 Thu 2011-02-04 16:05 Fri
2011-02-03 16:10 Thu 2011-02-04 16:10 Fri
2011-02-03 16:15 Thu 2011-02-04 16:15 Fri
2011-02-03 16:20 Thu 2011-02-04 16:20 Fri
2011-02-03 16:25 Thu 2011-02-04 16:25 Fri
2011-02-03 16:30 Thu 2011-02-04 16:30 Fri
2011-02-03 16:35 Thu 2011-02-04 16:35 Fri
2011-02-03 16:40 Thu 2011-02-04 16:40 Fri
2011-02-03 16:45 Thu 2011-02-04 16:45 Fri
2011-02-03 16:50 Thu 2011-02-04 16:50 Fri
2011-02-03 16:55 Thu 2011-02-04 16:55 Fri
2011-02-03 17:00 Thu 2011-02-04 17:00 Fri
2011-02-03 17:05 Thu 2011-02-04 17:05 Fri
2011-02-03 17:10 Thu 2011-02-04 17:10 Fri
2011-02-03 17:15 Thu 2011-02-04 17:15 Fri
2011-02-03 17:20 Thu 2011-02-04 17:20 Fri
2011-02-03 17:25 Thu 2011-02-04 17:25 Fri
2011-02-03 17:30 Thu 2011-02-04 17:30 Fri
2011-02-03 17:35 Thu 2011-02-04 17:35 Fri
2011-02-03 17:40 Thu 2011-02-04 17:40 Fri
2011-02-03 17:45 Thu 2011-02-04 17:45 Fri
2011-02-03 17:50 Thu 2011-02-04 17:50 Fri
2011-02-03 17:55 Thu 2011-02-04 17:55 Fri
2011-02-03 18:00 Thu 2011-02-04 18:00 Fri
2011-02-03 18:05 Thu 2011-02-04 18:05 Fri
2011-02-03 18:10 Thu 2011-02-04 18:10 Fri

DDAY		     LDDAY
-------------------- --------------------
2011-02-03 18:15 Thu 2011-02-04 18:15 Fri
2011-02-03 18:20 Thu 2011-02-04 18:20 Fri
2011-02-03 18:25 Thu 2011-02-04 18:25 Fri
2011-02-03 18:30 Thu 2011-02-04 18:30 Fri
2011-02-03 18:35 Thu 2011-02-04 18:35 Fri
2011-02-03 18:40 Thu 2011-02-04 18:40 Fri
2011-02-03 18:45 Thu 2011-02-04 18:45 Fri
2011-02-03 18:50 Thu 2011-02-04 18:50 Fri
2011-02-03 18:55 Thu 2011-02-04 18:55 Fri
2011-02-03 19:00 Thu 2011-02-04 19:00 Fri
2011-02-03 19:05 Thu 2011-02-04 19:05 Fri
2011-02-03 19:10 Thu 2011-02-04 19:10 Fri
2011-02-03 19:15 Thu 2011-02-04 19:15 Fri
2011-02-03 19:20 Thu 2011-02-04 19:20 Fri
2011-02-03 19:25 Thu 2011-02-04 19:25 Fri
2011-02-03 19:30 Thu 2011-02-04 19:30 Fri
2011-02-03 19:35 Thu 2011-02-04 19:35 Fri
2011-02-03 19:40 Thu 2011-02-04 19:40 Fri
2011-02-03 19:45 Thu 2011-02-04 19:45 Fri
2011-02-03 19:50 Thu 2011-02-04 19:50 Fri
2011-02-03 19:55 Thu 2011-02-04 19:55 Fri
2011-02-03 20:00 Thu 2011-02-04 20:00 Fri
2011-02-03 20:05 Thu 2011-02-04 20:05 Fri
2011-02-03 20:10 Thu 2011-02-04 20:10 Fri
2011-02-03 20:15 Thu 2011-02-04 20:15 Fri
2011-02-03 20:20 Thu 2011-02-04 20:20 Fri
2011-02-03 20:25 Thu 2011-02-04 20:25 Fri
2011-02-03 20:30 Thu 2011-02-04 20:30 Fri
2011-02-03 20:35 Thu 2011-02-04 20:35 Fri
2011-02-03 20:40 Thu 2011-02-04 20:40 Fri
2011-02-03 20:45 Thu 2011-02-04 20:45 Fri
2011-02-03 20:50 Thu 2011-02-04 20:50 Fri
2011-02-03 20:55 Thu 2011-02-04 20:55 Fri
2011-02-03 21:00 Thu 2011-02-04 21:00 Fri
2011-02-03 21:05 Thu 2011-02-04 21:05 Fri
2011-02-03 21:10 Thu 2011-02-04 21:10 Fri
2011-02-03 21:15 Thu 2011-02-04 21:15 Fri
2011-02-03 21:20 Thu 2011-02-04 21:20 Fri
2011-02-03 21:25 Thu 2011-02-04 21:25 Fri
2011-02-03 21:30 Thu 2011-02-04 21:30 Fri
2011-02-03 21:35 Thu 2011-02-04 21:35 Fri
2011-02-03 21:40 Thu 2011-02-04 21:40 Fri
2011-02-03 21:45 Thu 2011-02-04 21:45 Fri
2011-02-03 21:50 Thu 2011-02-04 21:50 Fri
2011-02-03 21:55 Thu 2011-02-04 21:55 Fri

285 rows selected.

Elapsed: 00:00:02.36
04:14:41 SQL> 
04:14:41 SQL> -- I should see that hr 22 is missing 3 rows of data: 00, 05, 10
04:14:41 SQL> SELECT
04:14:41   2  TO_CHAR(ydate,'MI')
04:14:41   3  ,COUNT(TO_CHAR(ydate,'MI'))
04:14:41   4  FROM svm2410
04:14:41   5  WHERE TO_CHAR(ydate,'HH24')='22'
04:14:41   6  AND ydate > sysdate - 30
04:14:41   7  GROUP BY TO_CHAR(ydate,'MI')
04:14:41   8  ORDER BY 0+TO_CHAR(ydate,'MI')
04:14:41   9  /

TO COUNT(TO_CHAR(YDATE,'MI'))
-- --------------------------
15			   21
20			   21
25			   21
30			   21
35			   21
40			   21
45			   21
50			   21
55			   21

9 rows selected.

Elapsed: 00:00:01.20
04:14:42 SQL> 
04:14:42 SQL> -- I should see that other hours have all 12 rows of data
04:14:42 SQL> SELECT
04:14:42   2  TO_CHAR(ydate,'MI')
04:14:42   3  ,COUNT(TO_CHAR(ydate,'MI'))
04:14:42   4  FROM svm2410
04:14:42   5  WHERE TO_CHAR(ydate,'HH24')!='22'
04:14:42   6  AND ydate > sysdate - 30
04:14:42   7  GROUP BY TO_CHAR(ydate,'MI')
04:14:42   8  ORDER BY 0+TO_CHAR(ydate,'MI')
04:14:42   9  /

TO COUNT(TO_CHAR(YDATE,'MI'))
-- --------------------------
00			  500
05			  500
10			  500
15			  501
20			  501
25			  501
30			  501
35			  501
40			  501
45			  501
50			  501
55			  501

12 rows selected.

Elapsed: 00:00:01.20
04:14:44 SQL> 
04:14:44 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
04:14:44 SQL> 
04:14:44 SQL> DROP TABLE svm2412;

Table dropped.

Elapsed: 00:00:00.07
04:14:44 SQL> CREATE TABLE svm2412 COMPRESS AS
04:14:44   2  SELECT
04:14:44   3  pair
04:14:44   4  ,ydate
04:14:44   5  ,prdate
04:14:44   6  ,clse
04:14:44   7  -- g1 is important. I want to predict g1:
04:14:44   8  ,(ld1day - clse)/clse g1
04:14:44   9  ,SIGN(avg24 - LAG(avg24,2,NULL)OVER(PARTITION BY pair ORDER BY ydate))trend
04:14:44  10  -- I want more attributes from the ones I derived above:
04:14:44  11  -- clse relation to moving-min
04:14:44  12  ,clse-min12 cm12
04:14:44  13  ,clse-min18 cm18
04:14:44  14  ,clse-min24 cm24
04:14:44  15  ,clse-min30 cm30
04:14:44  16  ,clse-min36 cm36
04:14:44  17  ,clse-min48 cm48
04:14:44  18  ,clse-min60 cm60
04:14:44  19  ,clse-min72 cm72
04:14:44  20  -- clse relation to moving-avg
04:14:44  21  ,clse-avg12 ca12
04:14:44  22  ,clse-avg18 ca18
04:14:44  23  ,clse-avg24 ca24
04:14:44  24  ,clse-avg30 ca30
04:14:44  25  ,clse-avg36 ca36
04:14:44  26  ,clse-avg48 ca48
04:14:44  27  ,clse-avg60 ca60
04:14:44  28  ,clse-avg72 ca72
04:14:44  29  -- clse relation to moving-max
04:14:44  30  ,clse-max12 cx12
04:14:44  31  ,clse-max18 cx18
04:14:44  32  ,clse-max24 cx24
04:14:44  33  ,clse-max30 cx30
04:14:44  34  ,clse-max36 cx36
04:14:44  35  ,clse-max48 cx48
04:14:44  36  ,clse-max60 cx60
04:14:44  37  ,clse-max72 cx72
04:14:44  38  -- Derive more attributes.
04:14:44  39  -- I want to use CORR() here to help SVM see the shape of the series.
04:14:44  40  -- But COVAR_POP is more stable:
04:14:44  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
04:14:44  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
04:14:44  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
04:14:44  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)crr30
04:14:44  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)crr36
04:14:44  46  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)crr48
04:14:44  47  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)crr60
04:14:44  48  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
04:14:44  49  -- Derive date related attributes:
04:14:44  50  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
04:14:44  51  ,0+TO_CHAR(ydate,'D')d
04:14:44  52  ,0+TO_CHAR(ydate,'W')w
04:14:44  53  -- mpm stands for minutes-past-midnight:
04:14:44  54  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
04:14:44  55  -- mph stands for minutes-past-hour:
04:14:44  56  ,0+TO_CHAR(ydate,'MI')mph
04:14:44  57  FROM svm2410
04:14:44  58  -- Protect against divide by zero:
04:14:44  59  WHERE clse > 0
04:14:44  60  ORDER BY ydate
04:14:44  61  /

Table created.

Elapsed: 00:00:02.30
04:14:46 SQL> 
04:14:46 SQL> -- rpt
04:14:46 SQL> 
04:14:46 SQL> SELECT
04:14:46   2  pair
04:14:46   3  ,TO_CHAR(ydate,'D')dnum
04:14:46   4  ,TO_CHAR(ydate,'dy')dday
04:14:46   5  ,AVG(g1)
04:14:46   6  ,COUNT(pair)
04:14:46   7  ,MIN(clse),MAX(clse)
04:14:46   8  ,MIN(ydate),MAX(ydate)
04:14:46   9  FROM svm2412
04:14:46  10  GROUP BY pair,TO_CHAR(ydate,'D'),TO_CHAR(ydate,'dy')
04:14:46  11  ORDER BY pair,TO_CHAR(ydate,'D'),TO_CHAR(ydate,'dy')
04:14:46  12  /

PAIR	D DDA	 AVG(G1) COUNT(PAIR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE)	       MAX(YDATE)
------- - --- ---------- ----------- ---------- ---------- ------------------- -------------------
usd_cad 1 sun .000079974	 359	  .9874     1.0191 2010-10-31 20:55:00 2011-01-30 23:55:00
usd_cad 2 mon .000139799	3989 .985875001     1.0249 2010-11-01 00:00:00 2011-01-31 23:55:00
usd_cad 3 tue -.00050267	3957	.983925   1.028075 2010-11-02 00:00:00 2011-02-01 23:55:00
usd_cad 4 wed -.00189153	3960	.985175      1.027 2010-11-03 00:00:00 2011-02-02 23:55:00
usd_cad 5 thu .000076489	4264	.985775     1.0285 2010-10-28 00:05:00 2011-02-03 23:55:00
usd_cad 6 fri -.00027128	3953	 .98355     1.0242 2010-10-29 00:00:00 2011-02-04 21:55:00

6 rows selected.

Elapsed: 00:00:00.07
04:14:46 SQL> 
04:14:46 SQL> -- Prepare for derivation of NTILE based params:
04:14:46 SQL> 
04:14:46 SQL> DROP TABLE svm2414;

Table dropped.

Elapsed: 00:00:00.11
04:14:46 SQL> CREATE TABLE svm2414 COMPRESS AS
04:14:46   2  SELECT
04:14:46   3  pair
04:14:46   4  ,ydate
04:14:46   5  ,prdate
04:14:46   6  ,clse
04:14:46   7  ,g1
04:14:46   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1>0.0020 THEN'up'ELSE'nup'END gatt
04:14:46   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1<-0.0020 THEN'up'ELSE'nup'END gattn
04:14:46  10  ,CASE WHEN trend IS NULL THEN 1
04:14:46  11  	    WHEN trend =0      THEN 1
04:14:46  12  	    ELSE trend END trend
04:14:46  13  ,cm12
04:14:46  14  ,cm18
04:14:46  15  ,cm24
04:14:46  16  ,cm30
04:14:46  17  ,cm36
04:14:46  18  ,cm48
04:14:46  19  ,cm60
04:14:46  20  ,cm72
04:14:46  21  --
04:14:46  22  ,ca12
04:14:46  23  ,ca18
04:14:46  24  ,ca24
04:14:46  25  ,ca30
04:14:46  26  ,ca36
04:14:46  27  ,ca48
04:14:46  28  ,ca60
04:14:46  29  ,ca72
04:14:46  30  --
04:14:46  31  ,cx12
04:14:46  32  ,cx18
04:14:46  33  ,cx24
04:14:46  34  ,cx30
04:14:46  35  ,cx36
04:14:46  36  ,cx48
04:14:46  37  ,cx60
04:14:46  38  ,cx72
04:14:46  39  --
04:14:46  40  ,crr12
04:14:46  41  ,crr18
04:14:46  42  ,crr24
04:14:46  43  ,crr30
04:14:46  44  ,crr36
04:14:46  45  ,crr48
04:14:46  46  ,crr60
04:14:46  47  ,crr72
04:14:46  48  --
04:14:46  49  ,hh
04:14:46  50  ,d
04:14:46  51  ,w
04:14:46  52  ,mpm
04:14:46  53  ,mph
04:14:46  54  FROM svm2412
04:14:46  55  ORDER BY ydate
04:14:46  56  /

Table created.

Elapsed: 00:00:00.41
04:14:47 SQL> 
04:14:47 SQL> -- rpt
04:14:47 SQL> 
04:14:47 SQL> SELECT
04:14:47   2  pair
04:14:47   3  ,trend
04:14:47   4  ,gatt
04:14:47   5  ,d
04:14:47   6  ,hh
04:14:47   7  ,COUNT(pair)
04:14:47   8  ,AVG(g1)
04:14:47   9  FROM svm2414
04:14:47  10  GROUP BY pair,trend,gatt,d,hh
04:14:47  11  ORDER BY AVG(g1),pair,trend,gatt,d,hh
04:14:47  12  -- 500 rows
04:14:47  13  
04:14:47 SQL> -- Derive NTILE based params:
04:14:47 SQL> 
04:14:47 SQL> DROP TABLE svm2416;

Table dropped.

Elapsed: 00:00:00.06
04:14:47 SQL> CREATE TABLE svm2416 COMPRESS AS
04:14:47   2  SELECT
04:14:47   3  pair
04:14:47   4  ,ydate
04:14:47   5  ,prdate
04:14:47   6  ,clse
04:14:47   7  ,g1
04:14:47   8  ,gatt
04:14:47   9  ,gattn
04:14:47  10  ,trend
04:14:47  11  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm12)att00
04:14:47  12  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm18)att01
04:14:47  13  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm24)att02
04:14:47  14  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm30)att03
04:14:47  15  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm36)att04
04:14:47  16  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm48)att05
04:14:47  17  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm60)att06
04:14:47  18  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm72)att07
04:14:47  19  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca12)att08
04:14:47  20  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca18)att09
04:14:47  21  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca24)att10
04:14:47  22  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca30)att11
04:14:47  23  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca36)att12
04:14:47  24  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca48)att13
04:14:47  25  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca60)att14
04:14:47  26  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca72)att15
04:14:47  27  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx12)att16
04:14:47  28  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx18)att17
04:14:47  29  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx24)att18
04:14:47  30  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx30)att19
04:14:47  31  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx36)att20
04:14:47  32  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx48)att21
04:14:47  33  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx60)att22
04:14:47  34  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx72)att23
04:14:47  35  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr12)att24
04:14:47  36  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr18)att25
04:14:47  37  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr24)att26
04:14:47  38  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr30)att27
04:14:47  39  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr36)att28
04:14:47  40  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr48)att29
04:14:47  41  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr60)att30
04:14:47  42  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr72)att31
04:14:47  43  ,hh  att32
04:14:47  44  ,d   att33
04:14:47  45  ,w   att34
04:14:47  46  ,mpm att35
04:14:47  47  ,mph att36
04:14:47  48  ,trend att37
04:14:47  49  FROM svm2414
04:14:47  50  ORDER BY ydate
04:14:47  51  /

Table created.

Elapsed: 00:00:05.17
04:14:52 SQL> 
04:14:52 SQL> -- rpt
04:14:52 SQL> 
04:14:52 SQL> SELECT
04:14:52   2  pair
04:14:52   3  ,trend
04:14:52   4  ,gatt
04:14:52   5  ,att33 daynum
04:14:52   6  ,COUNT(pair)
04:14:52   7  ,AVG(g1)
04:14:52   8  FROM svm2416
04:14:52   9  GROUP BY pair,trend,gatt,att33
04:14:52  10  ORDER BY pair,trend,gatt,att33
04:14:52  11  /

PAIR	     TREND GAT	   DAYNUM COUNT(PAIR)	 AVG(G1)
------- ---------- --- ---------- ----------- ----------
usd_cad 	-1 nup		1	  177 -.00113366
usd_cad 	-1 nup		2	 1450 -.00268249
usd_cad 	-1 nup		3	 1426	 -.00311
usd_cad 	-1 nup		4	 1898  -.0027475
usd_cad 	-1 nup		5	 2088 -.00228509
usd_cad 	-1 nup		6	 1520 -.00192585
usd_cad 	-1 up		1	   61 .002775948
usd_cad 	-1 up		2	  851 .006168567
usd_cad 	-1 up		3	  698 .006797846
usd_cad 	-1 up		4	  305 .003098757
usd_cad 	-1 up		5	  987 .005857543
usd_cad 	-1 up		6	  366 .004549738
usd_cad 	-1		6	  114
usd_cad 	 1 nup		1	   90 -.00073544
usd_cad 	 1 nup		2	 1133 -.00300803
usd_cad 	 1 nup		3	 1326 -.00355081
usd_cad 	 1 nup		4	 1484 -.00330456
usd_cad 	 1 nup		5	  867 -.00273222
usd_cad 	 1 nup		6	 1161 -.00265921
usd_cad 	 1 up		1	   31 .004071819
usd_cad 	 1 up		2	  555 .004695357
usd_cad 	 1 up		3	  507 .004751999
usd_cad 	 1 up		4	  273 .006165447
usd_cad 	 1 up		5	  301 .005592177
usd_cad 	 1 up		6	  642 .005215989
usd_cad 	 1		5	   21
usd_cad 	 1		6	  150

27 rows selected.

Elapsed: 00:00:00.03
04:14:52 SQL> 
04:14:52 SQL> -- Join scores and gains:
04:14:52 SQL> 
04:14:52 SQL> CREATE OR REPLACE VIEW sc12 AS
04:14:52   2  SELECT
04:14:52   3  m.pair
04:14:52   4  ,m.ydate
04:14:52   5  ,m.prdate
04:14:52   6  ,l.score score_long
04:14:52   7  ,s.score score_short
04:14:52   8  ,ROUND(l.score,1) rscore_long
04:14:52   9  ,ROUND(s.score,1) rscore_short
04:14:52  10  ,m.g1
04:14:52  11  FROM svm24scores l,svm24scores s,svm2416 m
04:14:52  12  WHERE l.targ='gatt'
04:14:52  13  AND   s.targ='gattn'
04:14:52  14  AND l.prdate = s.prdate
04:14:52  15  AND l.prdate = m.prdate
04:14:52  16  -- Speed things up:
04:14:52  17  AND l.pair = '&1'
04:14:52  18  AND s.pair = '&1'
04:14:52  19  /
old  17: AND l.pair = '&1'
new  17: AND l.pair = 'usd_cad'
old  18: AND s.pair = '&1'
new  18: AND s.pair = 'usd_cad'

View created.

Elapsed: 00:00:00.05
04:14:52 SQL> 
04:14:52 SQL> -- rpt
04:14:52 SQL> SELECT pair,rscore_long,AVG(g1),MIN(ydate),COUNT(pair),MAX(ydate)FROM sc12
04:14:52   2  GROUP BY pair,rscore_long
04:14:52   3  ORDER BY pair,rscore_long
04:14:52   4  /

PAIR	RSCORE_LONG    AVG(G1) MIN(YDATE)	   COUNT(PAIR) MAX(YDATE)
------- ----------- ---------- ------------------- ----------- -------------------
usd_cad 	  0 -.00432844 2011-02-01 14:35:00	     6 2011-02-02 01:20:00
usd_cad 	 .1 -.00343219 2011-02-01 07:05:00	    92 2011-02-04 15:30:00
usd_cad 	 .2 -.00320386 2011-02-01 06:55:00	   121 2011-02-04 16:30:00
usd_cad 	 .3 -.00355992 2011-02-01 06:15:00	   119 2011-02-04 16:05:00
usd_cad 	 .4 -.00222603 2011-02-01 05:40:00	   109 2011-02-04 16:15:00
usd_cad 	 .5  -.0010755 2011-02-01 06:20:00	   130 2011-02-04 16:35:00
usd_cad 	 .6  -.0002894 2011-02-01 05:55:00	   157 2011-02-04 15:15:00
usd_cad 	 .7  .00018137 2011-02-01 05:50:00	   118 2011-02-04 11:40:00
usd_cad 	 .8  .00006842 2011-02-01 05:45:00	    83 2011-02-04 10:20:00
usd_cad 	 .9 -.00022077 2011-02-01 05:35:00	    49 2011-02-04 09:45:00
usd_cad 	  1 -.00011067 2011-02-03 00:45:00	     4 2011-02-03 12:35:00

11 rows selected.

Elapsed: 00:00:00.06
04:14:52 SQL> 
04:14:52 SQL> DROP TABLE score_corr;

Table dropped.

Elapsed: 00:00:00.20
04:14:52 SQL> 
04:14:52 SQL> CREATE TABLE score_corr COMPRESS AS
04:14:52   2  SELECT
04:14:52   3  pair
04:14:52   4  -- ,ydate
04:14:52   5  ,prdate
04:14:52   6  -- Find corr() tween score and g1 over 11 day period:
04:14:52   7  ,CORR((score_long - score_short),g1)
04:14:52   8  	OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24*5 PRECEDING AND CURRENT ROW)sc_corr
04:14:52   9  FROM sc12
04:14:52  10  /

Table created.

Elapsed: 00:00:00.11
04:14:52 SQL> 
04:14:52 SQL> -- rpt
04:14:52 SQL> 
04:14:52 SQL> SELECT pair,AVG(sc_corr),COUNT(sc_corr)FROM score_corr GROUP BY pair;

PAIR	AVG(SC_CORR) COUNT(SC_CORR)
------- ------------ --------------
usd_cad   .371069312		987

Elapsed: 00:00:00.01
04:14:52 SQL> 
04:14:52 SQL> DROP TABLE modsrc24;

Table dropped.

Elapsed: 00:00:00.19
04:14:52 SQL> 
04:14:52 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.43
04:14:53 SQL> 
04:14:53 SQL> CREATE TABLE modsrc24 COMPRESS AS
04:14:53   2  SELECT
04:14:53   3  s.pair
04:14:53   4  ,ydate
04:14:53   5  ,s.prdate
04:14:53   6  ,trend
04:14:53   7  ,g1
04:14:53   8  ,gatt
04:14:53   9  ,gattn
04:14:53  10  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g00
04:14:53  11  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g01
04:14:53  12  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g02
04:14:53  13  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g03
04:14:53  14  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g04
04:14:53  15  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g05
04:14:53  16  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g06
04:14:53  17  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g07
04:14:53  18  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g08
04:14:53  19  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g09
04:14:53  20  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g10
04:14:53  21  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g11
04:14:53  22  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g12
04:14:53  23  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g13
04:14:53  24  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g14
04:14:53  25  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g15
04:14:53  26  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g16
04:14:53  27  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g17
04:14:53  28  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g18
04:14:53  29  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g19
04:14:53  30  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g20
04:14:53  31  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g21
04:14:53  32  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g22
04:14:53  33  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g23
04:14:53  34  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g24
04:14:53  35  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g25
04:14:53  36  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g26
04:14:53  37  ,SUM(g1)OVER(PARTITION BY trend,att27 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g27
04:14:53  38  ,SUM(g1)OVER(PARTITION BY trend,att28 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g28
04:14:53  39  ,SUM(g1)OVER(PARTITION BY trend,att29 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g29
04:14:53  40  ,SUM(g1)OVER(PARTITION BY trend,att30 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g30
04:14:53  41  ,SUM(g1)OVER(PARTITION BY trend,att31 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g31
04:14:53  42  ,SUM(g1)OVER(PARTITION BY trend,att32 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g32
04:14:53  43  ,SUM(g1)OVER(PARTITION BY trend,att33 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g33
04:14:53  44  ,SUM(g1)OVER(PARTITION BY trend,att34 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g34
04:14:53  45  ,SUM(g1)OVER(PARTITION BY trend,att35 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g35
04:14:53  46  ,SUM(g1)OVER(PARTITION BY trend,att36 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g36
04:14:53  47  -- Add extra goodness attributes related to trend:
04:14:53  48  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*40 PRECEDING AND CURRENT ROW)g37
04:14:53  49  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g38
04:14:53  50  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*20 PRECEDING AND CURRENT ROW)g39
04:14:53  51  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*10 PRECEDING AND CURRENT ROW)g40
04:14:53  52  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*5  PRECEDING AND CURRENT ROW)g41
04:14:53  53  -- Recent CORR()tween scores and gains:
04:14:53  54  ,NVL(sc_corr,0)sc_corr
04:14:53  55  FROM svm2416 s,score_corr c
04:14:53  56  WHERE s.prdate = c.prdate(+)
04:14:53  57  /

Table created.

Elapsed: 00:00:06.98
04:15:00 SQL> 
04:15:00 SQL> ANALYZE TABLE modsrc24 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:02.70
04:15:03 SQL> 
04:15:03 SQL> -- rpt
04:15:03 SQL> 
04:15:03 SQL> SELECT
04:15:03   2  pair
04:15:03   3  ,trend
04:15:03   4  ,gatt
04:15:03   5  ,COUNT(pair)
04:15:03   6  ,AVG(g41)
04:15:03   7  FROM modsrc24
04:15:03   8  GROUP BY pair,trend,gatt
04:15:03   9  ORDER BY pair,trend,gatt
04:15:03  10  /

PAIR	     TREND GAT COUNT(PAIR)   AVG(G41)
------- ---------- --- ----------- ----------
usd_cad 	-1 nup	      8559 -.68566482
usd_cad 	-1 up	      3268 .713033121
usd_cad 	-1	       114 -.27312544
usd_cad 	 1 nup	      6061 -.92212736
usd_cad 	 1 up	      2309 -1.0070793
usd_cad 	 1	       171 -2.0269508

6 rows selected.

Elapsed: 00:00:00.02
04:15:03 SQL> 
04:15:03 SQL> 
04:15:03 SQL> SELECT pair,COUNT(pair)FROM svm2410 GROUP BY pair;

PAIR	COUNT(PAIR)
------- -----------
usd_cad       20482

Elapsed: 00:00:01.11
04:15:04 SQL> 
04:15:04 SQL> SELECT pair,COUNT(pair)FROM modsrc24 GROUP BY pair;

PAIR	COUNT(PAIR)
------- -----------
usd_cad       20482

Elapsed: 00:00:00.01
04:15:04 SQL> 
04:15:04 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
