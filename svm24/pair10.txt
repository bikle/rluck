
SQL*Plus: Release 11.2.0.1.0 Production on Mon Feb 7 17:17:59 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

17:17:59 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
17:17:59 SQL> 17:17:59 SQL> --
17:17:59 SQL> -- pair10.sql
17:17:59 SQL> --
17:17:59 SQL> 
17:17:59 SQL> -- Creates views and tables needed by SVM.
17:17:59 SQL> 
17:17:59 SQL> -- Start by sanding off some dukas data so it resembles IB data:
17:17:59 SQL> DROP TABLE di5min24;

Table dropped.

Elapsed: 00:00:00.20
17:17:59 SQL> 
17:17:59 SQL> CREATE TABLE di5min24 COMPRESS AS SELECT * FROM di5min;

Table created.

Elapsed: 00:00:00.84
17:18:00 SQL> 
17:18:00 SQL> DELETE di5min24 WHERE TO_CHAR(ydate,'HH24 MI')IN('22 00','22 05','22 10');

726 rows deleted.

Elapsed: 00:00:00.18
17:18:00 SQL> 
17:18:00 SQL> CREATE OR REPLACE VIEW svm2410 AS
17:18:00   2  SELECT
17:18:00   3  pair
17:18:00   4  ,ydate
17:18:00   5  ,prdate
17:18:00   6  ,rownum rnum -- acts as t in my time-series
17:18:00   7  ,clse
17:18:00   8  -- Derive a bunch of attributes from clse, the latest price:
17:18:00   9  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)min12
17:18:00  10  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)min18
17:18:00  11  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)min24
17:18:00  12  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)min30
17:18:00  13  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)min36
17:18:00  14  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)min48
17:18:00  15  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)min60
17:18:00  16  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)min72
17:18:00  17  --
17:18:00  18  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)avg12
17:18:00  19  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)avg18
17:18:00  20  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)avg24
17:18:00  21  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)avg30
17:18:00  22  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)avg36
17:18:00  23  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)avg48
17:18:00  24  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)avg60
17:18:00  25  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)avg72
17:18:00  26  --
17:18:00  27  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)max12
17:18:00  28  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)max18
17:18:00  29  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)max24
17:18:00  30  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)max30
17:18:00  31  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)max36
17:18:00  32  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)max48
17:18:00  33  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)max60
17:18:00  34  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)max72
17:18:00  35  --
17:18:00  36  ,LEAD(clse,12*24-3,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld1day
17:18:00  37  ,LEAD(ydate,12*24-3,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld_ydate
17:18:00  38  FROM di5min24 WHERE pair = '&1'
17:18:00  39  AND ydate > sysdate - 200
17:18:00  40  ORDER BY ydate
17:18:00  41  /
old  38: FROM di5min24 WHERE pair = '&1'
new  38: FROM di5min24 WHERE pair = 'usd_cad'

View created.

Elapsed: 00:00:00.09
17:18:00 SQL> 
17:18:00 SQL> -- rpt
17:18:00 SQL> 
17:18:00 SQL> -- I should see that ld_ydate is exactly 1 trading day ahead of ydate:
17:18:00 SQL> 
17:18:00 SQL> SELECT
17:18:00   2  TO_CHAR(ydate,'YYYY-MM-DD HH24:MI Dy')dday
17:18:00   3  ,TO_CHAR(ld_ydate,'YYYY-MM-DD HH24:MI Dy')ldday
17:18:00   4  from svm2410
17:18:00   5  WHERE pair='&1'
17:18:00   6  AND ld_ydate > (SELECT MAX(ld_ydate)-1 from svm2410)
17:18:00   7  ORDER BY ydate
17:18:00   8  /
old   5: WHERE pair='&1'
new   5: WHERE pair='usd_cad'

DDAY		     LDDAY
-------------------- --------------------
2011-02-03 22:15 Thu 2011-02-06 22:15 Sun
2011-02-03 22:20 Thu 2011-02-06 22:20 Sun
2011-02-03 22:25 Thu 2011-02-06 22:25 Sun
2011-02-03 22:30 Thu 2011-02-06 22:30 Sun
2011-02-03 22:35 Thu 2011-02-06 22:35 Sun
2011-02-03 22:40 Thu 2011-02-06 22:40 Sun
2011-02-03 22:45 Thu 2011-02-06 22:45 Sun
2011-02-03 22:50 Thu 2011-02-06 22:50 Sun
2011-02-03 22:55 Thu 2011-02-06 22:55 Sun
2011-02-03 23:00 Thu 2011-02-06 23:00 Sun
2011-02-03 23:05 Thu 2011-02-06 23:05 Sun
2011-02-03 23:10 Thu 2011-02-06 23:10 Sun
2011-02-03 23:15 Thu 2011-02-06 23:15 Sun
2011-02-03 23:20 Thu 2011-02-06 23:20 Sun
2011-02-03 23:25 Thu 2011-02-06 23:25 Sun
2011-02-03 23:30 Thu 2011-02-06 23:30 Sun
2011-02-03 23:35 Thu 2011-02-06 23:35 Sun
2011-02-03 23:40 Thu 2011-02-06 23:40 Sun
2011-02-03 23:45 Thu 2011-02-06 23:45 Sun
2011-02-03 23:50 Thu 2011-02-06 23:50 Sun
2011-02-03 23:55 Thu 2011-02-06 23:55 Sun
2011-02-04 00:00 Fri 2011-02-07 00:00 Mon
2011-02-04 00:05 Fri 2011-02-07 00:05 Mon
2011-02-04 00:10 Fri 2011-02-07 00:10 Mon
2011-02-04 00:15 Fri 2011-02-07 00:15 Mon
2011-02-04 00:20 Fri 2011-02-07 00:20 Mon
2011-02-04 00:25 Fri 2011-02-07 00:25 Mon
2011-02-04 00:30 Fri 2011-02-07 00:30 Mon
2011-02-04 00:35 Fri 2011-02-07 00:35 Mon
2011-02-04 00:40 Fri 2011-02-07 00:40 Mon
2011-02-04 00:45 Fri 2011-02-07 00:45 Mon
2011-02-04 00:50 Fri 2011-02-07 00:50 Mon
2011-02-04 00:55 Fri 2011-02-07 00:55 Mon
2011-02-04 01:00 Fri 2011-02-07 01:00 Mon
2011-02-04 01:05 Fri 2011-02-07 01:05 Mon
2011-02-04 01:10 Fri 2011-02-07 01:10 Mon
2011-02-04 01:15 Fri 2011-02-07 01:15 Mon
2011-02-04 01:20 Fri 2011-02-07 01:20 Mon
2011-02-04 01:25 Fri 2011-02-07 01:25 Mon
2011-02-04 01:30 Fri 2011-02-07 01:30 Mon
2011-02-04 01:35 Fri 2011-02-07 01:35 Mon
2011-02-04 01:40 Fri 2011-02-07 01:40 Mon
2011-02-04 01:45 Fri 2011-02-07 01:45 Mon
2011-02-04 01:50 Fri 2011-02-07 01:50 Mon
2011-02-04 01:55 Fri 2011-02-07 01:55 Mon
2011-02-04 02:00 Fri 2011-02-07 02:00 Mon
2011-02-04 02:05 Fri 2011-02-07 02:05 Mon
2011-02-04 02:10 Fri 2011-02-07 02:10 Mon
2011-02-04 02:15 Fri 2011-02-07 02:15 Mon
2011-02-04 02:20 Fri 2011-02-07 02:20 Mon
2011-02-04 02:25 Fri 2011-02-07 02:25 Mon
2011-02-04 02:30 Fri 2011-02-07 02:30 Mon
2011-02-04 02:35 Fri 2011-02-07 02:35 Mon
2011-02-04 02:40 Fri 2011-02-07 02:40 Mon
2011-02-04 02:45 Fri 2011-02-07 02:45 Mon
2011-02-04 02:50 Fri 2011-02-07 02:50 Mon
2011-02-04 02:55 Fri 2011-02-07 02:55 Mon
2011-02-04 03:00 Fri 2011-02-07 03:00 Mon
2011-02-04 03:05 Fri 2011-02-07 03:05 Mon
2011-02-04 03:10 Fri 2011-02-07 03:10 Mon
2011-02-04 03:15 Fri 2011-02-07 03:15 Mon
2011-02-04 03:20 Fri 2011-02-07 03:20 Mon
2011-02-04 03:25 Fri 2011-02-07 03:25 Mon
2011-02-04 03:30 Fri 2011-02-07 03:30 Mon
2011-02-04 03:35 Fri 2011-02-07 03:35 Mon
2011-02-04 03:40 Fri 2011-02-07 03:40 Mon
2011-02-04 03:45 Fri 2011-02-07 03:45 Mon
2011-02-04 03:50 Fri 2011-02-07 03:50 Mon
2011-02-04 03:55 Fri 2011-02-07 03:55 Mon
2011-02-04 04:00 Fri 2011-02-07 04:00 Mon
2011-02-04 04:05 Fri 2011-02-07 04:05 Mon
2011-02-04 04:10 Fri 2011-02-07 04:10 Mon
2011-02-04 04:15 Fri 2011-02-07 04:15 Mon
2011-02-04 04:20 Fri 2011-02-07 04:20 Mon
2011-02-04 04:25 Fri 2011-02-07 04:25 Mon
2011-02-04 04:30 Fri 2011-02-07 04:30 Mon
2011-02-04 04:35 Fri 2011-02-07 04:35 Mon
2011-02-04 04:40 Fri 2011-02-07 04:40 Mon
2011-02-04 04:45 Fri 2011-02-07 04:45 Mon
2011-02-04 04:50 Fri 2011-02-07 04:50 Mon
2011-02-04 04:55 Fri 2011-02-07 04:55 Mon
2011-02-04 05:00 Fri 2011-02-07 05:00 Mon
2011-02-04 05:05 Fri 2011-02-07 05:05 Mon
2011-02-04 05:10 Fri 2011-02-07 05:10 Mon
2011-02-04 05:15 Fri 2011-02-07 05:15 Mon
2011-02-04 05:20 Fri 2011-02-07 05:20 Mon
2011-02-04 05:25 Fri 2011-02-07 05:25 Mon
2011-02-04 05:30 Fri 2011-02-07 05:30 Mon
2011-02-04 05:35 Fri 2011-02-07 05:35 Mon
2011-02-04 05:40 Fri 2011-02-07 05:40 Mon
2011-02-04 05:45 Fri 2011-02-07 05:45 Mon
2011-02-04 05:50 Fri 2011-02-07 05:50 Mon
2011-02-04 05:55 Fri 2011-02-07 05:55 Mon
2011-02-04 06:00 Fri 2011-02-07 06:00 Mon
2011-02-04 06:05 Fri 2011-02-07 06:05 Mon
2011-02-04 06:10 Fri 2011-02-07 06:10 Mon
2011-02-04 06:15 Fri 2011-02-07 06:15 Mon
2011-02-04 06:20 Fri 2011-02-07 06:20 Mon
2011-02-04 06:25 Fri 2011-02-07 06:25 Mon
2011-02-04 06:30 Fri 2011-02-07 06:30 Mon
2011-02-04 06:35 Fri 2011-02-07 06:35 Mon
2011-02-04 06:40 Fri 2011-02-07 06:40 Mon
2011-02-04 06:45 Fri 2011-02-07 06:45 Mon
2011-02-04 06:50 Fri 2011-02-07 06:50 Mon
2011-02-04 06:55 Fri 2011-02-07 06:55 Mon
2011-02-04 07:00 Fri 2011-02-07 07:00 Mon
2011-02-04 07:05 Fri 2011-02-07 07:05 Mon
2011-02-04 07:10 Fri 2011-02-07 07:10 Mon
2011-02-04 07:15 Fri 2011-02-07 07:15 Mon
2011-02-04 07:20 Fri 2011-02-07 07:20 Mon
2011-02-04 07:25 Fri 2011-02-07 07:25 Mon
2011-02-04 07:30 Fri 2011-02-07 07:30 Mon
2011-02-04 07:35 Fri 2011-02-07 07:35 Mon
2011-02-04 07:40 Fri 2011-02-07 07:40 Mon
2011-02-04 07:45 Fri 2011-02-07 07:45 Mon
2011-02-04 07:50 Fri 2011-02-07 07:50 Mon
2011-02-04 07:55 Fri 2011-02-07 07:55 Mon
2011-02-04 08:00 Fri 2011-02-07 08:00 Mon
2011-02-04 08:05 Fri 2011-02-07 08:05 Mon
2011-02-04 08:10 Fri 2011-02-07 08:10 Mon

DDAY		     LDDAY
-------------------- --------------------
2011-02-04 08:15 Fri 2011-02-07 08:15 Mon
2011-02-04 08:20 Fri 2011-02-07 08:20 Mon
2011-02-04 08:25 Fri 2011-02-07 08:25 Mon
2011-02-04 08:30 Fri 2011-02-07 08:30 Mon
2011-02-04 08:35 Fri 2011-02-07 08:35 Mon
2011-02-04 08:40 Fri 2011-02-07 08:40 Mon
2011-02-04 08:45 Fri 2011-02-07 08:45 Mon
2011-02-04 08:50 Fri 2011-02-07 08:50 Mon
2011-02-04 08:55 Fri 2011-02-07 08:55 Mon
2011-02-04 09:00 Fri 2011-02-07 09:00 Mon
2011-02-04 09:05 Fri 2011-02-07 09:05 Mon
2011-02-04 09:10 Fri 2011-02-07 09:10 Mon
2011-02-04 09:15 Fri 2011-02-07 09:15 Mon
2011-02-04 09:20 Fri 2011-02-07 09:20 Mon
2011-02-04 09:25 Fri 2011-02-07 09:25 Mon
2011-02-04 09:30 Fri 2011-02-07 09:30 Mon
2011-02-04 09:35 Fri 2011-02-07 09:35 Mon
2011-02-04 09:40 Fri 2011-02-07 09:40 Mon
2011-02-04 09:45 Fri 2011-02-07 09:45 Mon
2011-02-04 09:50 Fri 2011-02-07 09:50 Mon
2011-02-04 09:55 Fri 2011-02-07 09:55 Mon
2011-02-04 10:00 Fri 2011-02-07 10:00 Mon
2011-02-04 10:05 Fri 2011-02-07 10:05 Mon
2011-02-04 10:10 Fri 2011-02-07 10:10 Mon
2011-02-04 10:15 Fri 2011-02-07 10:15 Mon
2011-02-04 10:20 Fri 2011-02-07 10:20 Mon
2011-02-04 10:25 Fri 2011-02-07 10:25 Mon
2011-02-04 10:30 Fri 2011-02-07 10:30 Mon
2011-02-04 10:35 Fri 2011-02-07 10:35 Mon
2011-02-04 10:40 Fri 2011-02-07 10:40 Mon
2011-02-04 10:45 Fri 2011-02-07 10:45 Mon
2011-02-04 10:50 Fri 2011-02-07 10:50 Mon
2011-02-04 10:55 Fri 2011-02-07 10:55 Mon
2011-02-04 11:00 Fri 2011-02-07 11:00 Mon
2011-02-04 11:05 Fri 2011-02-07 11:05 Mon
2011-02-04 11:10 Fri 2011-02-07 11:10 Mon
2011-02-04 11:15 Fri 2011-02-07 11:15 Mon
2011-02-04 11:20 Fri 2011-02-07 11:20 Mon
2011-02-04 11:25 Fri 2011-02-07 11:25 Mon
2011-02-04 11:30 Fri 2011-02-07 11:30 Mon
2011-02-04 11:35 Fri 2011-02-07 11:35 Mon
2011-02-04 11:40 Fri 2011-02-07 11:40 Mon
2011-02-04 11:45 Fri 2011-02-07 11:45 Mon
2011-02-04 11:50 Fri 2011-02-07 11:50 Mon
2011-02-04 11:55 Fri 2011-02-07 11:55 Mon
2011-02-04 12:00 Fri 2011-02-07 12:00 Mon
2011-02-04 12:05 Fri 2011-02-07 12:05 Mon
2011-02-04 12:10 Fri 2011-02-07 12:10 Mon
2011-02-04 12:15 Fri 2011-02-07 12:15 Mon
2011-02-04 12:20 Fri 2011-02-07 12:20 Mon
2011-02-04 12:25 Fri 2011-02-07 12:25 Mon
2011-02-04 12:30 Fri 2011-02-07 12:30 Mon
2011-02-04 12:35 Fri 2011-02-07 12:35 Mon
2011-02-04 12:40 Fri 2011-02-07 12:40 Mon
2011-02-04 12:45 Fri 2011-02-07 12:45 Mon
2011-02-04 12:50 Fri 2011-02-07 12:50 Mon
2011-02-04 12:55 Fri 2011-02-07 12:55 Mon
2011-02-04 13:00 Fri 2011-02-07 13:00 Mon
2011-02-04 13:05 Fri 2011-02-07 13:05 Mon
2011-02-04 13:10 Fri 2011-02-07 13:10 Mon
2011-02-04 13:15 Fri 2011-02-07 13:15 Mon
2011-02-04 13:20 Fri 2011-02-07 13:20 Mon
2011-02-04 13:25 Fri 2011-02-07 13:25 Mon
2011-02-04 13:30 Fri 2011-02-07 13:30 Mon
2011-02-04 13:35 Fri 2011-02-07 13:35 Mon
2011-02-04 13:40 Fri 2011-02-07 13:40 Mon
2011-02-04 13:45 Fri 2011-02-07 13:45 Mon
2011-02-04 13:50 Fri 2011-02-07 13:50 Mon
2011-02-04 13:55 Fri 2011-02-07 13:55 Mon
2011-02-04 14:00 Fri 2011-02-07 14:00 Mon
2011-02-04 14:05 Fri 2011-02-07 14:05 Mon
2011-02-04 14:10 Fri 2011-02-07 14:10 Mon
2011-02-04 14:15 Fri 2011-02-07 14:15 Mon
2011-02-04 14:20 Fri 2011-02-07 14:20 Mon
2011-02-04 14:25 Fri 2011-02-07 14:25 Mon
2011-02-04 14:30 Fri 2011-02-07 14:30 Mon
2011-02-04 14:35 Fri 2011-02-07 14:35 Mon
2011-02-04 14:40 Fri 2011-02-07 14:40 Mon
2011-02-04 14:45 Fri 2011-02-07 14:45 Mon
2011-02-04 14:50 Fri 2011-02-07 14:50 Mon
2011-02-04 14:55 Fri 2011-02-07 14:55 Mon
2011-02-04 15:00 Fri 2011-02-07 15:00 Mon
2011-02-04 15:05 Fri 2011-02-07 15:05 Mon
2011-02-04 15:10 Fri 2011-02-07 15:10 Mon
2011-02-04 15:15 Fri 2011-02-07 15:15 Mon
2011-02-04 15:20 Fri 2011-02-07 15:20 Mon
2011-02-04 15:25 Fri 2011-02-07 15:25 Mon
2011-02-04 15:30 Fri 2011-02-07 15:30 Mon
2011-02-04 15:35 Fri 2011-02-07 15:35 Mon
2011-02-04 15:40 Fri 2011-02-07 15:40 Mon
2011-02-04 15:45 Fri 2011-02-07 15:45 Mon
2011-02-04 15:50 Fri 2011-02-07 15:50 Mon
2011-02-04 15:55 Fri 2011-02-07 15:55 Mon
2011-02-04 16:00 Fri 2011-02-07 16:00 Mon
2011-02-04 16:05 Fri 2011-02-07 16:05 Mon
2011-02-04 16:10 Fri 2011-02-07 16:10 Mon
2011-02-04 16:15 Fri 2011-02-07 16:15 Mon
2011-02-04 16:20 Fri 2011-02-07 16:20 Mon
2011-02-04 16:25 Fri 2011-02-07 16:25 Mon

219 rows selected.

Elapsed: 00:00:02.18
17:18:03 SQL> 
17:18:03 SQL> -- I should see that hr 22 is missing 3 rows of data: 00, 05, 10
17:18:03 SQL> SELECT
17:18:03   2  TO_CHAR(ydate,'MI')
17:18:03   3  ,COUNT(TO_CHAR(ydate,'MI'))
17:18:03   4  FROM svm2410
17:18:03   5  WHERE TO_CHAR(ydate,'HH24')='22'
17:18:03   6  AND ydate > sysdate - 30
17:18:03   7  GROUP BY TO_CHAR(ydate,'MI')
17:18:03   8  ORDER BY 0+TO_CHAR(ydate,'MI')
17:18:03   9  /

TO COUNT(TO_CHAR(YDATE,'MI'))
-- --------------------------
15			   21
20			   21
25			   21
30			   21
35			   21
40			   21
45			   21
50			   21
55			   21

9 rows selected.

Elapsed: 00:00:01.12
17:18:04 SQL> 
17:18:04 SQL> -- I should see that other hours have all 12 rows of data
17:18:04 SQL> SELECT
17:18:04   2  TO_CHAR(ydate,'MI')
17:18:04   3  ,COUNT(TO_CHAR(ydate,'MI'))
17:18:04   4  FROM svm2410
17:18:04   5  WHERE TO_CHAR(ydate,'HH24')!='22'
17:18:04   6  AND ydate > sysdate - 30
17:18:04   7  GROUP BY TO_CHAR(ydate,'MI')
17:18:04   8  ORDER BY 0+TO_CHAR(ydate,'MI')
17:18:04   9  /

TO COUNT(TO_CHAR(YDATE,'MI'))
-- --------------------------
00			  478
05			  478
10			  478
15			  478
20			  478
25			  478
30			  477
35			  477
40			  477
45			  477
50			  477
55			  477

12 rows selected.

Elapsed: 00:00:01.12
17:18:05 SQL> 
17:18:05 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
17:18:05 SQL> 
17:18:05 SQL> DROP TABLE svm2412;

Table dropped.

Elapsed: 00:00:00.10
17:18:05 SQL> CREATE TABLE svm2412 COMPRESS AS
17:18:05   2  SELECT
17:18:05   3  pair
17:18:05   4  ,ydate
17:18:05   5  ,prdate
17:18:05   6  ,clse
17:18:05   7  -- g1 is important. I want to predict g1:
17:18:05   8  ,(ld1day - clse)/clse g1
17:18:05   9  ,SIGN(avg24 - LAG(avg24,2,NULL)OVER(PARTITION BY pair ORDER BY ydate))trend
17:18:05  10  -- I want more attributes from the ones I derived above:
17:18:05  11  -- clse relation to moving-min
17:18:05  12  ,clse-min12 cm12
17:18:05  13  ,clse-min18 cm18
17:18:05  14  ,clse-min24 cm24
17:18:05  15  ,clse-min30 cm30
17:18:05  16  ,clse-min36 cm36
17:18:05  17  ,clse-min48 cm48
17:18:05  18  ,clse-min60 cm60
17:18:05  19  ,clse-min72 cm72
17:18:05  20  -- clse relation to moving-avg
17:18:05  21  ,clse-avg12 ca12
17:18:05  22  ,clse-avg18 ca18
17:18:05  23  ,clse-avg24 ca24
17:18:05  24  ,clse-avg30 ca30
17:18:05  25  ,clse-avg36 ca36
17:18:05  26  ,clse-avg48 ca48
17:18:05  27  ,clse-avg60 ca60
17:18:05  28  ,clse-avg72 ca72
17:18:05  29  -- clse relation to moving-max
17:18:05  30  ,clse-max12 cx12
17:18:05  31  ,clse-max18 cx18
17:18:05  32  ,clse-max24 cx24
17:18:05  33  ,clse-max30 cx30
17:18:05  34  ,clse-max36 cx36
17:18:05  35  ,clse-max48 cx48
17:18:05  36  ,clse-max60 cx60
17:18:05  37  ,clse-max72 cx72
17:18:05  38  -- Derive more attributes.
17:18:05  39  -- I want to use CORR() here to help SVM see the shape of the series.
17:18:05  40  -- But COVAR_POP is more stable:
17:18:05  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
17:18:05  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
17:18:05  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
17:18:05  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)crr30
17:18:05  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)crr36
17:18:05  46  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)crr48
17:18:05  47  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)crr60
17:18:05  48  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
17:18:05  49  -- Derive date related attributes:
17:18:05  50  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
17:18:05  51  ,0+TO_CHAR(ydate,'D')d
17:18:05  52  ,0+TO_CHAR(ydate,'W')w
17:18:05  53  -- mpm stands for minutes-past-midnight:
17:18:05  54  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
17:18:05  55  -- mph stands for minutes-past-hour:
17:18:05  56  ,0+TO_CHAR(ydate,'MI')mph
17:18:05  57  FROM svm2410
17:18:05  58  -- Protect against divide by zero:
17:18:05  59  WHERE clse > 0
17:18:05  60  ORDER BY ydate
17:18:05  61  /

Table created.

Elapsed: 00:00:02.17
17:18:07 SQL> 
17:18:07 SQL> -- rpt
17:18:07 SQL> 
17:18:07 SQL> SELECT
17:18:07   2  pair
17:18:07   3  ,TO_CHAR(ydate,'D')dnum
17:18:07   4  ,TO_CHAR(ydate,'dy')dday
17:18:07   5  ,AVG(g1)
17:18:07   6  ,COUNT(pair)
17:18:07   7  ,MIN(clse),MAX(clse)
17:18:07   8  ,MIN(ydate),MAX(ydate)
17:18:07   9  FROM svm2412
17:18:07  10  GROUP BY pair,TO_CHAR(ydate,'D'),TO_CHAR(ydate,'dy')
17:18:07  11  ORDER BY pair,TO_CHAR(ydate,'D'),TO_CHAR(ydate,'dy')
17:18:07  12  /

PAIR	D DDA	 AVG(G1) COUNT(PAIR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE)	       MAX(YDATE)
------- - --- ---------- ----------- ---------- ---------- ------------------- -------------------
usd_cad 1 sun .000079974	 380	  .9868     1.0191 2010-10-31 20:55:00 2011-02-06 23:55:00
usd_cad 2 mon .000139787	4187	.985875     1.0249 2010-11-01 00:00:00 2011-02-07 16:25:00
usd_cad 3 tue  -.0005026	3957	.983925   1.028075 2010-11-02 00:00:00 2011-02-01 23:55:00
usd_cad 4 wed -.00189155	3960	.985175      1.027 2010-11-03 00:00:00 2011-02-02 23:55:00
usd_cad 5 thu  .00030481	3980	.985775     1.0234 2010-11-04 00:00:00 2011-02-03 23:55:00
usd_cad 6 fri -.00010219	3690	 .98355      1.024 2010-11-05 00:00:00 2011-02-04 21:55:00

6 rows selected.

Elapsed: 00:00:00.06
17:18:07 SQL> 
17:18:07 SQL> -- Prepare for derivation of NTILE based params:
17:18:07 SQL> 
17:18:07 SQL> DROP TABLE svm2414;

Table dropped.

Elapsed: 00:00:00.05
17:18:07 SQL> CREATE TABLE svm2414 COMPRESS AS
17:18:07   2  SELECT
17:18:07   3  pair
17:18:07   4  ,ydate
17:18:07   5  ,prdate
17:18:07   6  ,clse
17:18:07   7  ,g1
17:18:07   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1>0.0020 THEN'up'ELSE'nup'END gatt
17:18:07   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1<-0.0020 THEN'up'ELSE'nup'END gattn
17:18:07  10  ,CASE WHEN trend IS NULL THEN 1
17:18:07  11  	    WHEN trend =0      THEN 1
17:18:07  12  	    ELSE trend END trend
17:18:07  13  ,cm12
17:18:07  14  ,cm18
17:18:07  15  ,cm24
17:18:07  16  ,cm30
17:18:07  17  ,cm36
17:18:07  18  ,cm48
17:18:07  19  ,cm60
17:18:07  20  ,cm72
17:18:07  21  --
17:18:07  22  ,ca12
17:18:07  23  ,ca18
17:18:07  24  ,ca24
17:18:07  25  ,ca30
17:18:07  26  ,ca36
17:18:07  27  ,ca48
17:18:07  28  ,ca60
17:18:07  29  ,ca72
17:18:07  30  --
17:18:07  31  ,cx12
17:18:07  32  ,cx18
17:18:07  33  ,cx24
17:18:07  34  ,cx30
17:18:07  35  ,cx36
17:18:07  36  ,cx48
17:18:07  37  ,cx60
17:18:07  38  ,cx72
17:18:07  39  --
17:18:07  40  ,crr12
17:18:07  41  ,crr18
17:18:07  42  ,crr24
17:18:07  43  ,crr30
17:18:07  44  ,crr36
17:18:07  45  ,crr48
17:18:07  46  ,crr60
17:18:07  47  ,crr72
17:18:07  48  --
17:18:07  49  ,hh
17:18:07  50  ,d
17:18:07  51  ,w
17:18:07  52  ,mpm
17:18:07  53  ,mph
17:18:07  54  FROM svm2412
17:18:07  55  ORDER BY ydate
17:18:07  56  /

Table created.

Elapsed: 00:00:00.40
17:18:08 SQL> 
17:18:08 SQL> -- rpt
17:18:08 SQL> 
17:18:08 SQL> SELECT
17:18:08   2  pair
17:18:08   3  ,trend
17:18:08   4  ,gatt
17:18:08   5  ,d
17:18:08   6  ,hh
17:18:08   7  ,COUNT(pair)
17:18:08   8  ,AVG(g1)
17:18:08   9  FROM svm2414
17:18:08  10  GROUP BY pair,trend,gatt,d,hh
17:18:08  11  ORDER BY AVG(g1),pair,trend,gatt,d,hh
17:18:08  12  -- 500 rows
17:18:08  13  
17:18:08 SQL> -- Derive NTILE based params:
17:18:08 SQL> 
17:18:08 SQL> DROP TABLE svm2416;

Table dropped.

Elapsed: 00:00:00.04
17:18:08 SQL> CREATE TABLE svm2416 COMPRESS AS
17:18:08   2  SELECT
17:18:08   3  pair
17:18:08   4  ,ydate
17:18:08   5  ,prdate
17:18:08   6  ,clse
17:18:08   7  ,g1
17:18:08   8  ,gatt
17:18:08   9  ,gattn
17:18:08  10  ,trend
17:18:08  11  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm12)att00
17:18:08  12  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm18)att01
17:18:08  13  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm24)att02
17:18:08  14  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm30)att03
17:18:08  15  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm36)att04
17:18:08  16  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm48)att05
17:18:08  17  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm60)att06
17:18:08  18  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm72)att07
17:18:08  19  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca12)att08
17:18:08  20  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca18)att09
17:18:08  21  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca24)att10
17:18:08  22  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca30)att11
17:18:08  23  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca36)att12
17:18:08  24  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca48)att13
17:18:08  25  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca60)att14
17:18:08  26  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca72)att15
17:18:08  27  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx12)att16
17:18:08  28  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx18)att17
17:18:08  29  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx24)att18
17:18:08  30  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx30)att19
17:18:08  31  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx36)att20
17:18:08  32  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx48)att21
17:18:08  33  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx60)att22
17:18:08  34  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx72)att23
17:18:08  35  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr12)att24
17:18:08  36  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr18)att25
17:18:08  37  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr24)att26
17:18:08  38  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr30)att27
17:18:08  39  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr36)att28
17:18:08  40  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr48)att29
17:18:08  41  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr60)att30
17:18:08  42  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr72)att31
17:18:08  43  ,hh  att32
17:18:08  44  ,d   att33
17:18:08  45  ,w   att34
17:18:08  46  ,mpm att35
17:18:08  47  ,mph att36
17:18:08  48  ,trend att37
17:18:08  49  FROM svm2414
17:18:08  50  ORDER BY ydate
17:18:08  51  /

Table created.

Elapsed: 00:00:05.28
17:18:13 SQL> 
17:18:13 SQL> -- rpt
17:18:13 SQL> 
17:18:13 SQL> SELECT
17:18:13   2  pair
17:18:13   3  ,trend
17:18:13   4  ,gatt
17:18:13   5  ,att33 daynum
17:18:13   6  ,COUNT(pair)
17:18:13   7  ,AVG(g1)
17:18:13   8  FROM svm2416
17:18:13   9  GROUP BY pair,trend,gatt,att33
17:18:13  10  ORDER BY pair,trend,gatt,att33
17:18:13  11  /

PAIR	     TREND GAT	   DAYNUM COUNT(PAIR)	 AVG(G1)
------- ---------- --- ---------- ----------- ----------
usd_cad 	-1 nup		1	  166 -.00093853
usd_cad 	-1 nup		2	 1382 -.00244263
usd_cad 	-1 nup		3	 1426 -.00310979
usd_cad 	-1 nup		4	 1898 -.00274752
usd_cad 	-1 nup		5	 1829 -.00216937
usd_cad 	-1 nup		6	 1294 -.00154384
usd_cad 	-1 up		1	   61 .002775948
usd_cad 	-1 up		2	  851 .006168567
usd_cad 	-1 up		3	  698 .006797846
usd_cad 	-1 up		4	  305 .003098549
usd_cad 	-1 up		5	  987  .00585744
usd_cad 	-1 up		6	  387 .004483592
usd_cad 	-1		1	   21
usd_cad 	-1		2	  155
usd_cad 	-1		6	   62
usd_cad 	 1 nup		1	  101 -.00109953
usd_cad 	 1 nup		2	 1201 -.00326566
usd_cad 	 1 nup		3	 1326 -.00355081
usd_cad 	 1 nup		4	 1484 -.00330456
usd_cad 	 1 nup		5	  863 -.00264613
usd_cad 	 1 nup		6	 1301 -.00265675
usd_cad 	 1 up		1	   31 .004071819
usd_cad 	 1 up		2	  555 .004695357
usd_cad 	 1 up		3	  507 .004751999
usd_cad 	 1 up		4	  273 .006165447
usd_cad 	 1 up		5	  301 .005592177
usd_cad 	 1 up		6	  642 .005215989
usd_cad 	 1		2	   43
usd_cad 	 1		6	    4

29 rows selected.

Elapsed: 00:00:00.03
17:18:13 SQL> 
17:18:13 SQL> -- Join scores and gains:
17:18:13 SQL> -- Comment out feedback related syntax:
17:18:13 SQL> --
17:18:13 SQL> -- CREATE OR REPLACE VIEW sc12 AS
17:18:13 SQL> -- SELECT
17:18:13 SQL> -- m.pair
17:18:13 SQL> -- ,m.ydate
17:18:13 SQL> -- ,m.prdate
17:18:13 SQL> -- ,l.score score_long
17:18:13 SQL> -- ,s.score score_short
17:18:13 SQL> -- ,ROUND(l.score,1) rscore_long
17:18:13 SQL> -- ,ROUND(s.score,1) rscore_short
17:18:13 SQL> -- ,m.g1
17:18:13 SQL> -- FROM svm24scores l,svm24scores s,svm2416 m
17:18:13 SQL> -- WHERE l.targ='gatt'
17:18:13 SQL> -- AND	 s.targ='gattn'
17:18:13 SQL> -- AND l.prdate = s.prdate
17:18:13 SQL> -- AND l.prdate = m.prdate
17:18:13 SQL> -- -- Speed things up:
17:18:13 SQL> -- AND l.pair = '&1'
17:18:13 SQL> -- AND s.pair = '&1'
17:18:13 SQL> -- /
17:18:13 SQL> --
17:18:13 SQL> -- -- rpt
17:18:13 SQL> -- SELECT pair,rscore_long,AVG(g1),MIN(ydate),COUNT(pair),MAX(ydate)FROM sc12
17:18:13 SQL> -- GROUP BY pair,rscore_long
17:18:13 SQL> -- ORDER BY pair,rscore_long
17:18:13 SQL> -- /
17:18:13 SQL> --
17:18:13 SQL> -- DROP TABLE score_corr;
17:18:13 SQL> --
17:18:13 SQL> -- CREATE TABLE score_corr COMPRESS AS
17:18:13 SQL> -- SELECT
17:18:13 SQL> -- pair
17:18:13 SQL> -- -- ,ydate
17:18:13 SQL> -- ,prdate
17:18:13 SQL> -- -- Find corr() tween score and g1 over 11 day period:
17:18:13 SQL> -- ,CORR((score_long - score_short),g1)
17:18:13 SQL> --   OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24*5 PRECEDING AND CURRENT ROW)sc_corr
17:18:13 SQL> -- FROM sc12
17:18:13 SQL> -- /
17:18:13 SQL> --
17:18:13 SQL> -- -- rpt
17:18:13 SQL> --
17:18:13 SQL> -- SELECT pair,AVG(sc_corr),COUNT(sc_corr)FROM score_corr GROUP BY pair;
17:18:13 SQL> 
17:18:13 SQL> DROP TABLE modsrc24;

Table dropped.

Elapsed: 00:00:00.03
17:18:13 SQL> 
17:18:13 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.35
17:18:13 SQL> 
17:18:13 SQL> CREATE TABLE modsrc24 COMPRESS AS
17:18:13   2  SELECT
17:18:13   3  pair
17:18:13   4  ,ydate
17:18:13   5  ,prdate
17:18:13   6  ,trend
17:18:13   7  ,g1
17:18:13   8  ,gatt
17:18:13   9  ,gattn
17:18:13  10  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g00
17:18:13  11  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g01
17:18:13  12  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g02
17:18:13  13  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g03
17:18:13  14  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g04
17:18:13  15  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g05
17:18:13  16  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g06
17:18:13  17  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g07
17:18:13  18  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g08
17:18:13  19  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g09
17:18:13  20  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g10
17:18:13  21  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g11
17:18:13  22  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g12
17:18:13  23  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g13
17:18:13  24  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g14
17:18:13  25  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g15
17:18:13  26  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g16
17:18:13  27  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g17
17:18:13  28  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g18
17:18:13  29  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g19
17:18:13  30  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g20
17:18:13  31  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g21
17:18:13  32  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g22
17:18:13  33  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g23
17:18:13  34  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g24
17:18:13  35  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g25
17:18:13  36  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g26
17:18:13  37  ,SUM(g1)OVER(PARTITION BY trend,att27 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g27
17:18:13  38  ,SUM(g1)OVER(PARTITION BY trend,att28 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g28
17:18:13  39  ,SUM(g1)OVER(PARTITION BY trend,att29 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g29
17:18:13  40  ,SUM(g1)OVER(PARTITION BY trend,att30 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g30
17:18:13  41  ,SUM(g1)OVER(PARTITION BY trend,att31 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g31
17:18:13  42  ,SUM(g1)OVER(PARTITION BY trend,att32 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g32
17:18:13  43  ,SUM(g1)OVER(PARTITION BY trend,att33 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g33
17:18:13  44  ,SUM(g1)OVER(PARTITION BY trend,att34 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g34
17:18:13  45  ,SUM(g1)OVER(PARTITION BY trend,att35 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g35
17:18:13  46  ,SUM(g1)OVER(PARTITION BY trend,att36 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g36
17:18:13  47  -- Add extra goodness attributes related to trend:
17:18:13  48  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*40 PRECEDING AND CURRENT ROW)g37
17:18:13  49  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g38
17:18:13  50  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*20 PRECEDING AND CURRENT ROW)g39
17:18:13  51  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*10 PRECEDING AND CURRENT ROW)g40
17:18:13  52  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*5  PRECEDING AND CURRENT ROW)g41
17:18:13  53  -- Recent CORR()tween scores and gains:
17:18:13  54  FROM svm2416
17:18:13  55  /

Table created.

Elapsed: 00:00:06.52
17:18:20 SQL> 
17:18:20 SQL> ANALYZE TABLE modsrc24 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:02.74
17:18:23 SQL> 
17:18:23 SQL> -- rpt
17:18:23 SQL> 
17:18:23 SQL> SELECT
17:18:23   2  pair
17:18:23   3  ,trend
17:18:23   4  ,gatt
17:18:23   5  ,COUNT(pair)
17:18:23   6  ,AVG(g41)
17:18:23   7  FROM modsrc24
17:18:23   8  GROUP BY pair,trend,gatt
17:18:23   9  ORDER BY pair,trend,gatt
17:18:23  10  /

PAIR	     TREND GAT COUNT(PAIR)   AVG(G41)
------- ---------- --- ----------- ----------
usd_cad 	-1 nup	      7995 -.35393403
usd_cad 	-1 up	      3289  .78476631
usd_cad 	-1	       238 -.59466306
usd_cad 	 1 nup	      6276 -1.0081968
usd_cad 	 1 up	      2309 -1.0800558
usd_cad 	 1		47 -2.5127056

6 rows selected.

Elapsed: 00:00:00.04
17:18:23 SQL> 
17:18:23 SQL> 
17:18:23 SQL> SELECT pair,COUNT(pair)FROM svm2410 GROUP BY pair;

PAIR	COUNT(PAIR)
------- -----------
usd_cad       20154

Elapsed: 00:00:01.07
17:18:24 SQL> 
17:18:24 SQL> SELECT pair,COUNT(pair)FROM modsrc24 GROUP BY pair;

PAIR	COUNT(PAIR)
------- -----------
usd_cad       20154

Elapsed: 00:00:00.01
17:18:24 SQL> 
17:18:24 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
