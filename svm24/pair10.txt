
SQL*Plus: Release 11.2.0.1.0 Production on Fri Feb 4 20:24:51 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

20:24:51 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
20:24:51 SQL> 20:24:51 SQL> --
20:24:51 SQL> -- pair10.sql
20:24:51 SQL> --
20:24:51 SQL> 
20:24:51 SQL> -- Creates views and tables needed by SVM.
20:24:51 SQL> 
20:24:51 SQL> -- Start by sanding off some dukas data so it resembles IB data:
20:24:51 SQL> DROP TABLE di5min24;

Table dropped.

Elapsed: 00:00:02.05
20:24:53 SQL> 
20:24:53 SQL> CREATE TABLE di5min24 COMPRESS AS SELECT * FROM di5min;

Table created.

Elapsed: 00:00:00.79
20:24:54 SQL> 
20:24:54 SQL> DELETE di5min24 WHERE TO_CHAR(ydate,'HH24 MI')IN('22 00','22 05','22 10');

792 rows deleted.

Elapsed: 00:00:00.16
20:24:54 SQL> 
20:24:54 SQL> CREATE OR REPLACE VIEW svm2410 AS
20:24:54   2  SELECT
20:24:54   3  pair
20:24:54   4  ,ydate
20:24:54   5  ,prdate
20:24:54   6  ,rownum rnum -- acts as t in my time-series
20:24:54   7  ,clse
20:24:54   8  -- Derive a bunch of attributes from clse, the latest price:
20:24:54   9  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)min12
20:24:54  10  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)min18
20:24:54  11  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)min24
20:24:54  12  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)min30
20:24:54  13  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)min36
20:24:54  14  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)min48
20:24:54  15  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)min60
20:24:54  16  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)min72
20:24:54  17  --
20:24:54  18  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)avg12
20:24:54  19  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)avg18
20:24:54  20  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)avg24
20:24:54  21  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)avg30
20:24:54  22  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)avg36
20:24:54  23  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)avg48
20:24:54  24  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)avg60
20:24:54  25  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)avg72
20:24:54  26  --
20:24:54  27  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)max12
20:24:54  28  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)max18
20:24:54  29  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)max24
20:24:54  30  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)max30
20:24:54  31  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)max36
20:24:54  32  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)max48
20:24:54  33  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)max60
20:24:54  34  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)max72
20:24:54  35  --
20:24:54  36  ,LEAD(clse,12*24-3,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld1day
20:24:54  37  ,LEAD(ydate,12*24-3,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld_ydate
20:24:54  38  FROM di5min24 WHERE pair = '&1'
20:24:54  39  AND ydate > sysdate - 200
20:24:54  40  ORDER BY ydate
20:24:54  41  /
old  38: FROM di5min24 WHERE pair = '&1'
new  38: FROM di5min24 WHERE pair = 'usd_cad'

View created.

Elapsed: 00:00:00.05
20:24:54 SQL> 
20:24:54 SQL> -- rpt
20:24:54 SQL> 
20:24:54 SQL> -- I should see that ld_ydate is exactly 1 trading day ahead of ydate:
20:24:54 SQL> 
20:24:54 SQL> SELECT
20:24:54   2  TO_CHAR(ydate,'YYYY-MM-DD HH24:MI Dy')dday
20:24:54   3  ,TO_CHAR(ld_ydate,'YYYY-MM-DD HH24:MI Dy')ldday
20:24:54   4  from svm2410
20:24:54   5  WHERE pair='&1'
20:24:54   6  AND ld_ydate > (SELECT MAX(ld_ydate)-1 from svm2410)
20:24:54   7  ORDER BY ydate
20:24:54   8  /
old   5: WHERE pair='&1'
new   5: WHERE pair='usd_cad'

DDAY		     LDDAY
-------------------- --------------------
2011-02-02 16:40 Wed 2011-02-03 16:40 Thu
2011-02-02 16:45 Wed 2011-02-03 16:45 Thu
2011-02-02 16:50 Wed 2011-02-03 16:50 Thu
2011-02-02 16:55 Wed 2011-02-03 16:55 Thu
2011-02-02 17:00 Wed 2011-02-03 17:00 Thu
2011-02-02 17:05 Wed 2011-02-03 17:05 Thu
2011-02-02 17:10 Wed 2011-02-03 17:10 Thu
2011-02-02 17:15 Wed 2011-02-03 17:15 Thu
2011-02-02 17:20 Wed 2011-02-03 17:20 Thu
2011-02-02 17:25 Wed 2011-02-03 17:25 Thu
2011-02-02 17:30 Wed 2011-02-03 17:30 Thu
2011-02-02 17:35 Wed 2011-02-03 17:35 Thu
2011-02-02 17:40 Wed 2011-02-03 17:40 Thu
2011-02-02 17:45 Wed 2011-02-03 17:45 Thu
2011-02-02 17:50 Wed 2011-02-03 17:50 Thu
2011-02-02 17:55 Wed 2011-02-03 17:55 Thu
2011-02-02 18:00 Wed 2011-02-03 18:00 Thu
2011-02-02 18:05 Wed 2011-02-03 18:05 Thu
2011-02-02 18:10 Wed 2011-02-03 18:10 Thu
2011-02-02 18:15 Wed 2011-02-03 18:15 Thu
2011-02-02 18:20 Wed 2011-02-03 18:20 Thu
2011-02-02 18:25 Wed 2011-02-03 18:25 Thu
2011-02-02 18:30 Wed 2011-02-03 18:30 Thu
2011-02-02 18:35 Wed 2011-02-03 18:35 Thu
2011-02-02 18:40 Wed 2011-02-03 18:40 Thu
2011-02-02 18:45 Wed 2011-02-03 18:45 Thu
2011-02-02 18:50 Wed 2011-02-03 18:50 Thu
2011-02-02 18:55 Wed 2011-02-03 18:55 Thu
2011-02-02 19:00 Wed 2011-02-03 19:00 Thu
2011-02-02 19:05 Wed 2011-02-03 19:05 Thu
2011-02-02 19:10 Wed 2011-02-03 19:10 Thu
2011-02-02 19:15 Wed 2011-02-03 19:15 Thu
2011-02-02 19:20 Wed 2011-02-03 19:20 Thu
2011-02-02 19:25 Wed 2011-02-03 19:25 Thu
2011-02-02 19:30 Wed 2011-02-03 19:30 Thu
2011-02-02 19:35 Wed 2011-02-03 19:35 Thu
2011-02-02 19:40 Wed 2011-02-03 19:40 Thu
2011-02-02 19:45 Wed 2011-02-03 19:45 Thu
2011-02-02 19:50 Wed 2011-02-03 19:50 Thu
2011-02-02 19:55 Wed 2011-02-03 19:55 Thu
2011-02-02 20:00 Wed 2011-02-03 20:00 Thu
2011-02-02 20:05 Wed 2011-02-03 20:05 Thu
2011-02-02 20:10 Wed 2011-02-03 20:10 Thu
2011-02-02 20:15 Wed 2011-02-03 20:15 Thu
2011-02-02 20:20 Wed 2011-02-03 20:20 Thu
2011-02-02 20:25 Wed 2011-02-03 20:25 Thu
2011-02-02 20:30 Wed 2011-02-03 20:30 Thu
2011-02-02 20:35 Wed 2011-02-03 20:35 Thu
2011-02-02 20:40 Wed 2011-02-03 20:40 Thu
2011-02-02 20:45 Wed 2011-02-03 20:45 Thu
2011-02-02 20:50 Wed 2011-02-03 20:50 Thu
2011-02-02 20:55 Wed 2011-02-03 20:55 Thu
2011-02-02 21:00 Wed 2011-02-03 21:00 Thu
2011-02-02 21:05 Wed 2011-02-03 21:05 Thu
2011-02-02 21:10 Wed 2011-02-03 21:10 Thu
2011-02-02 21:15 Wed 2011-02-03 21:15 Thu
2011-02-02 21:20 Wed 2011-02-03 21:20 Thu
2011-02-02 21:25 Wed 2011-02-03 21:25 Thu
2011-02-02 21:30 Wed 2011-02-03 21:30 Thu
2011-02-02 21:35 Wed 2011-02-03 21:35 Thu
2011-02-02 21:40 Wed 2011-02-03 21:40 Thu
2011-02-02 21:45 Wed 2011-02-03 21:45 Thu
2011-02-02 21:50 Wed 2011-02-03 21:50 Thu
2011-02-02 21:55 Wed 2011-02-03 21:55 Thu
2011-02-02 22:15 Wed 2011-02-03 22:15 Thu
2011-02-02 22:20 Wed 2011-02-03 22:20 Thu
2011-02-02 22:25 Wed 2011-02-03 22:25 Thu
2011-02-02 22:30 Wed 2011-02-03 22:30 Thu
2011-02-02 22:35 Wed 2011-02-03 22:35 Thu
2011-02-02 22:40 Wed 2011-02-03 22:40 Thu
2011-02-02 22:45 Wed 2011-02-03 22:45 Thu
2011-02-02 22:50 Wed 2011-02-03 22:50 Thu
2011-02-02 22:55 Wed 2011-02-03 22:55 Thu
2011-02-02 23:00 Wed 2011-02-03 23:00 Thu
2011-02-02 23:05 Wed 2011-02-03 23:05 Thu
2011-02-02 23:10 Wed 2011-02-03 23:10 Thu
2011-02-02 23:15 Wed 2011-02-03 23:15 Thu
2011-02-02 23:20 Wed 2011-02-03 23:20 Thu
2011-02-02 23:25 Wed 2011-02-03 23:25 Thu
2011-02-02 23:30 Wed 2011-02-03 23:30 Thu
2011-02-02 23:35 Wed 2011-02-03 23:35 Thu
2011-02-02 23:40 Wed 2011-02-03 23:40 Thu
2011-02-02 23:45 Wed 2011-02-03 23:45 Thu
2011-02-02 23:50 Wed 2011-02-03 23:50 Thu
2011-02-02 23:55 Wed 2011-02-03 23:55 Thu
2011-02-03 00:00 Thu 2011-02-04 00:00 Fri
2011-02-03 00:05 Thu 2011-02-04 00:05 Fri
2011-02-03 00:10 Thu 2011-02-04 00:10 Fri
2011-02-03 00:15 Thu 2011-02-04 00:15 Fri
2011-02-03 00:20 Thu 2011-02-04 00:20 Fri
2011-02-03 00:25 Thu 2011-02-04 00:25 Fri
2011-02-03 00:30 Thu 2011-02-04 00:30 Fri
2011-02-03 00:35 Thu 2011-02-04 00:35 Fri
2011-02-03 00:40 Thu 2011-02-04 00:40 Fri
2011-02-03 00:45 Thu 2011-02-04 00:45 Fri
2011-02-03 00:50 Thu 2011-02-04 00:50 Fri
2011-02-03 00:55 Thu 2011-02-04 00:55 Fri
2011-02-03 01:00 Thu 2011-02-04 01:00 Fri
2011-02-03 01:05 Thu 2011-02-04 01:05 Fri
2011-02-03 01:10 Thu 2011-02-04 01:10 Fri
2011-02-03 01:15 Thu 2011-02-04 01:15 Fri
2011-02-03 01:20 Thu 2011-02-04 01:20 Fri
2011-02-03 01:25 Thu 2011-02-04 01:25 Fri
2011-02-03 01:30 Thu 2011-02-04 01:30 Fri
2011-02-03 01:35 Thu 2011-02-04 01:35 Fri
2011-02-03 01:40 Thu 2011-02-04 01:40 Fri
2011-02-03 01:45 Thu 2011-02-04 01:45 Fri
2011-02-03 01:50 Thu 2011-02-04 01:50 Fri
2011-02-03 01:55 Thu 2011-02-04 01:55 Fri
2011-02-03 02:00 Thu 2011-02-04 02:00 Fri
2011-02-03 02:05 Thu 2011-02-04 02:05 Fri
2011-02-03 02:10 Thu 2011-02-04 02:10 Fri
2011-02-03 02:15 Thu 2011-02-04 02:15 Fri
2011-02-03 02:20 Thu 2011-02-04 02:20 Fri
2011-02-03 02:25 Thu 2011-02-04 02:25 Fri
2011-02-03 02:30 Thu 2011-02-04 02:30 Fri
2011-02-03 02:35 Thu 2011-02-04 02:35 Fri
2011-02-03 02:40 Thu 2011-02-04 02:40 Fri
2011-02-03 02:45 Thu 2011-02-04 02:45 Fri
2011-02-03 02:50 Thu 2011-02-04 02:50 Fri

DDAY		     LDDAY
-------------------- --------------------
2011-02-03 02:55 Thu 2011-02-04 02:55 Fri
2011-02-03 03:00 Thu 2011-02-04 03:00 Fri
2011-02-03 03:05 Thu 2011-02-04 03:05 Fri
2011-02-03 03:10 Thu 2011-02-04 03:10 Fri
2011-02-03 03:15 Thu 2011-02-04 03:15 Fri
2011-02-03 03:20 Thu 2011-02-04 03:20 Fri
2011-02-03 03:25 Thu 2011-02-04 03:25 Fri
2011-02-03 03:30 Thu 2011-02-04 03:30 Fri
2011-02-03 03:35 Thu 2011-02-04 03:35 Fri
2011-02-03 03:40 Thu 2011-02-04 03:40 Fri
2011-02-03 03:45 Thu 2011-02-04 03:45 Fri
2011-02-03 03:50 Thu 2011-02-04 03:50 Fri
2011-02-03 03:55 Thu 2011-02-04 03:55 Fri
2011-02-03 04:00 Thu 2011-02-04 04:00 Fri
2011-02-03 04:05 Thu 2011-02-04 04:05 Fri
2011-02-03 04:10 Thu 2011-02-04 04:10 Fri
2011-02-03 04:15 Thu 2011-02-04 04:15 Fri
2011-02-03 04:20 Thu 2011-02-04 04:20 Fri
2011-02-03 04:25 Thu 2011-02-04 04:25 Fri
2011-02-03 04:30 Thu 2011-02-04 04:30 Fri
2011-02-03 04:35 Thu 2011-02-04 04:35 Fri
2011-02-03 04:40 Thu 2011-02-04 04:40 Fri
2011-02-03 04:45 Thu 2011-02-04 04:45 Fri
2011-02-03 04:50 Thu 2011-02-04 04:50 Fri
2011-02-03 04:55 Thu 2011-02-04 04:55 Fri
2011-02-03 05:00 Thu 2011-02-04 05:00 Fri
2011-02-03 05:05 Thu 2011-02-04 05:05 Fri
2011-02-03 05:10 Thu 2011-02-04 05:10 Fri
2011-02-03 05:15 Thu 2011-02-04 05:15 Fri
2011-02-03 05:20 Thu 2011-02-04 05:20 Fri
2011-02-03 05:25 Thu 2011-02-04 05:25 Fri
2011-02-03 05:30 Thu 2011-02-04 05:30 Fri
2011-02-03 05:35 Thu 2011-02-04 05:35 Fri
2011-02-03 05:40 Thu 2011-02-04 05:40 Fri
2011-02-03 05:45 Thu 2011-02-04 05:45 Fri
2011-02-03 05:50 Thu 2011-02-04 05:50 Fri
2011-02-03 05:55 Thu 2011-02-04 05:55 Fri
2011-02-03 06:00 Thu 2011-02-04 06:00 Fri
2011-02-03 06:05 Thu 2011-02-04 06:05 Fri
2011-02-03 06:10 Thu 2011-02-04 06:10 Fri
2011-02-03 06:15 Thu 2011-02-04 06:15 Fri
2011-02-03 06:20 Thu 2011-02-04 06:20 Fri
2011-02-03 06:25 Thu 2011-02-04 06:25 Fri
2011-02-03 06:30 Thu 2011-02-04 06:30 Fri
2011-02-03 06:35 Thu 2011-02-04 06:35 Fri
2011-02-03 06:40 Thu 2011-02-04 06:40 Fri
2011-02-03 06:45 Thu 2011-02-04 06:45 Fri
2011-02-03 06:50 Thu 2011-02-04 06:50 Fri
2011-02-03 06:55 Thu 2011-02-04 06:55 Fri
2011-02-03 07:00 Thu 2011-02-04 07:00 Fri
2011-02-03 07:05 Thu 2011-02-04 07:05 Fri
2011-02-03 07:10 Thu 2011-02-04 07:10 Fri
2011-02-03 07:15 Thu 2011-02-04 07:15 Fri
2011-02-03 07:20 Thu 2011-02-04 07:20 Fri
2011-02-03 07:25 Thu 2011-02-04 07:25 Fri
2011-02-03 07:30 Thu 2011-02-04 07:30 Fri
2011-02-03 07:35 Thu 2011-02-04 07:35 Fri
2011-02-03 07:40 Thu 2011-02-04 07:40 Fri
2011-02-03 07:45 Thu 2011-02-04 07:45 Fri
2011-02-03 07:50 Thu 2011-02-04 07:50 Fri
2011-02-03 07:55 Thu 2011-02-04 07:55 Fri
2011-02-03 08:00 Thu 2011-02-04 08:00 Fri
2011-02-03 08:05 Thu 2011-02-04 08:05 Fri
2011-02-03 08:10 Thu 2011-02-04 08:10 Fri
2011-02-03 08:15 Thu 2011-02-04 08:15 Fri
2011-02-03 08:20 Thu 2011-02-04 08:20 Fri
2011-02-03 08:25 Thu 2011-02-04 08:25 Fri
2011-02-03 08:30 Thu 2011-02-04 08:30 Fri
2011-02-03 08:35 Thu 2011-02-04 08:35 Fri
2011-02-03 08:40 Thu 2011-02-04 08:40 Fri
2011-02-03 08:45 Thu 2011-02-04 08:45 Fri
2011-02-03 08:50 Thu 2011-02-04 08:50 Fri
2011-02-03 08:55 Thu 2011-02-04 08:55 Fri
2011-02-03 09:00 Thu 2011-02-04 09:00 Fri
2011-02-03 09:05 Thu 2011-02-04 09:05 Fri
2011-02-03 09:10 Thu 2011-02-04 09:10 Fri
2011-02-03 09:15 Thu 2011-02-04 09:15 Fri
2011-02-03 09:20 Thu 2011-02-04 09:20 Fri
2011-02-03 09:25 Thu 2011-02-04 09:25 Fri
2011-02-03 09:30 Thu 2011-02-04 09:30 Fri
2011-02-03 09:35 Thu 2011-02-04 09:35 Fri
2011-02-03 09:40 Thu 2011-02-04 09:40 Fri
2011-02-03 09:45 Thu 2011-02-04 09:45 Fri
2011-02-03 09:50 Thu 2011-02-04 09:50 Fri
2011-02-03 09:55 Thu 2011-02-04 09:55 Fri
2011-02-03 10:00 Thu 2011-02-04 10:00 Fri
2011-02-03 10:05 Thu 2011-02-04 10:05 Fri
2011-02-03 10:10 Thu 2011-02-04 10:10 Fri
2011-02-03 10:15 Thu 2011-02-04 10:15 Fri
2011-02-03 10:20 Thu 2011-02-04 10:20 Fri
2011-02-03 10:25 Thu 2011-02-04 10:25 Fri
2011-02-03 10:30 Thu 2011-02-04 10:30 Fri
2011-02-03 10:35 Thu 2011-02-04 10:35 Fri
2011-02-03 10:40 Thu 2011-02-04 10:40 Fri
2011-02-03 10:45 Thu 2011-02-04 10:45 Fri
2011-02-03 10:50 Thu 2011-02-04 10:50 Fri
2011-02-03 10:55 Thu 2011-02-04 10:55 Fri
2011-02-03 11:00 Thu 2011-02-04 11:00 Fri
2011-02-03 11:05 Thu 2011-02-04 11:05 Fri
2011-02-03 11:10 Thu 2011-02-04 11:10 Fri
2011-02-03 11:15 Thu 2011-02-04 11:15 Fri
2011-02-03 11:20 Thu 2011-02-04 11:20 Fri
2011-02-03 11:25 Thu 2011-02-04 11:25 Fri
2011-02-03 11:30 Thu 2011-02-04 11:30 Fri
2011-02-03 11:35 Thu 2011-02-04 11:35 Fri
2011-02-03 11:40 Thu 2011-02-04 11:40 Fri
2011-02-03 11:45 Thu 2011-02-04 11:45 Fri
2011-02-03 11:50 Thu 2011-02-04 11:50 Fri
2011-02-03 11:55 Thu 2011-02-04 11:55 Fri
2011-02-03 12:00 Thu 2011-02-04 12:00 Fri
2011-02-03 12:05 Thu 2011-02-04 12:05 Fri
2011-02-03 12:10 Thu 2011-02-04 12:10 Fri
2011-02-03 12:15 Thu 2011-02-04 12:15 Fri
2011-02-03 12:20 Thu 2011-02-04 12:20 Fri
2011-02-03 12:25 Thu 2011-02-04 12:25 Fri
2011-02-03 12:30 Thu 2011-02-04 12:30 Fri
2011-02-03 12:35 Thu 2011-02-04 12:35 Fri
2011-02-03 12:40 Thu 2011-02-04 12:40 Fri
2011-02-03 12:45 Thu 2011-02-04 12:45 Fri
2011-02-03 12:50 Thu 2011-02-04 12:50 Fri

DDAY		     LDDAY
-------------------- --------------------
2011-02-03 12:55 Thu 2011-02-04 12:55 Fri
2011-02-03 13:00 Thu 2011-02-04 13:00 Fri
2011-02-03 13:05 Thu 2011-02-04 13:05 Fri
2011-02-03 13:10 Thu 2011-02-04 13:10 Fri
2011-02-03 13:15 Thu 2011-02-04 13:15 Fri
2011-02-03 13:20 Thu 2011-02-04 13:20 Fri
2011-02-03 13:25 Thu 2011-02-04 13:25 Fri
2011-02-03 13:30 Thu 2011-02-04 13:30 Fri
2011-02-03 13:35 Thu 2011-02-04 13:35 Fri
2011-02-03 13:40 Thu 2011-02-04 13:40 Fri
2011-02-03 13:45 Thu 2011-02-04 13:45 Fri
2011-02-03 13:50 Thu 2011-02-04 13:50 Fri
2011-02-03 13:55 Thu 2011-02-04 13:55 Fri
2011-02-03 14:00 Thu 2011-02-04 14:00 Fri
2011-02-03 14:05 Thu 2011-02-04 14:05 Fri
2011-02-03 14:10 Thu 2011-02-04 14:10 Fri
2011-02-03 14:15 Thu 2011-02-04 14:15 Fri
2011-02-03 14:20 Thu 2011-02-04 14:20 Fri
2011-02-03 14:25 Thu 2011-02-04 14:25 Fri
2011-02-03 14:30 Thu 2011-02-04 14:30 Fri
2011-02-03 14:35 Thu 2011-02-04 14:35 Fri
2011-02-03 14:40 Thu 2011-02-04 14:40 Fri
2011-02-03 14:45 Thu 2011-02-04 14:45 Fri
2011-02-03 14:50 Thu 2011-02-04 14:50 Fri
2011-02-03 14:55 Thu 2011-02-04 14:55 Fri
2011-02-03 15:00 Thu 2011-02-04 15:00 Fri
2011-02-03 15:05 Thu 2011-02-04 15:05 Fri
2011-02-03 15:10 Thu 2011-02-04 15:10 Fri
2011-02-03 15:15 Thu 2011-02-04 15:15 Fri
2011-02-03 15:20 Thu 2011-02-04 15:20 Fri
2011-02-03 15:25 Thu 2011-02-04 15:25 Fri
2011-02-03 15:30 Thu 2011-02-04 15:30 Fri
2011-02-03 15:35 Thu 2011-02-04 15:35 Fri
2011-02-03 15:40 Thu 2011-02-04 15:40 Fri
2011-02-03 15:45 Thu 2011-02-04 15:45 Fri
2011-02-03 15:50 Thu 2011-02-04 15:50 Fri
2011-02-03 15:55 Thu 2011-02-04 15:55 Fri
2011-02-03 16:00 Thu 2011-02-04 16:00 Fri
2011-02-03 16:05 Thu 2011-02-04 16:05 Fri
2011-02-03 16:10 Thu 2011-02-04 16:10 Fri
2011-02-03 16:15 Thu 2011-02-04 16:15 Fri
2011-02-03 16:20 Thu 2011-02-04 16:20 Fri
2011-02-03 16:25 Thu 2011-02-04 16:25 Fri
2011-02-03 16:30 Thu 2011-02-04 16:30 Fri
2011-02-03 16:35 Thu 2011-02-04 16:35 Fri

285 rows selected.

Elapsed: 00:00:02.29
20:24:57 SQL> 
20:24:57 SQL> -- I should see that hr 22 is missing 3 rows of data: 00, 05, 10
20:24:57 SQL> SELECT
20:24:57   2  TO_CHAR(ydate,'MI')
20:24:57   3  ,COUNT(TO_CHAR(ydate,'MI'))
20:24:57   4  FROM svm2410
20:24:57   5  WHERE TO_CHAR(ydate,'HH24')='22'
20:24:57   6  AND ydate > sysdate - 30
20:24:57   7  GROUP BY TO_CHAR(ydate,'MI')
20:24:57   8  ORDER BY 0+TO_CHAR(ydate,'MI')
20:24:57   9  /

TO COUNT(TO_CHAR(YDATE,'MI'))
-- --------------------------
15			   22
20			   22
25			   22
30			   22
35			   22
40			   22
45			   22
50			   22
55			   22

9 rows selected.

Elapsed: 00:00:01.16
20:24:58 SQL> 
20:24:58 SQL> -- I should see that other hours have all 12 rows of data
20:24:58 SQL> SELECT
20:24:58   2  TO_CHAR(ydate,'MI')
20:24:58   3  ,COUNT(TO_CHAR(ydate,'MI'))
20:24:58   4  FROM svm2410
20:24:58   5  WHERE TO_CHAR(ydate,'HH24')!='22'
20:24:58   6  AND ydate > sysdate - 30
20:24:58   7  GROUP BY TO_CHAR(ydate,'MI')
20:24:58   8  ORDER BY 0+TO_CHAR(ydate,'MI')
20:24:58   9  /

TO COUNT(TO_CHAR(YDATE,'MI'))
-- --------------------------
00			  502
05			  502
10			  502
15			  502
20			  502
25			  503
30			  503
35			  503
40			  502
45			  502
50			  502
55			  502

12 rows selected.

Elapsed: 00:00:01.16
20:24:59 SQL> 
20:24:59 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
20:24:59 SQL> 
20:24:59 SQL> DROP TABLE svm2412;

Table dropped.

Elapsed: 00:00:00.25
20:24:59 SQL> CREATE TABLE svm2412 COMPRESS AS
20:24:59   2  SELECT
20:24:59   3  pair
20:24:59   4  ,ydate
20:24:59   5  ,prdate
20:24:59   6  ,clse
20:24:59   7  -- g1 is important. I want to predict g1:
20:24:59   8  ,(ld1day - clse)/clse g1
20:24:59   9  ,SIGN(avg24 - LAG(avg24,2,NULL)OVER(PARTITION BY pair ORDER BY ydate))trend
20:24:59  10  -- I want more attributes from the ones I derived above:
20:24:59  11  -- clse relation to moving-min
20:24:59  12  ,clse-min12 cm12
20:24:59  13  ,clse-min18 cm18
20:24:59  14  ,clse-min24 cm24
20:24:59  15  ,clse-min30 cm30
20:24:59  16  ,clse-min36 cm36
20:24:59  17  ,clse-min48 cm48
20:24:59  18  ,clse-min60 cm60
20:24:59  19  ,clse-min72 cm72
20:24:59  20  -- clse relation to moving-avg
20:24:59  21  ,clse-avg12 ca12
20:24:59  22  ,clse-avg18 ca18
20:24:59  23  ,clse-avg24 ca24
20:24:59  24  ,clse-avg30 ca30
20:24:59  25  ,clse-avg36 ca36
20:24:59  26  ,clse-avg48 ca48
20:24:59  27  ,clse-avg60 ca60
20:24:59  28  ,clse-avg72 ca72
20:24:59  29  -- clse relation to moving-max
20:24:59  30  ,clse-max12 cx12
20:24:59  31  ,clse-max18 cx18
20:24:59  32  ,clse-max24 cx24
20:24:59  33  ,clse-max30 cx30
20:24:59  34  ,clse-max36 cx36
20:24:59  35  ,clse-max48 cx48
20:24:59  36  ,clse-max60 cx60
20:24:59  37  ,clse-max72 cx72
20:24:59  38  -- Derive more attributes.
20:24:59  39  -- I want to use CORR() here to help SVM see the shape of the series.
20:24:59  40  -- But COVAR_POP is more stable:
20:24:59  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:24:59  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
20:24:59  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:24:59  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)crr30
20:24:59  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)crr36
20:24:59  46  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)crr48
20:24:59  47  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)crr60
20:24:59  48  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:24:59  49  -- Derive date related attributes:
20:24:59  50  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:24:59  51  ,0+TO_CHAR(ydate,'D')d
20:24:59  52  ,0+TO_CHAR(ydate,'W')w
20:24:59  53  -- mpm stands for minutes-past-midnight:
20:24:59  54  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:24:59  55  -- mph stands for minutes-past-hour:
20:24:59  56  ,0+TO_CHAR(ydate,'MI')mph
20:24:59  57  FROM svm2410
20:24:59  58  -- Protect against divide by zero:
20:24:59  59  WHERE clse > 0
20:24:59  60  ORDER BY ydate
20:24:59  61  /

Table created.

Elapsed: 00:00:02.21
20:25:01 SQL> 
20:25:01 SQL> -- rpt
20:25:01 SQL> 
20:25:01 SQL> SELECT
20:25:01   2  pair
20:25:01   3  ,TO_CHAR(ydate,'D')dnum
20:25:01   4  ,TO_CHAR(ydate,'dy')dday
20:25:01   5  ,AVG(g1)
20:25:01   6  ,COUNT(pair)
20:25:01   7  ,MIN(clse),MAX(clse)
20:25:01   8  ,MIN(ydate),MAX(ydate)
20:25:01   9  FROM svm2412
20:25:01  10  GROUP BY pair,TO_CHAR(ydate,'D'),TO_CHAR(ydate,'dy')
20:25:01  11  ORDER BY pair,TO_CHAR(ydate,'D'),TO_CHAR(ydate,'dy')
20:25:01  12  /

PAIR	D DDA	 AVG(G1) COUNT(PAIR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE)	       MAX(YDATE)
------- - --- ---------- ----------- ---------- ---------- ------------------- -------------------
usd_cad 1 sun .000079974	 359	  .9874     1.0191 2010-10-31 20:55:00 2011-01-30 23:55:00
usd_cad 2 mon .000139808	3989 .985875001     1.0249 2010-11-01 00:00:00 2011-01-31 23:55:00
usd_cad 3 tue -.00050268	3957	.983925   1.028075 2010-11-02 00:00:00 2011-02-01 23:55:00
usd_cad 4 wed -.00194547	4000	.985175     1.0282 2010-10-27 20:25:00 2011-02-02 23:55:00
usd_cad 5 thu .000102406	4265	.985775     1.0285 2010-10-28 00:00:00 2011-02-03 23:55:00
usd_cad 6 fri -.00027128	3889	 .98355     1.0242 2010-10-29 00:00:00 2011-02-04 16:35:00

6 rows selected.

Elapsed: 00:00:00.06
20:25:01 SQL> 
20:25:01 SQL> -- Prepare for derivation of NTILE based params:
20:25:01 SQL> 
20:25:01 SQL> DROP TABLE svm2414;

Table dropped.

Elapsed: 00:00:00.28
20:25:02 SQL> CREATE TABLE svm2414 COMPRESS AS
20:25:02   2  SELECT
20:25:02   3  pair
20:25:02   4  ,ydate
20:25:02   5  ,prdate
20:25:02   6  ,clse
20:25:02   7  ,g1
20:25:02   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1>0.0020 THEN'up'ELSE'nup'END gatt
20:25:02   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1<-0.0020 THEN'up'ELSE'nup'END gattn
20:25:02  10  ,CASE WHEN trend IS NULL THEN 1
20:25:02  11  	    WHEN trend =0      THEN 1
20:25:02  12  	    ELSE trend END trend
20:25:02  13  ,cm12
20:25:02  14  ,cm18
20:25:02  15  ,cm24
20:25:02  16  ,cm30
20:25:02  17  ,cm36
20:25:02  18  ,cm48
20:25:02  19  ,cm60
20:25:02  20  ,cm72
20:25:02  21  --
20:25:02  22  ,ca12
20:25:02  23  ,ca18
20:25:02  24  ,ca24
20:25:02  25  ,ca30
20:25:02  26  ,ca36
20:25:02  27  ,ca48
20:25:02  28  ,ca60
20:25:02  29  ,ca72
20:25:02  30  --
20:25:02  31  ,cx12
20:25:02  32  ,cx18
20:25:02  33  ,cx24
20:25:02  34  ,cx30
20:25:02  35  ,cx36
20:25:02  36  ,cx48
20:25:02  37  ,cx60
20:25:02  38  ,cx72
20:25:02  39  --
20:25:02  40  ,crr12
20:25:02  41  ,crr18
20:25:02  42  ,crr24
20:25:02  43  ,crr30
20:25:02  44  ,crr36
20:25:02  45  ,crr48
20:25:02  46  ,crr60
20:25:02  47  ,crr72
20:25:02  48  --
20:25:02  49  ,hh
20:25:02  50  ,d
20:25:02  51  ,w
20:25:02  52  ,mpm
20:25:02  53  ,mph
20:25:02  54  FROM svm2412
20:25:02  55  ORDER BY ydate
20:25:02  56  /

Table created.

Elapsed: 00:00:00.40
20:25:02 SQL> 
20:25:02 SQL> -- rpt
20:25:02 SQL> 
20:25:02 SQL> SELECT
20:25:02   2  pair
20:25:02   3  ,trend
20:25:02   4  ,gatt
20:25:02   5  ,d
20:25:02   6  ,hh
20:25:02   7  ,COUNT(pair)
20:25:02   8  ,AVG(g1)
20:25:02   9  FROM svm2414
20:25:02  10  GROUP BY pair,trend,gatt,d,hh
20:25:02  11  ORDER BY AVG(g1),pair,trend,gatt,d,hh
20:25:02  12  -- 500 rows
20:25:02  13  
20:25:02 SQL> -- Derive NTILE based params:
20:25:02 SQL> 
20:25:02 SQL> DROP TABLE svm2416;

Table dropped.

Elapsed: 00:00:00.19
20:25:02 SQL> CREATE TABLE svm2416 COMPRESS AS
20:25:02   2  SELECT
20:25:02   3  pair
20:25:02   4  ,ydate
20:25:02   5  ,prdate
20:25:02   6  ,clse
20:25:02   7  ,g1
20:25:02   8  ,gatt
20:25:02   9  ,gattn
20:25:02  10  ,trend
20:25:02  11  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm12)att00
20:25:02  12  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm18)att01
20:25:02  13  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm24)att02
20:25:02  14  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm30)att03
20:25:02  15  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm36)att04
20:25:02  16  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm48)att05
20:25:02  17  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm60)att06
20:25:02  18  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm72)att07
20:25:02  19  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca12)att08
20:25:02  20  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca18)att09
20:25:02  21  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca24)att10
20:25:02  22  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca30)att11
20:25:02  23  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca36)att12
20:25:02  24  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca48)att13
20:25:02  25  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca60)att14
20:25:02  26  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca72)att15
20:25:02  27  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx12)att16
20:25:02  28  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx18)att17
20:25:02  29  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx24)att18
20:25:02  30  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx30)att19
20:25:02  31  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx36)att20
20:25:02  32  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx48)att21
20:25:02  33  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx60)att22
20:25:02  34  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx72)att23
20:25:02  35  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr12)att24
20:25:02  36  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr18)att25
20:25:02  37  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr24)att26
20:25:02  38  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr30)att27
20:25:02  39  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr36)att28
20:25:02  40  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr48)att29
20:25:02  41  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr60)att30
20:25:02  42  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr72)att31
20:25:02  43  ,hh  att32
20:25:02  44  ,d   att33
20:25:02  45  ,w   att34
20:25:02  46  ,mpm att35
20:25:02  47  ,mph att36
20:25:02  48  ,trend att37
20:25:02  49  FROM svm2414
20:25:02  50  ORDER BY ydate
20:25:02  51  /

Table created.

Elapsed: 00:00:05.28
20:25:08 SQL> 
20:25:08 SQL> -- rpt
20:25:08 SQL> 
20:25:08 SQL> SELECT
20:25:08   2  pair
20:25:08   3  ,trend
20:25:08   4  ,gatt
20:25:08   5  ,att33 daynum
20:25:08   6  ,COUNT(pair)
20:25:08   7  ,AVG(g1)
20:25:08   8  FROM svm2416
20:25:08   9  GROUP BY pair,trend,gatt,att33
20:25:08  10  ORDER BY pair,trend,gatt,att33
20:25:08  11  /

PAIR	     TREND GAT	   DAYNUM COUNT(PAIR)	 AVG(G1)
------- ---------- --- ---------- ----------- ----------
usd_cad 	-1 nup		1	  177 -.00113366
usd_cad 	-1 nup		2	 1450 -.00268249
usd_cad 	-1 nup		3	 1426 -.00311002
usd_cad 	-1 nup		4	 1919 -.00279603
usd_cad 	-1 nup		5	 2097 -.00230327
usd_cad 	-1 nup		6	 1520 -.00192585
usd_cad 	-1 up		1	   61 .002775948
usd_cad 	-1 up		2	  851 .006168567
usd_cad 	-1 up		3	  698 .006797846
usd_cad 	-1 up		4	  305 .003098757
usd_cad 	-1 up		5	  987 .005857543
usd_cad 	-1 up		6	  366 .004549738
usd_cad 	-1		6	   54
usd_cad 	 1 nup		1	   90 -.00073544
usd_cad 	 1 nup		2	 1133	-.003008
usd_cad 	 1 nup		3	 1326 -.00355081
usd_cad 	 1 nup		4	 1503 -.00335635
usd_cad 	 1 nup		5	  795 -.00277563
usd_cad 	 1 nup		6	 1161 -.00265921
usd_cad 	 1 up		1	   31 .004071819
usd_cad 	 1 up		2	  555 .004695357
usd_cad 	 1 up		3	  507 .004751999
usd_cad 	 1 up		4	  273 .006165447
usd_cad 	 1 up		5	  301 .005592177
usd_cad 	 1 up		6	  642 .005215989
usd_cad 	 1		5	   85
usd_cad 	 1		6	  146

27 rows selected.

Elapsed: 00:00:00.03
20:25:08 SQL> 
20:25:08 SQL> -- Join scores and gains:
20:25:08 SQL> 
20:25:08 SQL> CREATE OR REPLACE VIEW sc12 AS
20:25:08   2  SELECT
20:25:08   3  m.pair
20:25:08   4  ,m.ydate
20:25:08   5  ,m.prdate
20:25:08   6  ,l.score score_long
20:25:08   7  ,s.score score_short
20:25:08   8  ,ROUND(l.score,1) rscore_long
20:25:08   9  ,ROUND(s.score,1) rscore_short
20:25:08  10  ,m.g1
20:25:08  11  FROM svm24scores l,svm24scores s,svm2416 m
20:25:08  12  WHERE l.targ='gatt'
20:25:08  13  AND   s.targ='gattn'
20:25:08  14  AND l.prdate = s.prdate
20:25:08  15  AND l.prdate = m.prdate
20:25:08  16  -- Speed things up:
20:25:08  17  AND l.pair = '&1'
20:25:08  18  AND s.pair = '&1'
20:25:08  19  /
old  17: AND l.pair = '&1'
new  17: AND l.pair = 'usd_cad'
old  18: AND s.pair = '&1'
new  18: AND s.pair = 'usd_cad'

View created.

Elapsed: 00:00:00.03
20:25:08 SQL> 
20:25:08 SQL> -- rpt
20:25:08 SQL> SELECT pair,rscore_long,AVG(g1),MIN(ydate),COUNT(pair),MAX(ydate)FROM sc12
20:25:08   2  GROUP BY pair,rscore_long
20:25:08   3  ORDER BY pair,rscore_long
20:25:08   4  /

PAIR	RSCORE_LONG    AVG(G1) MIN(YDATE)	   COUNT(PAIR) MAX(YDATE)
------- ----------- ---------- ------------------- ----------- -------------------
usd_cad 	  0 -.00432844 2011-02-01 14:35:00	     6 2011-02-02 01:20:00
usd_cad 	 .1 -.00343219 2011-02-01 07:05:00	    92 2011-02-04 15:30:00
usd_cad 	 .2 -.00320386 2011-02-01 06:55:00	   121 2011-02-04 16:30:00
usd_cad 	 .3 -.00355992 2011-02-01 06:15:00	   119 2011-02-04 16:05:00
usd_cad 	 .4 -.00228853 2011-02-01 05:40:00	   109 2011-02-04 16:15:00
usd_cad 	 .5 -.00109727 2011-02-01 06:20:00	   130 2011-02-04 16:35:00
usd_cad 	 .6 -.00014381 2011-02-01 05:55:00	   157 2011-02-04 15:15:00
usd_cad 	 .7 .000536965 2011-02-01 05:50:00	   118 2011-02-04 11:40:00
usd_cad 	 .8  .00079676 2011-02-01 05:45:00	    83 2011-02-04 10:20:00
usd_cad 	 .9 .000796961 2011-02-01 05:35:00	    49 2011-02-04 09:45:00
usd_cad 	  1 -.00011067 2011-02-03 00:45:00	     4 2011-02-03 12:35:00

11 rows selected.

Elapsed: 00:00:00.05
20:25:08 SQL> 
20:25:08 SQL> DROP TABLE score_corr;

Table dropped.

Elapsed: 00:00:00.13
20:25:08 SQL> 
20:25:08 SQL> CREATE TABLE score_corr COMPRESS AS
20:25:08   2  SELECT
20:25:08   3  pair
20:25:08   4  -- ,ydate
20:25:08   5  ,prdate
20:25:08   6  -- Find corr() tween score and g1 over 11 day period:
20:25:08   7  ,CORR((score_long - score_short),g1)
20:25:08   8  	OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24*5 PRECEDING AND CURRENT ROW)sc_corr
20:25:08   9  FROM sc12
20:25:08  10  /

Table created.

Elapsed: 00:00:00.08
20:25:08 SQL> 
20:25:08 SQL> -- rpt
20:25:08 SQL> 
20:25:08 SQL> SELECT pair,AVG(sc_corr),COUNT(sc_corr)FROM score_corr GROUP BY pair;

PAIR	AVG(SC_CORR) COUNT(SC_CORR)
------- ------------ --------------
usd_cad   .381118014		987

Elapsed: 00:00:00.01
20:25:08 SQL> 
20:25:08 SQL> DROP TABLE modsrc24;

Table dropped.

Elapsed: 00:00:00.31
20:25:08 SQL> 
20:25:08 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.40
20:25:09 SQL> 
20:25:09 SQL> CREATE TABLE modsrc24 COMPRESS AS
20:25:09   2  SELECT
20:25:09   3  s.pair
20:25:09   4  ,ydate
20:25:09   5  ,s.prdate
20:25:09   6  ,trend
20:25:09   7  ,g1
20:25:09   8  ,gatt
20:25:09   9  ,gattn
20:25:09  10  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g00
20:25:09  11  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g01
20:25:09  12  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g02
20:25:09  13  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g03
20:25:09  14  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g04
20:25:09  15  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g05
20:25:09  16  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g06
20:25:09  17  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g07
20:25:09  18  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g08
20:25:09  19  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g09
20:25:09  20  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g10
20:25:09  21  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g11
20:25:09  22  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g12
20:25:09  23  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g13
20:25:09  24  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g14
20:25:09  25  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g15
20:25:09  26  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g16
20:25:09  27  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g17
20:25:09  28  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g18
20:25:09  29  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g19
20:25:09  30  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g20
20:25:09  31  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g21
20:25:09  32  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g22
20:25:09  33  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g23
20:25:09  34  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g24
20:25:09  35  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g25
20:25:09  36  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g26
20:25:09  37  ,SUM(g1)OVER(PARTITION BY trend,att27 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g27
20:25:09  38  ,SUM(g1)OVER(PARTITION BY trend,att28 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g28
20:25:09  39  ,SUM(g1)OVER(PARTITION BY trend,att29 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g29
20:25:09  40  ,SUM(g1)OVER(PARTITION BY trend,att30 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g30
20:25:09  41  ,SUM(g1)OVER(PARTITION BY trend,att31 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g31
20:25:09  42  ,SUM(g1)OVER(PARTITION BY trend,att32 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g32
20:25:09  43  ,SUM(g1)OVER(PARTITION BY trend,att33 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g33
20:25:09  44  ,SUM(g1)OVER(PARTITION BY trend,att34 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g34
20:25:09  45  ,SUM(g1)OVER(PARTITION BY trend,att35 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g35
20:25:09  46  ,SUM(g1)OVER(PARTITION BY trend,att36 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g36
20:25:09  47  -- Add extra goodness attributes related to trend:
20:25:09  48  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*40 PRECEDING AND CURRENT ROW)g37
20:25:09  49  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g38
20:25:09  50  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*20 PRECEDING AND CURRENT ROW)g39
20:25:09  51  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*10 PRECEDING AND CURRENT ROW)g40
20:25:09  52  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*5  PRECEDING AND CURRENT ROW)g41
20:25:09  53  -- Recent CORR()tween scores and gains:
20:25:09  54  ,NVL(sc_corr,0)sc_corr
20:25:09  55  FROM svm2416 s,score_corr c
20:25:09  56  WHERE s.prdate = c.prdate(+)
20:25:09  57  /

Table created.

Elapsed: 00:00:06.71
20:25:15 SQL> 
20:25:15 SQL> ANALYZE TABLE modsrc24 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:02.65
20:25:18 SQL> 
20:25:18 SQL> -- rpt
20:25:18 SQL> 
20:25:18 SQL> SELECT
20:25:18   2  pair
20:25:18   3  ,trend
20:25:18   4  ,gatt
20:25:18   5  ,COUNT(pair)
20:25:18   6  ,AVG(g41)
20:25:18   7  FROM modsrc24
20:25:18   8  GROUP BY pair,trend,gatt
20:25:18   9  ORDER BY pair,trend,gatt
20:25:18  10  /

PAIR	     TREND GAT COUNT(PAIR)   AVG(G41)
------- ---------- --- ----------- ----------
usd_cad 	-1 nup	      8589 -.71826802
usd_cad 	-1 up	      3268 .712625078
usd_cad 	-1		54  -.2226988
usd_cad 	 1 nup	      6008 -.92683148
usd_cad 	 1 up	      2309 -1.0252044
usd_cad 	 1	       231 -1.8423255

6 rows selected.

Elapsed: 00:00:00.03
20:25:18 SQL> 
20:25:18 SQL> 
20:25:18 SQL> SELECT pair,COUNT(pair)FROM svm2410 GROUP BY pair;

PAIR	COUNT(PAIR)
------- -----------
usd_cad       20459

Elapsed: 00:00:01.15
20:25:19 SQL> 
20:25:19 SQL> SELECT pair,COUNT(pair)FROM modsrc24 GROUP BY pair;

PAIR	COUNT(PAIR)
------- -----------
usd_cad       20459

Elapsed: 00:00:00.01
20:25:19 SQL> 
20:25:19 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
