
SQL*Plus: Release 11.2.0.1.0 Production on Sun Jan 30 03:51:26 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

03:51:26 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
03:51:26 SQL> 03:51:26 SQL> --
03:51:26 SQL> -- pair10.sql
03:51:26 SQL> --
03:51:26 SQL> 
03:51:26 SQL> -- Creates views and tables needed by SVM.
03:51:26 SQL> 
03:51:26 SQL> -- Start by sanding off some dukas data so it resembles IB data:
03:51:26 SQL> DROP TABLE di5min24;

Table dropped.

Elapsed: 00:00:00.05
03:51:26 SQL> 
03:51:26 SQL> CREATE TABLE di5min24 COMPRESS AS SELECT * FROM di5min;

Table created.

Elapsed: 00:00:00.73
03:51:27 SQL> 
03:51:27 SQL> DELETE di5min24 WHERE TO_CHAR(ydate,'HH24 MI')IN('22 00','22 05','22 10');

924 rows deleted.

Elapsed: 00:00:00.14
03:51:27 SQL> 
03:51:27 SQL> CREATE OR REPLACE VIEW svm2410 AS
03:51:27   2  SELECT
03:51:27   3  pair
03:51:27   4  ,ydate
03:51:27   5  ,prdate
03:51:27   6  ,rownum rnum -- acts as t in my time-series
03:51:27   7  ,clse
03:51:27   8  -- Derive a bunch of attributes from clse, the latest price:
03:51:27   9  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)min12
03:51:27  10  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)min18
03:51:27  11  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)min24
03:51:27  12  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)min30
03:51:27  13  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)min36
03:51:27  14  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)min48
03:51:27  15  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)min60
03:51:27  16  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)min72
03:51:27  17  --
03:51:27  18  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)avg12
03:51:27  19  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)avg18
03:51:27  20  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)avg24
03:51:27  21  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)avg30
03:51:27  22  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)avg36
03:51:27  23  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)avg48
03:51:27  24  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)avg60
03:51:27  25  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)avg72
03:51:27  26  --
03:51:27  27  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)max12
03:51:27  28  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)max18
03:51:27  29  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)max24
03:51:27  30  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)max30
03:51:27  31  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)max36
03:51:27  32  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)max48
03:51:27  33  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)max60
03:51:27  34  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)max72
03:51:27  35  --
03:51:27  36  ,LEAD(clse,12*24-3,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld1day
03:51:27  37  ,LEAD(ydate,12*24-3,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld_ydate
03:51:27  38  FROM di5min24 WHERE pair = '&1'
03:51:27  39  AND ydate > sysdate - 200
03:51:27  40  ORDER BY ydate
03:51:27  41  /
old  38: FROM di5min24 WHERE pair = '&1'
new  38: FROM di5min24 WHERE pair = 'eur_usd'

View created.

Elapsed: 00:00:00.05
03:51:27 SQL> 
03:51:27 SQL> -- rpt
03:51:27 SQL> 
03:51:27 SQL> -- I should see that ld_ydate is exactly 1 trading day ahead of ydate:
03:51:27 SQL> 
03:51:27 SQL> SELECT
03:51:27   2  TO_CHAR(ydate,'YYYY-MM-DD HH24:MI Dy')dday
03:51:27   3  ,TO_CHAR(ld_ydate,'YYYY-MM-DD HH24:MI Dy')ldday
03:51:27   4  from svm2410
03:51:27   5  WHERE pair='&1'
03:51:27   6  AND ld_ydate > (SELECT MAX(ld_ydate)-1 from svm2410)
03:51:27   7  ORDER BY ydate
03:51:27   8  /
old   5: WHERE pair='&1'
new   5: WHERE pair='eur_usd'

DDAY		     LDDAY
-------------------- --------------------
2011-01-26 22:15 Wed 2011-01-27 22:15 Thu
2011-01-26 22:20 Wed 2011-01-27 22:20 Thu
2011-01-26 22:25 Wed 2011-01-27 22:25 Thu
2011-01-26 22:30 Wed 2011-01-27 22:30 Thu
2011-01-26 22:35 Wed 2011-01-27 22:35 Thu
2011-01-26 22:40 Wed 2011-01-27 22:40 Thu
2011-01-26 22:45 Wed 2011-01-27 22:45 Thu
2011-01-26 22:50 Wed 2011-01-27 22:50 Thu
2011-01-26 22:55 Wed 2011-01-27 22:55 Thu
2011-01-26 23:00 Wed 2011-01-27 23:00 Thu
2011-01-26 23:05 Wed 2011-01-27 23:05 Thu
2011-01-26 23:10 Wed 2011-01-27 23:10 Thu
2011-01-26 23:15 Wed 2011-01-27 23:15 Thu
2011-01-26 23:20 Wed 2011-01-27 23:20 Thu
2011-01-26 23:25 Wed 2011-01-27 23:25 Thu
2011-01-26 23:30 Wed 2011-01-27 23:30 Thu
2011-01-26 23:35 Wed 2011-01-27 23:35 Thu
2011-01-26 23:40 Wed 2011-01-27 23:40 Thu
2011-01-26 23:45 Wed 2011-01-27 23:45 Thu
2011-01-26 23:50 Wed 2011-01-27 23:50 Thu
2011-01-26 23:55 Wed 2011-01-27 23:55 Thu
2011-01-27 00:00 Thu 2011-01-28 00:00 Fri
2011-01-27 00:05 Thu 2011-01-28 00:05 Fri
2011-01-27 00:10 Thu 2011-01-28 00:10 Fri
2011-01-27 00:15 Thu 2011-01-28 00:15 Fri
2011-01-27 00:20 Thu 2011-01-28 00:20 Fri
2011-01-27 00:25 Thu 2011-01-28 00:25 Fri
2011-01-27 00:30 Thu 2011-01-28 00:30 Fri
2011-01-27 00:35 Thu 2011-01-28 00:35 Fri
2011-01-27 00:40 Thu 2011-01-28 00:40 Fri
2011-01-27 00:45 Thu 2011-01-28 00:45 Fri
2011-01-27 00:50 Thu 2011-01-28 00:50 Fri
2011-01-27 00:55 Thu 2011-01-28 00:55 Fri
2011-01-27 01:00 Thu 2011-01-28 01:00 Fri
2011-01-27 01:05 Thu 2011-01-28 01:05 Fri
2011-01-27 01:10 Thu 2011-01-28 01:10 Fri
2011-01-27 01:15 Thu 2011-01-28 01:15 Fri
2011-01-27 01:20 Thu 2011-01-28 01:20 Fri
2011-01-27 01:25 Thu 2011-01-28 01:25 Fri
2011-01-27 01:30 Thu 2011-01-28 01:30 Fri
2011-01-27 01:35 Thu 2011-01-28 01:35 Fri
2011-01-27 01:40 Thu 2011-01-28 01:40 Fri
2011-01-27 01:45 Thu 2011-01-28 01:45 Fri
2011-01-27 01:50 Thu 2011-01-28 01:50 Fri
2011-01-27 01:55 Thu 2011-01-28 01:55 Fri
2011-01-27 02:00 Thu 2011-01-28 02:00 Fri
2011-01-27 02:05 Thu 2011-01-28 02:05 Fri
2011-01-27 02:10 Thu 2011-01-28 02:10 Fri
2011-01-27 02:15 Thu 2011-01-28 02:15 Fri
2011-01-27 02:20 Thu 2011-01-28 02:20 Fri
2011-01-27 02:25 Thu 2011-01-28 02:25 Fri
2011-01-27 02:30 Thu 2011-01-28 02:30 Fri
2011-01-27 02:35 Thu 2011-01-28 02:35 Fri
2011-01-27 02:40 Thu 2011-01-28 02:40 Fri
2011-01-27 02:45 Thu 2011-01-28 02:45 Fri
2011-01-27 02:50 Thu 2011-01-28 02:50 Fri
2011-01-27 02:55 Thu 2011-01-28 02:55 Fri
2011-01-27 03:00 Thu 2011-01-28 03:00 Fri
2011-01-27 03:05 Thu 2011-01-28 03:05 Fri
2011-01-27 03:10 Thu 2011-01-28 03:10 Fri
2011-01-27 03:15 Thu 2011-01-28 03:15 Fri
2011-01-27 03:20 Thu 2011-01-28 03:20 Fri
2011-01-27 03:25 Thu 2011-01-28 03:25 Fri
2011-01-27 03:30 Thu 2011-01-28 03:30 Fri
2011-01-27 03:35 Thu 2011-01-28 03:35 Fri
2011-01-27 03:40 Thu 2011-01-28 03:40 Fri
2011-01-27 03:45 Thu 2011-01-28 03:45 Fri
2011-01-27 03:50 Thu 2011-01-28 03:50 Fri
2011-01-27 03:55 Thu 2011-01-28 03:55 Fri
2011-01-27 04:00 Thu 2011-01-28 04:00 Fri
2011-01-27 04:05 Thu 2011-01-28 04:05 Fri
2011-01-27 04:10 Thu 2011-01-28 04:10 Fri
2011-01-27 04:15 Thu 2011-01-28 04:15 Fri
2011-01-27 04:20 Thu 2011-01-28 04:20 Fri
2011-01-27 04:25 Thu 2011-01-28 04:25 Fri
2011-01-27 04:30 Thu 2011-01-28 04:30 Fri
2011-01-27 04:35 Thu 2011-01-28 04:35 Fri
2011-01-27 04:40 Thu 2011-01-28 04:40 Fri
2011-01-27 04:45 Thu 2011-01-28 04:45 Fri
2011-01-27 04:50 Thu 2011-01-28 04:50 Fri
2011-01-27 04:55 Thu 2011-01-28 04:55 Fri
2011-01-27 05:00 Thu 2011-01-28 05:00 Fri
2011-01-27 05:05 Thu 2011-01-28 05:05 Fri
2011-01-27 05:10 Thu 2011-01-28 05:10 Fri
2011-01-27 05:15 Thu 2011-01-28 05:15 Fri
2011-01-27 05:20 Thu 2011-01-28 05:20 Fri
2011-01-27 05:25 Thu 2011-01-28 05:25 Fri
2011-01-27 05:30 Thu 2011-01-28 05:30 Fri
2011-01-27 05:35 Thu 2011-01-28 05:35 Fri
2011-01-27 05:40 Thu 2011-01-28 05:40 Fri
2011-01-27 05:45 Thu 2011-01-28 05:45 Fri
2011-01-27 05:50 Thu 2011-01-28 05:50 Fri
2011-01-27 05:55 Thu 2011-01-28 05:55 Fri
2011-01-27 06:00 Thu 2011-01-28 06:00 Fri
2011-01-27 06:05 Thu 2011-01-28 06:05 Fri
2011-01-27 06:10 Thu 2011-01-28 06:10 Fri
2011-01-27 06:15 Thu 2011-01-28 06:15 Fri
2011-01-27 06:20 Thu 2011-01-28 06:20 Fri
2011-01-27 06:25 Thu 2011-01-28 06:25 Fri
2011-01-27 06:30 Thu 2011-01-28 06:30 Fri
2011-01-27 06:35 Thu 2011-01-28 06:35 Fri
2011-01-27 06:40 Thu 2011-01-28 06:40 Fri
2011-01-27 06:45 Thu 2011-01-28 06:45 Fri
2011-01-27 06:50 Thu 2011-01-28 06:50 Fri
2011-01-27 06:55 Thu 2011-01-28 06:55 Fri
2011-01-27 07:00 Thu 2011-01-28 07:00 Fri
2011-01-27 07:05 Thu 2011-01-28 07:05 Fri
2011-01-27 07:10 Thu 2011-01-28 07:10 Fri
2011-01-27 07:15 Thu 2011-01-28 07:15 Fri
2011-01-27 07:20 Thu 2011-01-28 07:20 Fri
2011-01-27 07:25 Thu 2011-01-28 07:25 Fri
2011-01-27 07:30 Thu 2011-01-28 07:30 Fri
2011-01-27 07:35 Thu 2011-01-28 07:35 Fri
2011-01-27 07:40 Thu 2011-01-28 07:40 Fri
2011-01-27 07:45 Thu 2011-01-28 07:45 Fri
2011-01-27 07:50 Thu 2011-01-28 07:50 Fri
2011-01-27 07:55 Thu 2011-01-28 07:55 Fri
2011-01-27 08:00 Thu 2011-01-28 08:00 Fri
2011-01-27 08:05 Thu 2011-01-28 08:05 Fri
2011-01-27 08:10 Thu 2011-01-28 08:10 Fri

DDAY		     LDDAY
-------------------- --------------------
2011-01-27 08:15 Thu 2011-01-28 08:15 Fri
2011-01-27 08:20 Thu 2011-01-28 08:20 Fri
2011-01-27 08:25 Thu 2011-01-28 08:25 Fri
2011-01-27 08:30 Thu 2011-01-28 08:30 Fri
2011-01-27 08:35 Thu 2011-01-28 08:35 Fri
2011-01-27 08:40 Thu 2011-01-28 08:40 Fri
2011-01-27 08:45 Thu 2011-01-28 08:45 Fri
2011-01-27 08:50 Thu 2011-01-28 08:50 Fri
2011-01-27 08:55 Thu 2011-01-28 08:55 Fri
2011-01-27 09:00 Thu 2011-01-28 09:00 Fri
2011-01-27 09:05 Thu 2011-01-28 09:05 Fri
2011-01-27 09:10 Thu 2011-01-28 09:10 Fri
2011-01-27 09:15 Thu 2011-01-28 09:15 Fri
2011-01-27 09:20 Thu 2011-01-28 09:20 Fri
2011-01-27 09:25 Thu 2011-01-28 09:25 Fri
2011-01-27 09:30 Thu 2011-01-28 09:30 Fri
2011-01-27 09:35 Thu 2011-01-28 09:35 Fri
2011-01-27 09:40 Thu 2011-01-28 09:40 Fri
2011-01-27 09:45 Thu 2011-01-28 09:45 Fri
2011-01-27 09:50 Thu 2011-01-28 09:50 Fri
2011-01-27 09:55 Thu 2011-01-28 09:55 Fri
2011-01-27 10:00 Thu 2011-01-28 10:00 Fri
2011-01-27 10:05 Thu 2011-01-28 10:05 Fri
2011-01-27 10:10 Thu 2011-01-28 10:10 Fri
2011-01-27 10:15 Thu 2011-01-28 10:15 Fri
2011-01-27 10:20 Thu 2011-01-28 10:20 Fri
2011-01-27 10:25 Thu 2011-01-28 10:25 Fri
2011-01-27 10:30 Thu 2011-01-28 10:30 Fri
2011-01-27 10:35 Thu 2011-01-28 10:35 Fri
2011-01-27 10:40 Thu 2011-01-28 10:40 Fri
2011-01-27 10:45 Thu 2011-01-28 10:45 Fri
2011-01-27 10:50 Thu 2011-01-28 10:50 Fri
2011-01-27 10:55 Thu 2011-01-28 10:55 Fri
2011-01-27 11:00 Thu 2011-01-28 11:00 Fri
2011-01-27 11:05 Thu 2011-01-28 11:05 Fri
2011-01-27 11:10 Thu 2011-01-28 11:10 Fri
2011-01-27 11:15 Thu 2011-01-28 11:15 Fri
2011-01-27 11:20 Thu 2011-01-28 11:20 Fri
2011-01-27 11:25 Thu 2011-01-28 11:25 Fri
2011-01-27 11:30 Thu 2011-01-28 11:30 Fri
2011-01-27 11:35 Thu 2011-01-28 11:35 Fri
2011-01-27 11:40 Thu 2011-01-28 11:40 Fri
2011-01-27 11:45 Thu 2011-01-28 11:45 Fri
2011-01-27 11:50 Thu 2011-01-28 11:50 Fri
2011-01-27 11:55 Thu 2011-01-28 11:55 Fri
2011-01-27 12:00 Thu 2011-01-28 12:00 Fri
2011-01-27 12:05 Thu 2011-01-28 12:05 Fri
2011-01-27 12:10 Thu 2011-01-28 12:10 Fri
2011-01-27 12:15 Thu 2011-01-28 12:15 Fri
2011-01-27 12:20 Thu 2011-01-28 12:20 Fri
2011-01-27 12:25 Thu 2011-01-28 12:25 Fri
2011-01-27 12:30 Thu 2011-01-28 12:30 Fri
2011-01-27 12:35 Thu 2011-01-28 12:35 Fri
2011-01-27 12:40 Thu 2011-01-28 12:40 Fri
2011-01-27 12:45 Thu 2011-01-28 12:45 Fri
2011-01-27 12:50 Thu 2011-01-28 12:50 Fri
2011-01-27 12:55 Thu 2011-01-28 12:55 Fri
2011-01-27 13:00 Thu 2011-01-28 13:00 Fri
2011-01-27 13:05 Thu 2011-01-28 13:05 Fri
2011-01-27 13:10 Thu 2011-01-28 13:10 Fri
2011-01-27 13:15 Thu 2011-01-28 13:15 Fri
2011-01-27 13:20 Thu 2011-01-28 13:20 Fri
2011-01-27 13:25 Thu 2011-01-28 13:25 Fri
2011-01-27 13:30 Thu 2011-01-28 13:30 Fri
2011-01-27 13:35 Thu 2011-01-28 13:35 Fri
2011-01-27 13:40 Thu 2011-01-28 13:40 Fri
2011-01-27 13:45 Thu 2011-01-28 13:45 Fri
2011-01-27 13:50 Thu 2011-01-28 13:50 Fri
2011-01-27 13:55 Thu 2011-01-28 13:55 Fri
2011-01-27 14:00 Thu 2011-01-28 14:00 Fri
2011-01-27 14:05 Thu 2011-01-28 14:05 Fri
2011-01-27 14:10 Thu 2011-01-28 14:10 Fri
2011-01-27 14:15 Thu 2011-01-28 14:15 Fri
2011-01-27 14:20 Thu 2011-01-28 14:20 Fri
2011-01-27 14:25 Thu 2011-01-28 14:25 Fri
2011-01-27 14:30 Thu 2011-01-28 14:30 Fri
2011-01-27 14:35 Thu 2011-01-28 14:35 Fri
2011-01-27 14:40 Thu 2011-01-28 14:40 Fri
2011-01-27 14:45 Thu 2011-01-28 14:45 Fri
2011-01-27 14:50 Thu 2011-01-28 14:50 Fri
2011-01-27 14:55 Thu 2011-01-28 14:55 Fri
2011-01-27 15:00 Thu 2011-01-28 15:00 Fri
2011-01-27 15:05 Thu 2011-01-28 15:05 Fri
2011-01-27 15:10 Thu 2011-01-28 15:10 Fri
2011-01-27 15:15 Thu 2011-01-28 15:15 Fri
2011-01-27 15:20 Thu 2011-01-28 15:20 Fri
2011-01-27 15:25 Thu 2011-01-28 15:25 Fri
2011-01-27 15:30 Thu 2011-01-28 15:30 Fri
2011-01-27 15:35 Thu 2011-01-28 15:35 Fri
2011-01-27 15:40 Thu 2011-01-28 15:40 Fri
2011-01-27 15:45 Thu 2011-01-28 15:45 Fri
2011-01-27 15:50 Thu 2011-01-28 15:50 Fri
2011-01-27 15:55 Thu 2011-01-28 15:55 Fri
2011-01-27 16:00 Thu 2011-01-28 16:00 Fri
2011-01-27 16:05 Thu 2011-01-28 16:05 Fri
2011-01-27 16:10 Thu 2011-01-28 16:10 Fri
2011-01-27 16:15 Thu 2011-01-28 16:15 Fri
2011-01-27 16:20 Thu 2011-01-28 16:20 Fri
2011-01-27 16:25 Thu 2011-01-28 16:25 Fri
2011-01-27 16:30 Thu 2011-01-28 16:30 Fri
2011-01-27 16:35 Thu 2011-01-28 16:35 Fri
2011-01-27 16:40 Thu 2011-01-28 16:40 Fri
2011-01-27 16:45 Thu 2011-01-28 16:45 Fri
2011-01-27 16:50 Thu 2011-01-28 16:50 Fri
2011-01-27 16:55 Thu 2011-01-28 16:55 Fri
2011-01-27 17:00 Thu 2011-01-28 17:00 Fri
2011-01-27 17:05 Thu 2011-01-28 17:05 Fri
2011-01-27 17:10 Thu 2011-01-28 17:10 Fri
2011-01-27 17:15 Thu 2011-01-28 17:15 Fri
2011-01-27 17:20 Thu 2011-01-28 17:20 Fri
2011-01-27 17:25 Thu 2011-01-28 17:25 Fri
2011-01-27 17:30 Thu 2011-01-28 17:30 Fri
2011-01-27 17:35 Thu 2011-01-28 17:35 Fri
2011-01-27 17:40 Thu 2011-01-28 17:40 Fri
2011-01-27 17:45 Thu 2011-01-28 17:45 Fri
2011-01-27 17:50 Thu 2011-01-28 17:50 Fri
2011-01-27 17:55 Thu 2011-01-28 17:55 Fri
2011-01-27 18:00 Thu 2011-01-28 18:00 Fri
2011-01-27 18:05 Thu 2011-01-28 18:05 Fri
2011-01-27 18:10 Thu 2011-01-28 18:10 Fri

DDAY		     LDDAY
-------------------- --------------------
2011-01-27 18:15 Thu 2011-01-28 18:15 Fri
2011-01-27 18:20 Thu 2011-01-28 18:20 Fri
2011-01-27 18:25 Thu 2011-01-28 18:25 Fri
2011-01-27 18:30 Thu 2011-01-28 18:30 Fri
2011-01-27 18:35 Thu 2011-01-28 18:35 Fri
2011-01-27 18:40 Thu 2011-01-28 18:40 Fri
2011-01-27 18:45 Thu 2011-01-28 18:45 Fri
2011-01-27 18:50 Thu 2011-01-28 18:50 Fri
2011-01-27 18:55 Thu 2011-01-28 18:55 Fri
2011-01-27 19:00 Thu 2011-01-28 19:00 Fri
2011-01-27 19:05 Thu 2011-01-28 19:05 Fri
2011-01-27 19:10 Thu 2011-01-28 19:10 Fri
2011-01-27 19:15 Thu 2011-01-28 19:15 Fri
2011-01-27 19:20 Thu 2011-01-28 19:20 Fri
2011-01-27 19:25 Thu 2011-01-28 19:25 Fri
2011-01-27 19:30 Thu 2011-01-28 19:30 Fri
2011-01-27 19:35 Thu 2011-01-28 19:35 Fri
2011-01-27 19:40 Thu 2011-01-28 19:40 Fri
2011-01-27 19:45 Thu 2011-01-28 19:45 Fri
2011-01-27 19:50 Thu 2011-01-28 19:50 Fri
2011-01-27 19:55 Thu 2011-01-28 19:55 Fri
2011-01-27 20:00 Thu 2011-01-28 20:00 Fri
2011-01-27 20:05 Thu 2011-01-28 20:05 Fri
2011-01-27 20:10 Thu 2011-01-28 20:10 Fri
2011-01-27 20:15 Thu 2011-01-28 20:15 Fri
2011-01-27 20:20 Thu 2011-01-28 20:20 Fri
2011-01-27 20:25 Thu 2011-01-28 20:25 Fri
2011-01-27 20:30 Thu 2011-01-28 20:30 Fri
2011-01-27 20:35 Thu 2011-01-28 20:35 Fri
2011-01-27 20:40 Thu 2011-01-28 20:40 Fri
2011-01-27 20:45 Thu 2011-01-28 20:45 Fri
2011-01-27 20:50 Thu 2011-01-28 20:50 Fri
2011-01-27 20:55 Thu 2011-01-28 20:55 Fri
2011-01-27 21:00 Thu 2011-01-28 21:00 Fri
2011-01-27 21:05 Thu 2011-01-28 21:05 Fri
2011-01-27 21:10 Thu 2011-01-28 21:10 Fri
2011-01-27 21:15 Thu 2011-01-28 21:15 Fri
2011-01-27 21:20 Thu 2011-01-28 21:20 Fri
2011-01-27 21:25 Thu 2011-01-28 21:25 Fri
2011-01-27 21:30 Thu 2011-01-28 21:30 Fri
2011-01-27 21:35 Thu 2011-01-28 21:35 Fri
2011-01-27 21:40 Thu 2011-01-28 21:40 Fri
2011-01-27 21:45 Thu 2011-01-28 21:45 Fri
2011-01-27 21:50 Thu 2011-01-28 21:50 Fri
2011-01-27 21:55 Thu 2011-01-28 21:55 Fri

285 rows selected.

Elapsed: 00:00:02.72
03:51:29 SQL> 
03:51:29 SQL> -- I should see that hr 22 is missing 3 rows of data: 00, 05, 10
03:51:29 SQL> SELECT
03:51:29   2  TO_CHAR(ydate,'MI')
03:51:29   3  ,COUNT(TO_CHAR(ydate,'MI'))
03:51:29   4  FROM svm2410
03:51:29   5  WHERE TO_CHAR(ydate,'HH24')='22'
03:51:29   6  AND ydate > sysdate - 30
03:51:29   7  GROUP BY TO_CHAR(ydate,'MI')
03:51:29   8  ORDER BY 0+TO_CHAR(ydate,'MI')
03:51:29   9  /

TO COUNT(TO_CHAR(YDATE,'MI'))
-- --------------------------
15			   20
20			   20
25			   20
30			   20
35			   20
40			   20
45			   20
50			   20
55			   20

9 rows selected.

Elapsed: 00:00:01.35
03:51:31 SQL> 
03:51:31 SQL> -- I should see that other hours have all 12 rows of data
03:51:31 SQL> SELECT
03:51:31   2  TO_CHAR(ydate,'MI')
03:51:31   3  ,COUNT(TO_CHAR(ydate,'MI'))
03:51:31   4  FROM svm2410
03:51:31   5  WHERE TO_CHAR(ydate,'HH24')!='22'
03:51:31   6  AND ydate > sysdate - 30
03:51:31   7  GROUP BY TO_CHAR(ydate,'MI')
03:51:31   8  ORDER BY 0+TO_CHAR(ydate,'MI')
03:51:31   9  /

TO COUNT(TO_CHAR(YDATE,'MI'))
-- --------------------------
00			  478
05			  478
10			  478
15			  478
20			  478
25			  478
30			  478
35			  478
40			  478
45			  478
50			  478
55			  478

12 rows selected.

Elapsed: 00:00:01.36
03:51:32 SQL> 
03:51:32 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
03:51:32 SQL> 
03:51:32 SQL> DROP TABLE svm2412;

Table dropped.

Elapsed: 00:00:00.03
03:51:32 SQL> CREATE TABLE svm2412 COMPRESS AS
03:51:32   2  SELECT
03:51:32   3  pair
03:51:32   4  ,ydate
03:51:32   5  ,prdate
03:51:32   6  ,clse
03:51:32   7  -- g1 is important. I want to predict g1:
03:51:32   8  ,(ld1day - clse)/clse g1
03:51:32   9  ,SIGN(avg24 - LAG(avg24,2,NULL)OVER(PARTITION BY pair ORDER BY ydate))trend
03:51:32  10  -- I want more attributes from the ones I derived above:
03:51:32  11  -- clse relation to moving-min
03:51:32  12  ,clse-min12 cm12
03:51:32  13  ,clse-min18 cm18
03:51:32  14  ,clse-min24 cm24
03:51:32  15  ,clse-min30 cm30
03:51:32  16  ,clse-min36 cm36
03:51:32  17  ,clse-min48 cm48
03:51:32  18  ,clse-min60 cm60
03:51:32  19  ,clse-min72 cm72
03:51:32  20  -- clse relation to moving-avg
03:51:32  21  ,clse-avg12 ca12
03:51:32  22  ,clse-avg18 ca18
03:51:32  23  ,clse-avg24 ca24
03:51:32  24  ,clse-avg30 ca30
03:51:32  25  ,clse-avg36 ca36
03:51:32  26  ,clse-avg48 ca48
03:51:32  27  ,clse-avg60 ca60
03:51:32  28  ,clse-avg72 ca72
03:51:32  29  -- clse relation to moving-max
03:51:32  30  ,clse-max12 cx12
03:51:32  31  ,clse-max18 cx18
03:51:32  32  ,clse-max24 cx24
03:51:32  33  ,clse-max30 cx30
03:51:32  34  ,clse-max36 cx36
03:51:32  35  ,clse-max48 cx48
03:51:32  36  ,clse-max60 cx60
03:51:32  37  ,clse-max72 cx72
03:51:32  38  -- Derive more attributes.
03:51:32  39  -- I want to use CORR() here to help SVM see the shape of the series.
03:51:32  40  -- But COVAR_POP is more stable:
03:51:32  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
03:51:32  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
03:51:32  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
03:51:32  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)crr30
03:51:32  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)crr36
03:51:32  46  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)crr48
03:51:32  47  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)crr60
03:51:32  48  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
03:51:32  49  -- Derive date related attributes:
03:51:32  50  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
03:51:32  51  ,0+TO_CHAR(ydate,'D')d
03:51:32  52  ,0+TO_CHAR(ydate,'W')w
03:51:32  53  -- mpm stands for minutes-past-midnight:
03:51:32  54  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
03:51:32  55  -- mph stands for minutes-past-hour:
03:51:32  56  ,0+TO_CHAR(ydate,'MI')mph
03:51:32  57  FROM svm2410
03:51:32  58  -- Protect against divide by zero:
03:51:32  59  WHERE clse > 0
03:51:32  60  ORDER BY ydate
03:51:32  61  /

Table created.

Elapsed: 00:00:02.37
03:51:35 SQL> 
03:51:35 SQL> -- rpt
03:51:35 SQL> 
03:51:35 SQL> SELECT
03:51:35   2  pair
03:51:35   3  ,TO_CHAR(ydate,'D')dnum
03:51:35   4  ,TO_CHAR(ydate,'dy')dday
03:51:35   5  ,AVG(g1)
03:51:35   6  ,COUNT(pair)
03:51:35   7  ,MIN(clse),MAX(clse)
03:51:35   8  ,MIN(ydate),MAX(ydate)
03:51:35   9  FROM svm2412
03:51:35  10  GROUP BY pair,TO_CHAR(ydate,'D'),TO_CHAR(ydate,'dy')
03:51:35  11  ORDER BY pair,TO_CHAR(ydate,'D'),TO_CHAR(ydate,'dy')
03:51:35  12  /

PAIR	D DDA	 AVG(G1) COUNT(PAIR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE)	       MAX(YDATE)
------- - --- ---------- ----------- ---------- ---------- ------------------- -------------------
eur_usd 1 sun -.00349965	 372	1.28795     1.4074 2010-10-24 20:55:01 2011-01-23 23:55:00
eur_usd 2 mon -.00095312	3989	1.28805     1.4075 2010-10-25 00:00:01 2011-01-24 23:55:00
eur_usd 3 tue  -.0023435	3957   1.291375     1.4052 2010-10-26 00:00:01 2011-01-25 23:55:00
eur_usd 4 wed .002316938	3980   1.296575     1.4144 2010-10-20 22:35:01 2011-01-26 23:55:00
eur_usd 5 thu .000866865	4265   1.297975     1.4273 2010-10-21 00:00:01 2011-01-27 23:55:00
eur_usd 6 fri -.00097613	3952	 1.2907     1.4224 2010-10-22 00:00:01 2011-01-28 21:55:00

6 rows selected.

Elapsed: 00:00:00.06
03:51:35 SQL> 
03:51:35 SQL> -- Prepare for derivation of NTILE based params:
03:51:35 SQL> 
03:51:35 SQL> DROP TABLE svm2414;

Table dropped.

Elapsed: 00:00:00.03
03:51:35 SQL> CREATE TABLE svm2414 COMPRESS AS
03:51:35   2  SELECT
03:51:35   3  pair
03:51:35   4  ,ydate
03:51:35   5  ,prdate
03:51:35   6  ,clse
03:51:35   7  ,g1
03:51:35   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1>0.0020 THEN'up'ELSE'nup'END gatt
03:51:35   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1<-0.0020 THEN'up'ELSE'nup'END gattn
03:51:35  10  ,CASE WHEN trend IS NULL THEN 1
03:51:35  11  	    WHEN trend =0      THEN 1
03:51:35  12  	    ELSE trend END trend
03:51:35  13  ,cm12
03:51:35  14  ,cm18
03:51:35  15  ,cm24
03:51:35  16  ,cm30
03:51:35  17  ,cm36
03:51:35  18  ,cm48
03:51:35  19  ,cm60
03:51:35  20  ,cm72
03:51:35  21  --
03:51:35  22  ,ca12
03:51:35  23  ,ca18
03:51:35  24  ,ca24
03:51:35  25  ,ca30
03:51:35  26  ,ca36
03:51:35  27  ,ca48
03:51:35  28  ,ca60
03:51:35  29  ,ca72
03:51:35  30  --
03:51:35  31  ,cx12
03:51:35  32  ,cx18
03:51:35  33  ,cx24
03:51:35  34  ,cx30
03:51:35  35  ,cx36
03:51:35  36  ,cx48
03:51:35  37  ,cx60
03:51:35  38  ,cx72
03:51:35  39  --
03:51:35  40  ,crr12
03:51:35  41  ,crr18
03:51:35  42  ,crr24
03:51:35  43  ,crr30
03:51:35  44  ,crr36
03:51:35  45  ,crr48
03:51:35  46  ,crr60
03:51:35  47  ,crr72
03:51:35  48  --
03:51:35  49  ,hh
03:51:35  50  ,d
03:51:35  51  ,w
03:51:35  52  ,mpm
03:51:35  53  ,mph
03:51:35  54  FROM svm2412
03:51:35  55  ORDER BY ydate
03:51:35  56  /

Table created.

Elapsed: 00:00:00.41
03:51:35 SQL> 
03:51:35 SQL> -- rpt
03:51:35 SQL> 
03:51:35 SQL> SELECT
03:51:35   2  pair
03:51:35   3  ,trend
03:51:35   4  ,gatt
03:51:35   5  ,d
03:51:35   6  ,hh
03:51:35   7  ,COUNT(pair)
03:51:35   8  ,AVG(g1)
03:51:35   9  FROM svm2414
03:51:35  10  GROUP BY pair,trend,gatt,d,hh
03:51:35  11  ORDER BY AVG(g1),pair,trend,gatt,d,hh
03:51:35  12  -- 500 rows
03:51:35  13  
03:51:35 SQL> -- Derive NTILE based params:
03:51:35 SQL> 
03:51:35 SQL> DROP TABLE svm2416;

Table dropped.

Elapsed: 00:00:00.03
03:51:35 SQL> CREATE TABLE svm2416 COMPRESS AS
03:51:35   2  SELECT
03:51:35   3  pair
03:51:35   4  ,ydate
03:51:35   5  ,prdate
03:51:35   6  ,clse
03:51:35   7  ,g1
03:51:35   8  ,gatt
03:51:35   9  ,gattn
03:51:35  10  ,trend
03:51:35  11  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm12)att00
03:51:35  12  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm18)att01
03:51:35  13  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm24)att02
03:51:35  14  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm30)att03
03:51:35  15  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm36)att04
03:51:35  16  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm48)att05
03:51:35  17  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm60)att06
03:51:35  18  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm72)att07
03:51:35  19  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca12)att08
03:51:35  20  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca18)att09
03:51:35  21  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca24)att10
03:51:35  22  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca30)att11
03:51:35  23  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca36)att12
03:51:35  24  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca48)att13
03:51:35  25  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca60)att14
03:51:35  26  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca72)att15
03:51:35  27  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx12)att16
03:51:35  28  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx18)att17
03:51:35  29  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx24)att18
03:51:35  30  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx30)att19
03:51:35  31  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx36)att20
03:51:35  32  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx48)att21
03:51:35  33  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx60)att22
03:51:35  34  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx72)att23
03:51:35  35  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr12)att24
03:51:35  36  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr18)att25
03:51:35  37  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr24)att26
03:51:35  38  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr30)att27
03:51:35  39  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr36)att28
03:51:35  40  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr48)att29
03:51:35  41  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr60)att30
03:51:35  42  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr72)att31
03:51:35  43  ,hh  att32
03:51:35  44  ,d   att33
03:51:35  45  ,w   att34
03:51:35  46  ,mpm att35
03:51:35  47  ,mph att36
03:51:35  48  ,trend att37
03:51:35  49  FROM svm2414
03:51:35  50  ORDER BY ydate
03:51:35  51  /

Table created.

Elapsed: 00:00:05.08
03:51:40 SQL> 
03:51:40 SQL> -- rpt
03:51:40 SQL> 
03:51:40 SQL> SELECT
03:51:40   2  pair
03:51:40   3  ,trend
03:51:40   4  ,gatt
03:51:40   5  ,att33 daynum
03:51:40   6  ,COUNT(pair)
03:51:40   7  ,AVG(g1)
03:51:40   8  FROM svm2416
03:51:40   9  GROUP BY pair,trend,gatt,att33
03:51:40  10  ORDER BY pair,trend,gatt,att33
03:51:40  11  /

PAIR	     TREND GAT	   DAYNUM COUNT(PAIR)	 AVG(G1)
------- ---------- --- ---------- ----------- ----------
eur_usd 	-1 nup		1	   91 -.00887519
eur_usd 	-1 nup		2	 1335 -.00565383
eur_usd 	-1 nup		3	 1562 -.00716206
eur_usd 	-1 nup		4	 1525 -.00428148
eur_usd 	-1 nup		5	  998 -.00390791
eur_usd 	-1 nup		6	  970 -.00545931
eur_usd 	-1 up		1	   53 .008641822
eur_usd 	-1 up		2	  931 .007678249
eur_usd 	-1 up		3	  592 .007145094
eur_usd 	-1 up		4	  934 .007886784
eur_usd 	-1 up		5	  602  .00511051
eur_usd 	-1 up		6	  423 .006775526
eur_usd 	-1		6	  146
eur_usd 	 1 nup		1	  208  -.0048847
eur_usd 	 1 nup		2	 1228  -.0049175
eur_usd 	 1 nup		3	 1114 -.00598059
eur_usd 	 1 nup		4	  496 -.00098187
eur_usd 	 1 nup		5	 1337 -.00422861
eur_usd 	 1 nup		6	 1408 -.00484937
eur_usd 	 1 up		1	   20 .003188698
eur_usd 	 1 up		2	  495  .00532547
eur_usd 	 1 up		3	  689 .006308282
eur_usd 	 1 up		4	 1025 .008655044
eur_usd 	 1 up		5	 1307 .007770616
eur_usd 	 1 up		6	  887 .006378169
eur_usd 	 1		5	   21
eur_usd 	 1		6	  118

27 rows selected.

Elapsed: 00:00:00.04
03:51:40 SQL> 
03:51:40 SQL> -- Join scores and gains:
03:51:40 SQL> 
03:51:40 SQL> CREATE OR REPLACE VIEW sc12 AS
03:51:40   2  SELECT
03:51:40   3  m.pair
03:51:40   4  ,m.ydate
03:51:40   5  ,m.prdate
03:51:40   6  ,l.score score_long
03:51:40   7  ,s.score score_short
03:51:40   8  ,ROUND(l.score,1) rscore_long
03:51:40   9  ,ROUND(s.score,1) rscore_short
03:51:40  10  ,m.g1
03:51:40  11  FROM svm24scores l,svm24scores s,svm2416 m
03:51:40  12  WHERE l.targ='gatt'
03:51:40  13  AND   s.targ='gattn'
03:51:40  14  AND l.prdate = s.prdate
03:51:40  15  AND l.prdate = m.prdate
03:51:40  16  -- Speed things up:
03:51:40  17  AND l.pair = '&1'
03:51:40  18  AND s.pair = '&1'
03:51:40  19  /
old  17: AND l.pair = '&1'
new  17: AND l.pair = 'eur_usd'
old  18: AND s.pair = '&1'
new  18: AND s.pair = 'eur_usd'

View created.

Elapsed: 00:00:00.03
03:51:40 SQL> 
03:51:40 SQL> -- rpt
03:51:40 SQL> SELECT pair,rscore_long,AVG(g1),MIN(ydate),COUNT(pair),MAX(ydate)FROM sc12
03:51:40   2  GROUP BY pair,rscore_long
03:51:40   3  ORDER BY pair,rscore_long
03:51:40   4  /

PAIR	RSCORE_LONG    AVG(G1) MIN(YDATE)	   COUNT(PAIR) MAX(YDATE)
------- ----------- ---------- ------------------- ----------- -------------------
eur_usd 	 .5 -.00143064 2011-01-19 03:00:00	     1 2011-01-19 03:00:00
eur_usd 	 .7  .00413953 2011-01-24 01:15:00	     1 2011-01-24 01:15:00

Elapsed: 00:00:00.04
03:51:40 SQL> 
03:51:40 SQL> DROP TABLE score_corr;

Table dropped.

Elapsed: 00:00:00.04
03:51:40 SQL> 
03:51:40 SQL> CREATE TABLE score_corr COMPRESS AS
03:51:40   2  SELECT
03:51:40   3  pair
03:51:40   4  -- ,ydate
03:51:40   5  ,prdate
03:51:40   6  -- Find corr() tween score and g1 over 11 day period:
03:51:40   7  ,CORR((score_long - score_short),g1)
03:51:40   8  	OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24*11 PRECEDING AND CURRENT ROW)sc_corr
03:51:40   9  FROM sc12
03:51:40  10  /

Table created.

Elapsed: 00:00:00.09
03:51:40 SQL> 
03:51:40 SQL> -- rpt
03:51:40 SQL> 
03:51:40 SQL> SELECT pair,AVG(sc_corr),COUNT(sc_corr)FROM score_corr GROUP BY pair;

PAIR	AVG(SC_CORR) COUNT(SC_CORR)
------- ------------ --------------
eur_usd 	   1		  1

Elapsed: 00:00:00.01
03:51:40 SQL> 
03:51:40 SQL> DROP TABLE modsrc24;

Table dropped.

Elapsed: 00:00:00.04
03:51:40 SQL> 
03:51:40 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.44
03:51:41 SQL> 
03:51:41 SQL> CREATE TABLE modsrc24 COMPRESS AS
03:51:41   2  SELECT
03:51:41   3  s.pair
03:51:41   4  ,ydate
03:51:41   5  ,s.prdate
03:51:41   6  ,trend
03:51:41   7  ,g1
03:51:41   8  ,gatt
03:51:41   9  ,gattn
03:51:41  10  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g00
03:51:41  11  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g01
03:51:41  12  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g02
03:51:41  13  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g03
03:51:41  14  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g04
03:51:41  15  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g05
03:51:41  16  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g06
03:51:41  17  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g07
03:51:41  18  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g08
03:51:41  19  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g09
03:51:41  20  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g10
03:51:41  21  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g11
03:51:41  22  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g12
03:51:41  23  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g13
03:51:41  24  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g14
03:51:41  25  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g15
03:51:41  26  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g16
03:51:41  27  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g17
03:51:41  28  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g18
03:51:41  29  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g19
03:51:41  30  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g20
03:51:41  31  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g21
03:51:41  32  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g22
03:51:41  33  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g23
03:51:41  34  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g24
03:51:41  35  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g25
03:51:41  36  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g26
03:51:41  37  ,SUM(g1)OVER(PARTITION BY trend,att27 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g27
03:51:41  38  ,SUM(g1)OVER(PARTITION BY trend,att28 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g28
03:51:41  39  ,SUM(g1)OVER(PARTITION BY trend,att29 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g29
03:51:41  40  ,SUM(g1)OVER(PARTITION BY trend,att30 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g30
03:51:41  41  ,SUM(g1)OVER(PARTITION BY trend,att31 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g31
03:51:41  42  ,SUM(g1)OVER(PARTITION BY trend,att32 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g32
03:51:41  43  ,SUM(g1)OVER(PARTITION BY trend,att33 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g33
03:51:41  44  ,SUM(g1)OVER(PARTITION BY trend,att34 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g34
03:51:41  45  ,SUM(g1)OVER(PARTITION BY trend,att35 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g35
03:51:41  46  ,SUM(g1)OVER(PARTITION BY trend,att36 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g36
03:51:41  47  -- Add extra goodness attributes related to trend:
03:51:41  48  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*40 PRECEDING AND CURRENT ROW)g37
03:51:41  49  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g38
03:51:41  50  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*20 PRECEDING AND CURRENT ROW)g39
03:51:41  51  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*10 PRECEDING AND CURRENT ROW)g40
03:51:41  52  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*5  PRECEDING AND CURRENT ROW)g41
03:51:41  53  -- Recent CORR()tween scores and gains:
03:51:41  54  ,NVL(sc_corr,0)sc_corr
03:51:41  55  FROM svm2416 s,score_corr c
03:51:41  56  WHERE s.prdate = c.prdate(+)
03:51:41  57  /

Table created.

Elapsed: 00:00:06.66
03:51:48 SQL> 
03:51:48 SQL> ANALYZE TABLE modsrc24 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:02.58
03:51:50 SQL> 
03:51:50 SQL> -- rpt
03:51:50 SQL> 
03:51:50 SQL> SELECT
03:51:50   2  pair
03:51:50   3  ,trend
03:51:50   4  ,gatt
03:51:50   5  ,COUNT(pair)
03:51:50   6  ,AVG(g41)
03:51:50   7  FROM modsrc24
03:51:50   8  GROUP BY pair,trend,gatt
03:51:50   9  ORDER BY pair,trend,gatt
03:51:50  10  /

PAIR	     TREND GAT COUNT(PAIR)   AVG(G41)
------- ---------- --- ----------- ----------
eur_usd 	-1 nup	      6481 -1.9132685
eur_usd 	-1 up	      3535 -1.5793079
eur_usd 	-1	       146 -.10139749
eur_usd 	 1 nup	      5791 .312469419
eur_usd 	 1 up	      4423 1.01124076
eur_usd 	 1	       139 3.07986957

6 rows selected.

Elapsed: 00:00:00.02
03:51:50 SQL> 
03:51:50 SQL> 
03:51:50 SQL> SELECT pair,COUNT(pair)FROM svm2410 GROUP BY pair;

PAIR	COUNT(PAIR)
------- -----------
eur_usd       20515

Elapsed: 00:00:01.33
03:51:51 SQL> 
03:51:51 SQL> SELECT pair,COUNT(pair)FROM modsrc24 GROUP BY pair;

PAIR	COUNT(PAIR)
------- -----------
eur_usd       20515

Elapsed: 00:00:00.01
03:51:51 SQL> 
03:51:51 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
