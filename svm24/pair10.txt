
SQL*Plus: Release 11.2.0.1.0 Production on Wed Feb 2 20:48:54 2011

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

20:48:55 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
20:48:55 SQL> 20:48:55 SQL> --
20:48:55 SQL> -- pair10.sql
20:48:55 SQL> --
20:48:55 SQL> 
20:48:55 SQL> -- Creates views and tables needed by SVM.
20:48:55 SQL> 
20:48:55 SQL> -- Start by sanding off some dukas data so it resembles IB data:
20:48:55 SQL> DROP TABLE di5min24;

Table dropped.

Elapsed: 00:00:00.37
20:48:55 SQL> 
20:48:55 SQL> CREATE TABLE di5min24 COMPRESS AS SELECT * FROM di5min;

Table created.

Elapsed: 00:00:00.82
20:48:56 SQL> 
20:48:56 SQL> DELETE di5min24 WHERE TO_CHAR(ydate,'HH24 MI')IN('22 00','22 05','22 10');

858 rows deleted.

Elapsed: 00:00:00.21
20:48:56 SQL> 
20:48:56 SQL> CREATE OR REPLACE VIEW svm2410 AS
20:48:56   2  SELECT
20:48:56   3  pair
20:48:56   4  ,ydate
20:48:56   5  ,prdate
20:48:56   6  ,rownum rnum -- acts as t in my time-series
20:48:56   7  ,clse
20:48:56   8  -- Derive a bunch of attributes from clse, the latest price:
20:48:56   9  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)min12
20:48:56  10  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)min18
20:48:56  11  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)min24
20:48:56  12  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)min30
20:48:56  13  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)min36
20:48:56  14  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)min48
20:48:56  15  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)min60
20:48:56  16  ,MIN(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)min72
20:48:56  17  --
20:48:56  18  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)avg12
20:48:56  19  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)avg18
20:48:56  20  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)avg24
20:48:56  21  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)avg30
20:48:56  22  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)avg36
20:48:56  23  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)avg48
20:48:56  24  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)avg60
20:48:56  25  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)avg72
20:48:56  26  --
20:48:56  27  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)max12
20:48:56  28  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)max18
20:48:56  29  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)max24
20:48:56  30  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)max30
20:48:56  31  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)max36
20:48:56  32  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)max48
20:48:56  33  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)max60
20:48:56  34  ,MAX(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)max72
20:48:56  35  --
20:48:56  36  ,LEAD(clse,12*24-3,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld1day
20:48:56  37  ,LEAD(ydate,12*24-3,NULL)OVER(PARTITION BY pair ORDER BY ydate)ld_ydate
20:48:56  38  FROM di5min24 WHERE pair = '&1'
20:48:56  39  AND ydate > sysdate - 200
20:48:56  40  ORDER BY ydate
20:48:56  41  /
old  38: FROM di5min24 WHERE pair = '&1'
new  38: FROM di5min24 WHERE pair = 'eur_usd'

View created.

Elapsed: 00:00:00.08
20:48:56 SQL> 
20:48:56 SQL> -- rpt
20:48:56 SQL> 
20:48:56 SQL> -- I should see that ld_ydate is exactly 1 trading day ahead of ydate:
20:48:56 SQL> 
20:48:56 SQL> SELECT
20:48:56   2  TO_CHAR(ydate,'YYYY-MM-DD HH24:MI Dy')dday
20:48:56   3  ,TO_CHAR(ld_ydate,'YYYY-MM-DD HH24:MI Dy')ldday
20:48:56   4  from svm2410
20:48:56   5  WHERE pair='&1'
20:48:56   6  AND ld_ydate > (SELECT MAX(ld_ydate)-1 from svm2410)
20:48:56   7  ORDER BY ydate
20:48:56   8  /
old   5: WHERE pair='&1'
new   5: WHERE pair='eur_usd'

DDAY		     LDDAY
-------------------- --------------------
2011-01-31 19:45 Mon 2011-02-01 19:45 Tue
2011-01-31 19:50 Mon 2011-02-01 19:50 Tue
2011-01-31 19:55 Mon 2011-02-01 19:55 Tue
2011-01-31 20:00 Mon 2011-02-01 20:00 Tue
2011-01-31 20:05 Mon 2011-02-01 20:05 Tue
2011-01-31 20:10 Mon 2011-02-01 20:10 Tue
2011-01-31 20:15 Mon 2011-02-01 20:15 Tue
2011-01-31 20:20 Mon 2011-02-01 20:20 Tue
2011-01-31 20:25 Mon 2011-02-01 20:25 Tue
2011-01-31 20:30 Mon 2011-02-01 20:30 Tue
2011-01-31 20:35 Mon 2011-02-01 20:35 Tue
2011-01-31 20:40 Mon 2011-02-01 20:40 Tue
2011-01-31 20:45 Mon 2011-02-01 20:45 Tue
2011-01-31 20:50 Mon 2011-02-01 20:50 Tue
2011-01-31 20:55 Mon 2011-02-01 20:55 Tue
2011-01-31 21:00 Mon 2011-02-01 21:00 Tue
2011-01-31 21:05 Mon 2011-02-01 21:05 Tue
2011-01-31 21:10 Mon 2011-02-01 21:10 Tue
2011-01-31 21:15 Mon 2011-02-01 21:15 Tue
2011-01-31 21:20 Mon 2011-02-01 21:20 Tue
2011-01-31 21:25 Mon 2011-02-01 21:25 Tue
2011-01-31 21:30 Mon 2011-02-01 21:30 Tue
2011-01-31 21:35 Mon 2011-02-01 21:35 Tue
2011-01-31 21:40 Mon 2011-02-01 21:40 Tue
2011-01-31 21:45 Mon 2011-02-01 21:45 Tue
2011-01-31 21:50 Mon 2011-02-01 21:50 Tue
2011-01-31 21:55 Mon 2011-02-01 22:15 Tue
2011-01-31 22:15 Mon 2011-02-01 22:20 Tue
2011-01-31 22:20 Mon 2011-02-01 22:25 Tue
2011-01-31 22:25 Mon 2011-02-01 22:30 Tue
2011-01-31 22:30 Mon 2011-02-01 22:35 Tue
2011-01-31 22:35 Mon 2011-02-01 22:40 Tue
2011-01-31 22:40 Mon 2011-02-01 22:45 Tue
2011-01-31 22:45 Mon 2011-02-01 22:50 Tue
2011-01-31 22:50 Mon 2011-02-01 22:55 Tue
2011-01-31 22:55 Mon 2011-02-01 23:00 Tue
2011-01-31 23:00 Mon 2011-02-01 23:05 Tue
2011-01-31 23:05 Mon 2011-02-01 23:10 Tue
2011-01-31 23:10 Mon 2011-02-01 23:15 Tue
2011-01-31 23:15 Mon 2011-02-01 23:20 Tue
2011-01-31 23:20 Mon 2011-02-01 23:25 Tue
2011-01-31 23:25 Mon 2011-02-01 23:30 Tue
2011-01-31 23:30 Mon 2011-02-01 23:35 Tue
2011-01-31 23:35 Mon 2011-02-01 23:40 Tue
2011-01-31 23:40 Mon 2011-02-01 23:45 Tue
2011-01-31 23:45 Mon 2011-02-01 23:50 Tue
2011-01-31 23:50 Mon 2011-02-01 23:55 Tue
2011-01-31 23:55 Mon 2011-02-02 00:00 Wed
2011-02-01 00:00 Tue 2011-02-02 00:05 Wed
2011-02-01 00:05 Tue 2011-02-02 00:10 Wed
2011-02-01 00:10 Tue 2011-02-02 00:15 Wed
2011-02-01 00:15 Tue 2011-02-02 00:20 Wed
2011-02-01 00:20 Tue 2011-02-02 00:25 Wed
2011-02-01 00:25 Tue 2011-02-02 00:30 Wed
2011-02-01 00:30 Tue 2011-02-02 00:35 Wed
2011-02-01 00:35 Tue 2011-02-02 00:40 Wed
2011-02-01 00:40 Tue 2011-02-02 00:45 Wed
2011-02-01 00:45 Tue 2011-02-02 00:50 Wed
2011-02-01 00:50 Tue 2011-02-02 00:55 Wed
2011-02-01 00:55 Tue 2011-02-02 01:00 Wed
2011-02-01 01:00 Tue 2011-02-02 01:05 Wed
2011-02-01 01:05 Tue 2011-02-02 01:10 Wed
2011-02-01 01:10 Tue 2011-02-02 01:15 Wed
2011-02-01 01:15 Tue 2011-02-02 01:20 Wed
2011-02-01 01:20 Tue 2011-02-02 01:25 Wed
2011-02-01 01:25 Tue 2011-02-02 01:30 Wed
2011-02-01 01:30 Tue 2011-02-02 01:35 Wed
2011-02-01 01:35 Tue 2011-02-02 01:40 Wed
2011-02-01 01:40 Tue 2011-02-02 01:45 Wed
2011-02-01 01:45 Tue 2011-02-02 01:50 Wed
2011-02-01 01:50 Tue 2011-02-02 01:55 Wed
2011-02-01 01:55 Tue 2011-02-02 02:00 Wed
2011-02-01 02:00 Tue 2011-02-02 02:05 Wed
2011-02-01 02:05 Tue 2011-02-02 02:10 Wed
2011-02-01 02:10 Tue 2011-02-02 02:15 Wed
2011-02-01 02:15 Tue 2011-02-02 02:20 Wed
2011-02-01 02:20 Tue 2011-02-02 02:25 Wed
2011-02-01 02:25 Tue 2011-02-02 02:30 Wed
2011-02-01 02:30 Tue 2011-02-02 02:35 Wed
2011-02-01 02:35 Tue 2011-02-02 02:40 Wed
2011-02-01 02:40 Tue 2011-02-02 02:45 Wed
2011-02-01 02:45 Tue 2011-02-02 02:50 Wed
2011-02-01 02:50 Tue 2011-02-02 02:55 Wed
2011-02-01 02:55 Tue 2011-02-02 03:00 Wed
2011-02-01 03:00 Tue 2011-02-02 03:05 Wed
2011-02-01 03:05 Tue 2011-02-02 03:10 Wed
2011-02-01 03:10 Tue 2011-02-02 03:15 Wed
2011-02-01 03:15 Tue 2011-02-02 03:20 Wed
2011-02-01 03:20 Tue 2011-02-02 03:25 Wed
2011-02-01 03:25 Tue 2011-02-02 03:30 Wed
2011-02-01 03:30 Tue 2011-02-02 03:35 Wed
2011-02-01 03:35 Tue 2011-02-02 03:40 Wed
2011-02-01 03:40 Tue 2011-02-02 03:45 Wed
2011-02-01 03:45 Tue 2011-02-02 03:50 Wed
2011-02-01 03:50 Tue 2011-02-02 03:55 Wed
2011-02-01 03:55 Tue 2011-02-02 04:00 Wed
2011-02-01 04:00 Tue 2011-02-02 04:05 Wed
2011-02-01 04:05 Tue 2011-02-02 04:10 Wed
2011-02-01 04:10 Tue 2011-02-02 04:15 Wed
2011-02-01 04:15 Tue 2011-02-02 04:20 Wed
2011-02-01 04:20 Tue 2011-02-02 04:25 Wed
2011-02-01 04:25 Tue 2011-02-02 04:30 Wed
2011-02-01 04:30 Tue 2011-02-02 04:35 Wed
2011-02-01 04:35 Tue 2011-02-02 04:40 Wed
2011-02-01 04:40 Tue 2011-02-02 04:45 Wed
2011-02-01 04:45 Tue 2011-02-02 04:50 Wed
2011-02-01 04:50 Tue 2011-02-02 04:55 Wed
2011-02-01 04:55 Tue 2011-02-02 05:00 Wed
2011-02-01 05:00 Tue 2011-02-02 05:05 Wed
2011-02-01 05:05 Tue 2011-02-02 05:10 Wed
2011-02-01 05:10 Tue 2011-02-02 05:15 Wed
2011-02-01 05:15 Tue 2011-02-02 05:20 Wed
2011-02-01 05:20 Tue 2011-02-02 05:25 Wed
2011-02-01 05:25 Tue 2011-02-02 05:30 Wed
2011-02-01 05:30 Tue 2011-02-02 05:35 Wed
2011-02-01 05:35 Tue 2011-02-02 05:40 Wed
2011-02-01 05:40 Tue 2011-02-02 05:45 Wed
2011-02-01 05:45 Tue 2011-02-02 05:50 Wed
2011-02-01 05:50 Tue 2011-02-02 05:55 Wed
2011-02-01 05:55 Tue 2011-02-02 06:00 Wed

DDAY		     LDDAY
-------------------- --------------------
2011-02-01 06:00 Tue 2011-02-02 06:05 Wed
2011-02-01 06:05 Tue 2011-02-02 06:10 Wed
2011-02-01 06:10 Tue 2011-02-02 06:15 Wed
2011-02-01 06:15 Tue 2011-02-02 06:20 Wed
2011-02-01 06:20 Tue 2011-02-02 06:25 Wed
2011-02-01 06:25 Tue 2011-02-02 06:30 Wed
2011-02-01 06:30 Tue 2011-02-02 06:35 Wed
2011-02-01 06:35 Tue 2011-02-02 06:40 Wed
2011-02-01 06:40 Tue 2011-02-02 06:45 Wed
2011-02-01 06:45 Tue 2011-02-02 06:50 Wed
2011-02-01 06:50 Tue 2011-02-02 06:55 Wed
2011-02-01 06:55 Tue 2011-02-02 07:00 Wed
2011-02-01 07:00 Tue 2011-02-02 07:05 Wed
2011-02-01 07:05 Tue 2011-02-02 07:10 Wed
2011-02-01 07:10 Tue 2011-02-02 07:15 Wed
2011-02-01 07:15 Tue 2011-02-02 07:20 Wed
2011-02-01 07:20 Tue 2011-02-02 07:25 Wed
2011-02-01 07:25 Tue 2011-02-02 07:30 Wed
2011-02-01 07:30 Tue 2011-02-02 07:35 Wed
2011-02-01 07:35 Tue 2011-02-02 07:40 Wed
2011-02-01 07:40 Tue 2011-02-02 07:45 Wed
2011-02-01 07:45 Tue 2011-02-02 07:50 Wed
2011-02-01 07:50 Tue 2011-02-02 07:55 Wed
2011-02-01 07:55 Tue 2011-02-02 08:00 Wed
2011-02-01 08:00 Tue 2011-02-02 08:05 Wed
2011-02-01 08:05 Tue 2011-02-02 08:10 Wed
2011-02-01 08:10 Tue 2011-02-02 08:15 Wed
2011-02-01 08:15 Tue 2011-02-02 08:20 Wed
2011-02-01 08:20 Tue 2011-02-02 08:25 Wed
2011-02-01 08:25 Tue 2011-02-02 08:30 Wed
2011-02-01 08:30 Tue 2011-02-02 08:35 Wed
2011-02-01 08:35 Tue 2011-02-02 08:40 Wed
2011-02-01 08:40 Tue 2011-02-02 08:45 Wed
2011-02-01 08:45 Tue 2011-02-02 08:50 Wed
2011-02-01 08:50 Tue 2011-02-02 08:55 Wed
2011-02-01 08:55 Tue 2011-02-02 09:00 Wed
2011-02-01 09:00 Tue 2011-02-02 09:05 Wed
2011-02-01 09:05 Tue 2011-02-02 09:10 Wed
2011-02-01 09:10 Tue 2011-02-02 09:15 Wed
2011-02-01 09:15 Tue 2011-02-02 09:20 Wed
2011-02-01 09:20 Tue 2011-02-02 09:25 Wed
2011-02-01 09:25 Tue 2011-02-02 09:30 Wed
2011-02-01 09:30 Tue 2011-02-02 09:35 Wed
2011-02-01 09:35 Tue 2011-02-02 09:40 Wed
2011-02-01 09:40 Tue 2011-02-02 09:45 Wed
2011-02-01 09:45 Tue 2011-02-02 09:50 Wed
2011-02-01 09:50 Tue 2011-02-02 09:55 Wed
2011-02-01 09:55 Tue 2011-02-02 10:00 Wed
2011-02-01 10:00 Tue 2011-02-02 10:05 Wed
2011-02-01 10:05 Tue 2011-02-02 10:10 Wed
2011-02-01 10:10 Tue 2011-02-02 10:15 Wed
2011-02-01 10:15 Tue 2011-02-02 10:20 Wed
2011-02-01 10:20 Tue 2011-02-02 10:25 Wed
2011-02-01 10:25 Tue 2011-02-02 10:30 Wed
2011-02-01 10:30 Tue 2011-02-02 10:35 Wed
2011-02-01 10:35 Tue 2011-02-02 10:40 Wed
2011-02-01 10:40 Tue 2011-02-02 10:45 Wed
2011-02-01 10:45 Tue 2011-02-02 10:50 Wed
2011-02-01 10:50 Tue 2011-02-02 10:55 Wed
2011-02-01 10:55 Tue 2011-02-02 11:00 Wed
2011-02-01 11:00 Tue 2011-02-02 11:05 Wed
2011-02-01 11:05 Tue 2011-02-02 11:10 Wed
2011-02-01 11:10 Tue 2011-02-02 11:15 Wed
2011-02-01 11:15 Tue 2011-02-02 11:20 Wed
2011-02-01 11:20 Tue 2011-02-02 11:25 Wed
2011-02-01 11:25 Tue 2011-02-02 11:30 Wed
2011-02-01 11:30 Tue 2011-02-02 11:35 Wed
2011-02-01 11:35 Tue 2011-02-02 11:40 Wed
2011-02-01 11:40 Tue 2011-02-02 11:45 Wed
2011-02-01 11:45 Tue 2011-02-02 11:50 Wed
2011-02-01 11:50 Tue 2011-02-02 11:55 Wed
2011-02-01 11:55 Tue 2011-02-02 12:00 Wed
2011-02-01 12:00 Tue 2011-02-02 12:05 Wed
2011-02-01 12:05 Tue 2011-02-02 12:10 Wed
2011-02-01 12:10 Tue 2011-02-02 12:15 Wed
2011-02-01 12:15 Tue 2011-02-02 12:20 Wed
2011-02-01 12:20 Tue 2011-02-02 12:25 Wed
2011-02-01 12:25 Tue 2011-02-02 12:30 Wed
2011-02-01 12:30 Tue 2011-02-02 12:35 Wed
2011-02-01 12:35 Tue 2011-02-02 12:40 Wed
2011-02-01 12:40 Tue 2011-02-02 12:45 Wed
2011-02-01 12:45 Tue 2011-02-02 12:50 Wed
2011-02-01 12:50 Tue 2011-02-02 12:55 Wed
2011-02-01 12:55 Tue 2011-02-02 13:00 Wed
2011-02-01 13:00 Tue 2011-02-02 13:05 Wed
2011-02-01 13:05 Tue 2011-02-02 13:10 Wed
2011-02-01 13:10 Tue 2011-02-02 13:15 Wed
2011-02-01 13:15 Tue 2011-02-02 13:20 Wed
2011-02-01 13:20 Tue 2011-02-02 13:25 Wed
2011-02-01 13:25 Tue 2011-02-02 13:30 Wed
2011-02-01 13:30 Tue 2011-02-02 13:35 Wed
2011-02-01 13:35 Tue 2011-02-02 13:40 Wed
2011-02-01 13:40 Tue 2011-02-02 13:45 Wed
2011-02-01 13:45 Tue 2011-02-02 13:50 Wed
2011-02-01 13:50 Tue 2011-02-02 13:55 Wed
2011-02-01 13:55 Tue 2011-02-02 14:00 Wed
2011-02-01 14:00 Tue 2011-02-02 14:05 Wed
2011-02-01 14:05 Tue 2011-02-02 14:10 Wed
2011-02-01 14:10 Tue 2011-02-02 14:15 Wed
2011-02-01 14:15 Tue 2011-02-02 14:20 Wed
2011-02-01 14:20 Tue 2011-02-02 14:25 Wed
2011-02-01 14:25 Tue 2011-02-02 14:30 Wed
2011-02-01 14:30 Tue 2011-02-02 14:35 Wed
2011-02-01 14:35 Tue 2011-02-02 14:40 Wed
2011-02-01 14:40 Tue 2011-02-02 14:45 Wed
2011-02-01 14:45 Tue 2011-02-02 14:50 Wed
2011-02-01 14:50 Tue 2011-02-02 14:55 Wed
2011-02-01 14:55 Tue 2011-02-02 15:00 Wed
2011-02-01 15:00 Tue 2011-02-02 15:05 Wed
2011-02-01 15:05 Tue 2011-02-02 15:10 Wed
2011-02-01 15:10 Tue 2011-02-02 15:15 Wed
2011-02-01 15:15 Tue 2011-02-02 15:20 Wed
2011-02-01 15:20 Tue 2011-02-02 15:25 Wed
2011-02-01 15:25 Tue 2011-02-02 15:30 Wed
2011-02-01 15:30 Tue 2011-02-02 15:35 Wed
2011-02-01 15:35 Tue 2011-02-02 15:40 Wed
2011-02-01 15:40 Tue 2011-02-02 15:45 Wed
2011-02-01 15:45 Tue 2011-02-02 15:50 Wed
2011-02-01 15:50 Tue 2011-02-02 15:55 Wed
2011-02-01 15:55 Tue 2011-02-02 16:00 Wed

DDAY		     LDDAY
-------------------- --------------------
2011-02-01 16:00 Tue 2011-02-02 16:05 Wed
2011-02-01 16:05 Tue 2011-02-02 16:10 Wed
2011-02-01 16:10 Tue 2011-02-02 16:15 Wed
2011-02-01 16:15 Tue 2011-02-02 16:20 Wed
2011-02-01 16:20 Tue 2011-02-02 16:25 Wed
2011-02-01 16:25 Tue 2011-02-02 16:30 Wed
2011-02-01 16:30 Tue 2011-02-02 16:35 Wed
2011-02-01 16:35 Tue 2011-02-02 16:40 Wed
2011-02-01 16:40 Tue 2011-02-02 16:45 Wed
2011-02-01 16:45 Tue 2011-02-02 16:50 Wed
2011-02-01 16:50 Tue 2011-02-02 16:55 Wed
2011-02-01 16:55 Tue 2011-02-02 17:00 Wed
2011-02-01 17:00 Tue 2011-02-02 17:05 Wed
2011-02-01 17:05 Tue 2011-02-02 17:10 Wed
2011-02-01 17:10 Tue 2011-02-02 17:15 Wed
2011-02-01 17:15 Tue 2011-02-02 17:20 Wed
2011-02-01 17:20 Tue 2011-02-02 17:25 Wed
2011-02-01 17:25 Tue 2011-02-02 17:30 Wed
2011-02-01 17:30 Tue 2011-02-02 17:35 Wed
2011-02-01 17:35 Tue 2011-02-02 17:40 Wed
2011-02-01 17:40 Tue 2011-02-02 17:45 Wed
2011-02-01 17:45 Tue 2011-02-02 17:50 Wed
2011-02-01 17:50 Tue 2011-02-02 17:55 Wed
2011-02-01 17:55 Tue 2011-02-02 18:00 Wed
2011-02-01 18:00 Tue 2011-02-02 18:05 Wed
2011-02-01 18:05 Tue 2011-02-02 18:10 Wed
2011-02-01 18:10 Tue 2011-02-02 18:15 Wed
2011-02-01 18:15 Tue 2011-02-02 18:20 Wed
2011-02-01 18:20 Tue 2011-02-02 18:25 Wed
2011-02-01 18:25 Tue 2011-02-02 18:30 Wed
2011-02-01 18:30 Tue 2011-02-02 18:35 Wed
2011-02-01 18:35 Tue 2011-02-02 18:40 Wed
2011-02-01 18:40 Tue 2011-02-02 18:45 Wed
2011-02-01 18:45 Tue 2011-02-02 18:50 Wed
2011-02-01 18:50 Tue 2011-02-02 18:55 Wed
2011-02-01 18:55 Tue 2011-02-02 19:00 Wed
2011-02-01 19:00 Tue 2011-02-02 19:05 Wed
2011-02-01 19:05 Tue 2011-02-02 19:10 Wed
2011-02-01 19:10 Tue 2011-02-02 19:15 Wed
2011-02-01 19:15 Tue 2011-02-02 19:20 Wed
2011-02-01 19:20 Tue 2011-02-02 19:25 Wed
2011-02-01 19:25 Tue 2011-02-02 19:30 Wed
2011-02-01 19:30 Tue 2011-02-02 19:35 Wed
2011-02-01 19:35 Tue 2011-02-02 19:40 Wed

284 rows selected.

Elapsed: 00:00:02.70
20:48:59 SQL> 
20:48:59 SQL> -- I should see that hr 22 is missing 3 rows of data: 00, 05, 10
20:48:59 SQL> SELECT
20:48:59   2  TO_CHAR(ydate,'MI')
20:48:59   3  ,COUNT(TO_CHAR(ydate,'MI'))
20:48:59   4  FROM svm2410
20:48:59   5  WHERE TO_CHAR(ydate,'HH24')='22'
20:48:59   6  AND ydate > sysdate - 30
20:48:59   7  GROUP BY TO_CHAR(ydate,'MI')
20:48:59   8  ORDER BY 0+TO_CHAR(ydate,'MI')
20:48:59   9  /

TO COUNT(TO_CHAR(YDATE,'MI'))
-- --------------------------
15			   22
20			   22
25			   22
30			   22
35			   22
40			   22
45			   22
50			   22
55			   22

9 rows selected.

Elapsed: 00:00:01.34
20:49:00 SQL> 
20:49:00 SQL> -- I should see that other hours have all 12 rows of data
20:49:00 SQL> SELECT
20:49:00   2  TO_CHAR(ydate,'MI')
20:49:00   3  ,COUNT(TO_CHAR(ydate,'MI'))
20:49:00   4  FROM svm2410
20:49:00   5  WHERE TO_CHAR(ydate,'HH24')!='22'
20:49:00   6  AND ydate > sysdate - 30
20:49:00   7  GROUP BY TO_CHAR(ydate,'MI')
20:49:00   8  ORDER BY 0+TO_CHAR(ydate,'MI')
20:49:00   9  /

TO COUNT(TO_CHAR(YDATE,'MI'))
-- --------------------------
00			  505
05			  505
10			  505
15			  505
20			  505
25			  505
30			  505
35			  505
40			  505
45			  504
50			  505
55			  503

12 rows selected.

Elapsed: 00:00:01.37
20:49:02 SQL> 
20:49:02 SQL> -- Derive trend, clse-relations, moving correlation of clse, and date related params:
20:49:02 SQL> 
20:49:02 SQL> DROP TABLE svm2412;

Table dropped.

Elapsed: 00:00:00.05
20:49:02 SQL> CREATE TABLE svm2412 COMPRESS AS
20:49:02   2  SELECT
20:49:02   3  pair
20:49:02   4  ,ydate
20:49:02   5  ,prdate
20:49:02   6  ,clse
20:49:02   7  -- g1 is important. I want to predict g1:
20:49:02   8  ,(ld1day - clse)/clse g1
20:49:02   9  ,SIGN(avg24 - LAG(avg24,2,NULL)OVER(PARTITION BY pair ORDER BY ydate))trend
20:49:02  10  -- I want more attributes from the ones I derived above:
20:49:02  11  -- clse relation to moving-min
20:49:02  12  ,clse-min12 cm12
20:49:02  13  ,clse-min18 cm18
20:49:02  14  ,clse-min24 cm24
20:49:02  15  ,clse-min30 cm30
20:49:02  16  ,clse-min36 cm36
20:49:02  17  ,clse-min48 cm48
20:49:02  18  ,clse-min60 cm60
20:49:02  19  ,clse-min72 cm72
20:49:02  20  -- clse relation to moving-avg
20:49:02  21  ,clse-avg12 ca12
20:49:02  22  ,clse-avg18 ca18
20:49:02  23  ,clse-avg24 ca24
20:49:02  24  ,clse-avg30 ca30
20:49:02  25  ,clse-avg36 ca36
20:49:02  26  ,clse-avg48 ca48
20:49:02  27  ,clse-avg60 ca60
20:49:02  28  ,clse-avg72 ca72
20:49:02  29  -- clse relation to moving-max
20:49:02  30  ,clse-max12 cx12
20:49:02  31  ,clse-max18 cx18
20:49:02  32  ,clse-max24 cx24
20:49:02  33  ,clse-max30 cx30
20:49:02  34  ,clse-max36 cx36
20:49:02  35  ,clse-max48 cx48
20:49:02  36  ,clse-max60 cx60
20:49:02  37  ,clse-max72 cx72
20:49:02  38  -- Derive more attributes.
20:49:02  39  -- I want to use CORR() here to help SVM see the shape of the series.
20:49:02  40  -- But COVAR_POP is more stable:
20:49:02  41  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*12 PRECEDING AND CURRENT ROW)crr12
20:49:02  42  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*18 PRECEDING AND CURRENT ROW)crr18
20:49:02  43  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24 PRECEDING AND CURRENT ROW)crr24
20:49:02  44  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*30 PRECEDING AND CURRENT ROW)crr30
20:49:02  45  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*36 PRECEDING AND CURRENT ROW)crr36
20:49:02  46  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*48 PRECEDING AND CURRENT ROW)crr48
20:49:02  47  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*60 PRECEDING AND CURRENT ROW)crr60
20:49:02  48  ,COVAR_POP(rnum,clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*72 PRECEDING AND CURRENT ROW)crr72
20:49:02  49  -- Derive date related attributes:
20:49:02  50  ,0+TO_CHAR( ROUND(ydate,'HH24'),'HH24')hh
20:49:02  51  ,0+TO_CHAR(ydate,'D')d
20:49:02  52  ,0+TO_CHAR(ydate,'W')w
20:49:02  53  -- mpm stands for minutes-past-midnight:
20:49:02  54  ,ROUND( (ydate - trunc(ydate))*24*60 )mpm
20:49:02  55  -- mph stands for minutes-past-hour:
20:49:02  56  ,0+TO_CHAR(ydate,'MI')mph
20:49:02  57  FROM svm2410
20:49:02  58  -- Protect against divide by zero:
20:49:02  59  WHERE clse > 0
20:49:02  60  ORDER BY ydate
20:49:02  61  /

Table created.

Elapsed: 00:00:02.45
20:49:04 SQL> 
20:49:04 SQL> -- rpt
20:49:04 SQL> 
20:49:04 SQL> SELECT
20:49:04   2  pair
20:49:04   3  ,TO_CHAR(ydate,'D')dnum
20:49:04   4  ,TO_CHAR(ydate,'dy')dday
20:49:04   5  ,AVG(g1)
20:49:04   6  ,COUNT(pair)
20:49:04   7  ,MIN(clse),MAX(clse)
20:49:04   8  ,MIN(ydate),MAX(ydate)
20:49:04   9  FROM svm2412
20:49:04  10  GROUP BY pair,TO_CHAR(ydate,'D'),TO_CHAR(ydate,'dy')
20:49:04  11  ORDER BY pair,TO_CHAR(ydate,'D'),TO_CHAR(ydate,'dy')
20:49:04  12  /

PAIR	D DDA	 AVG(G1) COUNT(PAIR)  MIN(CLSE)  MAX(CLSE) MIN(YDATE)	       MAX(YDATE)
------- - --- ---------- ----------- ---------- ---------- ------------------- -------------------
eur_usd 1 sun -.00308251	 359	1.28795     1.4074 2010-10-31 20:55:00 2011-01-30 23:55:00
eur_usd 2 mon .000032359	4037	1.28805     1.4069 2010-10-25 19:45:00 2011-01-31 23:55:00
eur_usd 3 tue -.00192136	4241   1.291375     1.4052 2010-10-26 00:00:00 2011-02-01 23:55:00
eur_usd 4 wed .002341895	4200   1.296575     1.4144 2010-10-27 00:00:00 2011-02-02 19:40:00
eur_usd 5 thu  .00101498	3980   1.297975     1.4273 2010-10-28 00:00:00 2011-01-27 23:55:00
eur_usd 6 fri -.00157283	3689	 1.2907     1.4224 2010-10-29 00:00:00 2011-01-28 21:55:00

6 rows selected.

Elapsed: 00:00:00.07
20:49:04 SQL> 
20:49:04 SQL> -- Prepare for derivation of NTILE based params:
20:49:04 SQL> 
20:49:04 SQL> DROP TABLE svm2414;

Table dropped.

Elapsed: 00:00:00.04
20:49:04 SQL> CREATE TABLE svm2414 COMPRESS AS
20:49:04   2  SELECT
20:49:04   3  pair
20:49:04   4  ,ydate
20:49:04   5  ,prdate
20:49:04   6  ,clse
20:49:04   7  ,g1
20:49:04   8  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1>0.0020 THEN'up'ELSE'nup'END gatt
20:49:04   9  ,CASE WHEN g1 IS NULL THEN NULL WHEN g1<-0.0020 THEN'up'ELSE'nup'END gattn
20:49:04  10  ,CASE WHEN trend IS NULL THEN 1
20:49:04  11  	    WHEN trend =0      THEN 1
20:49:04  12  	    ELSE trend END trend
20:49:04  13  ,cm12
20:49:04  14  ,cm18
20:49:04  15  ,cm24
20:49:04  16  ,cm30
20:49:04  17  ,cm36
20:49:04  18  ,cm48
20:49:04  19  ,cm60
20:49:04  20  ,cm72
20:49:04  21  --
20:49:04  22  ,ca12
20:49:04  23  ,ca18
20:49:04  24  ,ca24
20:49:04  25  ,ca30
20:49:04  26  ,ca36
20:49:04  27  ,ca48
20:49:04  28  ,ca60
20:49:04  29  ,ca72
20:49:04  30  --
20:49:04  31  ,cx12
20:49:04  32  ,cx18
20:49:04  33  ,cx24
20:49:04  34  ,cx30
20:49:04  35  ,cx36
20:49:04  36  ,cx48
20:49:04  37  ,cx60
20:49:04  38  ,cx72
20:49:04  39  --
20:49:04  40  ,crr12
20:49:04  41  ,crr18
20:49:04  42  ,crr24
20:49:04  43  ,crr30
20:49:04  44  ,crr36
20:49:04  45  ,crr48
20:49:04  46  ,crr60
20:49:04  47  ,crr72
20:49:04  48  --
20:49:04  49  ,hh
20:49:04  50  ,d
20:49:04  51  ,w
20:49:04  52  ,mpm
20:49:04  53  ,mph
20:49:04  54  FROM svm2412
20:49:04  55  ORDER BY ydate
20:49:04  56  /

Table created.

Elapsed: 00:00:00.41
20:49:05 SQL> 
20:49:05 SQL> -- rpt
20:49:05 SQL> 
20:49:05 SQL> SELECT
20:49:05   2  pair
20:49:05   3  ,trend
20:49:05   4  ,gatt
20:49:05   5  ,d
20:49:05   6  ,hh
20:49:05   7  ,COUNT(pair)
20:49:05   8  ,AVG(g1)
20:49:05   9  FROM svm2414
20:49:05  10  GROUP BY pair,trend,gatt,d,hh
20:49:05  11  ORDER BY AVG(g1),pair,trend,gatt,d,hh
20:49:05  12  -- 500 rows
20:49:05  13  
20:49:05 SQL> -- Derive NTILE based params:
20:49:05 SQL> 
20:49:05 SQL> DROP TABLE svm2416;

Table dropped.

Elapsed: 00:00:00.05
20:49:05 SQL> CREATE TABLE svm2416 COMPRESS AS
20:49:05   2  SELECT
20:49:05   3  pair
20:49:05   4  ,ydate
20:49:05   5  ,prdate
20:49:05   6  ,clse
20:49:05   7  ,g1
20:49:05   8  ,gatt
20:49:05   9  ,gattn
20:49:05  10  ,trend
20:49:05  11  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm12)att00
20:49:05  12  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm18)att01
20:49:05  13  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm24)att02
20:49:05  14  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm30)att03
20:49:05  15  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm36)att04
20:49:05  16  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm48)att05
20:49:05  17  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm60)att06
20:49:05  18  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cm72)att07
20:49:05  19  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca12)att08
20:49:05  20  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca18)att09
20:49:05  21  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca24)att10
20:49:05  22  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca30)att11
20:49:05  23  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca36)att12
20:49:05  24  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca48)att13
20:49:05  25  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca60)att14
20:49:05  26  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY ca72)att15
20:49:05  27  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx12)att16
20:49:05  28  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx18)att17
20:49:05  29  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx24)att18
20:49:05  30  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx30)att19
20:49:05  31  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx36)att20
20:49:05  32  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx48)att21
20:49:05  33  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx60)att22
20:49:05  34  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY cx72)att23
20:49:05  35  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr12)att24
20:49:05  36  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr18)att25
20:49:05  37  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr24)att26
20:49:05  38  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr30)att27
20:49:05  39  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr36)att28
20:49:05  40  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr48)att29
20:49:05  41  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr60)att30
20:49:05  42  ,NTILE(9)OVER(PARTITION BY trend,pair ORDER BY crr72)att31
20:49:05  43  ,hh  att32
20:49:05  44  ,d   att33
20:49:05  45  ,w   att34
20:49:05  46  ,mpm att35
20:49:05  47  ,mph att36
20:49:05  48  ,trend att37
20:49:05  49  FROM svm2414
20:49:05  50  ORDER BY ydate
20:49:05  51  /

Table created.

Elapsed: 00:00:05.29
20:49:10 SQL> 
20:49:10 SQL> -- rpt
20:49:10 SQL> 
20:49:10 SQL> SELECT
20:49:10   2  pair
20:49:10   3  ,trend
20:49:10   4  ,gatt
20:49:10   5  ,att33 daynum
20:49:10   6  ,COUNT(pair)
20:49:10   7  ,AVG(g1)
20:49:10   8  FROM svm2416
20:49:10   9  GROUP BY pair,trend,gatt,att33
20:49:10  10  ORDER BY pair,trend,gatt,att33
20:49:10  11  /

PAIR	     TREND GAT	   DAYNUM COUNT(PAIR)	 AVG(G1)
------- ---------- --- ---------- ----------- ----------
eur_usd 	-1 nup		1	   91 -.00887519
eur_usd 	-1 nup		2	 1350 -.00567061
eur_usd 	-1 nup		3	 1484 -.00699778
eur_usd 	-1 nup		4	 1515 -.00428923
eur_usd 	-1 nup		5	  881 -.00438135
eur_usd 	-1 nup		6	 1033  -.0053279
eur_usd 	-1 up		1	   74 .008522314
eur_usd 	-1 up		2	 1097 .007707117
eur_usd 	-1 up		3	  592 .007145094
eur_usd 	-1 up		4	  934 .007886784
eur_usd 	-1 up		5	  556 .005290556
eur_usd 	-1 up		6	  331 .006416654
eur_usd 	-1		4	   36
eur_usd 	 1 nup		1	  174 -.00570922
eur_usd 	 1 nup		2	  981 -.00432839
eur_usd 	 1 nup		3	 1239 -.00609479
eur_usd 	 1 nup		4	  489	-.000938
eur_usd 	 1 nup		5	 1236 -.00420583
eur_usd 	 1 nup		6	 1512 -.00509228
eur_usd 	 1 up		1	   20 .003188698
eur_usd 	 1 up		2	  609 .005874212
eur_usd 	 1 up		3	  878 .006435092
eur_usd 	 1 up		4	 1025  .00865516
eur_usd 	 1 up		5	 1307 .007770804
eur_usd 	 1 up		6	  813 .006490966
eur_usd 	 1		3	   48
eur_usd 	 1		4	  201

27 rows selected.

Elapsed: 00:00:00.03
20:49:10 SQL> 
20:49:10 SQL> -- Join scores and gains:
20:49:10 SQL> 
20:49:10 SQL> CREATE OR REPLACE VIEW sc12 AS
20:49:10   2  SELECT
20:49:10   3  m.pair
20:49:10   4  ,m.ydate
20:49:10   5  ,m.prdate
20:49:10   6  ,l.score score_long
20:49:10   7  ,s.score score_short
20:49:10   8  ,ROUND(l.score,1) rscore_long
20:49:10   9  ,ROUND(s.score,1) rscore_short
20:49:10  10  ,m.g1
20:49:10  11  FROM svm24scores l,svm24scores s,svm2416 m
20:49:10  12  WHERE l.targ='gatt'
20:49:10  13  AND   s.targ='gattn'
20:49:10  14  AND l.prdate = s.prdate
20:49:10  15  AND l.prdate = m.prdate
20:49:10  16  -- Speed things up:
20:49:10  17  AND l.pair = '&1'
20:49:10  18  AND s.pair = '&1'
20:49:10  19  /
old  17: AND l.pair = '&1'
new  17: AND l.pair = 'eur_usd'
old  18: AND s.pair = '&1'
new  18: AND s.pair = 'eur_usd'

View created.

Elapsed: 00:00:00.07
20:49:10 SQL> 
20:49:10 SQL> -- rpt
20:49:10 SQL> SELECT pair,rscore_long,AVG(g1),MIN(ydate),COUNT(pair),MAX(ydate)FROM sc12
20:49:10   2  GROUP BY pair,rscore_long
20:49:10   3  ORDER BY pair,rscore_long
20:49:10   4  /

PAIR	RSCORE_LONG    AVG(G1) MIN(YDATE)	   COUNT(PAIR) MAX(YDATE)
------- ----------- ---------- ------------------- ----------- -------------------
eur_usd 	 .2 .007598896 2011-01-28 18:30:00	     1 2011-01-28 18:30:00
eur_usd 	 .3 .004792528 2011-01-20 02:00:00	    25 2011-02-02 15:40:00
eur_usd 	 .4 .003135102 2011-01-19 21:00:00	   115 2011-02-02 17:10:00
eur_usd 	 .5 .002638238 2011-01-19 20:10:00	   255 2011-02-02 17:05:00
eur_usd 	 .6 .002288266 2011-01-19 03:00:00	   541 2011-02-02 16:55:00
eur_usd 	 .7  .00159881 2011-01-19 03:55:00	   695 2011-02-02 16:45:00
eur_usd 	 .8 .001131519 2011-01-19 04:05:00	   668 2011-02-02 17:15:00
eur_usd 	 .9 .001512783 2011-01-19 08:30:00	   317 2011-02-02 14:25:00
eur_usd 	  1 .001120597 2011-01-26 17:10:00	     3 2011-01-28 14:00:00

9 rows selected.

Elapsed: 00:00:00.06
20:49:10 SQL> 
20:49:10 SQL> DROP TABLE score_corr;

Table dropped.

Elapsed: 00:00:00.03
20:49:10 SQL> 
20:49:10 SQL> CREATE TABLE score_corr COMPRESS AS
20:49:10   2  SELECT
20:49:10   3  pair
20:49:10   4  -- ,ydate
20:49:10   5  ,prdate
20:49:10   6  -- Find corr() tween score and g1 over 11 day period:
20:49:10   7  ,CORR((score_long - score_short),g1)
20:49:10   8  	OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12*24*5 PRECEDING AND CURRENT ROW)sc_corr
20:49:10   9  FROM sc12
20:49:10  10  /

Table created.

Elapsed: 00:00:00.11
20:49:10 SQL> 
20:49:10 SQL> -- rpt
20:49:10 SQL> 
20:49:10 SQL> SELECT pair,AVG(sc_corr),COUNT(sc_corr)FROM score_corr GROUP BY pair;

PAIR	AVG(SC_CORR) COUNT(SC_CORR)
------- ------------ --------------
eur_usd   -.08645694	       2619

Elapsed: 00:00:00.01
20:49:10 SQL> 
20:49:10 SQL> DROP TABLE modsrc24;

Table dropped.

Elapsed: 00:00:00.05
20:49:10 SQL> 
20:49:10 SQL> PURGE RECYCLEBIN;

Recyclebin purged.

Elapsed: 00:00:00.53
20:49:11 SQL> 
20:49:11 SQL> CREATE TABLE modsrc24 COMPRESS AS
20:49:11   2  SELECT
20:49:11   3  s.pair
20:49:11   4  ,ydate
20:49:11   5  ,s.prdate
20:49:11   6  ,trend
20:49:11   7  ,g1
20:49:11   8  ,gatt
20:49:11   9  ,gattn
20:49:11  10  ,SUM(g1)OVER(PARTITION BY trend,att00 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g00
20:49:11  11  ,SUM(g1)OVER(PARTITION BY trend,att01 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g01
20:49:11  12  ,SUM(g1)OVER(PARTITION BY trend,att02 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g02
20:49:11  13  ,SUM(g1)OVER(PARTITION BY trend,att03 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g03
20:49:11  14  ,SUM(g1)OVER(PARTITION BY trend,att04 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g04
20:49:11  15  ,SUM(g1)OVER(PARTITION BY trend,att05 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g05
20:49:11  16  ,SUM(g1)OVER(PARTITION BY trend,att06 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g06
20:49:11  17  ,SUM(g1)OVER(PARTITION BY trend,att07 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g07
20:49:11  18  ,SUM(g1)OVER(PARTITION BY trend,att08 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g08
20:49:11  19  ,SUM(g1)OVER(PARTITION BY trend,att09 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g09
20:49:11  20  ,SUM(g1)OVER(PARTITION BY trend,att10 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g10
20:49:11  21  ,SUM(g1)OVER(PARTITION BY trend,att11 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g11
20:49:11  22  ,SUM(g1)OVER(PARTITION BY trend,att12 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g12
20:49:11  23  ,SUM(g1)OVER(PARTITION BY trend,att13 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g13
20:49:11  24  ,SUM(g1)OVER(PARTITION BY trend,att14 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g14
20:49:11  25  ,SUM(g1)OVER(PARTITION BY trend,att15 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g15
20:49:11  26  ,SUM(g1)OVER(PARTITION BY trend,att16 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g16
20:49:11  27  ,SUM(g1)OVER(PARTITION BY trend,att17 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g17
20:49:11  28  ,SUM(g1)OVER(PARTITION BY trend,att18 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g18
20:49:11  29  ,SUM(g1)OVER(PARTITION BY trend,att19 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g19
20:49:11  30  ,SUM(g1)OVER(PARTITION BY trend,att20 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g20
20:49:11  31  ,SUM(g1)OVER(PARTITION BY trend,att21 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g21
20:49:11  32  ,SUM(g1)OVER(PARTITION BY trend,att22 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g22
20:49:11  33  ,SUM(g1)OVER(PARTITION BY trend,att23 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g23
20:49:11  34  ,SUM(g1)OVER(PARTITION BY trend,att24 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g24
20:49:11  35  ,SUM(g1)OVER(PARTITION BY trend,att25 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g25
20:49:11  36  ,SUM(g1)OVER(PARTITION BY trend,att26 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g26
20:49:11  37  ,SUM(g1)OVER(PARTITION BY trend,att27 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g27
20:49:11  38  ,SUM(g1)OVER(PARTITION BY trend,att28 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g28
20:49:11  39  ,SUM(g1)OVER(PARTITION BY trend,att29 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g29
20:49:11  40  ,SUM(g1)OVER(PARTITION BY trend,att30 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g30
20:49:11  41  ,SUM(g1)OVER(PARTITION BY trend,att31 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g31
20:49:11  42  ,SUM(g1)OVER(PARTITION BY trend,att32 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g32
20:49:11  43  ,SUM(g1)OVER(PARTITION BY trend,att33 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g33
20:49:11  44  ,SUM(g1)OVER(PARTITION BY trend,att34 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g34
20:49:11  45  ,SUM(g1)OVER(PARTITION BY trend,att35 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g35
20:49:11  46  ,SUM(g1)OVER(PARTITION BY trend,att36 ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g36
20:49:11  47  -- Add extra goodness attributes related to trend:
20:49:11  48  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*40 PRECEDING AND CURRENT ROW)g37
20:49:11  49  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*30 PRECEDING AND CURRENT ROW)g38
20:49:11  50  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*20 PRECEDING AND CURRENT ROW)g39
20:49:11  51  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*10 PRECEDING AND CURRENT ROW)g40
20:49:11  52  ,SUM(g1)OVER(PARTITION BY trend ORDER BY ydate ROWS BETWEEN 12*24*5  PRECEDING AND CURRENT ROW)g41
20:49:11  53  -- Recent CORR()tween scores and gains:
20:49:11  54  ,NVL(sc_corr,0)sc_corr
20:49:11  55  FROM svm2416 s,score_corr c
20:49:11  56  WHERE s.prdate = c.prdate(+)
20:49:11  57  /

Table created.

Elapsed: 00:00:06.98
20:49:18 SQL> 
20:49:18 SQL> ANALYZE TABLE modsrc24 COMPUTE STATISTICS;

Table analyzed.

Elapsed: 00:00:03.01
20:49:21 SQL> 
20:49:21 SQL> -- rpt
20:49:21 SQL> 
20:49:21 SQL> SELECT
20:49:21   2  pair
20:49:21   3  ,trend
20:49:21   4  ,gatt
20:49:21   5  ,COUNT(pair)
20:49:21   6  ,AVG(g41)
20:49:21   7  FROM modsrc24
20:49:21   8  GROUP BY pair,trend,gatt
20:49:21   9  ORDER BY pair,trend,gatt
20:49:21  10  /

PAIR	     TREND GAT COUNT(PAIR)   AVG(G41)
------- ---------- --- ----------- ----------
eur_usd 	-1 nup	      6354 -2.0258543
eur_usd 	-1 up	      3584 -1.5290669
eur_usd 	-1		36 4.42519709
eur_usd 	 1 nup	      5631 .587557375
eur_usd 	 1 up	      4652 1.26458007
eur_usd 	 1	       249 1.79808236

6 rows selected.

Elapsed: 00:00:00.03
20:49:21 SQL> 
20:49:21 SQL> 
20:49:21 SQL> SELECT pair,COUNT(pair)FROM svm2410 GROUP BY pair;

PAIR	COUNT(PAIR)
------- -----------
eur_usd       20506

Elapsed: 00:00:01.34
20:49:22 SQL> 
20:49:22 SQL> SELECT pair,COUNT(pair)FROM modsrc24 GROUP BY pair;

PAIR	COUNT(PAIR)
------- -----------
eur_usd       20506

Elapsed: 00:00:00.01
20:49:22 SQL> 
20:49:22 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
