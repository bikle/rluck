/pt/s/rlk/468hma/results2010_1118.txt

I do see reversion-to-mean behavior here but it is too weak to make money off of it:

oracle@z2:/pt/s/rlk/468hma$ sqt @468hma

SQL*Plus: Release 11.2.0.1.0 Production on Thu Nov 18 19:48:29 2010

Copyright (c) 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

19:48:29 SQL> ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD hh24:mi:ss';

Session altered.

Elapsed: 00:00:00.00
19:48:29 SQL> --
19:48:29 SQL> -- 468hma.sql
19:48:29 SQL> --
19:48:29 SQL> 
19:48:29 SQL> -- I use this script to help me answer the question,
19:48:29 SQL> -- Is moving average slope predictive?
19:48:29 SQL> 
19:48:29 SQL> CREATE OR REPLACE VIEW v468hma10 AS
19:48:29   2  SELECT
19:48:29   3  pair
19:48:29   4  -- ydate is granular down to the hour:
19:48:29   5  ,ydate
19:48:29   6  ,opn
19:48:29   7  ,clse
19:48:29   8  -- Use analytic function to get moving average1:
19:48:29   9  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING)ma1_4
19:48:29  10  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 7 PRECEDING AND 1 PRECEDING)ma1_6
19:48:29  11  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND 1 PRECEDING)ma1_8
19:48:29  12  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING)ma1_9
19:48:29  13  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 13 PRECEDING AND 1 PRECEDING)ma1_12
19:48:29  14  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING)ma1_18
19:48:29  15  -- Use analytic function to get moving average2:
19:48:29  16  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 4 PRECEDING AND CURRENT ROW)ma2_4
19:48:29  17  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)ma2_6
19:48:29  18  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 8 PRECEDING AND CURRENT ROW)ma2_8
19:48:29  19  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 9 PRECEDING AND CURRENT ROW)ma2_9
19:48:29  20  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 12 PRECEDING AND CURRENT ROW)ma2_12
19:48:29  21  ,AVG(clse)OVER(PARTITION BY pair ORDER BY ydate ROWS BETWEEN 18 PRECEDING AND CURRENT ROW)ma2_18
19:48:29  22  -- Get future ydates
19:48:29  23  ,LEAD(ydate,4,NULL)OVER(PARTITION BY pair ORDER BY ydate) ydate4
19:48:29  24  ,LEAD(ydate,6,NULL)OVER(PARTITION BY pair ORDER BY ydate) ydate6
19:48:29  25  ,LEAD(ydate,8,NULL)OVER(PARTITION BY pair ORDER BY ydate) ydate8
19:48:29  26  -- Relative to current-row, get future closing prices:
19:48:29  27  ,LEAD(clse,4,NULL)OVER(PARTITION BY pair ORDER BY ydate) clse4
19:48:29  28  ,LEAD(clse,6,NULL)OVER(PARTITION BY pair ORDER BY ydate) clse6
19:48:29  29  ,LEAD(clse,8,NULL)OVER(PARTITION BY pair ORDER BY ydate) clse8
19:48:29  30  FROM hourly
19:48:29  31  WHERE ydate >'2009-01-01'
19:48:29  32  -- Prevent divide by zero:
19:48:29  33  AND clse > 0
19:48:29  34  ORDER BY ydate
19:48:29  35  /

View created.

Elapsed: 00:00:00.10
19:48:29 SQL> 
19:48:29 SQL> 
19:48:29 SQL> 
19:48:29 SQL> -- I should see 6 x 6:
19:48:29 SQL> SELECT pair,COUNT(*)FROM v468hma10 WHERE ydate6 IS NULL GROUP BY pair;

PAIR		  COUNT(*)
--------------- ----------
eur_usd 		 6
gbp_usd 		 6
usd_jpy 		 6
aud_usd 		 6
usd_cad 		 6
usd_chf 		 6

6 rows selected.

Elapsed: 00:00:01.52
19:48:31 SQL> -- I should see 6 x 6:
19:48:31 SQL> SELECT pair,COUNT(*)FROM v468hma10 WHERE clse6 IS NULL GROUP BY pair;

PAIR		  COUNT(*)
--------------- ----------
eur_usd 		 6
gbp_usd 		 6
usd_jpy 		 6
aud_usd 		 6
usd_cad 		 6
usd_chf 		 6

6 rows selected.

Elapsed: 00:00:01.47
19:48:32 SQL> 
19:48:32 SQL> -- I derive slope of moving-averages:
19:48:32 SQL> CREATE OR REPLACE VIEW v468hma AS
19:48:32   2  SELECT
19:48:32   3  pair
19:48:32   4  ,ydate
19:48:32   5  ,(ma2_4 - ma1_4)ma4_slope
19:48:32   6  ,(ma2_6 - ma1_6)ma6_slope
19:48:32   7  ,(ma2_8 - ma1_8)ma8_slope
19:48:32   8  ,(ma2_9 - ma1_9)ma9_slope
19:48:32   9  ,(ma2_12 - ma1_12)ma12_slope
19:48:32  10  ,(ma2_18 - ma1_18)ma18_slope
19:48:32  11  ,ydate4
19:48:32  12  ,ydate6
19:48:32  13  ,ydate8
19:48:32  14  ,clse4
19:48:32  15  ,clse6
19:48:32  16  ,clse8
19:48:32  17  ,(clse4 - clse)/clse npg4
19:48:32  18  ,(clse6 - clse)/clse npg6
19:48:32  19  ,(clse8 - clse)/clse npg8
19:48:32  20  FROM v468hma10
19:48:32  21  ORDER BY ydate
19:48:32  22  /

View created.

Elapsed: 00:00:00.05
19:48:32 SQL> 
19:48:32 SQL> -- Is ma_slope correlated with npg4?
19:48:32 SQL> COLUMN pair FORMAT A7
19:48:32 SQL> 
19:48:32 SQL> SELECT
19:48:32   2  pair
19:48:32   3  ,COUNT(npg4)
19:48:32   4  ,ROUND(CORR(ma4_slope,npg4),2)corr4
19:48:32   5  ,ROUND(CORR(ma6_slope,npg4),2)corr6
19:48:32   6  ,ROUND(CORR(ma8_slope,npg4),2)corr8
19:48:32   7  ,ROUND(CORR(ma9_slope,npg4),2)corr9
19:48:32   8  ,ROUND(CORR(ma12_slope,npg4),2)corr12
19:48:32   9  ,ROUND(CORR(ma18_slope,npg4),2)corr18
19:48:32  10  FROM v468hma
19:48:32  11  GROUP BY pair
19:48:32  12  ORDER BY pair
19:48:32  13  /

PAIR	COUNT(NPG4)	 CORR4	    CORR6      CORR8	  CORR9     CORR12     CORR18
------- ----------- ---------- ---------- ---------- ---------- ---------- ----------
aud_usd       11826	     0	      .01	 .01	    .01       -.01	  .01
eur_usd       11826	   .01	      .01	 .01	    .01       -.01	  .01
gbp_usd       11814	  -.01	     -.01	-.02	   -.02       -.03	    0
usd_cad       11826	  -.01	     -.01	-.01	   -.02       -.02	    0
usd_chf       11826	  -.01	     -.01	-.01	   -.01       -.02	 -.01
usd_jpy       11826	  -.04	     -.05	-.04	   -.04       -.03	 -.01

6 rows selected.

Elapsed: 00:00:04.16
19:48:36 SQL> 
19:48:36 SQL> -- Is ma_slope correlated with npg6?
19:48:36 SQL> SELECT
19:48:36   2  pair
19:48:36   3  ,COUNT(npg6)
19:48:36   4  ,ROUND(CORR(ma4_slope,npg6),2)corr4
19:48:36   5  ,ROUND(CORR(ma6_slope,npg6),2)corr6
19:48:36   6  ,ROUND(CORR(ma8_slope,npg6),2)corr8
19:48:36   7  ,ROUND(CORR(ma9_slope,npg6),2)corr9
19:48:36   8  ,ROUND(CORR(ma12_slope,npg6),2)corr12
19:48:36   9  ,ROUND(CORR(ma18_slope,npg6),2)corr18
19:48:36  10  FROM v468hma
19:48:36  11  GROUP BY pair
19:48:36  12  ORDER BY pair
19:48:36  13  /

PAIR	COUNT(NPG6)	 CORR4	    CORR6      CORR8	  CORR9     CORR12     CORR18
------- ----------- ---------- ---------- ---------- ---------- ---------- ----------
aud_usd       11824	   .01	      .01	 .01	      0 	 0	  .01
eur_usd       11824	   .02	      .02	   0	      0       -.01	  .02
gbp_usd       11812	  -.01	     -.01	-.02	   -.03       -.02	  .01
usd_cad       11824	  -.01	     -.01	-.02	   -.02       -.02	  .01
usd_chf       11824	  -.01	     -.01	-.01	   -.01       -.02	 -.02
usd_jpy       11824	  -.05	     -.05	-.05	   -.04       -.03	    0

6 rows selected.

Elapsed: 00:00:04.19
19:48:40 SQL> 
19:48:40 SQL> -- Is ma_slope correlated with npg8?
19:48:40 SQL> SELECT
19:48:40   2  pair
19:48:40   3  ,COUNT(npg8)
19:48:40   4  ,ROUND(CORR(ma4_slope,npg8),2)corr4
19:48:40   5  ,ROUND(CORR(ma6_slope,npg8),2)corr6
19:48:40   6  ,ROUND(CORR(ma8_slope,npg8),2)corr8
19:48:40   7  ,ROUND(CORR(ma9_slope,npg8),2)corr9
19:48:40   8  ,ROUND(CORR(ma12_slope,npg8),2)corr12
19:48:40   9  ,ROUND(CORR(ma18_slope,npg8),2)corr18
19:48:40  10  FROM v468hma
19:48:40  11  GROUP BY pair
19:48:40  12  ORDER BY pair
19:48:40  13  /

PAIR	COUNT(NPG8)	 CORR4	    CORR6      CORR8	  CORR9     CORR12     CORR18
------- ----------- ---------- ---------- ---------- ---------- ---------- ----------
aud_usd       11822	   .02	      .01	 .01	      0 	 0	    0
eur_usd       11822	   .02	      .01	   0	      0       -.01	  .01
gbp_usd       11810	  -.01	     -.02	-.03	   -.03       -.02	  .02
usd_cad       11822	  -.01	     -.02	-.02	   -.02       -.01	    0
usd_chf       11822	  -.01	     -.01	-.01	   -.01       -.02	 -.02
usd_jpy       11822	  -.05	     -.05	-.04	   -.04       -.02	  .01

6 rows selected.

Elapsed: 00:00:04.19
19:48:45 SQL> 
19:48:45 SQL> -- Look at ma4_slope and npg4,6,8:
19:48:45 SQL> SELECT
19:48:45   2  pair
19:48:45   3  ,nt74
19:48:45   4  ,AVG(ma4_slope)avg_ma4s
19:48:45   5  ,AVG(npg4)avg_npg4
19:48:45   6  ,AVG(npg6)avg_npg6
19:48:45   7  ,AVG(npg8)avg_npg8
19:48:45   8  ,COUNT(pair)
19:48:45   9  ,STDDEV(npg4)stddev_npg4
19:48:45  10  FROM
19:48:45  11  (
19:48:45  12  	SELECT
19:48:45  13  	pair
19:48:45  14  	,NTILE(7) OVER (PARTITION BY pair ORDER BY (ma4_slope))nt74
19:48:45  15  	,ma4_slope
19:48:45  16  	,npg4,npg6,npg8
19:48:45  17  	FROM v468hma
19:48:45  18  )
19:48:45  19  GROUP BY pair,nt74
19:48:45  20  ORDER BY pair,nt74
19:48:45  21  /

PAIR	      NT74   AVG_MA4S	AVG_NPG4   AVG_NPG6   AVG_NPG8 COUNT(PAIR) STDDEV_NPG4
------- ---------- ---------- ---------- ---------- ---------- ----------- -----------
aud_usd 	 1 -.00119121 .000112213 .000052505 .000027893	      1690  .004610559
aud_usd 	 2 -.00050527 .000046552 .000036787 .000060042	      1690  .004239453
aud_usd 	 3  -.0002024 .000176973  .00022497 .000287154	      1690  .003911147
aud_usd 	 4 .000031583 .000047008 .000058078 .000167192	      1690  .003953494
aud_usd 	 5 .000262855  .00002545 .000232623 .000318743	      1690  .004101203
aud_usd 	 6 .000555763 .000249411 .000339253  .00041882	      1690  .004179414
aud_usd 	 7 .001212954 .000181575  .00031222 .000392961	      1690  .004420074
eur_usd 	 1 -.00145846 -.00009497 -.00016741 -.00024591	      1690  .003250059
eur_usd 	 2 -.00059356 -.00003266 -.00001168 -.00004092	      1690  .003026955
eur_usd 	 3 -.00025601 -.00003202  -.0000269 .000078102	      1690  .002824633
eur_usd 	 4 -3.007E-06  .00004817 .000042961 .000022493	      1690  .002883343
eur_usd 	 5 .000246981 3.0977E-07 -.00001363 -.00004851	      1690  .002917615
eur_usd 	 6 .000580701 .000092505 .000115162 .000169126	      1690  .003123514
eur_usd 	 7 .001459943 -.00001783 4.8009E-06 -.00001353	      1690  .003561213
gbp_usd 	 1 -.00180374 .000058255 .000021927  .00004742	      1689   .00392052
gbp_usd 	 2 -.00071705 -.00001937 -.00000339 -.00003388	      1689  .003310821
gbp_usd 	 3 -.00029903 .000080187 .000119667 .000167299	      1688  .003282286
gbp_usd 	 4 4.5002E-06 -.00003328 -5.677E-06 .000048151	      1688  .003051277
gbp_usd 	 5  .00031419 .000084948 .000125645 .000210824	      1688  .003021981
gbp_usd 	 6 .000732302 .000077641 .000101768 .000127116	      1688  .003327969
gbp_usd 	 7 .001846004 -.00001331 -.00000419 -.00009151	      1688  .003711332
usd_cad 	 1 -.00132073 -7.383E-06 -.00007259 1.4225E-06	      1690  .003625527
usd_cad 	 2 -.00053088  .00007299 .000023041 -.00000417	      1690  .003344953
usd_cad 	 3 -.00023302 -.00012669 -.00020754  -.0002594	      1690  .002919113
usd_cad 	 4 -.00002121 -.00017348 -.00015236 -.00028734	      1690  .002961025
usd_cad 	 5  .00019213 -.00009446 -.00014493 -.00015051	      1690  .003021335
usd_cad 	 6 .000496154 -.00004982  -.0000322 -.00005675	      1690  .003411609
usd_cad 	 7 .001298828 9.2003E-07 .000022194 7.8644E-06	      1690  .003996081
usd_chf 	 1 -.00116974 7.7448E-07 -.00004714 -.00005247	      1690  .003560853
usd_chf 	 2 -.00044511  .00007409 .000067056 .000046517	      1690   .00317613
usd_chf 	 3 -.00019649 .000036567 .000045256 .000041486	      1690  .002913328
usd_chf 	 4 -7.514E-06 -.00005669 -9.224E-06 -.00001734	      1690  .002812102
usd_chf 	 5 .000181032 -.00003939 -.00007144 -.00014566	      1690  .002851043
usd_chf 	 6 .000428078 -.00003496 -.00003467 -2.051E-06	      1690  .002876551
usd_chf 	 7 .001164254 -.00012602 -.00016788  -.0001606	      1690  .003515746
usd_jpy 	 1 -.09927219 .000339409 .000470462 .000459274	      1690  .003802441
usd_jpy 	 2 -.03959172 -.00007561 -.00020173 -.00027109	      1690  .002986207
usd_jpy 	 3 -.01710355 -.00010676 -.00011681  -.0000934	      1690   .00296444
usd_jpy 	 4 -.00074615 -.00012096 -.00010145 -.00004859	      1690  .003025841
usd_jpy 	 5 .015511243 -.00014752 -.00020136  -.0002246	      1690  .003005224
usd_jpy 	 6 .037447337 -.00008616 -.00013029 -.00017044	      1690  .003038408
usd_jpy 	 7  .09941267 .000031168 .000028676 9.7206E-06	      1690  .003204984

42 rows selected.

Elapsed: 00:00:01.89
19:48:46 SQL> 
19:48:46 SQL> 
19:48:46 SQL> -- Look at ma8_slope and npg4,6,8:
19:48:46 SQL> SELECT
19:48:46   2  pair
19:48:46   3  ,nt74
19:48:46   4  ,AVG(ma8_slope)avg_ma8s
19:48:46   5  ,AVG(npg4)avg_npg4
19:48:46   6  ,AVG(npg6)avg_npg6
19:48:46   7  ,AVG(npg8)avg_npg8
19:48:46   8  ,COUNT(pair)
19:48:46   9  ,STDDEV(npg4)stddev_npg4
19:48:46  10  FROM
19:48:46  11  (
19:48:46  12  	SELECT
19:48:46  13  	pair
19:48:46  14  	,NTILE(7) OVER (PARTITION BY pair ORDER BY (ma8_slope))nt74
19:48:46  15  	,ma8_slope
19:48:46  16  	,npg4,npg6,npg8
19:48:46  17  	FROM v468hma
19:48:46  18  )
19:48:46  19  GROUP BY pair,nt74
19:48:46  20  ORDER BY pair,nt74
19:48:46  21  /

PAIR	      NT74   AVG_MA8S	AVG_NPG4   AVG_NPG6   AVG_NPG8 COUNT(PAIR) STDDEV_NPG4
------- ---------- ---------- ---------- ---------- ---------- ----------- -----------
aud_usd 	 1 -.00088318 .000019045 .000078923 .000208815	      1690  .004604829
aud_usd 	 2 -.00038757 .000071396 .000186929 .000209849	      1690  .004390353
aud_usd 	 3  -.0001513 .000132862 .000205964 .000354712	      1690  .004251831
aud_usd 	 4 .000027771 .000076639 .000124244   .0001421	      1690  .004186191
aud_usd 	 5 .000204803 .000200814 .000179951 .000137808	      1690  .003778603
aud_usd 	 6 .000439218 .000153271 .000166223  .00023495	      1690  .004082993
aud_usd 	 7  .00091371 .000184957 .000313861 .000384257	      1690  .004119298
eur_usd 	 1 -.00109882 -.00011757 -.00011288 -.00019558	      1690  .003072067
eur_usd 	 2 -.00047709 -.00001288  -.0000266 .000052542	      1690  .003084304
eur_usd 	 3 -.00020623 .000026215 .000071121  .00009994	      1690  .003027628
eur_usd 	 4 -4.433E-06 1.0625E-06 -7.331E-06 .000108948	      1690  .002910166
eur_usd 	 5 .000190708 .000028625  .00003438 -1.936E-06	      1690  .002887747
eur_usd 	 6 .000464331 -.00007033 -.00009092 -.00008968	      1690  .003218768
eur_usd 	 7 .001106867 .000108231 .000075174 -.00005383	      1690  .003415952
gbp_usd 	 1 -.00134712 -.00002864  .00008542 .000065952	      1689  .004009396
gbp_usd 	 2  -.0005687 .000087346 .000036406 .000104499	      1689  .003483072
gbp_usd 	 3 -.00023608 .000103409 .000102596 .000183731	      1688  .003124858
gbp_usd 	 4 8.4562E-06 .000012143 .000051757 .000038016	      1688  .003089776
gbp_usd 	 5 .000256279 .000041789 8.5671E-06 .000075734	      1688  .003234856
gbp_usd 	 6 .000595079 .000160682 .000259075 .000286101	      1688   .00327529
gbp_usd 	 7 .001368488 -.00014164 -.00018817 -.00027884	      1688  .003412493
usd_cad 	 1 -.00099406 .000164612 .000167814 .000215995	      1690  .003221856
usd_cad 	 2 -.00041288 .000040329 .000037282 .000054221	      1690  .003211961
usd_cad 	 3  -.0001933 -.00017204  -.0001755  -.0003056	      1690  .003175228
usd_cad 	 4  -.0000236 -.00016921 -.00019843 -.00022551	      1690   .00296077
usd_cad 	 5 .000149606 -.00025429 -.00039023 -.00037543	      1690  .003317444
usd_cad 	 6 .000387193  -.0000389 2.6022E-06 -.00001058	      1690  .003687606
usd_cad 	 7 .000968686 .000051439 -8.092E-06 -.00010208	      1690  .003757443
usd_chf 	 1 -.00087354 -.00008313 -.00007581 -.00001966	      1690  .003319379
usd_chf 	 2 -.00035249 -.00001206 .000011926 .000030872	      1690  .003037381
usd_chf 	 3 -.00015661 .000076011 .000082024 .000021877	      1690  .002983233
usd_chf 	 4 -7.708E-06 .000153159 .000150813 .000103773	      1690  .003133185
usd_chf 	 5 .000138921 -.00003646 -.00002607 .000037711	      1690  .002941826
usd_chf 	 6 .000337617 -.00013272 -.00011911 -.00023159	      1690   .00313387
usd_chf 	 7 .000868487 -.00011053 -.00024191 -.00023289	      1690  .003232735
usd_jpy 	 1 -.07260618 .000314794 .000394074 .000356539	      1690   .00382255
usd_jpy 	 2 -.03171203 -.00005688 -.00012785 -.00010383	      1690  .003131945
usd_jpy 	 3 -.01438711 -.00025372  -.0003525 -.00047049	      1690  .003047281
usd_jpy 	 4  -.0009944 -.00016872 -.00014386 -.00012666	      1690  .002982191
usd_jpy 	 5 .012073636 -.00004575  -.0000784 -.00005033	      1690  .003162457
usd_jpy 	 6 .029468958 .000059994 .000094408 .000113669	      1690  .002812574
usd_jpy 	 7  .07379054 -.00001602 -.00003843 -.00005833	      1690   .00305297

42 rows selected.

Elapsed: 00:00:01.93
19:48:48 SQL> 
19:48:48 SQL> exit
Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options
oracle@z2:/pt/s/rlk/468hma$ 
